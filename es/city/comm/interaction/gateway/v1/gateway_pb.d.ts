// @generated by protoc-gen-es v1.10.0
// @generated from file city/comm/interaction/gateway/v1/gateway.proto (package city.comm.interaction.gateway.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum city.comm.interaction.gateway.v1.Reason
 */
export declare enum Reason {
  /**
   * @generated from enum value: REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REASON_RUIN = 1;
   */
  RUIN = 1,

  /**
   * @generated from enum value: REASON_CASCADE = 2;
   */
  CASCADE = 2,
}

/**
 * @generated from message city.comm.interaction.gateway.v1.Station
 */
export declare class Station extends Message<Station> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: bool status = 2;
   */
  status: boolean;

  /**
   * @generated from field: city.comm.interaction.gateway.v1.Reason reason = 3;
   */
  reason: Reason;

  constructor(data?: PartialMessage<Station>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.interaction.gateway.v1.Station";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Station;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Station;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Station;

  static equals(a: Station | PlainMessage<Station> | undefined, b: Station | PlainMessage<Station> | undefined): boolean;
}


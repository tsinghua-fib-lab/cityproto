// @generated by protoc-gen-es v1.6.0
// @generated from file city/comm/output/v1/output.proto (package city.comm.output.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum city.comm.output.v1.NodeStatus
 */
export declare enum NodeStatus {
  /**
   * @generated from enum value: NODE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 正常供电
   *
   * @generated from enum value: NODE_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * 电池供电
   *
   * @generated from enum value: NODE_STATUS_BATTERY = 2;
   */
  BATTERY = 2,

  /**
   * 停电
   *
   * @generated from enum value: NODE_STATUS_FAILURE = 3;
   */
  FAILURE = 3,

  /**
   * 损坏
   *
   * @generated from enum value: NODE_STATUS_RUINED = 4;
   */
  RUINED = 4,
}

/**
 * 用户连接基站状态
 *
 * @generated from enum city.comm.output.v1.PersonConnectStatus
 */
export declare enum PersonConnectStatus {
  /**
   * @generated from enum value: PERSON_CONNECT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 可以连接到基站
   *
   * @generated from enum value: PERSON_CONNECT_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * 无法连接到基站
   *
   * @generated from enum value: PERSON_CONNECT_STATUS_OUTAGE = 2;
   */
  OUTAGE = 2,
}

/**
 * 用户需求满足状态
 *
 * @generated from enum city.comm.output.v1.PersonDemandStatus
 */
export declare enum PersonDemandStatus {
  /**
   * @generated from enum value: PERSON_DEMAND_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 需求被满足
   *
   * @generated from enum value: PERSON_DEMAND_STATUS_SATISFIED = 1;
   */
  SATISFIED = 1,

  /**
   * 需求不满足
   *
   * @generated from enum value: PERSON_DEMAND_STATUS_UNSATISFIED = 2;
   */
  UNSATISFIED = 2,

  /**
   * 没有需求
   *
   * @generated from enum value: PERSON_DEMAND_STATUS_NO = 3;
   */
  NO = 3,
}

/**
 * 设备状态
 *
 * @generated from message city.comm.output.v1.Node
 */
export declare class Node extends Message<Node> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: city.comm.output.v1.NodeStatus status = 2;
   */
  status: NodeStatus;

  /**
   * 电池剩余可用时间（单位：秒）（仅当gateway状态为“电池供电”时启用）
   *
   * @generated from field: optional double battery_remaining_time = 3;
   */
  batteryRemainingTime?: number;

  constructor(data?: PartialMessage<Node>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.Node";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Node;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Node;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Node;

  static equals(a: Node | PlainMessage<Node> | undefined, b: Node | PlainMessage<Node> | undefined): boolean;
}

/**
 * 基站状态
 *
 * @generated from message city.comm.output.v1.BaseStation
 */
export declare class BaseStation extends Message<BaseStation> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * 基站需求流量（单位：Bytes）
   *
   * @generated from field: double demand_flow = 2;
   */
  demandFlow: number;

  /**
   * 基站真实流量（单位：Bytes）
   *
   * @generated from field: double actual_flow = 3;
   */
  actualFlow: number;

  /**
   * 基站用户数
   *
   * @generated from field: int32 num_agents = 4;
   */
  numAgents: number;

  /**
   * 基站是否过载
   *
   * @generated from field: bool overload = 5;
   */
  overload: boolean;

  /**
   * 不满足通信需求用户数
   *
   * @generated from field: int32 unsatisfied_num = 6;
   */
  unsatisfiedNum: number;

  /**
   * 满足通信需求用户数
   *
   * @generated from field: int32 satisfied_num = 7;
   */
  satisfiedNum: number;

  /**
   * 通信中断用户数
   *
   * @generated from field: int32 outage_num = 8;
   */
  outageNum: number;

  /**
   * 有通信需求人数
   *
   * @generated from field: int32 active_num = 9;
   */
  activeNum: number;

  /**
   * 基站发射功率
   *
   * @generated from field: double transmit_power = 10;
   */
  transmitPower: number;

  constructor(data?: PartialMessage<BaseStation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.BaseStation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BaseStation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BaseStation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BaseStation;

  static equals(a: BaseStation | PlainMessage<BaseStation> | undefined, b: BaseStation | PlainMessage<BaseStation> | undefined): boolean;
}

/**
 * 信号情况
 *
 * @generated from message city.comm.output.v1.Signal
 */
export declare class Signal extends Message<Signal> {
  /**
   * @generated from field: int32 num_rows = 1;
   */
  numRows: number;

  /**
   * @generated from field: int32 num_columns = 2;
   */
  numColumns: number;

  /**
   * 信号强度（单位：dBm）
   *
   * @generated from field: repeated double strength = 3;
   */
  strength: number[];

  /**
   * 基站ID
   *
   * @generated from field: repeated int32 base_station_id = 4;
   */
  baseStationId: number[];

  /**
   * 基站频段
   *
   * @generated from field: repeated int32 freq_range_id = 5;
   */
  freqRangeId: number[];

  constructor(data?: PartialMessage<Signal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.Signal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Signal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Signal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Signal;

  static equals(a: Signal | PlainMessage<Signal> | undefined, b: Signal | PlainMessage<Signal> | undefined): boolean;
}

/**
 * 人（可见的，交通模拟或室内模拟正在计算位置变动的）
 *
 * @generated from message city.comm.output.v1.Person
 */
export declare class Person extends Message<Person> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * 通信需求速率（单位：Bytes/s）
   *
   * @generated from field: double demand_rate = 2;
   */
  demandRate: number;

  /**
   * 通信真实速率（单位：Bytes/s）
   *
   * @generated from field: double actual_rate = 3;
   */
  actualRate: number;

  /**
   * @generated from field: city.comm.output.v1.PersonConnectStatus connect_status = 4;
   */
  connectStatus: PersonConnectStatus;

  /**
   * @generated from field: city.comm.output.v1.PersonDemandStatus demand_status = 9;
   */
  demandStatus: PersonDemandStatus;

  /**
   * 信号强度（单位：dBm）
   *
   * @generated from field: double strength = 5;
   */
  strength: number;

  /**
   * 连接基站
   *
   * @generated from field: int32 base_station_id = 6;
   */
  baseStationId: number;

  /**
   * 信道分配
   *
   * @generated from field: repeated int32 freq_range_ids = 7;
   */
  freqRangeIds: number[];

  /**
   * 接收发射功率（单位：dBm）
   *
   * @generated from field: double received_power = 8;
   */
  receivedPower: number;

  constructor(data?: PartialMessage<Person>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.Person";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person;

  static equals(a: Person | PlainMessage<Person> | undefined, b: Person | PlainMessage<Person> | undefined): boolean;
}

/**
 * @generated from message city.comm.output.v1.Aoi
 */
export declare class Aoi extends Message<Aoi> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * 通信需求总量（单位：Bytes）
   *
   * @generated from field: double demand_flow = 2;
   */
  demandFlow: number;

  /**
   * 通信真实总量（单位：Bytes）
   *
   * @generated from field: double actual_flow = 3;
   */
  actualFlow: number;

  /**
   * 通信中断人数
   *
   * @generated from field: int32 outage_num = 4;
   */
  outageNum: number;

  /**
   * 通信满足人数
   *
   * @generated from field: int32 satisfied_num = 5;
   */
  satisfiedNum: number;

  /**
   * 通信不满足人数
   *
   * @generated from field: int32 unsatisfied_num = 6;
   */
  unsatisfiedNum: number;

  /**
   * 有通信需求的人数
   *
   * @generated from field: int32 active_user_num = 7;
   */
  activeUserNum: number;

  constructor(data?: PartialMessage<Aoi>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.Aoi";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Aoi;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Aoi;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Aoi;

  static equals(a: Aoi | PlainMessage<Aoi> | undefined, b: Aoi | PlainMessage<Aoi> | undefined): boolean;
}

/**
 * @generated from message city.comm.output.v1.Statistics
 */
export declare class Statistics extends Message<Statistics> {
  /**
   * 满足通信需求用户数
   *
   * @generated from field: int32 num_satisfied_agents = 1;
   */
  numSatisfiedAgents: number;

  /**
   * 未能满足通信需求的用户数
   *
   * @generated from field: int32 num_unsatisfied_agents = 2;
   */
  numUnsatisfiedAgents: number;

  /**
   * 通信中断的用户数
   *
   * @generated from field: int32 num_outage_agents = 3;
   */
  numOutageAgents: number;

  /**
   * 有通信需求的用户数
   *
   * @generated from field: int32 num_active_agents = 4;
   */
  numActiveAgents: number;

  /**
   * 需求总流量（单位：Bytes）
   *
   * @generated from field: double demand_flow = 5;
   */
  demandFlow: number;

  /**
   * 真实总流量（单位：Bytes）
   *
   * @generated from field: double actual_flow = 6;
   */
  actualFlow: number;

  /**
   * 总基站数
   *
   * @generated from field: int32 num_base_station = 7;
   */
  numBaseStation: number;

  /**
   * 正常基站数
   *
   * @generated from field: int32 num_ok_base_station = 8;
   */
  numOkBaseStation: number;

  /**
   * 损坏基站数
   *
   * @generated from field: int32 num_ruined_base_station = 9;
   */
  numRuinedBaseStation: number;

  /**
   * 断电基站数
   *
   * @generated from field: int32 num_stopped_base_station = 10;
   */
  numStoppedBaseStation: number;

  /**
   * 过载基站数
   *
   * @generated from field: int32 num_overloaded_base_station = 11;
   */
  numOverloadedBaseStation: number;

  /**
   * 总网关数
   *
   * @generated from field: int32 num_gateway = 12;
   */
  numGateway: number;

  /**
   * 正常网关数
   *
   * @generated from field: int32 num_ok_gateway = 13;
   */
  numOkGateway: number;

  /**
   * 损坏网关数
   *
   * @generated from field: int32 num_ruined_gateway = 14;
   */
  numRuinedGateway: number;

  /**
   * 断电网关数
   *
   * @generated from field: int32 num_stopped_gateway = 15;
   */
  numStoppedGateway: number;

  /**
   * 过载网关数
   *
   * @generated from field: int32 num_overloaded_gateway = 16;
   */
  numOverloadedGateway: number;

  /**
   * 直流电网关数
   *
   * @generated from field: int32 num_battery_gateway = 17;
   */
  numBatteryGateway: number;

  /**
   * 基站耗电量(单位：kW·h)
   *
   * @generated from field: double power_consumption = 18;
   */
  powerConsumption: number;

  constructor(data?: PartialMessage<Statistics>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.comm.output.v1.Statistics";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Statistics;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Statistics;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Statistics;

  static equals(a: Statistics | PlainMessage<Statistics> | undefined, b: Statistics | PlainMessage<Statistics> | undefined): boolean;
}


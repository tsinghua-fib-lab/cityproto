// @generated by protoc-gen-es v1.10.0
// @generated from file city/cognition/input/v1/config.proto (package city.cognition.input.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { MongoPath, OutputTarget } from "../../../config/v1/config_pb.js";

/**
 * @generated from message city.cognition.input.v1.Mongo
 */
export const Mongo = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.Mongo",
  () => [
    { no: 1, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "map", kind: "message", T: MongoPath },
    { no: 3, name: "agents", kind: "message", T: MongoPath },
    { no: 4, name: "edges", kind: "message", T: MongoPath },
  ],
);

/**
 * @generated from message city.cognition.input.v1.ControlStep
 */
export const ControlStep = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.ControlStep",
  () => [
    { no: 1, name: "start", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "interval", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * @generated from message city.cognition.input.v1.Control
 */
export const Control = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.Control",
  () => [
    { no: 1, name: "step", kind: "message", T: ControlStep },
  ],
);

/**
 * 是否输出各类数据
 *
 * @generated from message city.cognition.input.v1.OutputSwitch
 */
export const OutputSwitch = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.OutputSwitch",
  () => [
    { no: 1, name: "common", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message city.cognition.input.v1.Output
 */
export const Output = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.Output",
  () => [
    { no: 1, name: "target", kind: "message", T: OutputTarget },
    { no: 2, name: "switch", kind: "message", T: OutputSwitch },
  ],
);

/**
 * @generated from message city.cognition.input.v1.Config
 */
export const Config = /*@__PURE__*/ proto3.makeMessageType(
  "city.cognition.input.v1.Config",
  () => [
    { no: 1, name: "mongo", kind: "message", T: Mongo },
    { no: 2, name: "control", kind: "message", T: Control },
    { no: 3, name: "output", kind: "message", T: Output },
  ],
);


// @generated by protoc-gen-es v1.10.0
// @generated from file city/person/v2/taxi.proto (package city.person.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Position } from "../../geo/v2/geo_pb.js";

/**
 * @generated from enum city.person.v2.OrderStatus
 */
export declare enum OrderStatus {
  /**
   * 未指定
   * unspecified
   *
   * @generated from enum value: ORDER_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 等待接单
   * waiting for order
   *
   * @generated from enum value: ORDER_STATUS_WAITING = 1;
   */
  WAITING = 1,

  /**
   * 正在接人
   * picking up
   *
   * @generated from enum value: ORDER_STATUS_PICKING_UP = 2;
   */
  PICKING_UP = 2,

  /**
   * 正在送人
   * delivering
   *
   * @generated from enum value: ORDER_STATUS_DELIVERING = 3;
   */
  DELIVERING = 3,

  /**
   * 已完成
   * order completed
   *
   * @generated from enum value: ORDER_STATUS_COMPLETED = 4;
   */
  COMPLETED = 4,
}

/**
 * 分配方案类型
 * Allocation plan type
 *
 * @generated from enum city.person.v2.AllocationPlanType
 */
export declare enum AllocationPlanType {
  /**
   * 未指定
   * unspecified
   *
   * @generated from enum value: ALLOCATION_PLAN_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 接人
   * pick up
   *
   * @generated from enum value: ALLOCATION_PLAN_TYPE_PICK_UP = 1;
   */
  PICK_UP = 1,

  /**
   * 送人
   * deliver
   *
   * @generated from enum value: ALLOCATION_PLAN_TYPE_DELIVER = 2;
   */
  DELIVER = 2,
}

/**
 * 乘客发出的请求订单信息
 * Request order information from passengers
 *
 * @generated from message city.person.v2.RequestOrderInfo
 */
export declare class RequestOrderInfo extends Message<RequestOrderInfo> {
  /**
   * 发出请求的person id
   * person id who sends the request
   *
   * @generated from field: int32 person_id = 1;
   */
  personId: number;

  /**
   * 请求时间（s）
   * request time（s）
   *
   * @generated from field: double request_time = 2;
   */
  requestTime: number;

  /**
   * 订单id
   * order id
   *
   * @generated from field: int32 order_id = 3;
   */
  orderId: number;

  /**
   * 出发地
   * departure position
   *
   * @generated from field: city.geo.v2.Position departure = 4;
   */
  departure?: Position;

  /**
   * 目的地
   * destination
   *
   * @generated from field: city.geo.v2.Position destination = 5;
   */
  destination?: Position;

  /**
   * 状态
   * status
   *
   * @generated from field: city.person.v2.OrderStatus status = 6;
   */
  status: OrderStatus;

  /**
   * 出发时间
   * departure time
   *
   * @generated from field: double departure_time = 7;
   */
  departureTime: number;

  constructor(data?: PartialMessage<RequestOrderInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.person.v2.RequestOrderInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestOrderInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestOrderInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestOrderInfo;

  static equals(a: RequestOrderInfo | PlainMessage<RequestOrderInfo> | undefined, b: RequestOrderInfo | PlainMessage<RequestOrderInfo> | undefined): boolean;
}

/**
 * 受外部控制的出租车接受的订单分配方案
 * Order allocation plan accepted by taxis controlled by external
 *
 * @generated from message city.person.v2.OrderAllocationPlan
 */
export declare class OrderAllocationPlan extends Message<OrderAllocationPlan> {
  /**
   * 相关的订单id，一个订单对应一个乘客
   * order ids related, one order corresponds to one passenger
   *
   * @generated from field: repeated int32 order_ids = 1;
   */
  orderIds: number[];

  /**
   * 出租车id
   * taxi id
   *
   * @generated from field: int32 taxi_id = 2;
   */
  taxiId: number;

  /**
   * 分配方案类型
   * allocation plan type
   *
   * @generated from field: city.person.v2.AllocationPlanType type = 3;
   */
  type: AllocationPlanType;

  /**
   * 待接的乘客ids，当type为ALLOCATION_PLAN_TYPE_PICK_UP时有效，和deliver_person_ids不同时有效
   * passenger ids to be picked up，valid when type is ALLOCATION_PLAN_TYPE_PICK_UP, not valid when deliver_person_ids is valid
   *
   * @generated from field: repeated int32 pick_up_person_ids = 4;
   */
  pickUpPersonIds: number[];

  /**
   * 待送的乘客ids，当type为ALLOCATION_PLAN_TYPE_DELIVER时有效，和pick_up_person_ids不同时有效
   * passenger ids to be delivered，valid when type is ALLOCATION_PLAN_TYPE_DELIVER, not valid when pick_up_person_ids is valid
   *
   * @generated from field: repeated int32 deliver_person_ids = 5;
   */
  deliverPersonIds: number[];

  constructor(data?: PartialMessage<OrderAllocationPlan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.person.v2.OrderAllocationPlan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderAllocationPlan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderAllocationPlan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderAllocationPlan;

  static equals(a: OrderAllocationPlan | PlainMessage<OrderAllocationPlan> | undefined, b: OrderAllocationPlan | PlainMessage<OrderAllocationPlan> | undefined): boolean;
}

/**
 * @generated from message city.person.v2.OrderAllocations
 */
export declare class OrderAllocations extends Message<OrderAllocations> {
  /**
   * 订单分配方案
   * order allocation plan
   *
   * @generated from field: repeated city.person.v2.OrderAllocationPlan order_allocations = 1;
   */
  orderAllocations: OrderAllocationPlan[];

  /**
   * 接单的出租车id
   * taxi id who accepts the order
   *
   * @generated from field: int32 taxi_id = 2;
   */
  taxiId: number;

  constructor(data?: PartialMessage<OrderAllocations>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.person.v2.OrderAllocations";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderAllocations;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderAllocations;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderAllocations;

  static equals(a: OrderAllocations | PlainMessage<OrderAllocations> | undefined, b: OrderAllocations | PlainMessage<OrderAllocations> | undefined): boolean;
}


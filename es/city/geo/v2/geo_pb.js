// @generated by protoc-gen-es v1.6.0
// @generated from file city/geo/v2/geo.proto (package city.geo.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * WGS84经纬度坐标
 * WGS84 longitute and latitude coordinates
 *
 * @generated from message city.geo.v2.LongLatPosition
 */
export const LongLatPosition = proto3.makeMessageType(
  "city.geo.v2.LongLatPosition",
  () => [
    { no: 1, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "z", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
  ],
);

/**
 * XY坐标
 * XY coordinates
 *
 * @generated from message city.geo.v2.XYPosition
 */
export const XYPosition = proto3.makeMessageType(
  "city.geo.v2.XYPosition",
  () => [
    { no: 1, name: "x", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "y", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "z", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
  ],
);

/**
 * 地图坐标（车道+距离s）
 * Map coordinates (lane ID + distance s)
 *
 * @generated from message city.geo.v2.LanePosition
 */
export const LanePosition = proto3.makeMessageType(
  "city.geo.v2.LanePosition",
  () => [
    { no: 1, name: "lane_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "s", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * 地图坐标（AOI）
 * Map coordinates (AOI)
 *
 * @generated from message city.geo.v2.AoiPosition
 */
export const AoiPosition = proto3.makeMessageType(
  "city.geo.v2.AoiPosition",
  () => [
    { no: 1, name: "aoi_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "poi_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * 坐标，如果多种坐标同时存在，两两之间必须满足映射关系，同时逻辑坐标是必须提供的
 * Coordinates, if multiple coordinates exist at the same time, the mapping relationship between them must be satisfied, and logical coordinates must be provided.
 *
 * @generated from message city.geo.v2.Position
 */
export const Position = proto3.makeMessageType(
  "city.geo.v2.Position",
  () => [
    { no: 1, name: "lane_position", kind: "message", T: LanePosition, opt: true },
    { no: 2, name: "aoi_position", kind: "message", T: AoiPosition, opt: true },
    { no: 3, name: "longlat_position", kind: "message", T: LongLatPosition, opt: true },
    { no: 4, name: "xy_position", kind: "message", T: XYPosition, opt: true },
  ],
);

/**
 * 经纬度矩形区域
 * latitude and longitude rectangular area
 *
 * @generated from message city.geo.v2.LongLatBBox
 */
export const LongLatBBox = proto3.makeMessageType(
  "city.geo.v2.LongLatBBox",
  () => [
    { no: 1, name: "min_longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "min_latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "max_longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "max_latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);


// @generated by protoc-gen-es v1.10.0
// @generated from file city/wargame/v1/wargame.proto (package city.wargame.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { LongLatPosition } from "../../geo/v2/geo_pb.js";

/**
 * @generated from enum city.wargame.v1.RedWeaponType
 */
export declare enum RedWeaponType {
  /**
   * @generated from enum value: RED_WEAPON_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RED_WEAPON_TYPE_AGM_158 = 1;
   */
  AGM_158 = 1,

  /**
   * @generated from enum value: RED_WEAPON_TYPE_AGM_183 = 2;
   */
  AGM_183 = 2,

  /**
   * @generated from enum value: RED_WEAPON_TYPE_AGM_88 = 3;
   */
  AGM_88 = 3,

  /**
   * @generated from enum value: RED_WEAPON_TYPE_UGM_109 = 4;
   */
  UGM_109 = 4,

  /**
   * @generated from enum value: RED_WEAPON_TYPE_AGM_142 = 5;
   */
  AGM_142 = 5,
}

/**
 * @generated from enum city.wargame.v1.BlueWeaponType
 */
export declare enum BlueWeaponType {
  /**
   * @generated from enum value: BLUE_WEAPON_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BLUE_WEAPON_TYPE_HQ_9 = 1;
   */
  HQ_9 = 1,

  /**
   * @generated from enum value: BLUE_WEAPON_TYPE_HQ_12 = 2;
   */
  HQ_12 = 2,

  /**
   * @generated from enum value: BLUE_WEAPON_TYPE_HQ_16 = 3;
   */
  HQ_16 = 3,

  /**
   * @generated from enum value: BLUE_WEAPON_TYPE_HQ_22 = 4;
   */
  HQ_22 = 4,
}

/**
 * @generated from enum city.wargame.v1.Camp
 */
export declare enum Camp {
  /**
   * @generated from enum value: CAMP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CAMP_RED = 1;
   */
  RED = 1,

  /**
   * @generated from enum value: CAMP_BLUE = 2;
   */
  BLUE = 2,
}

/**
 * @generated from enum city.wargame.v1.RecoType
 */
export declare enum RecoType {
  /**
   * @generated from enum value: RECO_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECO_TYPE_MISSILE = 1;
   */
  MISSILE = 1,

  /**
   * @generated from enum value: RECO_TYPE_ELEC = 2;
   */
  ELEC = 2,
}

/**
 * @generated from enum city.wargame.v1.RecoAlgoType
 */
export declare enum RecoAlgoType {
  /**
   * @generated from enum value: RECO_ALGO_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECO_ALGO_TYPE_MAX_DESTORY = 1;
   */
  MAX_DESTORY = 1,

  /**
   * @generated from enum value: RECO_ALGO_TYPE_RANDOM = 2;
   */
  RANDOM = 2,

  /**
   * @generated from enum value: RECO_ALGO_TYPE_MIN_DESTORY = 3;
   */
  MIN_DESTORY = 3,
}

/**
 * @generated from message city.wargame.v1.RecoPoint
 */
export declare class RecoPoint extends Message<RecoPoint> {
  /**
   * @generated from field: city.geo.v2.LongLatPosition pos = 1;
   */
  pos?: LongLatPosition;

  /**
   * @generated from field: city.wargame.v1.RecoType type = 2;
   */
  type: RecoType;

  constructor(data?: PartialMessage<RecoPoint>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.RecoPoint";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecoPoint;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecoPoint;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecoPoint;

  static equals(a: RecoPoint | PlainMessage<RecoPoint> | undefined, b: RecoPoint | PlainMessage<RecoPoint> | undefined): boolean;
}

/**
 * @generated from message city.wargame.v1.Weapon
 */
export declare class Weapon extends Message<Weapon> {
  /**
   * @generated from field: optional city.wargame.v1.RedWeaponType red_type = 2;
   */
  redType?: RedWeaponType;

  /**
   * @generated from field: optional city.wargame.v1.BlueWeaponType blue_type = 3;
   */
  blueType?: BlueWeaponType;

  /**
   * @generated from field: int32 num = 4;
   */
  num: number;

  constructor(data?: PartialMessage<Weapon>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.Weapon";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Weapon;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Weapon;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Weapon;

  static equals(a: Weapon | PlainMessage<Weapon> | undefined, b: Weapon | PlainMessage<Weapon> | undefined): boolean;
}

/**
 * @generated from message city.wargame.v1.Point
 */
export declare class Point extends Message<Point> {
  /**
   * @generated from field: city.wargame.v1.Weapon weapon = 1;
   */
  weapon?: Weapon;

  /**
   * @generated from field: city.geo.v2.LongLatPosition pos = 2;
   */
  pos?: LongLatPosition;

  /**
   * @generated from field: double radius = 3;
   */
  radius: number;

  constructor(data?: PartialMessage<Point>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.Point";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Point;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Point;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Point;

  static equals(a: Point | PlainMessage<Point> | undefined, b: Point | PlainMessage<Point> | undefined): boolean;
}

/**
 * @generated from message city.wargame.v1.Hit
 */
export declare class Hit extends Message<Hit> {
  /**
   * @generated from field: city.wargame.v1.Point attack = 1;
   */
  attack?: Point;

  /**
   * @generated from field: repeated city.wargame.v1.Point defenses = 2;
   */
  defenses: Point[];

  /**
   * @generated from field: bool result = 3;
   */
  result: boolean;

  /**
   * @generated from field: int32 arrive = 4;
   */
  arrive: number;

  constructor(data?: PartialMessage<Hit>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.Hit";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hit;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hit;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hit;

  static equals(a: Hit | PlainMessage<Hit> | undefined, b: Hit | PlainMessage<Hit> | undefined): boolean;
}

/**
 * @generated from message city.wargame.v1.HitHistory
 */
export declare class HitHistory extends Message<HitHistory> {
  /**
   * @generated from field: repeated city.wargame.v1.Hit hits = 1;
   */
  hits: Hit[];

  constructor(data?: PartialMessage<HitHistory>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.HitHistory";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HitHistory;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HitHistory;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HitHistory;

  static equals(a: HitHistory | PlainMessage<HitHistory> | undefined, b: HitHistory | PlainMessage<HitHistory> | undefined): boolean;
}

/**
 * @generated from message city.wargame.v1.Casualty
 */
export declare class Casualty extends Message<Casualty> {
  /**
   * @generated from field: int32 aoi_id = 1;
   */
  aoiId: number;

  /**
   * @generated from field: int32 num = 2;
   */
  num: number;

  constructor(data?: PartialMessage<Casualty>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.wargame.v1.Casualty";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Casualty;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Casualty;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Casualty;

  static equals(a: Casualty | PlainMessage<Casualty> | undefined, b: Casualty | PlainMessage<Casualty> | undefined): boolean;
}


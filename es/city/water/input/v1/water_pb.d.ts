// @generated by protoc-gen-es v1.10.0
// @generated from file city/water/input/v1/water.proto (package city.water.input.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message city.water.input.v1.RainPeriod
 */
export declare class RainPeriod extends Message<RainPeriod> {
  /**
   * 起始时间点，单位为秒，但必须整小时
   *
   * @generated from field: int32 start = 1;
   */
  start: number;

  /**
   * 降雨量：单位mm
   *
   * @generated from field: double rainfall = 2;
   */
  rainfall: number;

  constructor(data?: PartialMessage<RainPeriod>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.water.input.v1.RainPeriod";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RainPeriod;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RainPeriod;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RainPeriod;

  static equals(a: RainPeriod | PlainMessage<RainPeriod> | undefined, b: RainPeriod | PlainMessage<RainPeriod> | undefined): boolean;
}

/**
 * 全天降雨情况，在数据库中体现为一条数据
 *
 * @generated from message city.water.input.v1.Rain
 */
export declare class Rain extends Message<Rain> {
  /**
   * @generated from field: repeated city.water.input.v1.RainPeriod rains = 1;
   */
  rains: RainPeriod[];

  constructor(data?: PartialMessage<Rain>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.water.input.v1.Rain";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Rain;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Rain;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Rain;

  static equals(a: Rain | PlainMessage<Rain> | undefined, b: Rain | PlainMessage<Rain> | undefined): boolean;
}


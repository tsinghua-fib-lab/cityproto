// @generated by protoc-gen-es v1.10.0
// @generated from file city/map/v2/lane_service.proto (package city.map.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { LaneState } from "./lane_state_pb.js";
import type { LongLatBBox } from "../../geo/v2/geo_pb.js";

/**
 * 设置Lane的最大速度（限速）请求
 * Request for setting lane's maximum speed (speed limit)
 *
 * @generated from message city.map.v2.SetLaneMaxVRequest
 */
export declare class SetLaneMaxVRequest extends Message<SetLaneMaxVRequest> {
  /**
   * Lane id
   *
   * @generated from field: int32 lane_id = 1;
   */
  laneId: number;

  /**
   * 最大速度（限速），单位：m/s
   * Maximum speed (speed limit), unit: m/s
   *
   * @generated from field: double max_v = 2;
   */
  maxV: number;

  constructor(data?: PartialMessage<SetLaneMaxVRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneMaxVRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneMaxVRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneMaxVRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneMaxVRequest;

  static equals(a: SetLaneMaxVRequest | PlainMessage<SetLaneMaxVRequest> | undefined, b: SetLaneMaxVRequest | PlainMessage<SetLaneMaxVRequest> | undefined): boolean;
}

/**
 * 设置Lane的最大速度（限速）响应
 * Response of setting lane's maximum speed (speed limit)
 *
 * @generated from message city.map.v2.SetLaneMaxVResponse
 */
export declare class SetLaneMaxVResponse extends Message<SetLaneMaxVResponse> {
  constructor(data?: PartialMessage<SetLaneMaxVResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneMaxVResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneMaxVResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneMaxVResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneMaxVResponse;

  static equals(a: SetLaneMaxVResponse | PlainMessage<SetLaneMaxVResponse> | undefined, b: SetLaneMaxVResponse | PlainMessage<SetLaneMaxVResponse> | undefined): boolean;
}

/**
 * 设置Lane限行请求
 * Request for setting lane's traffic restriction
 *
 * @generated from message city.map.v2.SetLaneRestrictionRequest
 */
export declare class SetLaneRestrictionRequest extends Message<SetLaneRestrictionRequest> {
  /**
   * Lane id
   *
   * @generated from field: int32 lane_id = 1;
   */
  laneId: number;

  /**
   * 限行
   * Traffic restriction
   *
   * @generated from field: bool restriction = 2;
   */
  restriction: boolean;

  constructor(data?: PartialMessage<SetLaneRestrictionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneRestrictionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneRestrictionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneRestrictionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneRestrictionRequest;

  static equals(a: SetLaneRestrictionRequest | PlainMessage<SetLaneRestrictionRequest> | undefined, b: SetLaneRestrictionRequest | PlainMessage<SetLaneRestrictionRequest> | undefined): boolean;
}

/**
 * 设置Lane限行响应
 * Response of setting lane's traffic restriction
 *
 * @generated from message city.map.v2.SetLaneRestrictionResponse
 */
export declare class SetLaneRestrictionResponse extends Message<SetLaneRestrictionResponse> {
  constructor(data?: PartialMessage<SetLaneRestrictionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneRestrictionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneRestrictionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneRestrictionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneRestrictionResponse;

  static equals(a: SetLaneRestrictionResponse | PlainMessage<SetLaneRestrictionResponse> | undefined, b: SetLaneRestrictionResponse | PlainMessage<SetLaneRestrictionResponse> | undefined): boolean;
}

/**
 * 获取Lane的信息请求
 * Request for getting lane information
 *
 * @generated from message city.map.v2.GetLaneRequest
 */
export declare class GetLaneRequest extends Message<GetLaneRequest> {
  /**
   * 指定的Lane id列表，如果为空，则返回所有Lane的信息
   * List of targeted lane IDs, if empty, returns all information of lanes
   *
   * @generated from field: repeated int32 lane_ids = 1;
   */
  laneIds: number[];

  /**
   * 是否要排除车道上的人的信息
   * Whether to exclude information of person on the lane
   *
   * @generated from field: bool exclude_person = 2;
   */
  excludePerson: boolean;

  constructor(data?: PartialMessage<GetLaneRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneRequest;

  static equals(a: GetLaneRequest | PlainMessage<GetLaneRequest> | undefined, b: GetLaneRequest | PlainMessage<GetLaneRequest> | undefined): boolean;
}

/**
 * 获取Lane的信息响应
 * Response of getting lane information
 *
 * @generated from message city.map.v2.GetLaneResponse
 */
export declare class GetLaneResponse extends Message<GetLaneResponse> {
  /**
   * Lane的信息
   * Lane information
   *
   * @generated from field: repeated city.map.v2.LaneState states = 1;
   */
  states: LaneState[];

  constructor(data?: PartialMessage<GetLaneResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneResponse;

  static equals(a: GetLaneResponse | PlainMessage<GetLaneResponse> | undefined, b: GetLaneResponse | PlainMessage<GetLaneResponse> | undefined): boolean;
}

/**
 * 获取特定区域内的Lane的信息请求
 * Request for getting lane information in a specific region
 *
 * @generated from message city.map.v2.GetLaneByLongLatBBoxRequest
 */
export declare class GetLaneByLongLatBBoxRequest extends Message<GetLaneByLongLatBBoxRequest> {
  /**
   * 经纬度范围
   * latitude and longitude bounding box
   *
   * @generated from field: city.geo.v2.LongLatBBox bbox = 1;
   */
  bbox?: LongLatBBox;

  /**
   * 是否要排除车道上的人的信息
   * Whether to exclude information of person on the lane
   *
   * @generated from field: bool exclude_person = 2;
   */
  excludePerson: boolean;

  constructor(data?: PartialMessage<GetLaneByLongLatBBoxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneByLongLatBBoxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneByLongLatBBoxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneByLongLatBBoxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneByLongLatBBoxRequest;

  static equals(a: GetLaneByLongLatBBoxRequest | PlainMessage<GetLaneByLongLatBBoxRequest> | undefined, b: GetLaneByLongLatBBoxRequest | PlainMessage<GetLaneByLongLatBBoxRequest> | undefined): boolean;
}

/**
 * 获取特定区域内的Lane的信息响应
 * Response of getting lane information in a specific region
 *
 * @generated from message city.map.v2.GetLaneByLongLatBBoxResponse
 */
export declare class GetLaneByLongLatBBoxResponse extends Message<GetLaneByLongLatBBoxResponse> {
  /**
   * Lane的信息
   * Lane information
   *
   * @generated from field: repeated city.map.v2.LaneState states = 1;
   */
  states: LaneState[];

  constructor(data?: PartialMessage<GetLaneByLongLatBBoxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneByLongLatBBoxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneByLongLatBBoxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneByLongLatBBoxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneByLongLatBBoxResponse;

  static equals(a: GetLaneByLongLatBBoxResponse | PlainMessage<GetLaneByLongLatBBoxResponse> | undefined, b: GetLaneByLongLatBBoxResponse | PlainMessage<GetLaneByLongLatBBoxResponse> | undefined): boolean;
}

/**
 * 获取Lane全局统计信息请求
 * Request for getting lane global statistics
 *
 * @generated from message city.map.v2.GetLaneGlobalStatisticsRequest
 */
export declare class GetLaneGlobalStatisticsRequest extends Message<GetLaneGlobalStatisticsRequest> {
  constructor(data?: PartialMessage<GetLaneGlobalStatisticsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneGlobalStatisticsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneGlobalStatisticsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneGlobalStatisticsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneGlobalStatisticsRequest;

  static equals(a: GetLaneGlobalStatisticsRequest | PlainMessage<GetLaneGlobalStatisticsRequest> | undefined, b: GetLaneGlobalStatisticsRequest | PlainMessage<GetLaneGlobalStatisticsRequest> | undefined): boolean;
}

/**
 * 获取Lane全局统计信息响应
 * Response of getting lane global statistics
 *
 * @generated from message city.map.v2.GetLaneGlobalStatisticsResponse
 */
export declare class GetLaneGlobalStatisticsResponse extends Message<GetLaneGlobalStatisticsResponse> {
  /**
   * 最大排队车辆数
   * max queuing vehicle count
   *
   * @generated from field: int32 max_queuing_vehicle_cnt = 1;
   */
  maxQueuingVehicleCnt: number;

  constructor(data?: PartialMessage<GetLaneGlobalStatisticsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneGlobalStatisticsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneGlobalStatisticsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneGlobalStatisticsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneGlobalStatisticsResponse;

  static equals(a: GetLaneGlobalStatisticsResponse | PlainMessage<GetLaneGlobalStatisticsResponse> | undefined, b: GetLaneGlobalStatisticsResponse | PlainMessage<GetLaneGlobalStatisticsResponse> | undefined): boolean;
}


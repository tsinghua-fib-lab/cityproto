// @generated by protoc-gen-es v1.6.0
// @generated from file city/map/v2/lane_service.proto (package city.map.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { AgentMotion } from "../../agent/v2/motion_pb.js";

/**
 * 设置Lane的最大速度（限速）请求
 *
 * @generated from message city.map.v2.SetLaneMaxVRequest
 */
export declare class SetLaneMaxVRequest extends Message<SetLaneMaxVRequest> {
  /**
   * Lane id
   *
   * @generated from field: int32 lane_id = 1;
   */
  laneId: number;

  /**
   * 最大速度（限速），单位：m/s
   *
   * @generated from field: double max_v = 2;
   */
  maxV: number;

  constructor(data?: PartialMessage<SetLaneMaxVRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneMaxVRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneMaxVRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneMaxVRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneMaxVRequest;

  static equals(a: SetLaneMaxVRequest | PlainMessage<SetLaneMaxVRequest> | undefined, b: SetLaneMaxVRequest | PlainMessage<SetLaneMaxVRequest> | undefined): boolean;
}

/**
 * 设置Lane的最大速度（限速）响应
 *
 * @generated from message city.map.v2.SetLaneMaxVResponse
 */
export declare class SetLaneMaxVResponse extends Message<SetLaneMaxVResponse> {
  constructor(data?: PartialMessage<SetLaneMaxVResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.SetLaneMaxVResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetLaneMaxVResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetLaneMaxVResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetLaneMaxVResponse;

  static equals(a: SetLaneMaxVResponse | PlainMessage<SetLaneMaxVResponse> | undefined, b: SetLaneMaxVResponse | PlainMessage<SetLaneMaxVResponse> | undefined): boolean;
}

/**
 * 获取Lane的信息请求
 *
 * @generated from message city.map.v2.GetLaneRequest
 */
export declare class GetLaneRequest extends Message<GetLaneRequest> {
  /**
   * 指定的Lane id列表，如果为空，则返回所有Lane的信息
   *
   * @generated from field: repeated int32 lane_ids = 1;
   */
  laneIds: number[];

  constructor(data?: PartialMessage<GetLaneRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneRequest;

  static equals(a: GetLaneRequest | PlainMessage<GetLaneRequest> | undefined, b: GetLaneRequest | PlainMessage<GetLaneRequest> | undefined): boolean;
}

/**
 * 获取Lane的信息响应
 *
 * @generated from message city.map.v2.GetLaneResponse
 */
export declare class GetLaneResponse extends Message<GetLaneResponse> {
  /**
   * Lane的信息
   *
   * @generated from field: repeated city.map.v2.LaneState states = 1;
   */
  states: LaneState[];

  constructor(data?: PartialMessage<GetLaneResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.GetLaneResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLaneResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLaneResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLaneResponse;

  static equals(a: GetLaneResponse | PlainMessage<GetLaneResponse> | undefined, b: GetLaneResponse | PlainMessage<GetLaneResponse> | undefined): boolean;
}

/**
 * Lane状态
 *
 * @generated from message city.map.v2.LaneState
 */
export declare class LaneState extends Message<LaneState> {
  /**
   * Lane ID
   *
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * Lane上的人/车
   *
   * @generated from field: repeated city.agent.v2.AgentMotion persons = 2;
   */
  persons: AgentMotion[];

  /**
   * 平均速度（m/s）
   *
   * @generated from field: double avg_v = 3;
   */
  avgV: number;

  /**
   * 是否限行
   *
   * @generated from field: bool restriction = 4;
   */
  restriction: boolean;

  constructor(data?: PartialMessage<LaneState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.map.v2.LaneState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LaneState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LaneState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LaneState;

  static equals(a: LaneState | PlainMessage<LaneState> | undefined, b: LaneState | PlainMessage<LaneState> | undefined): boolean;
}


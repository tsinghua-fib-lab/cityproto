// @generated by protoc-gen-connect-es v1.5.0
// @generated from file city/map/v2/lane_service.proto (package city.map.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetLaneByLongLatBBoxRequest, GetLaneByLongLatBBoxResponse, GetLaneRequest, GetLaneResponse, SetLaneMaxVRequest, SetLaneMaxVResponse, SetLaneRestrictionRequest, SetLaneRestrictionResponse } from "./lane_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service city.map.v2.LaneService
 */
export declare const LaneService: {
  readonly typeName: "city.map.v2.LaneService",
  readonly methods: {
    /**
     * 设置Lane的最大速度（限速）
     * Set Lane's maximum speed (speed limit)
     *
     * @generated from rpc city.map.v2.LaneService.SetLaneMaxV
     */
    readonly setLaneMaxV: {
      readonly name: "SetLaneMaxV",
      readonly I: typeof SetLaneMaxVRequest,
      readonly O: typeof SetLaneMaxVResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * 设置Lane限行
     * Set Lane's traffic restriction
     *
     * @generated from rpc city.map.v2.LaneService.SetLaneRestriction
     */
    readonly setLaneRestriction: {
      readonly name: "SetLaneRestriction",
      readonly I: typeof SetLaneRestrictionRequest,
      readonly O: typeof SetLaneRestrictionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * 获取Lane的信息
     * Get Lane information
     *
     * @generated from rpc city.map.v2.LaneService.GetLane
     */
    readonly getLane: {
      readonly name: "GetLane",
      readonly I: typeof GetLaneRequest,
      readonly O: typeof GetLaneResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * 获取特定区域内的Lane的信息
     * Get Lane information in a specific region
     *
     * @generated from rpc city.map.v2.LaneService.GetLaneByLongLatBBox
     */
    readonly getLaneByLongLatBBox: {
      readonly name: "GetLaneByLongLatBBox",
      readonly I: typeof GetLaneByLongLatBBoxRequest,
      readonly O: typeof GetLaneByLongLatBBoxResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};


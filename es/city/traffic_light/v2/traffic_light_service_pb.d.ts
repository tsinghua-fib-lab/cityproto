// @generated by protoc-gen-es v1.6.0
// @generated from file city/traffic_light/v2/traffic_light_service.proto (package city.traffic_light.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TrafficLight } from "./traffic_light_pb.js";

/**
 * 获取路口的红绿灯信息请求
 *
 * @generated from message city.traffic_light.v2.GetTrafficLightRequest
 */
export declare class GetTrafficLightRequest extends Message<GetTrafficLightRequest> {
  /**
   * 信号等相关的接口精确到junction
   *
   * @generated from field: int32 junction_id = 1;
   */
  junctionId: number;

  constructor(data?: PartialMessage<GetTrafficLightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.GetTrafficLightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTrafficLightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTrafficLightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTrafficLightRequest;

  static equals(a: GetTrafficLightRequest | PlainMessage<GetTrafficLightRequest> | undefined, b: GetTrafficLightRequest | PlainMessage<GetTrafficLightRequest> | undefined): boolean;
}

/**
 * 获取路口的红绿灯信息响应
 *
 * @generated from message city.traffic_light.v2.GetTrafficLightResponse
 */
export declare class GetTrafficLightResponse extends Message<GetTrafficLightResponse> {
  /**
   * 当前路口处的红绿灯
   *
   * @generated from field: city.traffic_light.v2.TrafficLight traffic_light = 1;
   */
  trafficLight?: TrafficLight;

  /**
   * 表示当前路口处的红绿灯处于哪一个相位
   *
   * @generated from field: int32 phase_index = 2;
   */
  phaseIndex: number;

  /**
   * 当前相位的剩余时间
   *
   * @generated from field: double time_remaining = 3;
   */
  timeRemaining: number;

  constructor(data?: PartialMessage<GetTrafficLightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.GetTrafficLightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTrafficLightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTrafficLightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTrafficLightResponse;

  static equals(a: GetTrafficLightResponse | PlainMessage<GetTrafficLightResponse> | undefined, b: GetTrafficLightResponse | PlainMessage<GetTrafficLightResponse> | undefined): boolean;
}

/**
 * 设置路口的红绿灯信息请求
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightRequest
 */
export declare class SetTrafficLightRequest extends Message<SetTrafficLightRequest> {
  /**
   * 需要改变的红绿灯（含路口编号）
   *
   * @generated from field: city.traffic_light.v2.TrafficLight traffic_light = 1;
   */
  trafficLight?: TrafficLight;

  /**
   * 指定当前路口处的红绿灯的相位
   *
   * @generated from field: int32 phase_index = 2;
   */
  phaseIndex: number;

  /**
   * 当前相位的剩余时间
   *
   * @generated from field: double time_remaining = 3;
   */
  timeRemaining: number;

  constructor(data?: PartialMessage<SetTrafficLightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightRequest;

  static equals(a: SetTrafficLightRequest | PlainMessage<SetTrafficLightRequest> | undefined, b: SetTrafficLightRequest | PlainMessage<SetTrafficLightRequest> | undefined): boolean;
}

/**
 * 设置路口的红绿灯信息响应
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightResponse
 */
export declare class SetTrafficLightResponse extends Message<SetTrafficLightResponse> {
  constructor(data?: PartialMessage<SetTrafficLightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightResponse;

  static equals(a: SetTrafficLightResponse | PlainMessage<SetTrafficLightResponse> | undefined, b: SetTrafficLightResponse | PlainMessage<SetTrafficLightResponse> | undefined): boolean;
}

/**
 * 设置路口的红绿灯相位请求
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightPhaseRequest
 */
export declare class SetTrafficLightPhaseRequest extends Message<SetTrafficLightPhaseRequest> {
  /**
   * 需要改变相位的路口编号
   *
   * @generated from field: int32 junction_id = 1;
   */
  junctionId: number;

  /**
   * 指定当前路口红绿灯的相位
   *
   * @generated from field: int32 phase_index = 2;
   */
  phaseIndex: number;

  /**
   * 当前相位的剩余时间
   *
   * @generated from field: double time_remaining = 3;
   */
  timeRemaining: number;

  constructor(data?: PartialMessage<SetTrafficLightPhaseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightPhaseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightPhaseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightPhaseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightPhaseRequest;

  static equals(a: SetTrafficLightPhaseRequest | PlainMessage<SetTrafficLightPhaseRequest> | undefined, b: SetTrafficLightPhaseRequest | PlainMessage<SetTrafficLightPhaseRequest> | undefined): boolean;
}

/**
 * 设置路口的红绿灯相位响应
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightPhaseResponse
 */
export declare class SetTrafficLightPhaseResponse extends Message<SetTrafficLightPhaseResponse> {
  constructor(data?: PartialMessage<SetTrafficLightPhaseResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightPhaseResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightPhaseResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightPhaseResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightPhaseResponse;

  static equals(a: SetTrafficLightPhaseResponse | PlainMessage<SetTrafficLightPhaseResponse> | undefined, b: SetTrafficLightPhaseResponse | PlainMessage<SetTrafficLightPhaseResponse> | undefined): boolean;
}

/**
 * 设置路口的红绿灯状态请求
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightStatusRequest
 */
export declare class SetTrafficLightStatusRequest extends Message<SetTrafficLightStatusRequest> {
  /**
   * 需要改变状态的路口编号
   *
   * @generated from field: int32 junction_id = 1;
   */
  junctionId: number;

  /**
   * 当前路口红绿灯状态，true为通，false为断
   *
   * @generated from field: bool ok = 2;
   */
  ok: boolean;

  constructor(data?: PartialMessage<SetTrafficLightStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightStatusRequest;

  static equals(a: SetTrafficLightStatusRequest | PlainMessage<SetTrafficLightStatusRequest> | undefined, b: SetTrafficLightStatusRequest | PlainMessage<SetTrafficLightStatusRequest> | undefined): boolean;
}

/**
 * 设置路口的红绿灯状态响应
 *
 * @generated from message city.traffic_light.v2.SetTrafficLightStatusResponse
 */
export declare class SetTrafficLightStatusResponse extends Message<SetTrafficLightStatusResponse> {
  constructor(data?: PartialMessage<SetTrafficLightStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.traffic_light.v2.SetTrafficLightStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetTrafficLightStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetTrafficLightStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetTrafficLightStatusResponse;

  static equals(a: SetTrafficLightStatusResponse | PlainMessage<SetTrafficLightStatusResponse> | undefined, b: SetTrafficLightStatusResponse | PlainMessage<SetTrafficLightStatusResponse> | undefined): boolean;
}


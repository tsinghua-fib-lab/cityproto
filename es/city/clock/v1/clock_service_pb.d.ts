// @generated by protoc-gen-es v1.6.0
// @generated from file city/clock/v1/clock_service.proto (package city.clock.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * 获取当前的模拟时间请求
 * request of getting current simulation clock
 *
 * @generated from message city.clock.v1.NowRequest
 */
export declare class NowRequest extends Message<NowRequest> {
  constructor(data?: PartialMessage<NowRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.clock.v1.NowRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NowRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NowRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NowRequest;

  static equals(a: NowRequest | PlainMessage<NowRequest> | undefined, b: NowRequest | PlainMessage<NowRequest> | undefined): boolean;
}

/**
 * 获取当前的模拟时间响应
 * response of getting current simulation clock
 *
 * @generated from message city.clock.v1.NowResponse
 */
export declare class NowResponse extends Message<NowResponse> {
  /**
   * 当前的模拟时间，单位为秒
   * current simulation clock, in seconds
   *
   * @generated from field: double t = 1;
   */
  t: number;

  constructor(data?: PartialMessage<NowResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "city.clock.v1.NowResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NowResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NowResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NowResponse;

  static equals(a: NowResponse | PlainMessage<NowResponse> | undefined, b: NowResponse | PlainMessage<NowResponse> | undefined): boolean;
}


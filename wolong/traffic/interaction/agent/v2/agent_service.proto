syntax = "proto3";

package wolong.traffic.interaction.agent.v2;

import "wolong/traffic/interaction/agent/v2/agent.proto";
import "wolong/agent/v2/agent.proto";
import "wolong/geo/v2/geo.proto";
import "wolong/trip/v2/trip.proto";

service AgentService {
  // 获取agent信息：传入agentid，返回当前trip的剩余距离、当前agent的所有trip的目的地信息
  // rpc GetAgent(GetAgentRequest) returns (GetAgentResponse);
  // 新增agent 传入agent初始位置、目的地表、属性 返回agentid
  rpc AddAgent(AddAgentRequest) returns (AddAgentResponse);
  // 修改agent的schedule 传入agentid、目的地表
  rpc SetSchedule(SetScheduleRequest) returns (SetScheduleResponse);
  // 获取特定区域内的车辆xinxi
  rpc GetVehiclesByLongLatArea(GetVehiclesByLongLatAreaRequest)
      returns (GetVehiclesByLongLatAreaResponse);
  // 获取车辆统计信息
  rpc GetVehicleStat(GetVehicleStatRequest) returns (GetVehicleStatResponse);
}

// message GetAgentRequest { int32 agent_id = 1; }

// message GetAgentResponse {
//   double distance = 1;
//   // 约定：Position要求必须包含经纬度坐标，并提供尽可能多的信息
//   repeated wolong.geo.v2.Position schedule = 2;
// }

message AddAgentRequest {
  // 约定：agent中不设置id
  wolong.agent.v2.Agent agent = 1;
}

message AddAgentResponse { int32 agent_id = 1; }

message SetScheduleRequest {
  int32 agent_id = 1;
  repeated wolong.trip.v2.Schedule schedules = 2;
}

message SetScheduleResponse {}

message GetVehiclesByLongLatAreaRequest {
  wolong.geo.v2.LongLatRectArea area = 1;
}

message GetVehiclesByLongLatAreaResponse {
  int32 step = 1;
  repeated Vehicle vehicles = 2;
}

message GetVehicleStatRequest {}

message GetVehicleStatResponse {
  double average_speed = 1;
  int32 num_vehicle_on_lane = 2;
}

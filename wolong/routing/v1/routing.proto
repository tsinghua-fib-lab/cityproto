syntax = "proto3";

package wolong.routing.v1;

// Journey用以描述采用一种特定交通方式从一点出发到达另一点的路径。
// 一般来说，多个Journey是一个Trip的“实现”。
// 例如：Trip(从清华乘地铁到天安门):
// Journey(步行到地铁站)->Journey(地铁)->Journey(步行到天安门)

enum RouteType {
  ROUTE_TYPE_UNSPECIFIED = 0;
  ROUTE_TYPE_DRIVING = 1;
  ROUTE_TYPE_WALKING = 2;
  ROUTE_TYPE_BY_BUS = 3;
}

enum JourneyType {
  JOURNEY_TYPE_UNSPECIFIED = 0;
  JOURNEY_TYPE_DRIVING = 1;
  JOURNEY_TYPE_WALKING = 2;
  JOURNEY_TYPE_BY_BUS = 3;
  JOURNEY_TYPE_BY_TAXI = 4;
}

// describe how the vehicle goes into the next lane from the current lane
enum NextLaneType {
  NEXT_LANE_TYPE_UNSPECIFIED = 0;
  // the next lane is the successor of the current lane
  NEXT_LANE_TYPE_FORWARD = 1;
  // the next lane is the left neighbor of the current lane
  NEXT_LANE_TYPE_LEFT = 2;
  // the next lane is the right neighbor of the current lane
  NEXT_LANE_TYPE_RIGHT = 3;
  // the current lane is the last one, no next lane
  NEXT_LANE_TYPE_LAST = 4;
}

message RouteSegment {
  uint32 lane_id = 1;
  NextLaneType next_lane_type = 2;
}

// lanes sequence
// hint: the agent should pass the end of one lane in lanes
// (except the last lane or the lane whose next lane is its neighbor)
message DrivingJourneyBody {
  repeated RouteSegment route = 1;
}

message WalkingJourneyBody {
  // TODO(zhangjun): not implemented
}

message BusJourneyBody {
  // TODO(zhangjun): not implemented
}

message TaxiJourneyBody {
  // TODO(zhangjun): not implemented
}

// one part of route, which contains only ONE mode of travel
message Journey {
  JourneyType type = 1;
  oneof journey_body {
    DrivingJourneyBody driving = 2;
    WalkingJourneyBody walking = 3;
    BusJourneyBody by_bus = 4;
    TaxiJourneyBody by_taxi = 5;
  }
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: city/economy/v2/org_service.proto

package economyv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Firm 相关消息
type AddFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firm          *Firm                  `protobuf:"bytes,1,opt,name=firm,proto3" json:"firm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFirmRequest) Reset() {
	*x = AddFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFirmRequest) ProtoMessage() {}

func (x *AddFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFirmRequest.ProtoReflect.Descriptor instead.
func (*AddFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddFirmRequest) GetFirm() *Firm {
	if x != nil {
		return x.Firm
	}
	return nil
}

type AddFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFirmResponse) Reset() {
	*x = AddFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFirmResponse) ProtoMessage() {}

func (x *AddFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFirmResponse.ProtoReflect.Descriptor instead.
func (*AddFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{1}
}

type RemoveFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmId        int32                  `protobuf:"varint,1,opt,name=firm_id,json=firmId,proto3" json:"firm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFirmRequest) Reset() {
	*x = RemoveFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFirmRequest) ProtoMessage() {}

func (x *RemoveFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFirmRequest.ProtoReflect.Descriptor instead.
func (*RemoveFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveFirmRequest) GetFirmId() int32 {
	if x != nil {
		return x.FirmId
	}
	return 0
}

type RemoveFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFirmResponse) Reset() {
	*x = RemoveFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFirmResponse) ProtoMessage() {}

func (x *RemoveFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFirmResponse.ProtoReflect.Descriptor instead.
func (*RemoveFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{3}
}

type GetFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmId        int32                  `protobuf:"varint,1,opt,name=firm_id,json=firmId,proto3" json:"firm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFirmRequest) Reset() {
	*x = GetFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmRequest) ProtoMessage() {}

func (x *GetFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmRequest.ProtoReflect.Descriptor instead.
func (*GetFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetFirmRequest) GetFirmId() int32 {
	if x != nil {
		return x.FirmId
	}
	return 0
}

type GetFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firm          *Firm                  `protobuf:"bytes,1,opt,name=firm,proto3" json:"firm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFirmResponse) Reset() {
	*x = GetFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirmResponse) ProtoMessage() {}

func (x *GetFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirmResponse.ProtoReflect.Descriptor instead.
func (*GetFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetFirmResponse) GetFirm() *Firm {
	if x != nil {
		return x.Firm
	}
	return nil
}

type UpdateFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firm          *Firm                  `protobuf:"bytes,1,opt,name=firm,proto3" json:"firm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFirmRequest) Reset() {
	*x = UpdateFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFirmRequest) ProtoMessage() {}

func (x *UpdateFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFirmRequest.ProtoReflect.Descriptor instead.
func (*UpdateFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateFirmRequest) GetFirm() *Firm {
	if x != nil {
		return x.Firm
	}
	return nil
}

type UpdateFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFirmResponse) Reset() {
	*x = UpdateFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFirmResponse) ProtoMessage() {}

func (x *UpdateFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFirmResponse.ProtoReflect.Descriptor instead.
func (*UpdateFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{7}
}

type ListFirmsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFirmsRequest) Reset() {
	*x = ListFirmsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFirmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFirmsRequest) ProtoMessage() {}

func (x *ListFirmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFirmsRequest.ProtoReflect.Descriptor instead.
func (*ListFirmsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{8}
}

type ListFirmsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firms         []*Firm                `protobuf:"bytes,1,rep,name=firms,proto3" json:"firms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFirmsResponse) Reset() {
	*x = ListFirmsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFirmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFirmsResponse) ProtoMessage() {}

func (x *ListFirmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFirmsResponse.ProtoReflect.Descriptor instead.
func (*ListFirmsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListFirmsResponse) GetFirms() []*Firm {
	if x != nil {
		return x.Firms
	}
	return nil
}

type DeltaUpdateFirmRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FirmId          int32                  `protobuf:"varint,1,opt,name=firm_id,json=firmId,proto3" json:"firm_id,omitempty"`
	DeltaPrice      *float32               `protobuf:"fixed32,2,opt,name=delta_price,json=deltaPrice,proto3,oneof" json:"delta_price,omitempty"`
	DeltaInventory  *int32                 `protobuf:"varint,3,opt,name=delta_inventory,json=deltaInventory,proto3,oneof" json:"delta_inventory,omitempty"`
	DeltaDemand     *float32               `protobuf:"fixed32,4,opt,name=delta_demand,json=deltaDemand,proto3,oneof" json:"delta_demand,omitempty"`
	DeltaSales      *float32               `protobuf:"fixed32,5,opt,name=delta_sales,json=deltaSales,proto3,oneof" json:"delta_sales,omitempty"`
	DeltaCurrency   *float32               `protobuf:"fixed32,6,opt,name=delta_currency,json=deltaCurrency,proto3,oneof" json:"delta_currency,omitempty"`
	AddEmployees    []int32                `protobuf:"varint,7,rep,packed,name=add_employees,json=addEmployees,proto3" json:"add_employees,omitempty"`
	RemoveEmployees []int32                `protobuf:"varint,8,rep,packed,name=remove_employees,json=removeEmployees,proto3" json:"remove_employees,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeltaUpdateFirmRequest) Reset() {
	*x = DeltaUpdateFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateFirmRequest) ProtoMessage() {}

func (x *DeltaUpdateFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateFirmRequest.ProtoReflect.Descriptor instead.
func (*DeltaUpdateFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeltaUpdateFirmRequest) GetFirmId() int32 {
	if x != nil {
		return x.FirmId
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetDeltaPrice() float32 {
	if x != nil && x.DeltaPrice != nil {
		return *x.DeltaPrice
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetDeltaInventory() int32 {
	if x != nil && x.DeltaInventory != nil {
		return *x.DeltaInventory
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetDeltaDemand() float32 {
	if x != nil && x.DeltaDemand != nil {
		return *x.DeltaDemand
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetDeltaSales() float32 {
	if x != nil && x.DeltaSales != nil {
		return *x.DeltaSales
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetDeltaCurrency() float32 {
	if x != nil && x.DeltaCurrency != nil {
		return *x.DeltaCurrency
	}
	return 0
}

func (x *DeltaUpdateFirmRequest) GetAddEmployees() []int32 {
	if x != nil {
		return x.AddEmployees
	}
	return nil
}

func (x *DeltaUpdateFirmRequest) GetRemoveEmployees() []int32 {
	if x != nil {
		return x.RemoveEmployees
	}
	return nil
}

type DeltaUpdateFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeltaUpdateFirmResponse) Reset() {
	*x = DeltaUpdateFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateFirmResponse) ProtoMessage() {}

func (x *DeltaUpdateFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateFirmResponse.ProtoReflect.Descriptor instead.
func (*DeltaUpdateFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{11}
}

// Firm 批处理相关消息
type BatchAddFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firms         []*Firm                `protobuf:"bytes,1,rep,name=firms,proto3" json:"firms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddFirmRequest) Reset() {
	*x = BatchAddFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddFirmRequest) ProtoMessage() {}

func (x *BatchAddFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddFirmRequest.ProtoReflect.Descriptor instead.
func (*BatchAddFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{12}
}

func (x *BatchAddFirmRequest) GetFirms() []*Firm {
	if x != nil {
		return x.Firms
	}
	return nil
}

type BatchAddFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmIds       []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddFirmResponse) Reset() {
	*x = BatchAddFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddFirmResponse) ProtoMessage() {}

func (x *BatchAddFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddFirmResponse.ProtoReflect.Descriptor instead.
func (*BatchAddFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{13}
}

func (x *BatchAddFirmResponse) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

type BatchRemoveFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmIds       []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRemoveFirmRequest) Reset() {
	*x = BatchRemoveFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRemoveFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRemoveFirmRequest) ProtoMessage() {}

func (x *BatchRemoveFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRemoveFirmRequest.ProtoReflect.Descriptor instead.
func (*BatchRemoveFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{14}
}

func (x *BatchRemoveFirmRequest) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

type BatchRemoveFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRemoveFirmResponse) Reset() {
	*x = BatchRemoveFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRemoveFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRemoveFirmResponse) ProtoMessage() {}

func (x *BatchRemoveFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRemoveFirmResponse.ProtoReflect.Descriptor instead.
func (*BatchRemoveFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{15}
}

type BatchGetFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmIds       []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetFirmRequest) Reset() {
	*x = BatchGetFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetFirmRequest) ProtoMessage() {}

func (x *BatchGetFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetFirmRequest.ProtoReflect.Descriptor instead.
func (*BatchGetFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{16}
}

func (x *BatchGetFirmRequest) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

type BatchGetFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firms         []*Firm                `protobuf:"bytes,1,rep,name=firms,proto3" json:"firms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetFirmResponse) Reset() {
	*x = BatchGetFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetFirmResponse) ProtoMessage() {}

func (x *BatchGetFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetFirmResponse.ProtoReflect.Descriptor instead.
func (*BatchGetFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{17}
}

func (x *BatchGetFirmResponse) GetFirms() []*Firm {
	if x != nil {
		return x.Firms
	}
	return nil
}

type BatchUpdateFirmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Firms         []*Firm                `protobuf:"bytes,1,rep,name=firms,proto3" json:"firms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateFirmRequest) Reset() {
	*x = BatchUpdateFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateFirmRequest) ProtoMessage() {}

func (x *BatchUpdateFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateFirmRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{18}
}

func (x *BatchUpdateFirmRequest) GetFirms() []*Firm {
	if x != nil {
		return x.Firms
	}
	return nil
}

type BatchUpdateFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateFirmResponse) Reset() {
	*x = BatchUpdateFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateFirmResponse) ProtoMessage() {}

func (x *BatchUpdateFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateFirmResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{19}
}

type BatchDeltaUpdateFirmRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Updates       []*DeltaUpdateFirmRequest `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeltaUpdateFirmRequest) Reset() {
	*x = BatchDeltaUpdateFirmRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeltaUpdateFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaUpdateFirmRequest) ProtoMessage() {}

func (x *BatchDeltaUpdateFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaUpdateFirmRequest.ProtoReflect.Descriptor instead.
func (*BatchDeltaUpdateFirmRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{20}
}

func (x *BatchDeltaUpdateFirmRequest) GetUpdates() []*DeltaUpdateFirmRequest {
	if x != nil {
		return x.Updates
	}
	return nil
}

type BatchDeltaUpdateFirmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeltaUpdateFirmResponse) Reset() {
	*x = BatchDeltaUpdateFirmResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeltaUpdateFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaUpdateFirmResponse) ProtoMessage() {}

func (x *BatchDeltaUpdateFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaUpdateFirmResponse.ProtoReflect.Descriptor instead.
func (*BatchDeltaUpdateFirmResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{21}
}

// NBS 相关消息
type AddNBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nbs           *NBS                   `protobuf:"bytes,1,opt,name=nbs,proto3" json:"nbs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNBSRequest) Reset() {
	*x = AddNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNBSRequest) ProtoMessage() {}

func (x *AddNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNBSRequest.ProtoReflect.Descriptor instead.
func (*AddNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{22}
}

func (x *AddNBSRequest) GetNbs() *NBS {
	if x != nil {
		return x.Nbs
	}
	return nil
}

type AddNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNBSResponse) Reset() {
	*x = AddNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNBSResponse) ProtoMessage() {}

func (x *AddNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNBSResponse.ProtoReflect.Descriptor instead.
func (*AddNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{23}
}

type RemoveNBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NbsId         int32                  `protobuf:"varint,1,opt,name=nbs_id,json=nbsId,proto3" json:"nbs_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNBSRequest) Reset() {
	*x = RemoveNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNBSRequest) ProtoMessage() {}

func (x *RemoveNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNBSRequest.ProtoReflect.Descriptor instead.
func (*RemoveNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveNBSRequest) GetNbsId() int32 {
	if x != nil {
		return x.NbsId
	}
	return 0
}

type RemoveNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNBSResponse) Reset() {
	*x = RemoveNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNBSResponse) ProtoMessage() {}

func (x *RemoveNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNBSResponse.ProtoReflect.Descriptor instead.
func (*RemoveNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{25}
}

type GetNBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NbsId         int32                  `protobuf:"varint,1,opt,name=nbs_id,json=nbsId,proto3" json:"nbs_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNBSRequest) Reset() {
	*x = GetNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNBSRequest) ProtoMessage() {}

func (x *GetNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNBSRequest.ProtoReflect.Descriptor instead.
func (*GetNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetNBSRequest) GetNbsId() int32 {
	if x != nil {
		return x.NbsId
	}
	return 0
}

type GetNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nbs           *NBS                   `protobuf:"bytes,1,opt,name=nbs,proto3" json:"nbs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNBSResponse) Reset() {
	*x = GetNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNBSResponse) ProtoMessage() {}

func (x *GetNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNBSResponse.ProtoReflect.Descriptor instead.
func (*GetNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetNBSResponse) GetNbs() *NBS {
	if x != nil {
		return x.Nbs
	}
	return nil
}

type UpdateNBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nbs           *NBS                   `protobuf:"bytes,1,opt,name=nbs,proto3" json:"nbs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNBSRequest) Reset() {
	*x = UpdateNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNBSRequest) ProtoMessage() {}

func (x *UpdateNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNBSRequest.ProtoReflect.Descriptor instead.
func (*UpdateNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateNBSRequest) GetNbs() *NBS {
	if x != nil {
		return x.Nbs
	}
	return nil
}

type UpdateNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNBSResponse) Reset() {
	*x = UpdateNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNBSResponse) ProtoMessage() {}

func (x *UpdateNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNBSResponse.ProtoReflect.Descriptor instead.
func (*UpdateNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{29}
}

type ListNBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNBSRequest) Reset() {
	*x = ListNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNBSRequest) ProtoMessage() {}

func (x *ListNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNBSRequest.ProtoReflect.Descriptor instead.
func (*ListNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{30}
}

type ListNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NbsList       []*NBS                 `protobuf:"bytes,1,rep,name=nbs_list,json=nbsList,proto3" json:"nbs_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNBSResponse) Reset() {
	*x = ListNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNBSResponse) ProtoMessage() {}

func (x *ListNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNBSResponse.ProtoReflect.Descriptor instead.
func (*ListNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{31}
}

func (x *ListNBSResponse) GetNbsList() []*NBS {
	if x != nil {
		return x.NbsList
	}
	return nil
}

type DeltaUpdateNBSRequest struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	NbsId                    int32                  `protobuf:"varint,1,opt,name=nbs_id,json=nbsId,proto3" json:"nbs_id,omitempty"`
	DeltaNominalGdp          map[string]float32     `protobuf:"bytes,2,rep,name=delta_nominal_gdp,json=deltaNominalGdp,proto3" json:"delta_nominal_gdp,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaRealGdp             map[string]float32     `protobuf:"bytes,3,rep,name=delta_real_gdp,json=deltaRealGdp,proto3" json:"delta_real_gdp,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaUnemployment        map[string]float32     `protobuf:"bytes,4,rep,name=delta_unemployment,json=deltaUnemployment,proto3" json:"delta_unemployment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaWages               map[string]float32     `protobuf:"bytes,5,rep,name=delta_wages,json=deltaWages,proto3" json:"delta_wages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaPrices              map[string]float32     `protobuf:"bytes,6,rep,name=delta_prices,json=deltaPrices,proto3" json:"delta_prices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaWorkingHours        map[string]float32     `protobuf:"bytes,7,rep,name=delta_working_hours,json=deltaWorkingHours,proto3" json:"delta_working_hours,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaDepression          map[string]float32     `protobuf:"bytes,8,rep,name=delta_depression,json=deltaDepression,proto3" json:"delta_depression,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaConsumptionCurrency map[string]float32     `protobuf:"bytes,9,rep,name=delta_consumption_currency,json=deltaConsumptionCurrency,proto3" json:"delta_consumption_currency,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaIncomeCurrency      map[string]float32     `protobuf:"bytes,10,rep,name=delta_income_currency,json=deltaIncomeCurrency,proto3" json:"delta_income_currency,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaLocusControl        map[string]float32     `protobuf:"bytes,11,rep,name=delta_locus_control,json=deltaLocusControl,proto3" json:"delta_locus_control,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	DeltaCurrency            *float32               `protobuf:"fixed32,12,opt,name=delta_currency,json=deltaCurrency,proto3,oneof" json:"delta_currency,omitempty"`
	AddCitizens              []int32                `protobuf:"varint,13,rep,packed,name=add_citizens,json=addCitizens,proto3" json:"add_citizens,omitempty"`
	RemoveCitizens           []int32                `protobuf:"varint,14,rep,packed,name=remove_citizens,json=removeCitizens,proto3" json:"remove_citizens,omitempty"`
	AddCitizensAgentId       []int32                `protobuf:"varint,15,rep,packed,name=add_citizens_agent_id,json=addCitizensAgentId,proto3" json:"add_citizens_agent_id,omitempty"`
	RemoveCitizensAgentId    []int32                `protobuf:"varint,16,rep,packed,name=remove_citizens_agent_id,json=removeCitizensAgentId,proto3" json:"remove_citizens_agent_id,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DeltaUpdateNBSRequest) Reset() {
	*x = DeltaUpdateNBSRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateNBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateNBSRequest) ProtoMessage() {}

func (x *DeltaUpdateNBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateNBSRequest.ProtoReflect.Descriptor instead.
func (*DeltaUpdateNBSRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{32}
}

func (x *DeltaUpdateNBSRequest) GetNbsId() int32 {
	if x != nil {
		return x.NbsId
	}
	return 0
}

func (x *DeltaUpdateNBSRequest) GetDeltaNominalGdp() map[string]float32 {
	if x != nil {
		return x.DeltaNominalGdp
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaRealGdp() map[string]float32 {
	if x != nil {
		return x.DeltaRealGdp
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaUnemployment() map[string]float32 {
	if x != nil {
		return x.DeltaUnemployment
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaWages() map[string]float32 {
	if x != nil {
		return x.DeltaWages
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaPrices() map[string]float32 {
	if x != nil {
		return x.DeltaPrices
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaWorkingHours() map[string]float32 {
	if x != nil {
		return x.DeltaWorkingHours
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaDepression() map[string]float32 {
	if x != nil {
		return x.DeltaDepression
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaConsumptionCurrency() map[string]float32 {
	if x != nil {
		return x.DeltaConsumptionCurrency
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaIncomeCurrency() map[string]float32 {
	if x != nil {
		return x.DeltaIncomeCurrency
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaLocusControl() map[string]float32 {
	if x != nil {
		return x.DeltaLocusControl
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetDeltaCurrency() float32 {
	if x != nil && x.DeltaCurrency != nil {
		return *x.DeltaCurrency
	}
	return 0
}

func (x *DeltaUpdateNBSRequest) GetAddCitizens() []int32 {
	if x != nil {
		return x.AddCitizens
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetRemoveCitizens() []int32 {
	if x != nil {
		return x.RemoveCitizens
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetAddCitizensAgentId() []int32 {
	if x != nil {
		return x.AddCitizensAgentId
	}
	return nil
}

func (x *DeltaUpdateNBSRequest) GetRemoveCitizensAgentId() []int32 {
	if x != nil {
		return x.RemoveCitizensAgentId
	}
	return nil
}

type DeltaUpdateNBSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeltaUpdateNBSResponse) Reset() {
	*x = DeltaUpdateNBSResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateNBSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateNBSResponse) ProtoMessage() {}

func (x *DeltaUpdateNBSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateNBSResponse.ProtoReflect.Descriptor instead.
func (*DeltaUpdateNBSResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{33}
}

// Government 相关消息
type AddGovernmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Government    *Government            `protobuf:"bytes,1,opt,name=government,proto3" json:"government,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGovernmentRequest) Reset() {
	*x = AddGovernmentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGovernmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGovernmentRequest) ProtoMessage() {}

func (x *AddGovernmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGovernmentRequest.ProtoReflect.Descriptor instead.
func (*AddGovernmentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{34}
}

func (x *AddGovernmentRequest) GetGovernment() *Government {
	if x != nil {
		return x.Government
	}
	return nil
}

type AddGovernmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGovernmentResponse) Reset() {
	*x = AddGovernmentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGovernmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGovernmentResponse) ProtoMessage() {}

func (x *AddGovernmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGovernmentResponse.ProtoReflect.Descriptor instead.
func (*AddGovernmentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{35}
}

type RemoveGovernmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GovernmentId  int32                  `protobuf:"varint,1,opt,name=government_id,json=governmentId,proto3" json:"government_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveGovernmentRequest) Reset() {
	*x = RemoveGovernmentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGovernmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGovernmentRequest) ProtoMessage() {}

func (x *RemoveGovernmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGovernmentRequest.ProtoReflect.Descriptor instead.
func (*RemoveGovernmentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveGovernmentRequest) GetGovernmentId() int32 {
	if x != nil {
		return x.GovernmentId
	}
	return 0
}

type RemoveGovernmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveGovernmentResponse) Reset() {
	*x = RemoveGovernmentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGovernmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGovernmentResponse) ProtoMessage() {}

func (x *RemoveGovernmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGovernmentResponse.ProtoReflect.Descriptor instead.
func (*RemoveGovernmentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{37}
}

type GetGovernmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GovernmentId  int32                  `protobuf:"varint,1,opt,name=government_id,json=governmentId,proto3" json:"government_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGovernmentRequest) Reset() {
	*x = GetGovernmentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGovernmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGovernmentRequest) ProtoMessage() {}

func (x *GetGovernmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGovernmentRequest.ProtoReflect.Descriptor instead.
func (*GetGovernmentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetGovernmentRequest) GetGovernmentId() int32 {
	if x != nil {
		return x.GovernmentId
	}
	return 0
}

type GetGovernmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Government    *Government            `protobuf:"bytes,1,opt,name=government,proto3" json:"government,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGovernmentResponse) Reset() {
	*x = GetGovernmentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGovernmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGovernmentResponse) ProtoMessage() {}

func (x *GetGovernmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGovernmentResponse.ProtoReflect.Descriptor instead.
func (*GetGovernmentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetGovernmentResponse) GetGovernment() *Government {
	if x != nil {
		return x.Government
	}
	return nil
}

type UpdateGovernmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Government    *Government            `protobuf:"bytes,1,opt,name=government,proto3" json:"government,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGovernmentRequest) Reset() {
	*x = UpdateGovernmentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGovernmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGovernmentRequest) ProtoMessage() {}

func (x *UpdateGovernmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGovernmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateGovernmentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateGovernmentRequest) GetGovernment() *Government {
	if x != nil {
		return x.Government
	}
	return nil
}

type UpdateGovernmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGovernmentResponse) Reset() {
	*x = UpdateGovernmentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGovernmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGovernmentResponse) ProtoMessage() {}

func (x *UpdateGovernmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGovernmentResponse.ProtoReflect.Descriptor instead.
func (*UpdateGovernmentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{41}
}

type ListGovernmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGovernmentsRequest) Reset() {
	*x = ListGovernmentsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGovernmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGovernmentsRequest) ProtoMessage() {}

func (x *ListGovernmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGovernmentsRequest.ProtoReflect.Descriptor instead.
func (*ListGovernmentsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{42}
}

type ListGovernmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Governments   []*Government          `protobuf:"bytes,1,rep,name=governments,proto3" json:"governments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGovernmentsResponse) Reset() {
	*x = ListGovernmentsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGovernmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGovernmentsResponse) ProtoMessage() {}

func (x *ListGovernmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGovernmentsResponse.ProtoReflect.Descriptor instead.
func (*ListGovernmentsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{43}
}

func (x *ListGovernmentsResponse) GetGovernments() []*Government {
	if x != nil {
		return x.Governments
	}
	return nil
}

type DeltaUpdateGovernmentRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	GovernmentId        int32                  `protobuf:"varint,1,opt,name=government_id,json=governmentId,proto3" json:"government_id,omitempty"`
	DeltaBracketCutoffs []float32              `protobuf:"fixed32,2,rep,packed,name=delta_bracket_cutoffs,json=deltaBracketCutoffs,proto3" json:"delta_bracket_cutoffs,omitempty"`
	DeltaBracketRates   []float32              `protobuf:"fixed32,3,rep,packed,name=delta_bracket_rates,json=deltaBracketRates,proto3" json:"delta_bracket_rates,omitempty"`
	DeltaCurrency       *float32               `protobuf:"fixed32,4,opt,name=delta_currency,json=deltaCurrency,proto3,oneof" json:"delta_currency,omitempty"`
	AddCitizens         []int32                `protobuf:"varint,5,rep,packed,name=add_citizens,json=addCitizens,proto3" json:"add_citizens,omitempty"`
	RemoveCitizens      []int32                `protobuf:"varint,6,rep,packed,name=remove_citizens,json=removeCitizens,proto3" json:"remove_citizens,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeltaUpdateGovernmentRequest) Reset() {
	*x = DeltaUpdateGovernmentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateGovernmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateGovernmentRequest) ProtoMessage() {}

func (x *DeltaUpdateGovernmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateGovernmentRequest.ProtoReflect.Descriptor instead.
func (*DeltaUpdateGovernmentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{44}
}

func (x *DeltaUpdateGovernmentRequest) GetGovernmentId() int32 {
	if x != nil {
		return x.GovernmentId
	}
	return 0
}

func (x *DeltaUpdateGovernmentRequest) GetDeltaBracketCutoffs() []float32 {
	if x != nil {
		return x.DeltaBracketCutoffs
	}
	return nil
}

func (x *DeltaUpdateGovernmentRequest) GetDeltaBracketRates() []float32 {
	if x != nil {
		return x.DeltaBracketRates
	}
	return nil
}

func (x *DeltaUpdateGovernmentRequest) GetDeltaCurrency() float32 {
	if x != nil && x.DeltaCurrency != nil {
		return *x.DeltaCurrency
	}
	return 0
}

func (x *DeltaUpdateGovernmentRequest) GetAddCitizens() []int32 {
	if x != nil {
		return x.AddCitizens
	}
	return nil
}

func (x *DeltaUpdateGovernmentRequest) GetRemoveCitizens() []int32 {
	if x != nil {
		return x.RemoveCitizens
	}
	return nil
}

type DeltaUpdateGovernmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeltaUpdateGovernmentResponse) Reset() {
	*x = DeltaUpdateGovernmentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateGovernmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateGovernmentResponse) ProtoMessage() {}

func (x *DeltaUpdateGovernmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateGovernmentResponse.ProtoReflect.Descriptor instead.
func (*DeltaUpdateGovernmentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{45}
}

// Bank 相关消息
type AddBankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bank          *Bank                  `protobuf:"bytes,1,opt,name=bank,proto3" json:"bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBankRequest) Reset() {
	*x = AddBankRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBankRequest) ProtoMessage() {}

func (x *AddBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBankRequest.ProtoReflect.Descriptor instead.
func (*AddBankRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{46}
}

func (x *AddBankRequest) GetBank() *Bank {
	if x != nil {
		return x.Bank
	}
	return nil
}

type AddBankResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBankResponse) Reset() {
	*x = AddBankResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBankResponse) ProtoMessage() {}

func (x *AddBankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBankResponse.ProtoReflect.Descriptor instead.
func (*AddBankResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{47}
}

type RemoveBankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BankId        int32                  `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBankRequest) Reset() {
	*x = RemoveBankRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBankRequest) ProtoMessage() {}

func (x *RemoveBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBankRequest.ProtoReflect.Descriptor instead.
func (*RemoveBankRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{48}
}

func (x *RemoveBankRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

type RemoveBankResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBankResponse) Reset() {
	*x = RemoveBankResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBankResponse) ProtoMessage() {}

func (x *RemoveBankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBankResponse.ProtoReflect.Descriptor instead.
func (*RemoveBankResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{49}
}

type GetBankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BankId        int32                  `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBankRequest) Reset() {
	*x = GetBankRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankRequest) ProtoMessage() {}

func (x *GetBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankRequest.ProtoReflect.Descriptor instead.
func (*GetBankRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetBankRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

type GetBankResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bank          *Bank                  `protobuf:"bytes,1,opt,name=bank,proto3" json:"bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBankResponse) Reset() {
	*x = GetBankResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankResponse) ProtoMessage() {}

func (x *GetBankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankResponse.ProtoReflect.Descriptor instead.
func (*GetBankResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetBankResponse) GetBank() *Bank {
	if x != nil {
		return x.Bank
	}
	return nil
}

type UpdateBankRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bank          *Bank                  `protobuf:"bytes,1,opt,name=bank,proto3" json:"bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBankRequest) Reset() {
	*x = UpdateBankRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankRequest) ProtoMessage() {}

func (x *UpdateBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankRequest.ProtoReflect.Descriptor instead.
func (*UpdateBankRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateBankRequest) GetBank() *Bank {
	if x != nil {
		return x.Bank
	}
	return nil
}

type UpdateBankResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBankResponse) Reset() {
	*x = UpdateBankResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankResponse) ProtoMessage() {}

func (x *UpdateBankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankResponse.ProtoReflect.Descriptor instead.
func (*UpdateBankResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{53}
}

type ListBanksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBanksRequest) Reset() {
	*x = ListBanksRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBanksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBanksRequest) ProtoMessage() {}

func (x *ListBanksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBanksRequest.ProtoReflect.Descriptor instead.
func (*ListBanksRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{54}
}

type ListBanksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Banks         []*Bank                `protobuf:"bytes,1,rep,name=banks,proto3" json:"banks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBanksResponse) Reset() {
	*x = ListBanksResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBanksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBanksResponse) ProtoMessage() {}

func (x *ListBanksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBanksResponse.ProtoReflect.Descriptor instead.
func (*ListBanksResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{55}
}

func (x *ListBanksResponse) GetBanks() []*Bank {
	if x != nil {
		return x.Banks
	}
	return nil
}

type DeltaUpdateBankRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BankId            int32                  `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	DeltaInterestRate *float32               `protobuf:"fixed32,2,opt,name=delta_interest_rate,json=deltaInterestRate,proto3,oneof" json:"delta_interest_rate,omitempty"`
	DeltaCurrency     *float32               `protobuf:"fixed32,3,opt,name=delta_currency,json=deltaCurrency,proto3,oneof" json:"delta_currency,omitempty"`
	AddCitizens       []int32                `protobuf:"varint,4,rep,packed,name=add_citizens,json=addCitizens,proto3" json:"add_citizens,omitempty"`
	RemoveCitizens    []int32                `protobuf:"varint,5,rep,packed,name=remove_citizens,json=removeCitizens,proto3" json:"remove_citizens,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeltaUpdateBankRequest) Reset() {
	*x = DeltaUpdateBankRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateBankRequest) ProtoMessage() {}

func (x *DeltaUpdateBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateBankRequest.ProtoReflect.Descriptor instead.
func (*DeltaUpdateBankRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{56}
}

func (x *DeltaUpdateBankRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *DeltaUpdateBankRequest) GetDeltaInterestRate() float32 {
	if x != nil && x.DeltaInterestRate != nil {
		return *x.DeltaInterestRate
	}
	return 0
}

func (x *DeltaUpdateBankRequest) GetDeltaCurrency() float32 {
	if x != nil && x.DeltaCurrency != nil {
		return *x.DeltaCurrency
	}
	return 0
}

func (x *DeltaUpdateBankRequest) GetAddCitizens() []int32 {
	if x != nil {
		return x.AddCitizens
	}
	return nil
}

func (x *DeltaUpdateBankRequest) GetRemoveCitizens() []int32 {
	if x != nil {
		return x.RemoveCitizens
	}
	return nil
}

type DeltaUpdateBankResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeltaUpdateBankResponse) Reset() {
	*x = DeltaUpdateBankResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateBankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateBankResponse) ProtoMessage() {}

func (x *DeltaUpdateBankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateBankResponse.ProtoReflect.Descriptor instead.
func (*DeltaUpdateBankResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{57}
}

// Agent 相关消息
type AddAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentRequest) Reset() {
	*x = AddAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentRequest) ProtoMessage() {}

func (x *AddAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentRequest.ProtoReflect.Descriptor instead.
func (*AddAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{58}
}

func (x *AddAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type AddAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentResponse) Reset() {
	*x = AddAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentResponse) ProtoMessage() {}

func (x *AddAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentResponse.ProtoReflect.Descriptor instead.
func (*AddAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{59}
}

type RemoveAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       int32                  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentRequest) Reset() {
	*x = RemoveAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentRequest) ProtoMessage() {}

func (x *RemoveAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentRequest.ProtoReflect.Descriptor instead.
func (*RemoveAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{60}
}

func (x *RemoveAgentRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type RemoveAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentResponse) Reset() {
	*x = RemoveAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentResponse) ProtoMessage() {}

func (x *RemoveAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentResponse.ProtoReflect.Descriptor instead.
func (*RemoveAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{61}
}

type GetAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       int32                  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentRequest) Reset() {
	*x = GetAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentRequest) ProtoMessage() {}

func (x *GetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentRequest.ProtoReflect.Descriptor instead.
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{62}
}

func (x *GetAgentRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type GetAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentResponse) Reset() {
	*x = GetAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResponse) ProtoMessage() {}

func (x *GetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResponse.ProtoReflect.Descriptor instead.
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetAgentResponse) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAgentRequest) Reset() {
	*x = UpdateAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentRequest) ProtoMessage() {}

func (x *UpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAgentResponse) Reset() {
	*x = UpdateAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentResponse) ProtoMessage() {}

func (x *UpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*UpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{65}
}

type ListAgentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsRequest) Reset() {
	*x = ListAgentsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsRequest) ProtoMessage() {}

func (x *ListAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{66}
}

type ListAgentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agents        []*Agent               `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsResponse) Reset() {
	*x = ListAgentsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsResponse) ProtoMessage() {}

func (x *ListAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{67}
}

func (x *ListAgentsResponse) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type DeltaUpdateAgentRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AgentId          int32                  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeltaCurrency    *float32               `protobuf:"fixed32,2,opt,name=delta_currency,json=deltaCurrency,proto3,oneof" json:"delta_currency,omitempty"`
	NewFirmId        *int32                 `protobuf:"varint,3,opt,name=new_firm_id,json=newFirmId,proto3,oneof" json:"new_firm_id,omitempty"`
	DeltaSkill       *float32               `protobuf:"fixed32,4,opt,name=delta_skill,json=deltaSkill,proto3,oneof" json:"delta_skill,omitempty"`
	DeltaConsumption *float32               `protobuf:"fixed32,5,opt,name=delta_consumption,json=deltaConsumption,proto3,oneof" json:"delta_consumption,omitempty"`
	DeltaIncome      *float32               `protobuf:"fixed32,6,opt,name=delta_income,json=deltaIncome,proto3,oneof" json:"delta_income,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeltaUpdateAgentRequest) Reset() {
	*x = DeltaUpdateAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateAgentRequest) ProtoMessage() {}

func (x *DeltaUpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*DeltaUpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{68}
}

func (x *DeltaUpdateAgentRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *DeltaUpdateAgentRequest) GetDeltaCurrency() float32 {
	if x != nil && x.DeltaCurrency != nil {
		return *x.DeltaCurrency
	}
	return 0
}

func (x *DeltaUpdateAgentRequest) GetNewFirmId() int32 {
	if x != nil && x.NewFirmId != nil {
		return *x.NewFirmId
	}
	return 0
}

func (x *DeltaUpdateAgentRequest) GetDeltaSkill() float32 {
	if x != nil && x.DeltaSkill != nil {
		return *x.DeltaSkill
	}
	return 0
}

func (x *DeltaUpdateAgentRequest) GetDeltaConsumption() float32 {
	if x != nil && x.DeltaConsumption != nil {
		return *x.DeltaConsumption
	}
	return 0
}

func (x *DeltaUpdateAgentRequest) GetDeltaIncome() float32 {
	if x != nil && x.DeltaIncome != nil {
		return *x.DeltaIncome
	}
	return 0
}

type DeltaUpdateAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeltaUpdateAgentResponse) Reset() {
	*x = DeltaUpdateAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaUpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaUpdateAgentResponse) ProtoMessage() {}

func (x *DeltaUpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaUpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*DeltaUpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{69}
}

// Agent 批处理相关消息
type BatchAddAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agents        []*Agent               `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddAgentRequest) Reset() {
	*x = BatchAddAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddAgentRequest) ProtoMessage() {}

func (x *BatchAddAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddAgentRequest.ProtoReflect.Descriptor instead.
func (*BatchAddAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{70}
}

func (x *BatchAddAgentRequest) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type BatchAddAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentIds      []int32                `protobuf:"varint,1,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAddAgentResponse) Reset() {
	*x = BatchAddAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAddAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddAgentResponse) ProtoMessage() {}

func (x *BatchAddAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddAgentResponse.ProtoReflect.Descriptor instead.
func (*BatchAddAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{71}
}

func (x *BatchAddAgentResponse) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type BatchRemoveAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentIds      []int32                `protobuf:"varint,1,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRemoveAgentRequest) Reset() {
	*x = BatchRemoveAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRemoveAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRemoveAgentRequest) ProtoMessage() {}

func (x *BatchRemoveAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRemoveAgentRequest.ProtoReflect.Descriptor instead.
func (*BatchRemoveAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{72}
}

func (x *BatchRemoveAgentRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type BatchRemoveAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRemoveAgentResponse) Reset() {
	*x = BatchRemoveAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRemoveAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRemoveAgentResponse) ProtoMessage() {}

func (x *BatchRemoveAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRemoveAgentResponse.ProtoReflect.Descriptor instead.
func (*BatchRemoveAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{73}
}

type BatchGetAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentIds      []int32                `protobuf:"varint,1,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetAgentRequest) Reset() {
	*x = BatchGetAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAgentRequest) ProtoMessage() {}

func (x *BatchGetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAgentRequest.ProtoReflect.Descriptor instead.
func (*BatchGetAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{74}
}

func (x *BatchGetAgentRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type BatchGetAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agents        []*Agent               `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetAgentResponse) Reset() {
	*x = BatchGetAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAgentResponse) ProtoMessage() {}

func (x *BatchGetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAgentResponse.ProtoReflect.Descriptor instead.
func (*BatchGetAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{75}
}

func (x *BatchGetAgentResponse) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type BatchUpdateAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agents        []*Agent               `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateAgentRequest) Reset() {
	*x = BatchUpdateAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateAgentRequest) ProtoMessage() {}

func (x *BatchUpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{76}
}

func (x *BatchUpdateAgentRequest) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type BatchUpdateAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateAgentResponse) Reset() {
	*x = BatchUpdateAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateAgentResponse) ProtoMessage() {}

func (x *BatchUpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{77}
}

type BatchDeltaUpdateAgentRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Updates       []*DeltaUpdateAgentRequest `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeltaUpdateAgentRequest) Reset() {
	*x = BatchDeltaUpdateAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeltaUpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaUpdateAgentRequest) ProtoMessage() {}

func (x *BatchDeltaUpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaUpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*BatchDeltaUpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{78}
}

func (x *BatchDeltaUpdateAgentRequest) GetUpdates() []*DeltaUpdateAgentRequest {
	if x != nil {
		return x.Updates
	}
	return nil
}

type BatchDeltaUpdateAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeltaUpdateAgentResponse) Reset() {
	*x = BatchDeltaUpdateAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeltaUpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaUpdateAgentResponse) ProtoMessage() {}

func (x *BatchDeltaUpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaUpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*BatchDeltaUpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{79}
}

// 计算相关消息
type CalculateTaxesDueRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	GovernmentId         int32                  `protobuf:"varint,1,opt,name=government_id,json=governmentId,proto3" json:"government_id,omitempty"`
	AgentIds             []int32                `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	Incomes              []float32              `protobuf:"fixed32,3,rep,packed,name=incomes,proto3" json:"incomes,omitempty"`
	EnableRedistribution bool                   `protobuf:"varint,4,opt,name=enable_redistribution,json=enableRedistribution,proto3" json:"enable_redistribution,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CalculateTaxesDueRequest) Reset() {
	*x = CalculateTaxesDueRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateTaxesDueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxesDueRequest) ProtoMessage() {}

func (x *CalculateTaxesDueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxesDueRequest.ProtoReflect.Descriptor instead.
func (*CalculateTaxesDueRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{80}
}

func (x *CalculateTaxesDueRequest) GetGovernmentId() int32 {
	if x != nil {
		return x.GovernmentId
	}
	return 0
}

func (x *CalculateTaxesDueRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *CalculateTaxesDueRequest) GetIncomes() []float32 {
	if x != nil {
		return x.Incomes
	}
	return nil
}

func (x *CalculateTaxesDueRequest) GetEnableRedistribution() bool {
	if x != nil {
		return x.EnableRedistribution
	}
	return false
}

type CalculateTaxesDueResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaxesDue       float32                `protobuf:"fixed32,1,opt,name=taxes_due,json=taxesDue,proto3" json:"taxes_due,omitempty"`
	UpdatedIncomes []float32              `protobuf:"fixed32,2,rep,packed,name=updated_incomes,json=updatedIncomes,proto3" json:"updated_incomes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CalculateTaxesDueResponse) Reset() {
	*x = CalculateTaxesDueResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateTaxesDueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxesDueResponse) ProtoMessage() {}

func (x *CalculateTaxesDueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxesDueResponse.ProtoReflect.Descriptor instead.
func (*CalculateTaxesDueResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{81}
}

func (x *CalculateTaxesDueResponse) GetTaxesDue() float32 {
	if x != nil {
		return x.TaxesDue
	}
	return 0
}

func (x *CalculateTaxesDueResponse) GetUpdatedIncomes() []float32 {
	if x != nil {
		return x.UpdatedIncomes
	}
	return nil
}

type CalculateConsumptionRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	FirmIds                 []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	AgentId                 int32                  `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Demands                 []int32                `protobuf:"varint,3,rep,packed,name=demands,proto3" json:"demands,omitempty"`
	ConsumptionAccumulation *bool                  `protobuf:"varint,4,opt,name=consumption_accumulation,json=consumptionAccumulation,proto3,oneof" json:"consumption_accumulation,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CalculateConsumptionRequest) Reset() {
	*x = CalculateConsumptionRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateConsumptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateConsumptionRequest) ProtoMessage() {}

func (x *CalculateConsumptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateConsumptionRequest.ProtoReflect.Descriptor instead.
func (*CalculateConsumptionRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{82}
}

func (x *CalculateConsumptionRequest) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

func (x *CalculateConsumptionRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *CalculateConsumptionRequest) GetDemands() []int32 {
	if x != nil {
		return x.Demands
	}
	return nil
}

func (x *CalculateConsumptionRequest) GetConsumptionAccumulation() bool {
	if x != nil && x.ConsumptionAccumulation != nil {
		return *x.ConsumptionAccumulation
	}
	return false
}

type CalculateConsumptionResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActualConsumption float32                `protobuf:"fixed32,1,opt,name=actual_consumption,json=actualConsumption,proto3" json:"actual_consumption,omitempty"`
	Success           bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CalculateConsumptionResponse) Reset() {
	*x = CalculateConsumptionResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateConsumptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateConsumptionResponse) ProtoMessage() {}

func (x *CalculateConsumptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateConsumptionResponse.ProtoReflect.Descriptor instead.
func (*CalculateConsumptionResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{83}
}

func (x *CalculateConsumptionResponse) GetActualConsumption() float32 {
	if x != nil {
		return x.ActualConsumption
	}
	return 0
}

func (x *CalculateConsumptionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CalculateInterestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BankId        int32                  `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	AgentIds      []int32                `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateInterestRequest) Reset() {
	*x = CalculateInterestRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateInterestRequest) ProtoMessage() {}

func (x *CalculateInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateInterestRequest.ProtoReflect.Descriptor instead.
func (*CalculateInterestRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{84}
}

func (x *CalculateInterestRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *CalculateInterestRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type CalculateInterestResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalInterest     float32                `protobuf:"fixed32,1,opt,name=total_interest,json=totalInterest,proto3" json:"total_interest,omitempty"`
	UpdatedCurrencies []float32              `protobuf:"fixed32,2,rep,packed,name=updated_currencies,json=updatedCurrencies,proto3" json:"updated_currencies,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CalculateInterestResponse) Reset() {
	*x = CalculateInterestResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateInterestResponse) ProtoMessage() {}

func (x *CalculateInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateInterestResponse.ProtoReflect.Descriptor instead.
func (*CalculateInterestResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{85}
}

func (x *CalculateInterestResponse) GetTotalInterest() float32 {
	if x != nil {
		return x.TotalInterest
	}
	return 0
}

func (x *CalculateInterestResponse) GetUpdatedCurrencies() []float32 {
	if x != nil {
		return x.UpdatedCurrencies
	}
	return nil
}

type CalculateRealGDPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NbsId         int32                  `protobuf:"varint,1,opt,name=nbs_id,json=nbsId,proto3" json:"nbs_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateRealGDPRequest) Reset() {
	*x = CalculateRealGDPRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateRealGDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRealGDPRequest) ProtoMessage() {}

func (x *CalculateRealGDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRealGDPRequest.ProtoReflect.Descriptor instead.
func (*CalculateRealGDPRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{86}
}

func (x *CalculateRealGDPRequest) GetNbsId() int32 {
	if x != nil {
		return x.NbsId
	}
	return 0
}

type CalculateRealGDPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealGdp       float32                `protobuf:"fixed32,1,opt,name=real_gdp,json=realGdp,proto3" json:"real_gdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateRealGDPResponse) Reset() {
	*x = CalculateRealGDPResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateRealGDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRealGDPResponse) ProtoMessage() {}

func (x *CalculateRealGDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRealGDPResponse.ProtoReflect.Descriptor instead.
func (*CalculateRealGDPResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{87}
}

func (x *CalculateRealGDPResponse) GetRealGdp() float32 {
	if x != nil {
		return x.RealGdp
	}
	return 0
}

// 系统状态相关消息
type SaveEconomyEntitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveEconomyEntitiesRequest) Reset() {
	*x = SaveEconomyEntitiesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveEconomyEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEconomyEntitiesRequest) ProtoMessage() {}

func (x *SaveEconomyEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEconomyEntitiesRequest.ProtoReflect.Descriptor instead.
func (*SaveEconomyEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{88}
}

func (x *SaveEconomyEntitiesRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type SaveEconomyEntitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmIds       []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	NbsIds        []int32                `protobuf:"varint,2,rep,packed,name=nbs_ids,json=nbsIds,proto3" json:"nbs_ids,omitempty"`
	GovernmentIds []int32                `protobuf:"varint,3,rep,packed,name=government_ids,json=governmentIds,proto3" json:"government_ids,omitempty"`
	BankIds       []int32                `protobuf:"varint,4,rep,packed,name=bank_ids,json=bankIds,proto3" json:"bank_ids,omitempty"`
	AgentIds      []int32                `protobuf:"varint,5,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveEconomyEntitiesResponse) Reset() {
	*x = SaveEconomyEntitiesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveEconomyEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEconomyEntitiesResponse) ProtoMessage() {}

func (x *SaveEconomyEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEconomyEntitiesResponse.ProtoReflect.Descriptor instead.
func (*SaveEconomyEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{89}
}

func (x *SaveEconomyEntitiesResponse) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

func (x *SaveEconomyEntitiesResponse) GetNbsIds() []int32 {
	if x != nil {
		return x.NbsIds
	}
	return nil
}

func (x *SaveEconomyEntitiesResponse) GetGovernmentIds() []int32 {
	if x != nil {
		return x.GovernmentIds
	}
	return nil
}

func (x *SaveEconomyEntitiesResponse) GetBankIds() []int32 {
	if x != nil {
		return x.BankIds
	}
	return nil
}

func (x *SaveEconomyEntitiesResponse) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type LoadEconomyEntitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadEconomyEntitiesRequest) Reset() {
	*x = LoadEconomyEntitiesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadEconomyEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEconomyEntitiesRequest) ProtoMessage() {}

func (x *LoadEconomyEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEconomyEntitiesRequest.ProtoReflect.Descriptor instead.
func (*LoadEconomyEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{90}
}

func (x *LoadEconomyEntitiesRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type LoadEconomyEntitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirmIds       []int32                `protobuf:"varint,1,rep,packed,name=firm_ids,json=firmIds,proto3" json:"firm_ids,omitempty"`
	NbsIds        []int32                `protobuf:"varint,2,rep,packed,name=nbs_ids,json=nbsIds,proto3" json:"nbs_ids,omitempty"`
	GovernmentIds []int32                `protobuf:"varint,3,rep,packed,name=government_ids,json=governmentIds,proto3" json:"government_ids,omitempty"`
	BankIds       []int32                `protobuf:"varint,4,rep,packed,name=bank_ids,json=bankIds,proto3" json:"bank_ids,omitempty"`
	AgentIds      []int32                `protobuf:"varint,5,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadEconomyEntitiesResponse) Reset() {
	*x = LoadEconomyEntitiesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadEconomyEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEconomyEntitiesResponse) ProtoMessage() {}

func (x *LoadEconomyEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEconomyEntitiesResponse.ProtoReflect.Descriptor instead.
func (*LoadEconomyEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{91}
}

func (x *LoadEconomyEntitiesResponse) GetFirmIds() []int32 {
	if x != nil {
		return x.FirmIds
	}
	return nil
}

func (x *LoadEconomyEntitiesResponse) GetNbsIds() []int32 {
	if x != nil {
		return x.NbsIds
	}
	return nil
}

func (x *LoadEconomyEntitiesResponse) GetGovernmentIds() []int32 {
	if x != nil {
		return x.GovernmentIds
	}
	return nil
}

func (x *LoadEconomyEntitiesResponse) GetBankIds() []int32 {
	if x != nil {
		return x.BankIds
	}
	return nil
}

func (x *LoadEconomyEntitiesResponse) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

var File_city_economy_v2_org_service_proto protoreflect.FileDescriptor

var file_city_economy_v2_org_service_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x76,
	0x32, 0x2f, 0x6f, 0x72, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1d, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x72, 0x6d,
	0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x72, 0x6d, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x72, 0x6d,
	0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x72, 0x6d,
	0x22, 0x3e, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x72, 0x6d,
	0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x22, 0xa7, 0x03, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x42, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x05,
	0x66, 0x69, 0x72, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64,
	0x64, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x19, 0x0a,
	0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x14, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x22,
	0x45, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x69, 0x72,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x52,
	0x05, 0x66, 0x69, 0x72, 0x6d, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x60, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x6e, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x42, 0x53, 0x52, 0x03, 0x6e, 0x62, 0x73, 0x22, 0x10, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x62, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6e, 0x62, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x42, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6e, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x42, 0x53, 0x52, 0x03, 0x6e, 0x62, 0x73,
	0x22, 0x3a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x6e, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x42, 0x53, 0x52, 0x03, 0x6e, 0x62, 0x73, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6e, 0x62, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x42, 0x53, 0x52, 0x07,
	0x6e, 0x62, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x10, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x62, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x12, 0x67, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x67, 0x64, 0x70, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x64,
	0x70, 0x12, 0x5e, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f,
	0x67, 0x64, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x64,
	0x70, 0x12, 0x6c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x75, 0x6e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x6e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x77, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x57, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x57, 0x61, 0x67, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x44, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x1a,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x73, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x13, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x6d, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x6c,
	0x6f, 0x63, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0d,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x15,
	0x61, 0x64, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x61, 0x64, 0x64,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x57, 0x61, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x44, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a,
	0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x67,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3e, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x56, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a,
	0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x67,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x58, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x1c, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x13,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f,
	0x66, 0x66, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x62, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x1f,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x11, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2c, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0x3c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x3e, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x14, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x62,
	0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x52, 0x05, 0x62, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x89, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x13,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x0d, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x65,
	0x77, 0x46, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x02, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x10, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x46, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x36,
	0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x49, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x19, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x65, 0x73,
	0x5f, 0x64, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x61, 0x78, 0x65,
	0x73, 0x44, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x22, 0xca, 0x01,
	0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x3e, 0x0a,
	0x18, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x1c, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x62, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x67,
	0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x47, 0x64,
	0x70, 0x22, 0x39, 0x0a, 0x1a, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb0, 0x01, 0x0a,
	0x1b, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x66, 0x69, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x62, 0x73, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x49,
	0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x39, 0x0a, 0x1a, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb0, 0x01, 0x0a, 0x1b, 0x4c,
	0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69,
	0x72, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x62, 0x73, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x62, 0x73, 0x49, 0x64, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x32, 0xa8, 0x22,
	0x0a, 0x0a, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x1f, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x22, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x72, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x72,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x27, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x6d,
	0x12, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64,
	0x64, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d,
	0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x72, 0x6d, 0x12, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x72, 0x6d, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x2c,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x4e, 0x42, 0x53, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4e, 0x42, 0x53, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x42, 0x53, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e,
	0x42, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4e, 0x42, 0x53, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x42, 0x53, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x42, 0x53, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x42, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x42, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x12, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x42, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x42, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64,
	0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b,
	0x73, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x27, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73,
	0x44, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x12,
	0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x47,
	0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xbf, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x42, 0x0f, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x69, 0x62, 0x6c, 0x61, 0x62, 0x2e,
	0x6e, 0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76,
	0x32, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2f, 0x76, 0x32, 0x3b, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x76, 0x32, 0xa2, 0x02,
	0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x5c, 0x45, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1b, 0x43, 0x69, 0x74, 0x79, 0x5c,
	0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_city_economy_v2_org_service_proto_rawDescOnce sync.Once
	file_city_economy_v2_org_service_proto_rawDescData []byte
)

func file_city_economy_v2_org_service_proto_rawDescGZIP() []byte {
	file_city_economy_v2_org_service_proto_rawDescOnce.Do(func() {
		file_city_economy_v2_org_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_economy_v2_org_service_proto_rawDesc), len(file_city_economy_v2_org_service_proto_rawDesc)))
	})
	return file_city_economy_v2_org_service_proto_rawDescData
}

var file_city_economy_v2_org_service_proto_msgTypes = make([]protoimpl.MessageInfo, 102)
var file_city_economy_v2_org_service_proto_goTypes = []any{
	(*AddFirmRequest)(nil),                // 0: city.economy.v2.AddFirmRequest
	(*AddFirmResponse)(nil),               // 1: city.economy.v2.AddFirmResponse
	(*RemoveFirmRequest)(nil),             // 2: city.economy.v2.RemoveFirmRequest
	(*RemoveFirmResponse)(nil),            // 3: city.economy.v2.RemoveFirmResponse
	(*GetFirmRequest)(nil),                // 4: city.economy.v2.GetFirmRequest
	(*GetFirmResponse)(nil),               // 5: city.economy.v2.GetFirmResponse
	(*UpdateFirmRequest)(nil),             // 6: city.economy.v2.UpdateFirmRequest
	(*UpdateFirmResponse)(nil),            // 7: city.economy.v2.UpdateFirmResponse
	(*ListFirmsRequest)(nil),              // 8: city.economy.v2.ListFirmsRequest
	(*ListFirmsResponse)(nil),             // 9: city.economy.v2.ListFirmsResponse
	(*DeltaUpdateFirmRequest)(nil),        // 10: city.economy.v2.DeltaUpdateFirmRequest
	(*DeltaUpdateFirmResponse)(nil),       // 11: city.economy.v2.DeltaUpdateFirmResponse
	(*BatchAddFirmRequest)(nil),           // 12: city.economy.v2.BatchAddFirmRequest
	(*BatchAddFirmResponse)(nil),          // 13: city.economy.v2.BatchAddFirmResponse
	(*BatchRemoveFirmRequest)(nil),        // 14: city.economy.v2.BatchRemoveFirmRequest
	(*BatchRemoveFirmResponse)(nil),       // 15: city.economy.v2.BatchRemoveFirmResponse
	(*BatchGetFirmRequest)(nil),           // 16: city.economy.v2.BatchGetFirmRequest
	(*BatchGetFirmResponse)(nil),          // 17: city.economy.v2.BatchGetFirmResponse
	(*BatchUpdateFirmRequest)(nil),        // 18: city.economy.v2.BatchUpdateFirmRequest
	(*BatchUpdateFirmResponse)(nil),       // 19: city.economy.v2.BatchUpdateFirmResponse
	(*BatchDeltaUpdateFirmRequest)(nil),   // 20: city.economy.v2.BatchDeltaUpdateFirmRequest
	(*BatchDeltaUpdateFirmResponse)(nil),  // 21: city.economy.v2.BatchDeltaUpdateFirmResponse
	(*AddNBSRequest)(nil),                 // 22: city.economy.v2.AddNBSRequest
	(*AddNBSResponse)(nil),                // 23: city.economy.v2.AddNBSResponse
	(*RemoveNBSRequest)(nil),              // 24: city.economy.v2.RemoveNBSRequest
	(*RemoveNBSResponse)(nil),             // 25: city.economy.v2.RemoveNBSResponse
	(*GetNBSRequest)(nil),                 // 26: city.economy.v2.GetNBSRequest
	(*GetNBSResponse)(nil),                // 27: city.economy.v2.GetNBSResponse
	(*UpdateNBSRequest)(nil),              // 28: city.economy.v2.UpdateNBSRequest
	(*UpdateNBSResponse)(nil),             // 29: city.economy.v2.UpdateNBSResponse
	(*ListNBSRequest)(nil),                // 30: city.economy.v2.ListNBSRequest
	(*ListNBSResponse)(nil),               // 31: city.economy.v2.ListNBSResponse
	(*DeltaUpdateNBSRequest)(nil),         // 32: city.economy.v2.DeltaUpdateNBSRequest
	(*DeltaUpdateNBSResponse)(nil),        // 33: city.economy.v2.DeltaUpdateNBSResponse
	(*AddGovernmentRequest)(nil),          // 34: city.economy.v2.AddGovernmentRequest
	(*AddGovernmentResponse)(nil),         // 35: city.economy.v2.AddGovernmentResponse
	(*RemoveGovernmentRequest)(nil),       // 36: city.economy.v2.RemoveGovernmentRequest
	(*RemoveGovernmentResponse)(nil),      // 37: city.economy.v2.RemoveGovernmentResponse
	(*GetGovernmentRequest)(nil),          // 38: city.economy.v2.GetGovernmentRequest
	(*GetGovernmentResponse)(nil),         // 39: city.economy.v2.GetGovernmentResponse
	(*UpdateGovernmentRequest)(nil),       // 40: city.economy.v2.UpdateGovernmentRequest
	(*UpdateGovernmentResponse)(nil),      // 41: city.economy.v2.UpdateGovernmentResponse
	(*ListGovernmentsRequest)(nil),        // 42: city.economy.v2.ListGovernmentsRequest
	(*ListGovernmentsResponse)(nil),       // 43: city.economy.v2.ListGovernmentsResponse
	(*DeltaUpdateGovernmentRequest)(nil),  // 44: city.economy.v2.DeltaUpdateGovernmentRequest
	(*DeltaUpdateGovernmentResponse)(nil), // 45: city.economy.v2.DeltaUpdateGovernmentResponse
	(*AddBankRequest)(nil),                // 46: city.economy.v2.AddBankRequest
	(*AddBankResponse)(nil),               // 47: city.economy.v2.AddBankResponse
	(*RemoveBankRequest)(nil),             // 48: city.economy.v2.RemoveBankRequest
	(*RemoveBankResponse)(nil),            // 49: city.economy.v2.RemoveBankResponse
	(*GetBankRequest)(nil),                // 50: city.economy.v2.GetBankRequest
	(*GetBankResponse)(nil),               // 51: city.economy.v2.GetBankResponse
	(*UpdateBankRequest)(nil),             // 52: city.economy.v2.UpdateBankRequest
	(*UpdateBankResponse)(nil),            // 53: city.economy.v2.UpdateBankResponse
	(*ListBanksRequest)(nil),              // 54: city.economy.v2.ListBanksRequest
	(*ListBanksResponse)(nil),             // 55: city.economy.v2.ListBanksResponse
	(*DeltaUpdateBankRequest)(nil),        // 56: city.economy.v2.DeltaUpdateBankRequest
	(*DeltaUpdateBankResponse)(nil),       // 57: city.economy.v2.DeltaUpdateBankResponse
	(*AddAgentRequest)(nil),               // 58: city.economy.v2.AddAgentRequest
	(*AddAgentResponse)(nil),              // 59: city.economy.v2.AddAgentResponse
	(*RemoveAgentRequest)(nil),            // 60: city.economy.v2.RemoveAgentRequest
	(*RemoveAgentResponse)(nil),           // 61: city.economy.v2.RemoveAgentResponse
	(*GetAgentRequest)(nil),               // 62: city.economy.v2.GetAgentRequest
	(*GetAgentResponse)(nil),              // 63: city.economy.v2.GetAgentResponse
	(*UpdateAgentRequest)(nil),            // 64: city.economy.v2.UpdateAgentRequest
	(*UpdateAgentResponse)(nil),           // 65: city.economy.v2.UpdateAgentResponse
	(*ListAgentsRequest)(nil),             // 66: city.economy.v2.ListAgentsRequest
	(*ListAgentsResponse)(nil),            // 67: city.economy.v2.ListAgentsResponse
	(*DeltaUpdateAgentRequest)(nil),       // 68: city.economy.v2.DeltaUpdateAgentRequest
	(*DeltaUpdateAgentResponse)(nil),      // 69: city.economy.v2.DeltaUpdateAgentResponse
	(*BatchAddAgentRequest)(nil),          // 70: city.economy.v2.BatchAddAgentRequest
	(*BatchAddAgentResponse)(nil),         // 71: city.economy.v2.BatchAddAgentResponse
	(*BatchRemoveAgentRequest)(nil),       // 72: city.economy.v2.BatchRemoveAgentRequest
	(*BatchRemoveAgentResponse)(nil),      // 73: city.economy.v2.BatchRemoveAgentResponse
	(*BatchGetAgentRequest)(nil),          // 74: city.economy.v2.BatchGetAgentRequest
	(*BatchGetAgentResponse)(nil),         // 75: city.economy.v2.BatchGetAgentResponse
	(*BatchUpdateAgentRequest)(nil),       // 76: city.economy.v2.BatchUpdateAgentRequest
	(*BatchUpdateAgentResponse)(nil),      // 77: city.economy.v2.BatchUpdateAgentResponse
	(*BatchDeltaUpdateAgentRequest)(nil),  // 78: city.economy.v2.BatchDeltaUpdateAgentRequest
	(*BatchDeltaUpdateAgentResponse)(nil), // 79: city.economy.v2.BatchDeltaUpdateAgentResponse
	(*CalculateTaxesDueRequest)(nil),      // 80: city.economy.v2.CalculateTaxesDueRequest
	(*CalculateTaxesDueResponse)(nil),     // 81: city.economy.v2.CalculateTaxesDueResponse
	(*CalculateConsumptionRequest)(nil),   // 82: city.economy.v2.CalculateConsumptionRequest
	(*CalculateConsumptionResponse)(nil),  // 83: city.economy.v2.CalculateConsumptionResponse
	(*CalculateInterestRequest)(nil),      // 84: city.economy.v2.CalculateInterestRequest
	(*CalculateInterestResponse)(nil),     // 85: city.economy.v2.CalculateInterestResponse
	(*CalculateRealGDPRequest)(nil),       // 86: city.economy.v2.CalculateRealGDPRequest
	(*CalculateRealGDPResponse)(nil),      // 87: city.economy.v2.CalculateRealGDPResponse
	(*SaveEconomyEntitiesRequest)(nil),    // 88: city.economy.v2.SaveEconomyEntitiesRequest
	(*SaveEconomyEntitiesResponse)(nil),   // 89: city.economy.v2.SaveEconomyEntitiesResponse
	(*LoadEconomyEntitiesRequest)(nil),    // 90: city.economy.v2.LoadEconomyEntitiesRequest
	(*LoadEconomyEntitiesResponse)(nil),   // 91: city.economy.v2.LoadEconomyEntitiesResponse
	nil,                                   // 92: city.economy.v2.DeltaUpdateNBSRequest.DeltaNominalGdpEntry
	nil,                                   // 93: city.economy.v2.DeltaUpdateNBSRequest.DeltaRealGdpEntry
	nil,                                   // 94: city.economy.v2.DeltaUpdateNBSRequest.DeltaUnemploymentEntry
	nil,                                   // 95: city.economy.v2.DeltaUpdateNBSRequest.DeltaWagesEntry
	nil,                                   // 96: city.economy.v2.DeltaUpdateNBSRequest.DeltaPricesEntry
	nil,                                   // 97: city.economy.v2.DeltaUpdateNBSRequest.DeltaWorkingHoursEntry
	nil,                                   // 98: city.economy.v2.DeltaUpdateNBSRequest.DeltaDepressionEntry
	nil,                                   // 99: city.economy.v2.DeltaUpdateNBSRequest.DeltaConsumptionCurrencyEntry
	nil,                                   // 100: city.economy.v2.DeltaUpdateNBSRequest.DeltaIncomeCurrencyEntry
	nil,                                   // 101: city.economy.v2.DeltaUpdateNBSRequest.DeltaLocusControlEntry
	(*Firm)(nil),                          // 102: city.economy.v2.Firm
	(*NBS)(nil),                           // 103: city.economy.v2.NBS
	(*Government)(nil),                    // 104: city.economy.v2.Government
	(*Bank)(nil),                          // 105: city.economy.v2.Bank
	(*Agent)(nil),                         // 106: city.economy.v2.Agent
}
var file_city_economy_v2_org_service_proto_depIdxs = []int32{
	102, // 0: city.economy.v2.AddFirmRequest.firm:type_name -> city.economy.v2.Firm
	102, // 1: city.economy.v2.GetFirmResponse.firm:type_name -> city.economy.v2.Firm
	102, // 2: city.economy.v2.UpdateFirmRequest.firm:type_name -> city.economy.v2.Firm
	102, // 3: city.economy.v2.ListFirmsResponse.firms:type_name -> city.economy.v2.Firm
	102, // 4: city.economy.v2.BatchAddFirmRequest.firms:type_name -> city.economy.v2.Firm
	102, // 5: city.economy.v2.BatchGetFirmResponse.firms:type_name -> city.economy.v2.Firm
	102, // 6: city.economy.v2.BatchUpdateFirmRequest.firms:type_name -> city.economy.v2.Firm
	10,  // 7: city.economy.v2.BatchDeltaUpdateFirmRequest.updates:type_name -> city.economy.v2.DeltaUpdateFirmRequest
	103, // 8: city.economy.v2.AddNBSRequest.nbs:type_name -> city.economy.v2.NBS
	103, // 9: city.economy.v2.GetNBSResponse.nbs:type_name -> city.economy.v2.NBS
	103, // 10: city.economy.v2.UpdateNBSRequest.nbs:type_name -> city.economy.v2.NBS
	103, // 11: city.economy.v2.ListNBSResponse.nbs_list:type_name -> city.economy.v2.NBS
	92,  // 12: city.economy.v2.DeltaUpdateNBSRequest.delta_nominal_gdp:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaNominalGdpEntry
	93,  // 13: city.economy.v2.DeltaUpdateNBSRequest.delta_real_gdp:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaRealGdpEntry
	94,  // 14: city.economy.v2.DeltaUpdateNBSRequest.delta_unemployment:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaUnemploymentEntry
	95,  // 15: city.economy.v2.DeltaUpdateNBSRequest.delta_wages:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaWagesEntry
	96,  // 16: city.economy.v2.DeltaUpdateNBSRequest.delta_prices:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaPricesEntry
	97,  // 17: city.economy.v2.DeltaUpdateNBSRequest.delta_working_hours:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaWorkingHoursEntry
	98,  // 18: city.economy.v2.DeltaUpdateNBSRequest.delta_depression:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaDepressionEntry
	99,  // 19: city.economy.v2.DeltaUpdateNBSRequest.delta_consumption_currency:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaConsumptionCurrencyEntry
	100, // 20: city.economy.v2.DeltaUpdateNBSRequest.delta_income_currency:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaIncomeCurrencyEntry
	101, // 21: city.economy.v2.DeltaUpdateNBSRequest.delta_locus_control:type_name -> city.economy.v2.DeltaUpdateNBSRequest.DeltaLocusControlEntry
	104, // 22: city.economy.v2.AddGovernmentRequest.government:type_name -> city.economy.v2.Government
	104, // 23: city.economy.v2.GetGovernmentResponse.government:type_name -> city.economy.v2.Government
	104, // 24: city.economy.v2.UpdateGovernmentRequest.government:type_name -> city.economy.v2.Government
	104, // 25: city.economy.v2.ListGovernmentsResponse.governments:type_name -> city.economy.v2.Government
	105, // 26: city.economy.v2.AddBankRequest.bank:type_name -> city.economy.v2.Bank
	105, // 27: city.economy.v2.GetBankResponse.bank:type_name -> city.economy.v2.Bank
	105, // 28: city.economy.v2.UpdateBankRequest.bank:type_name -> city.economy.v2.Bank
	105, // 29: city.economy.v2.ListBanksResponse.banks:type_name -> city.economy.v2.Bank
	106, // 30: city.economy.v2.AddAgentRequest.agent:type_name -> city.economy.v2.Agent
	106, // 31: city.economy.v2.GetAgentResponse.agent:type_name -> city.economy.v2.Agent
	106, // 32: city.economy.v2.UpdateAgentRequest.agent:type_name -> city.economy.v2.Agent
	106, // 33: city.economy.v2.ListAgentsResponse.agents:type_name -> city.economy.v2.Agent
	106, // 34: city.economy.v2.BatchAddAgentRequest.agents:type_name -> city.economy.v2.Agent
	106, // 35: city.economy.v2.BatchGetAgentResponse.agents:type_name -> city.economy.v2.Agent
	106, // 36: city.economy.v2.BatchUpdateAgentRequest.agents:type_name -> city.economy.v2.Agent
	68,  // 37: city.economy.v2.BatchDeltaUpdateAgentRequest.updates:type_name -> city.economy.v2.DeltaUpdateAgentRequest
	0,   // 38: city.economy.v2.OrgService.AddFirm:input_type -> city.economy.v2.AddFirmRequest
	2,   // 39: city.economy.v2.OrgService.RemoveFirm:input_type -> city.economy.v2.RemoveFirmRequest
	4,   // 40: city.economy.v2.OrgService.GetFirm:input_type -> city.economy.v2.GetFirmRequest
	6,   // 41: city.economy.v2.OrgService.UpdateFirm:input_type -> city.economy.v2.UpdateFirmRequest
	8,   // 42: city.economy.v2.OrgService.ListFirms:input_type -> city.economy.v2.ListFirmsRequest
	10,  // 43: city.economy.v2.OrgService.DeltaUpdateFirm:input_type -> city.economy.v2.DeltaUpdateFirmRequest
	12,  // 44: city.economy.v2.OrgService.BatchAddFirm:input_type -> city.economy.v2.BatchAddFirmRequest
	14,  // 45: city.economy.v2.OrgService.BatchRemoveFirm:input_type -> city.economy.v2.BatchRemoveFirmRequest
	16,  // 46: city.economy.v2.OrgService.BatchGetFirm:input_type -> city.economy.v2.BatchGetFirmRequest
	18,  // 47: city.economy.v2.OrgService.BatchUpdateFirm:input_type -> city.economy.v2.BatchUpdateFirmRequest
	20,  // 48: city.economy.v2.OrgService.BatchDeltaUpdateFirm:input_type -> city.economy.v2.BatchDeltaUpdateFirmRequest
	22,  // 49: city.economy.v2.OrgService.AddNBS:input_type -> city.economy.v2.AddNBSRequest
	24,  // 50: city.economy.v2.OrgService.RemoveNBS:input_type -> city.economy.v2.RemoveNBSRequest
	26,  // 51: city.economy.v2.OrgService.GetNBS:input_type -> city.economy.v2.GetNBSRequest
	28,  // 52: city.economy.v2.OrgService.UpdateNBS:input_type -> city.economy.v2.UpdateNBSRequest
	30,  // 53: city.economy.v2.OrgService.ListNBS:input_type -> city.economy.v2.ListNBSRequest
	32,  // 54: city.economy.v2.OrgService.DeltaUpdateNBS:input_type -> city.economy.v2.DeltaUpdateNBSRequest
	34,  // 55: city.economy.v2.OrgService.AddGovernment:input_type -> city.economy.v2.AddGovernmentRequest
	36,  // 56: city.economy.v2.OrgService.RemoveGovernment:input_type -> city.economy.v2.RemoveGovernmentRequest
	38,  // 57: city.economy.v2.OrgService.GetGovernment:input_type -> city.economy.v2.GetGovernmentRequest
	40,  // 58: city.economy.v2.OrgService.UpdateGovernment:input_type -> city.economy.v2.UpdateGovernmentRequest
	42,  // 59: city.economy.v2.OrgService.ListGovernments:input_type -> city.economy.v2.ListGovernmentsRequest
	44,  // 60: city.economy.v2.OrgService.DeltaUpdateGovernment:input_type -> city.economy.v2.DeltaUpdateGovernmentRequest
	46,  // 61: city.economy.v2.OrgService.AddBank:input_type -> city.economy.v2.AddBankRequest
	48,  // 62: city.economy.v2.OrgService.RemoveBank:input_type -> city.economy.v2.RemoveBankRequest
	50,  // 63: city.economy.v2.OrgService.GetBank:input_type -> city.economy.v2.GetBankRequest
	52,  // 64: city.economy.v2.OrgService.UpdateBank:input_type -> city.economy.v2.UpdateBankRequest
	54,  // 65: city.economy.v2.OrgService.ListBanks:input_type -> city.economy.v2.ListBanksRequest
	56,  // 66: city.economy.v2.OrgService.DeltaUpdateBank:input_type -> city.economy.v2.DeltaUpdateBankRequest
	58,  // 67: city.economy.v2.OrgService.AddAgent:input_type -> city.economy.v2.AddAgentRequest
	60,  // 68: city.economy.v2.OrgService.RemoveAgent:input_type -> city.economy.v2.RemoveAgentRequest
	62,  // 69: city.economy.v2.OrgService.GetAgent:input_type -> city.economy.v2.GetAgentRequest
	64,  // 70: city.economy.v2.OrgService.UpdateAgent:input_type -> city.economy.v2.UpdateAgentRequest
	66,  // 71: city.economy.v2.OrgService.ListAgents:input_type -> city.economy.v2.ListAgentsRequest
	68,  // 72: city.economy.v2.OrgService.DeltaUpdateAgent:input_type -> city.economy.v2.DeltaUpdateAgentRequest
	70,  // 73: city.economy.v2.OrgService.BatchAddAgent:input_type -> city.economy.v2.BatchAddAgentRequest
	72,  // 74: city.economy.v2.OrgService.BatchRemoveAgent:input_type -> city.economy.v2.BatchRemoveAgentRequest
	74,  // 75: city.economy.v2.OrgService.BatchGetAgent:input_type -> city.economy.v2.BatchGetAgentRequest
	76,  // 76: city.economy.v2.OrgService.BatchUpdateAgent:input_type -> city.economy.v2.BatchUpdateAgentRequest
	78,  // 77: city.economy.v2.OrgService.BatchDeltaUpdateAgent:input_type -> city.economy.v2.BatchDeltaUpdateAgentRequest
	80,  // 78: city.economy.v2.OrgService.CalculateTaxesDue:input_type -> city.economy.v2.CalculateTaxesDueRequest
	82,  // 79: city.economy.v2.OrgService.CalculateConsumption:input_type -> city.economy.v2.CalculateConsumptionRequest
	84,  // 80: city.economy.v2.OrgService.CalculateInterest:input_type -> city.economy.v2.CalculateInterestRequest
	86,  // 81: city.economy.v2.OrgService.CalculateRealGDP:input_type -> city.economy.v2.CalculateRealGDPRequest
	88,  // 82: city.economy.v2.OrgService.SaveEconomyEntities:input_type -> city.economy.v2.SaveEconomyEntitiesRequest
	90,  // 83: city.economy.v2.OrgService.LoadEconomyEntities:input_type -> city.economy.v2.LoadEconomyEntitiesRequest
	1,   // 84: city.economy.v2.OrgService.AddFirm:output_type -> city.economy.v2.AddFirmResponse
	3,   // 85: city.economy.v2.OrgService.RemoveFirm:output_type -> city.economy.v2.RemoveFirmResponse
	5,   // 86: city.economy.v2.OrgService.GetFirm:output_type -> city.economy.v2.GetFirmResponse
	7,   // 87: city.economy.v2.OrgService.UpdateFirm:output_type -> city.economy.v2.UpdateFirmResponse
	9,   // 88: city.economy.v2.OrgService.ListFirms:output_type -> city.economy.v2.ListFirmsResponse
	11,  // 89: city.economy.v2.OrgService.DeltaUpdateFirm:output_type -> city.economy.v2.DeltaUpdateFirmResponse
	13,  // 90: city.economy.v2.OrgService.BatchAddFirm:output_type -> city.economy.v2.BatchAddFirmResponse
	15,  // 91: city.economy.v2.OrgService.BatchRemoveFirm:output_type -> city.economy.v2.BatchRemoveFirmResponse
	17,  // 92: city.economy.v2.OrgService.BatchGetFirm:output_type -> city.economy.v2.BatchGetFirmResponse
	19,  // 93: city.economy.v2.OrgService.BatchUpdateFirm:output_type -> city.economy.v2.BatchUpdateFirmResponse
	21,  // 94: city.economy.v2.OrgService.BatchDeltaUpdateFirm:output_type -> city.economy.v2.BatchDeltaUpdateFirmResponse
	23,  // 95: city.economy.v2.OrgService.AddNBS:output_type -> city.economy.v2.AddNBSResponse
	25,  // 96: city.economy.v2.OrgService.RemoveNBS:output_type -> city.economy.v2.RemoveNBSResponse
	27,  // 97: city.economy.v2.OrgService.GetNBS:output_type -> city.economy.v2.GetNBSResponse
	29,  // 98: city.economy.v2.OrgService.UpdateNBS:output_type -> city.economy.v2.UpdateNBSResponse
	31,  // 99: city.economy.v2.OrgService.ListNBS:output_type -> city.economy.v2.ListNBSResponse
	33,  // 100: city.economy.v2.OrgService.DeltaUpdateNBS:output_type -> city.economy.v2.DeltaUpdateNBSResponse
	35,  // 101: city.economy.v2.OrgService.AddGovernment:output_type -> city.economy.v2.AddGovernmentResponse
	37,  // 102: city.economy.v2.OrgService.RemoveGovernment:output_type -> city.economy.v2.RemoveGovernmentResponse
	39,  // 103: city.economy.v2.OrgService.GetGovernment:output_type -> city.economy.v2.GetGovernmentResponse
	41,  // 104: city.economy.v2.OrgService.UpdateGovernment:output_type -> city.economy.v2.UpdateGovernmentResponse
	43,  // 105: city.economy.v2.OrgService.ListGovernments:output_type -> city.economy.v2.ListGovernmentsResponse
	45,  // 106: city.economy.v2.OrgService.DeltaUpdateGovernment:output_type -> city.economy.v2.DeltaUpdateGovernmentResponse
	47,  // 107: city.economy.v2.OrgService.AddBank:output_type -> city.economy.v2.AddBankResponse
	49,  // 108: city.economy.v2.OrgService.RemoveBank:output_type -> city.economy.v2.RemoveBankResponse
	51,  // 109: city.economy.v2.OrgService.GetBank:output_type -> city.economy.v2.GetBankResponse
	53,  // 110: city.economy.v2.OrgService.UpdateBank:output_type -> city.economy.v2.UpdateBankResponse
	55,  // 111: city.economy.v2.OrgService.ListBanks:output_type -> city.economy.v2.ListBanksResponse
	57,  // 112: city.economy.v2.OrgService.DeltaUpdateBank:output_type -> city.economy.v2.DeltaUpdateBankResponse
	59,  // 113: city.economy.v2.OrgService.AddAgent:output_type -> city.economy.v2.AddAgentResponse
	61,  // 114: city.economy.v2.OrgService.RemoveAgent:output_type -> city.economy.v2.RemoveAgentResponse
	63,  // 115: city.economy.v2.OrgService.GetAgent:output_type -> city.economy.v2.GetAgentResponse
	65,  // 116: city.economy.v2.OrgService.UpdateAgent:output_type -> city.economy.v2.UpdateAgentResponse
	67,  // 117: city.economy.v2.OrgService.ListAgents:output_type -> city.economy.v2.ListAgentsResponse
	69,  // 118: city.economy.v2.OrgService.DeltaUpdateAgent:output_type -> city.economy.v2.DeltaUpdateAgentResponse
	71,  // 119: city.economy.v2.OrgService.BatchAddAgent:output_type -> city.economy.v2.BatchAddAgentResponse
	73,  // 120: city.economy.v2.OrgService.BatchRemoveAgent:output_type -> city.economy.v2.BatchRemoveAgentResponse
	75,  // 121: city.economy.v2.OrgService.BatchGetAgent:output_type -> city.economy.v2.BatchGetAgentResponse
	77,  // 122: city.economy.v2.OrgService.BatchUpdateAgent:output_type -> city.economy.v2.BatchUpdateAgentResponse
	79,  // 123: city.economy.v2.OrgService.BatchDeltaUpdateAgent:output_type -> city.economy.v2.BatchDeltaUpdateAgentResponse
	81,  // 124: city.economy.v2.OrgService.CalculateTaxesDue:output_type -> city.economy.v2.CalculateTaxesDueResponse
	83,  // 125: city.economy.v2.OrgService.CalculateConsumption:output_type -> city.economy.v2.CalculateConsumptionResponse
	85,  // 126: city.economy.v2.OrgService.CalculateInterest:output_type -> city.economy.v2.CalculateInterestResponse
	87,  // 127: city.economy.v2.OrgService.CalculateRealGDP:output_type -> city.economy.v2.CalculateRealGDPResponse
	89,  // 128: city.economy.v2.OrgService.SaveEconomyEntities:output_type -> city.economy.v2.SaveEconomyEntitiesResponse
	91,  // 129: city.economy.v2.OrgService.LoadEconomyEntities:output_type -> city.economy.v2.LoadEconomyEntitiesResponse
	84,  // [84:130] is the sub-list for method output_type
	38,  // [38:84] is the sub-list for method input_type
	38,  // [38:38] is the sub-list for extension type_name
	38,  // [38:38] is the sub-list for extension extendee
	0,   // [0:38] is the sub-list for field type_name
}

func init() { file_city_economy_v2_org_service_proto_init() }
func file_city_economy_v2_org_service_proto_init() {
	if File_city_economy_v2_org_service_proto != nil {
		return
	}
	file_city_economy_v2_economy_proto_init()
	file_city_economy_v2_org_service_proto_msgTypes[10].OneofWrappers = []any{}
	file_city_economy_v2_org_service_proto_msgTypes[32].OneofWrappers = []any{}
	file_city_economy_v2_org_service_proto_msgTypes[44].OneofWrappers = []any{}
	file_city_economy_v2_org_service_proto_msgTypes[56].OneofWrappers = []any{}
	file_city_economy_v2_org_service_proto_msgTypes[68].OneofWrappers = []any{}
	file_city_economy_v2_org_service_proto_msgTypes[82].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_economy_v2_org_service_proto_rawDesc), len(file_city_economy_v2_org_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   102,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_economy_v2_org_service_proto_goTypes,
		DependencyIndexes: file_city_economy_v2_org_service_proto_depIdxs,
		MessageInfos:      file_city_economy_v2_org_service_proto_msgTypes,
	}.Build()
	File_city_economy_v2_org_service_proto = out.File
	file_city_economy_v2_org_service_proto_goTypes = nil
	file_city_economy_v2_org_service_proto_depIdxs = nil
}

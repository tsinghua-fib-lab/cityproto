// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: city/economy/v2/org_service.proto

package economyv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Org           *Org                   `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOrgRequest) Reset() {
	*x = AddOrgRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgRequest) ProtoMessage() {}

func (x *AddOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgRequest.ProtoReflect.Descriptor instead.
func (*AddOrgRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddOrgRequest) GetOrg() *Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type AddOrgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOrgResponse) Reset() {
	*x = AddOrgResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgResponse) ProtoMessage() {}

func (x *AddOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgResponse.ProtoReflect.Descriptor instead.
func (*AddOrgResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{1}
}

type RemoveOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveOrgRequest) Reset() {
	*x = RemoveOrgRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgRequest) ProtoMessage() {}

func (x *RemoveOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgRequest.ProtoReflect.Descriptor instead.
func (*RemoveOrgRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveOrgRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type RemoveOrgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveOrgResponse) Reset() {
	*x = RemoveOrgResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgResponse) ProtoMessage() {}

func (x *RemoveOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgResponse.ProtoReflect.Descriptor instead.
func (*RemoveOrgResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{3}
}

// Org 相关消息
type GetOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrgRequest) Reset() {
	*x = GetOrgRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgRequest) ProtoMessage() {}

func (x *GetOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgRequest.ProtoReflect.Descriptor instead.
func (*GetOrgRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrgRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetOrgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Org           *Org                   `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrgResponse) Reset() {
	*x = GetOrgResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgResponse) ProtoMessage() {}

func (x *GetOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgResponse.ProtoReflect.Descriptor instead.
func (*GetOrgResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrgResponse) GetOrg() *Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type UpdateOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Org           *Org                   `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrgRequest) Reset() {
	*x = UpdateOrgRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgRequest) ProtoMessage() {}

func (x *UpdateOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrgRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateOrgRequest) GetOrg() *Org {
	if x != nil {
		return x.Org
	}
	return nil
}

type UpdateOrgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrgResponse) Reset() {
	*x = UpdateOrgResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgResponse) ProtoMessage() {}

func (x *UpdateOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrgResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{7}
}

type AddAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentRequest) Reset() {
	*x = AddAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentRequest) ProtoMessage() {}

func (x *AddAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentRequest.ProtoReflect.Descriptor instead.
func (*AddAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{8}
}

func (x *AddAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type AddAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentResponse) Reset() {
	*x = AddAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentResponse) ProtoMessage() {}

func (x *AddAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentResponse.ProtoReflect.Descriptor instead.
func (*AddAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{9}
}

type RemoveAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       int32                  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentRequest) Reset() {
	*x = RemoveAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentRequest) ProtoMessage() {}

func (x *RemoveAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentRequest.ProtoReflect.Descriptor instead.
func (*RemoveAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveAgentRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type RemoveAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentResponse) Reset() {
	*x = RemoveAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentResponse) ProtoMessage() {}

func (x *RemoveAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentResponse.ProtoReflect.Descriptor instead.
func (*RemoveAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{11}
}

type GetNominalGDPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNominalGDPRequest) Reset() {
	*x = GetNominalGDPRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNominalGDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNominalGDPRequest) ProtoMessage() {}

func (x *GetNominalGDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNominalGDPRequest.ProtoReflect.Descriptor instead.
func (*GetNominalGDPRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetNominalGDPRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetNominalGDPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NominalGdp    []float32              `protobuf:"fixed32,1,rep,packed,name=nominal_gdp,json=nominalGdp,proto3" json:"nominal_gdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNominalGDPResponse) Reset() {
	*x = GetNominalGDPResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNominalGDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNominalGDPResponse) ProtoMessage() {}

func (x *GetNominalGDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNominalGDPResponse.ProtoReflect.Descriptor instead.
func (*GetNominalGDPResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetNominalGDPResponse) GetNominalGdp() []float32 {
	if x != nil {
		return x.NominalGdp
	}
	return nil
}

type SetNominalGDPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	NominalGdp    []float32              `protobuf:"fixed32,2,rep,packed,name=nominal_gdp,json=nominalGdp,proto3" json:"nominal_gdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetNominalGDPRequest) Reset() {
	*x = SetNominalGDPRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNominalGDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNominalGDPRequest) ProtoMessage() {}

func (x *SetNominalGDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNominalGDPRequest.ProtoReflect.Descriptor instead.
func (*SetNominalGDPRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{14}
}

func (x *SetNominalGDPRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetNominalGDPRequest) GetNominalGdp() []float32 {
	if x != nil {
		return x.NominalGdp
	}
	return nil
}

type SetNominalGDPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetNominalGDPResponse) Reset() {
	*x = SetNominalGDPResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNominalGDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNominalGDPResponse) ProtoMessage() {}

func (x *SetNominalGDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNominalGDPResponse.ProtoReflect.Descriptor instead.
func (*SetNominalGDPResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{15}
}

type GetRealGDPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRealGDPRequest) Reset() {
	*x = GetRealGDPRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRealGDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealGDPRequest) ProtoMessage() {}

func (x *GetRealGDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealGDPRequest.ProtoReflect.Descriptor instead.
func (*GetRealGDPRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetRealGDPRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetRealGDPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealGdp       []float32              `protobuf:"fixed32,1,rep,packed,name=real_gdp,json=realGdp,proto3" json:"real_gdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRealGDPResponse) Reset() {
	*x = GetRealGDPResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRealGDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealGDPResponse) ProtoMessage() {}

func (x *GetRealGDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealGDPResponse.ProtoReflect.Descriptor instead.
func (*GetRealGDPResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetRealGDPResponse) GetRealGdp() []float32 {
	if x != nil {
		return x.RealGdp
	}
	return nil
}

type SetRealGDPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	RealGdp       []float32              `protobuf:"fixed32,2,rep,packed,name=real_gdp,json=realGdp,proto3" json:"real_gdp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRealGDPRequest) Reset() {
	*x = SetRealGDPRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRealGDPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRealGDPRequest) ProtoMessage() {}

func (x *SetRealGDPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRealGDPRequest.ProtoReflect.Descriptor instead.
func (*SetRealGDPRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{18}
}

func (x *SetRealGDPRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetRealGDPRequest) GetRealGdp() []float32 {
	if x != nil {
		return x.RealGdp
	}
	return nil
}

type SetRealGDPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRealGDPResponse) Reset() {
	*x = SetRealGDPResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRealGDPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRealGDPResponse) ProtoMessage() {}

func (x *SetRealGDPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRealGDPResponse.ProtoReflect.Descriptor instead.
func (*SetRealGDPResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{19}
}

type GetUnemploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnemploymentRequest) Reset() {
	*x = GetUnemploymentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnemploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnemploymentRequest) ProtoMessage() {}

func (x *GetUnemploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnemploymentRequest.ProtoReflect.Descriptor instead.
func (*GetUnemploymentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetUnemploymentRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetUnemploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unemployment  []float32              `protobuf:"fixed32,1,rep,packed,name=unemployment,proto3" json:"unemployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnemploymentResponse) Reset() {
	*x = GetUnemploymentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnemploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnemploymentResponse) ProtoMessage() {}

func (x *GetUnemploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnemploymentResponse.ProtoReflect.Descriptor instead.
func (*GetUnemploymentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetUnemploymentResponse) GetUnemployment() []float32 {
	if x != nil {
		return x.Unemployment
	}
	return nil
}

type SetUnemploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Unemployment  []float32              `protobuf:"fixed32,2,rep,packed,name=unemployment,proto3" json:"unemployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUnemploymentRequest) Reset() {
	*x = SetUnemploymentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUnemploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUnemploymentRequest) ProtoMessage() {}

func (x *SetUnemploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUnemploymentRequest.ProtoReflect.Descriptor instead.
func (*SetUnemploymentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{22}
}

func (x *SetUnemploymentRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetUnemploymentRequest) GetUnemployment() []float32 {
	if x != nil {
		return x.Unemployment
	}
	return nil
}

type SetUnemploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUnemploymentResponse) Reset() {
	*x = SetUnemploymentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUnemploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUnemploymentResponse) ProtoMessage() {}

func (x *SetUnemploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUnemploymentResponse.ProtoReflect.Descriptor instead.
func (*SetUnemploymentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{23}
}

type GetWagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWagesRequest) Reset() {
	*x = GetWagesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWagesRequest) ProtoMessage() {}

func (x *GetWagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWagesRequest.ProtoReflect.Descriptor instead.
func (*GetWagesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetWagesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetWagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wages         []float32              `protobuf:"fixed32,1,rep,packed,name=wages,proto3" json:"wages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWagesResponse) Reset() {
	*x = GetWagesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWagesResponse) ProtoMessage() {}

func (x *GetWagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWagesResponse.ProtoReflect.Descriptor instead.
func (*GetWagesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetWagesResponse) GetWages() []float32 {
	if x != nil {
		return x.Wages
	}
	return nil
}

type SetWagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Wages         []float32              `protobuf:"fixed32,2,rep,packed,name=wages,proto3" json:"wages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWagesRequest) Reset() {
	*x = SetWagesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWagesRequest) ProtoMessage() {}

func (x *SetWagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWagesRequest.ProtoReflect.Descriptor instead.
func (*SetWagesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{26}
}

func (x *SetWagesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetWagesRequest) GetWages() []float32 {
	if x != nil {
		return x.Wages
	}
	return nil
}

type SetWagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWagesResponse) Reset() {
	*x = SetWagesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWagesResponse) ProtoMessage() {}

func (x *SetWagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWagesResponse.ProtoReflect.Descriptor instead.
func (*SetWagesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{27}
}

type GetPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricesRequest) Reset() {
	*x = GetPricesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricesRequest) ProtoMessage() {}

func (x *GetPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricesRequest.ProtoReflect.Descriptor instead.
func (*GetPricesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetPricesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []float32              `protobuf:"fixed32,1,rep,packed,name=prices,proto3" json:"prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricesResponse) Reset() {
	*x = GetPricesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricesResponse) ProtoMessage() {}

func (x *GetPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricesResponse.ProtoReflect.Descriptor instead.
func (*GetPricesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetPricesResponse) GetPrices() []float32 {
	if x != nil {
		return x.Prices
	}
	return nil
}

type SetPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Prices        []float32              `protobuf:"fixed32,2,rep,packed,name=prices,proto3" json:"prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPricesRequest) Reset() {
	*x = SetPricesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPricesRequest) ProtoMessage() {}

func (x *SetPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPricesRequest.ProtoReflect.Descriptor instead.
func (*SetPricesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{30}
}

func (x *SetPricesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetPricesRequest) GetPrices() []float32 {
	if x != nil {
		return x.Prices
	}
	return nil
}

type SetPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPricesResponse) Reset() {
	*x = SetPricesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPricesResponse) ProtoMessage() {}

func (x *SetPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPricesResponse.ProtoReflect.Descriptor instead.
func (*SetPricesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{31}
}

type GetInventoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryRequest) Reset() {
	*x = GetInventoryRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryRequest) ProtoMessage() {}

func (x *GetInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetInventoryRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetInventoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventory     int32                  `protobuf:"varint,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInventoryResponse) Reset() {
	*x = GetInventoryResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryResponse) ProtoMessage() {}

func (x *GetInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetInventoryResponse) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

type SetInventoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Inventory     int32                  `protobuf:"varint,2,opt,name=inventory,proto3" json:"inventory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetInventoryRequest) Reset() {
	*x = SetInventoryRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInventoryRequest) ProtoMessage() {}

func (x *SetInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInventoryRequest.ProtoReflect.Descriptor instead.
func (*SetInventoryRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{34}
}

func (x *SetInventoryRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetInventoryRequest) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

type SetInventoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetInventoryResponse) Reset() {
	*x = SetInventoryResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInventoryResponse) ProtoMessage() {}

func (x *SetInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInventoryResponse.ProtoReflect.Descriptor instead.
func (*SetInventoryResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{35}
}

type GetPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPriceRequest) Reset() {
	*x = GetPriceRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceRequest) ProtoMessage() {}

func (x *GetPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceRequest.ProtoReflect.Descriptor instead.
func (*GetPriceRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetPriceRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float32                `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPriceResponse) Reset() {
	*x = GetPriceResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceResponse) ProtoMessage() {}

func (x *GetPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceResponse.ProtoReflect.Descriptor instead.
func (*GetPriceResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetPriceResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type SetPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPriceRequest) Reset() {
	*x = SetPriceRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPriceRequest) ProtoMessage() {}

func (x *SetPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPriceRequest.ProtoReflect.Descriptor instead.
func (*SetPriceRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{38}
}

func (x *SetPriceRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetPriceRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type SetPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPriceResponse) Reset() {
	*x = SetPriceResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPriceResponse) ProtoMessage() {}

func (x *SetPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPriceResponse.ProtoReflect.Descriptor instead.
func (*SetPriceResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{39}
}

type GetCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrencyRequest) Reset() {
	*x = GetCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyRequest) ProtoMessage() {}

func (x *GetCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      float32                `protobuf:"fixed32,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrencyResponse) Reset() {
	*x = GetCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrencyResponse) ProtoMessage() {}

func (x *GetCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetCurrencyResponse) GetCurrency() float32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

type SetCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Currency      float32                `protobuf:"fixed32,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCurrencyRequest) Reset() {
	*x = SetCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrencyRequest) ProtoMessage() {}

func (x *SetCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrencyRequest.ProtoReflect.Descriptor instead.
func (*SetCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{42}
}

func (x *SetCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetCurrencyRequest) GetCurrency() float32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

type SetCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCurrencyResponse) Reset() {
	*x = SetCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrencyResponse) ProtoMessage() {}

func (x *SetCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrencyResponse.ProtoReflect.Descriptor instead.
func (*SetCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{43}
}

type GetInterestRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInterestRateRequest) Reset() {
	*x = GetInterestRateRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInterestRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestRateRequest) ProtoMessage() {}

func (x *GetInterestRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestRateRequest.ProtoReflect.Descriptor instead.
func (*GetInterestRateRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetInterestRateRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetInterestRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InterestRate  float32                `protobuf:"fixed32,1,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInterestRateResponse) Reset() {
	*x = GetInterestRateResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInterestRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestRateResponse) ProtoMessage() {}

func (x *GetInterestRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestRateResponse.ProtoReflect.Descriptor instead.
func (*GetInterestRateResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetInterestRateResponse) GetInterestRate() float32 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type SetInterestRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	InterestRate  float32                `protobuf:"fixed32,2,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetInterestRateRequest) Reset() {
	*x = SetInterestRateRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetInterestRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInterestRateRequest) ProtoMessage() {}

func (x *SetInterestRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInterestRateRequest.ProtoReflect.Descriptor instead.
func (*SetInterestRateRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{46}
}

func (x *SetInterestRateRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetInterestRateRequest) GetInterestRate() float32 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

type SetInterestRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetInterestRateResponse) Reset() {
	*x = SetInterestRateResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetInterestRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInterestRateResponse) ProtoMessage() {}

func (x *SetInterestRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInterestRateResponse.ProtoReflect.Descriptor instead.
func (*SetInterestRateResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{47}
}

type GetBracketCutoffsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBracketCutoffsRequest) Reset() {
	*x = GetBracketCutoffsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBracketCutoffsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBracketCutoffsRequest) ProtoMessage() {}

func (x *GetBracketCutoffsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBracketCutoffsRequest.ProtoReflect.Descriptor instead.
func (*GetBracketCutoffsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetBracketCutoffsRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetBracketCutoffsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BracketCutoffs []float32              `protobuf:"fixed32,1,rep,packed,name=bracket_cutoffs,json=bracketCutoffs,proto3" json:"bracket_cutoffs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetBracketCutoffsResponse) Reset() {
	*x = GetBracketCutoffsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBracketCutoffsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBracketCutoffsResponse) ProtoMessage() {}

func (x *GetBracketCutoffsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBracketCutoffsResponse.ProtoReflect.Descriptor instead.
func (*GetBracketCutoffsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetBracketCutoffsResponse) GetBracketCutoffs() []float32 {
	if x != nil {
		return x.BracketCutoffs
	}
	return nil
}

type SetBracketCutoffsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrgId          int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	BracketCutoffs []float32              `protobuf:"fixed32,2,rep,packed,name=bracket_cutoffs,json=bracketCutoffs,proto3" json:"bracket_cutoffs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetBracketCutoffsRequest) Reset() {
	*x = SetBracketCutoffsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBracketCutoffsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBracketCutoffsRequest) ProtoMessage() {}

func (x *SetBracketCutoffsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBracketCutoffsRequest.ProtoReflect.Descriptor instead.
func (*SetBracketCutoffsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{50}
}

func (x *SetBracketCutoffsRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetBracketCutoffsRequest) GetBracketCutoffs() []float32 {
	if x != nil {
		return x.BracketCutoffs
	}
	return nil
}

type SetBracketCutoffsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBracketCutoffsResponse) Reset() {
	*x = SetBracketCutoffsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBracketCutoffsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBracketCutoffsResponse) ProtoMessage() {}

func (x *SetBracketCutoffsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBracketCutoffsResponse.ProtoReflect.Descriptor instead.
func (*SetBracketCutoffsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{51}
}

type GetBracketRatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBracketRatesRequest) Reset() {
	*x = GetBracketRatesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBracketRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBracketRatesRequest) ProtoMessage() {}

func (x *GetBracketRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBracketRatesRequest.ProtoReflect.Descriptor instead.
func (*GetBracketRatesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetBracketRatesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetBracketRatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BracketRates  []float32              `protobuf:"fixed32,1,rep,packed,name=bracket_rates,json=bracketRates,proto3" json:"bracket_rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBracketRatesResponse) Reset() {
	*x = GetBracketRatesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBracketRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBracketRatesResponse) ProtoMessage() {}

func (x *GetBracketRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBracketRatesResponse.ProtoReflect.Descriptor instead.
func (*GetBracketRatesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{53}
}

func (x *GetBracketRatesResponse) GetBracketRates() []float32 {
	if x != nil {
		return x.BracketRates
	}
	return nil
}

type SetBracketRatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	BracketRates  []float32              `protobuf:"fixed32,2,rep,packed,name=bracket_rates,json=bracketRates,proto3" json:"bracket_rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBracketRatesRequest) Reset() {
	*x = SetBracketRatesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBracketRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBracketRatesRequest) ProtoMessage() {}

func (x *SetBracketRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBracketRatesRequest.ProtoReflect.Descriptor instead.
func (*SetBracketRatesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{54}
}

func (x *SetBracketRatesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetBracketRatesRequest) GetBracketRates() []float32 {
	if x != nil {
		return x.BracketRates
	}
	return nil
}

type SetBracketRatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetBracketRatesResponse) Reset() {
	*x = SetBracketRatesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetBracketRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBracketRatesResponse) ProtoMessage() {}

func (x *SetBracketRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBracketRatesResponse.ProtoReflect.Descriptor instead.
func (*SetBracketRatesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{55}
}

type CalculateTaxesDueRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	GovernmentId int32                  `protobuf:"varint,1,opt,name=government_id,json=governmentId,proto3" json:"government_id,omitempty"`
	// id of agents who needs to pay tax
	AgentIds []int32 `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	// income of agents who needs to pay tax, corresponds one-to-one with `agent_ids` by index
	Incomes []float32 `protobuf:"fixed32,3,rep,packed,name=incomes,proto3" json:"incomes,omitempty"`
	// Whether redistribute the taxes to all agents or not
	EnableRedistribution bool `protobuf:"varint,4,opt,name=enable_redistribution,json=enableRedistribution,proto3" json:"enable_redistribution,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CalculateTaxesDueRequest) Reset() {
	*x = CalculateTaxesDueRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateTaxesDueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxesDueRequest) ProtoMessage() {}

func (x *CalculateTaxesDueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxesDueRequest.ProtoReflect.Descriptor instead.
func (*CalculateTaxesDueRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{56}
}

func (x *CalculateTaxesDueRequest) GetGovernmentId() int32 {
	if x != nil {
		return x.GovernmentId
	}
	return 0
}

func (x *CalculateTaxesDueRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *CalculateTaxesDueRequest) GetIncomes() []float32 {
	if x != nil {
		return x.Incomes
	}
	return nil
}

func (x *CalculateTaxesDueRequest) GetEnableRedistribution() bool {
	if x != nil {
		return x.EnableRedistribution
	}
	return false
}

type CalculateTaxesDueResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// total taxes from agents
	TaxesDue float32 `protobuf:"fixed32,1,opt,name=taxes_due,json=taxesDue,proto3" json:"taxes_due,omitempty"`
	// after-tax income of agents, corresponds one-to-one with `agent_ids` by index
	UpdatedIncomes []float32 `protobuf:"fixed32,2,rep,packed,name=updated_incomes,json=updatedIncomes,proto3" json:"updated_incomes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CalculateTaxesDueResponse) Reset() {
	*x = CalculateTaxesDueResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateTaxesDueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateTaxesDueResponse) ProtoMessage() {}

func (x *CalculateTaxesDueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateTaxesDueResponse.ProtoReflect.Descriptor instead.
func (*CalculateTaxesDueResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{57}
}

func (x *CalculateTaxesDueResponse) GetTaxesDue() float32 {
	if x != nil {
		return x.TaxesDue
	}
	return 0
}

func (x *CalculateTaxesDueResponse) GetUpdatedIncomes() []float32 {
	if x != nil {
		return x.UpdatedIncomes
	}
	return nil
}

type CalculateConsumptionRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	FirmId int32                  `protobuf:"varint,1,opt,name=firm_id,json=firmId,proto3" json:"firm_id,omitempty"`
	// id of agents who has demand to consume at this firm
	AgentIds []int32 `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	// item demand number of each agents, corresponds one-to-one with `agent_ids` by index
	Demands       []int32 `protobuf:"varint,3,rep,packed,name=demands,proto3" json:"demands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateConsumptionRequest) Reset() {
	*x = CalculateConsumptionRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateConsumptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateConsumptionRequest) ProtoMessage() {}

func (x *CalculateConsumptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateConsumptionRequest.ProtoReflect.Descriptor instead.
func (*CalculateConsumptionRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{58}
}

func (x *CalculateConsumptionRequest) GetFirmId() int32 {
	if x != nil {
		return x.FirmId
	}
	return 0
}

func (x *CalculateConsumptionRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *CalculateConsumptionRequest) GetDemands() []int32 {
	if x != nil {
		return x.Demands
	}
	return nil
}

type CalculateConsumptionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the item remaining count
	RemainInventory int32 `protobuf:"varint,1,opt,name=remain_inventory,json=remainInventory,proto3" json:"remain_inventory,omitempty"`
	// currencies after consumption of each agents, corresponds one-to-one with `agent_ids` by index
	UpdatedCurrencies []float32 `protobuf:"fixed32,2,rep,packed,name=updated_currencies,json=updatedCurrencies,proto3" json:"updated_currencies,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CalculateConsumptionResponse) Reset() {
	*x = CalculateConsumptionResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateConsumptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateConsumptionResponse) ProtoMessage() {}

func (x *CalculateConsumptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateConsumptionResponse.ProtoReflect.Descriptor instead.
func (*CalculateConsumptionResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{59}
}

func (x *CalculateConsumptionResponse) GetRemainInventory() int32 {
	if x != nil {
		return x.RemainInventory
	}
	return 0
}

func (x *CalculateConsumptionResponse) GetUpdatedCurrencies() []float32 {
	if x != nil {
		return x.UpdatedCurrencies
	}
	return nil
}

type CalculateInterestRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	BankId int32                  `protobuf:"varint,1,opt,name=bank_id,json=bankId,proto3" json:"bank_id,omitempty"`
	// id of agents who has currency stored in the bank
	AgentIds      []int32 `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateInterestRequest) Reset() {
	*x = CalculateInterestRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateInterestRequest) ProtoMessage() {}

func (x *CalculateInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateInterestRequest.ProtoReflect.Descriptor instead.
func (*CalculateInterestRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{60}
}

func (x *CalculateInterestRequest) GetBankId() int32 {
	if x != nil {
		return x.BankId
	}
	return 0
}

func (x *CalculateInterestRequest) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type CalculateInterestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// total interest that the agents got from the bank
	TotalInterest float32 `protobuf:"fixed32,1,opt,name=total_interest,json=totalInterest,proto3" json:"total_interest,omitempty"`
	// currencies with interest of each agents, corresponds one-to-one with `agent_ids` by index
	UpdatedCurrencies []float32 `protobuf:"fixed32,2,rep,packed,name=updated_currencies,json=updatedCurrencies,proto3" json:"updated_currencies,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CalculateInterestResponse) Reset() {
	*x = CalculateInterestResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateInterestResponse) ProtoMessage() {}

func (x *CalculateInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateInterestResponse.ProtoReflect.Descriptor instead.
func (*CalculateInterestResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{61}
}

func (x *CalculateInterestResponse) GetTotalInterest() float32 {
	if x != nil {
		return x.TotalInterest
	}
	return 0
}

func (x *CalculateInterestResponse) GetUpdatedCurrencies() []float32 {
	if x != nil {
		return x.UpdatedCurrencies
	}
	return nil
}

type SaveEconomyEntitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveEconomyEntitiesRequest) Reset() {
	*x = SaveEconomyEntitiesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveEconomyEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEconomyEntitiesRequest) ProtoMessage() {}

func (x *SaveEconomyEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEconomyEntitiesRequest.ProtoReflect.Descriptor instead.
func (*SaveEconomyEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{62}
}

func (x *SaveEconomyEntitiesRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type SaveEconomyEntitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 组织ID列表
	OrgIds []int32 `protobuf:"varint,1,rep,packed,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	// Agent ID列表
	AgentIds      []int32 `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveEconomyEntitiesResponse) Reset() {
	*x = SaveEconomyEntitiesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveEconomyEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEconomyEntitiesResponse) ProtoMessage() {}

func (x *SaveEconomyEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEconomyEntitiesResponse.ProtoReflect.Descriptor instead.
func (*SaveEconomyEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{63}
}

func (x *SaveEconomyEntitiesResponse) GetOrgIds() []int32 {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

func (x *SaveEconomyEntitiesResponse) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

type LoadEconomyEntitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadEconomyEntitiesRequest) Reset() {
	*x = LoadEconomyEntitiesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadEconomyEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEconomyEntitiesRequest) ProtoMessage() {}

func (x *LoadEconomyEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEconomyEntitiesRequest.ProtoReflect.Descriptor instead.
func (*LoadEconomyEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{64}
}

func (x *LoadEconomyEntitiesRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type LoadEconomyEntitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 组织ID列表
	OrgIds []int32 `protobuf:"varint,1,rep,packed,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	// Agent ID列表
	AgentIds      []int32 `protobuf:"varint,2,rep,packed,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadEconomyEntitiesResponse) Reset() {
	*x = LoadEconomyEntitiesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadEconomyEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEconomyEntitiesResponse) ProtoMessage() {}

func (x *LoadEconomyEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEconomyEntitiesResponse.ProtoReflect.Descriptor instead.
func (*LoadEconomyEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{65}
}

func (x *LoadEconomyEntitiesResponse) GetOrgIds() []int32 {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

func (x *LoadEconomyEntitiesResponse) GetAgentIds() []int32 {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

// Consumption Currency
type GetConsumptionCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConsumptionCurrencyRequest) Reset() {
	*x = GetConsumptionCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConsumptionCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumptionCurrencyRequest) ProtoMessage() {}

func (x *GetConsumptionCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumptionCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetConsumptionCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetConsumptionCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetConsumptionCurrencyResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ConsumptionCurrency []float32              `protobuf:"fixed32,1,rep,packed,name=consumption_currency,json=consumptionCurrency,proto3" json:"consumption_currency,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetConsumptionCurrencyResponse) Reset() {
	*x = GetConsumptionCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConsumptionCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumptionCurrencyResponse) ProtoMessage() {}

func (x *GetConsumptionCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumptionCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetConsumptionCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{67}
}

func (x *GetConsumptionCurrencyResponse) GetConsumptionCurrency() []float32 {
	if x != nil {
		return x.ConsumptionCurrency
	}
	return nil
}

type SetConsumptionCurrencyRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	OrgId               int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ConsumptionCurrency []float32              `protobuf:"fixed32,2,rep,packed,name=consumption_currency,json=consumptionCurrency,proto3" json:"consumption_currency,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SetConsumptionCurrencyRequest) Reset() {
	*x = SetConsumptionCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionCurrencyRequest) ProtoMessage() {}

func (x *SetConsumptionCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionCurrencyRequest.ProtoReflect.Descriptor instead.
func (*SetConsumptionCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{68}
}

func (x *SetConsumptionCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetConsumptionCurrencyRequest) GetConsumptionCurrency() []float32 {
	if x != nil {
		return x.ConsumptionCurrency
	}
	return nil
}

type SetConsumptionCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConsumptionCurrencyResponse) Reset() {
	*x = SetConsumptionCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionCurrencyResponse) ProtoMessage() {}

func (x *SetConsumptionCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionCurrencyResponse.ProtoReflect.Descriptor instead.
func (*SetConsumptionCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{69}
}

// Consumption Propensity
type GetConsumptionPropensityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConsumptionPropensityRequest) Reset() {
	*x = GetConsumptionPropensityRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConsumptionPropensityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumptionPropensityRequest) ProtoMessage() {}

func (x *GetConsumptionPropensityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumptionPropensityRequest.ProtoReflect.Descriptor instead.
func (*GetConsumptionPropensityRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{70}
}

func (x *GetConsumptionPropensityRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetConsumptionPropensityResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ConsumptionPropensity []float32              `protobuf:"fixed32,1,rep,packed,name=consumption_propensity,json=consumptionPropensity,proto3" json:"consumption_propensity,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetConsumptionPropensityResponse) Reset() {
	*x = GetConsumptionPropensityResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConsumptionPropensityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumptionPropensityResponse) ProtoMessage() {}

func (x *GetConsumptionPropensityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumptionPropensityResponse.ProtoReflect.Descriptor instead.
func (*GetConsumptionPropensityResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{71}
}

func (x *GetConsumptionPropensityResponse) GetConsumptionPropensity() []float32 {
	if x != nil {
		return x.ConsumptionPropensity
	}
	return nil
}

type SetConsumptionPropensityRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	OrgId                 int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ConsumptionPropensity []float32              `protobuf:"fixed32,2,rep,packed,name=consumption_propensity,json=consumptionPropensity,proto3" json:"consumption_propensity,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SetConsumptionPropensityRequest) Reset() {
	*x = SetConsumptionPropensityRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionPropensityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionPropensityRequest) ProtoMessage() {}

func (x *SetConsumptionPropensityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionPropensityRequest.ProtoReflect.Descriptor instead.
func (*SetConsumptionPropensityRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{72}
}

func (x *SetConsumptionPropensityRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetConsumptionPropensityRequest) GetConsumptionPropensity() []float32 {
	if x != nil {
		return x.ConsumptionPropensity
	}
	return nil
}

type SetConsumptionPropensityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConsumptionPropensityResponse) Reset() {
	*x = SetConsumptionPropensityResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConsumptionPropensityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConsumptionPropensityResponse) ProtoMessage() {}

func (x *SetConsumptionPropensityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConsumptionPropensityResponse.ProtoReflect.Descriptor instead.
func (*SetConsumptionPropensityResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{73}
}

// Income Currency
type GetIncomeCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncomeCurrencyRequest) Reset() {
	*x = GetIncomeCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncomeCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeCurrencyRequest) ProtoMessage() {}

func (x *GetIncomeCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetIncomeCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{74}
}

func (x *GetIncomeCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetIncomeCurrencyResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IncomeCurrency []float32              `protobuf:"fixed32,1,rep,packed,name=income_currency,json=incomeCurrency,proto3" json:"income_currency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetIncomeCurrencyResponse) Reset() {
	*x = GetIncomeCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncomeCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeCurrencyResponse) ProtoMessage() {}

func (x *GetIncomeCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetIncomeCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetIncomeCurrencyResponse) GetIncomeCurrency() []float32 {
	if x != nil {
		return x.IncomeCurrency
	}
	return nil
}

type SetIncomeCurrencyRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrgId          int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	IncomeCurrency []float32              `protobuf:"fixed32,2,rep,packed,name=income_currency,json=incomeCurrency,proto3" json:"income_currency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetIncomeCurrencyRequest) Reset() {
	*x = SetIncomeCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIncomeCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIncomeCurrencyRequest) ProtoMessage() {}

func (x *SetIncomeCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIncomeCurrencyRequest.ProtoReflect.Descriptor instead.
func (*SetIncomeCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{76}
}

func (x *SetIncomeCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetIncomeCurrencyRequest) GetIncomeCurrency() []float32 {
	if x != nil {
		return x.IncomeCurrency
	}
	return nil
}

type SetIncomeCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetIncomeCurrencyResponse) Reset() {
	*x = SetIncomeCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetIncomeCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIncomeCurrencyResponse) ProtoMessage() {}

func (x *SetIncomeCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIncomeCurrencyResponse.ProtoReflect.Descriptor instead.
func (*SetIncomeCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{77}
}

// Depression
type GetDepressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDepressionRequest) Reset() {
	*x = GetDepressionRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDepressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepressionRequest) ProtoMessage() {}

func (x *GetDepressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepressionRequest.ProtoReflect.Descriptor instead.
func (*GetDepressionRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{78}
}

func (x *GetDepressionRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetDepressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Depression    []float32              `protobuf:"fixed32,1,rep,packed,name=depression,proto3" json:"depression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDepressionResponse) Reset() {
	*x = GetDepressionResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDepressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepressionResponse) ProtoMessage() {}

func (x *GetDepressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepressionResponse.ProtoReflect.Descriptor instead.
func (*GetDepressionResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{79}
}

func (x *GetDepressionResponse) GetDepression() []float32 {
	if x != nil {
		return x.Depression
	}
	return nil
}

type SetDepressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Depression    []float32              `protobuf:"fixed32,2,rep,packed,name=depression,proto3" json:"depression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDepressionRequest) Reset() {
	*x = SetDepressionRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDepressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDepressionRequest) ProtoMessage() {}

func (x *SetDepressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDepressionRequest.ProtoReflect.Descriptor instead.
func (*SetDepressionRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{80}
}

func (x *SetDepressionRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetDepressionRequest) GetDepression() []float32 {
	if x != nil {
		return x.Depression
	}
	return nil
}

type SetDepressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDepressionResponse) Reset() {
	*x = SetDepressionResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDepressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDepressionResponse) ProtoMessage() {}

func (x *SetDepressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDepressionResponse.ProtoReflect.Descriptor instead.
func (*SetDepressionResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{81}
}

// Locus of Control
type GetLocusControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocusControlRequest) Reset() {
	*x = GetLocusControlRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocusControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocusControlRequest) ProtoMessage() {}

func (x *GetLocusControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocusControlRequest.ProtoReflect.Descriptor instead.
func (*GetLocusControlRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{82}
}

func (x *GetLocusControlRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetLocusControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocusControl  []float32              `protobuf:"fixed32,1,rep,packed,name=locus_control,json=locusControl,proto3" json:"locus_control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLocusControlResponse) Reset() {
	*x = GetLocusControlResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLocusControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocusControlResponse) ProtoMessage() {}

func (x *GetLocusControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocusControlResponse.ProtoReflect.Descriptor instead.
func (*GetLocusControlResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{83}
}

func (x *GetLocusControlResponse) GetLocusControl() []float32 {
	if x != nil {
		return x.LocusControl
	}
	return nil
}

type SetLocusControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	LocusControl  []float32              `protobuf:"fixed32,2,rep,packed,name=locus_control,json=locusControl,proto3" json:"locus_control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLocusControlRequest) Reset() {
	*x = SetLocusControlRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLocusControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocusControlRequest) ProtoMessage() {}

func (x *SetLocusControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocusControlRequest.ProtoReflect.Descriptor instead.
func (*SetLocusControlRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{84}
}

func (x *SetLocusControlRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetLocusControlRequest) GetLocusControl() []float32 {
	if x != nil {
		return x.LocusControl
	}
	return nil
}

type SetLocusControlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLocusControlResponse) Reset() {
	*x = SetLocusControlResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLocusControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocusControlResponse) ProtoMessage() {}

func (x *SetLocusControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocusControlResponse.ProtoReflect.Descriptor instead.
func (*SetLocusControlResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{85}
}

// Working Hours
type GetWorkingHoursRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkingHoursRequest) Reset() {
	*x = GetWorkingHoursRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkingHoursRequest) ProtoMessage() {}

func (x *GetWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*GetWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{86}
}

func (x *GetWorkingHoursRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetWorkingHoursResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkingHours  []float32              `protobuf:"fixed32,1,rep,packed,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkingHoursResponse) Reset() {
	*x = GetWorkingHoursResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkingHoursResponse) ProtoMessage() {}

func (x *GetWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*GetWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{87}
}

func (x *GetWorkingHoursResponse) GetWorkingHours() []float32 {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

type SetWorkingHoursRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	WorkingHours  []float32              `protobuf:"fixed32,2,rep,packed,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWorkingHoursRequest) Reset() {
	*x = SetWorkingHoursRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkingHoursRequest) ProtoMessage() {}

func (x *SetWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*SetWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{88}
}

func (x *SetWorkingHoursRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetWorkingHoursRequest) GetWorkingHours() []float32 {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

type SetWorkingHoursResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWorkingHoursResponse) Reset() {
	*x = SetWorkingHoursResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkingHoursResponse) ProtoMessage() {}

func (x *SetWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*SetWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{89}
}

type GetOrgEntityIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          OrgType                `protobuf:"varint,1,opt,name=type,proto3,enum=city.economy.v2.OrgType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrgEntityIdsRequest) Reset() {
	*x = GetOrgEntityIdsRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrgEntityIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgEntityIdsRequest) ProtoMessage() {}

func (x *GetOrgEntityIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgEntityIdsRequest.ProtoReflect.Descriptor instead.
func (*GetOrgEntityIdsRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{90}
}

func (x *GetOrgEntityIdsRequest) GetType() OrgType {
	if x != nil {
		return x.Type
	}
	return OrgType_ORG_TYPE_UNSPECIFIED
}

type GetOrgEntityIdsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgIds        []int32                `protobuf:"varint,1,rep,packed,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrgEntityIdsResponse) Reset() {
	*x = GetOrgEntityIdsResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrgEntityIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgEntityIdsResponse) ProtoMessage() {}

func (x *GetOrgEntityIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgEntityIdsResponse.ProtoReflect.Descriptor instead.
func (*GetOrgEntityIdsResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{91}
}

func (x *GetOrgEntityIdsResponse) GetOrgIds() []int32 {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

type AddInventoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrgId          int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DeltaInventory int32                  `protobuf:"varint,2,opt,name=delta_inventory,json=deltaInventory,proto3" json:"delta_inventory,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddInventoryRequest) Reset() {
	*x = AddInventoryRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInventoryRequest) ProtoMessage() {}

func (x *AddInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInventoryRequest.ProtoReflect.Descriptor instead.
func (*AddInventoryRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{92}
}

func (x *AddInventoryRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddInventoryRequest) GetDeltaInventory() int32 {
	if x != nil {
		return x.DeltaInventory
	}
	return 0
}

type AddInventoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inventory     int32                  `protobuf:"varint,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddInventoryResponse) Reset() {
	*x = AddInventoryResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInventoryResponse) ProtoMessage() {}

func (x *AddInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInventoryResponse.ProtoReflect.Descriptor instead.
func (*AddInventoryResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{93}
}

func (x *AddInventoryResponse) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

type AddPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DeltaPrice    float32                `protobuf:"fixed32,2,opt,name=delta_price,json=deltaPrice,proto3" json:"delta_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPriceRequest) Reset() {
	*x = AddPriceRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPriceRequest) ProtoMessage() {}

func (x *AddPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPriceRequest.ProtoReflect.Descriptor instead.
func (*AddPriceRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{94}
}

func (x *AddPriceRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddPriceRequest) GetDeltaPrice() float32 {
	if x != nil {
		return x.DeltaPrice
	}
	return 0
}

type AddPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float32                `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPriceResponse) Reset() {
	*x = AddPriceResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPriceResponse) ProtoMessage() {}

func (x *AddPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPriceResponse.ProtoReflect.Descriptor instead.
func (*AddPriceResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{95}
}

func (x *AddPriceResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AddCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DeltaCurrency float32                `protobuf:"fixed32,2,opt,name=delta_currency,json=deltaCurrency,proto3" json:"delta_currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCurrencyRequest) Reset() {
	*x = AddCurrencyRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyRequest) ProtoMessage() {}

func (x *AddCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyRequest.ProtoReflect.Descriptor instead.
func (*AddCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{96}
}

func (x *AddCurrencyRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddCurrencyRequest) GetDeltaCurrency() float32 {
	if x != nil {
		return x.DeltaCurrency
	}
	return 0
}

type AddCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      float32                `protobuf:"fixed32,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCurrencyResponse) Reset() {
	*x = AddCurrencyResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyResponse) ProtoMessage() {}

func (x *AddCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyResponse.ProtoReflect.Descriptor instead.
func (*AddCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{97}
}

func (x *AddCurrencyResponse) GetCurrency() float32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

type AddInterestRateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OrgId             int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	DeltaInterestRate float32                `protobuf:"fixed32,2,opt,name=delta_interest_rate,json=deltaInterestRate,proto3" json:"delta_interest_rate,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddInterestRateRequest) Reset() {
	*x = AddInterestRateRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInterestRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInterestRateRequest) ProtoMessage() {}

func (x *AddInterestRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInterestRateRequest.ProtoReflect.Descriptor instead.
func (*AddInterestRateRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{98}
}

func (x *AddInterestRateRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddInterestRateRequest) GetDeltaInterestRate() float32 {
	if x != nil {
		return x.DeltaInterestRate
	}
	return 0
}

type AddInterestRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InterestRate  float32                `protobuf:"fixed32,1,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddInterestRateResponse) Reset() {
	*x = AddInterestRateResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInterestRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInterestRateResponse) ProtoMessage() {}

func (x *AddInterestRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInterestRateResponse.ProtoReflect.Descriptor instead.
func (*AddInterestRateResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{99}
}

func (x *AddInterestRateResponse) GetInterestRate() float32 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

// Employees 相关消息
type GetEmployeesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmployeesRequest) Reset() {
	*x = GetEmployeesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeesRequest) ProtoMessage() {}

func (x *GetEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeesRequest.ProtoReflect.Descriptor instead.
func (*GetEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{100}
}

func (x *GetEmployeesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetEmployeesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeIds   []int32                `protobuf:"varint,1,rep,packed,name=employee_ids,json=employeeIds,proto3" json:"employee_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEmployeesResponse) Reset() {
	*x = GetEmployeesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeesResponse) ProtoMessage() {}

func (x *GetEmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeesResponse.ProtoReflect.Descriptor instead.
func (*GetEmployeesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{101}
}

func (x *GetEmployeesResponse) GetEmployeeIds() []int32 {
	if x != nil {
		return x.EmployeeIds
	}
	return nil
}

type SetEmployeesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	EmployeeIds   []int32                `protobuf:"varint,2,rep,packed,name=employee_ids,json=employeeIds,proto3" json:"employee_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEmployeesRequest) Reset() {
	*x = SetEmployeesRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEmployeesRequest) ProtoMessage() {}

func (x *SetEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEmployeesRequest.ProtoReflect.Descriptor instead.
func (*SetEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{102}
}

func (x *SetEmployeesRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetEmployeesRequest) GetEmployeeIds() []int32 {
	if x != nil {
		return x.EmployeeIds
	}
	return nil
}

type SetEmployeesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEmployeesResponse) Reset() {
	*x = SetEmployeesResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEmployeesResponse) ProtoMessage() {}

func (x *SetEmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEmployeesResponse.ProtoReflect.Descriptor instead.
func (*SetEmployeesResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{103}
}

type AddEmployeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	EmployeeId    int32                  `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEmployeeRequest) Reset() {
	*x = AddEmployeeRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeRequest) ProtoMessage() {}

func (x *AddEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeRequest.ProtoReflect.Descriptor instead.
func (*AddEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{104}
}

func (x *AddEmployeeRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddEmployeeRequest) GetEmployeeId() int32 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

type AddEmployeeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEmployeeResponse) Reset() {
	*x = AddEmployeeResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEmployeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeResponse) ProtoMessage() {}

func (x *AddEmployeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeResponse.ProtoReflect.Descriptor instead.
func (*AddEmployeeResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{105}
}

type RemoveEmployeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	EmployeeId    int32                  `protobuf:"varint,2,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveEmployeeRequest) Reset() {
	*x = RemoveEmployeeRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveEmployeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEmployeeRequest) ProtoMessage() {}

func (x *RemoveEmployeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEmployeeRequest.ProtoReflect.Descriptor instead.
func (*RemoveEmployeeRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{106}
}

func (x *RemoveEmployeeRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *RemoveEmployeeRequest) GetEmployeeId() int32 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

type RemoveEmployeeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveEmployeeResponse) Reset() {
	*x = RemoveEmployeeResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveEmployeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEmployeeResponse) ProtoMessage() {}

func (x *RemoveEmployeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEmployeeResponse.ProtoReflect.Descriptor instead.
func (*RemoveEmployeeResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{107}
}

// Citizens 相关消息
type GetCitizensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCitizensRequest) Reset() {
	*x = GetCitizensRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCitizensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitizensRequest) ProtoMessage() {}

func (x *GetCitizensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitizensRequest.ProtoReflect.Descriptor instead.
func (*GetCitizensRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{108}
}

func (x *GetCitizensRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

type GetCitizensResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CitizenIds    []int32                `protobuf:"varint,1,rep,packed,name=citizen_ids,json=citizenIds,proto3" json:"citizen_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCitizensResponse) Reset() {
	*x = GetCitizensResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCitizensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitizensResponse) ProtoMessage() {}

func (x *GetCitizensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitizensResponse.ProtoReflect.Descriptor instead.
func (*GetCitizensResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{109}
}

func (x *GetCitizensResponse) GetCitizenIds() []int32 {
	if x != nil {
		return x.CitizenIds
	}
	return nil
}

type SetCitizensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CitizenIds    []int32                `protobuf:"varint,2,rep,packed,name=citizen_ids,json=citizenIds,proto3" json:"citizen_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCitizensRequest) Reset() {
	*x = SetCitizensRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCitizensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCitizensRequest) ProtoMessage() {}

func (x *SetCitizensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCitizensRequest.ProtoReflect.Descriptor instead.
func (*SetCitizensRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{110}
}

func (x *SetCitizensRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *SetCitizensRequest) GetCitizenIds() []int32 {
	if x != nil {
		return x.CitizenIds
	}
	return nil
}

type SetCitizensResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCitizensResponse) Reset() {
	*x = SetCitizensResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCitizensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCitizensResponse) ProtoMessage() {}

func (x *SetCitizensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCitizensResponse.ProtoReflect.Descriptor instead.
func (*SetCitizensResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{111}
}

type AddCitizenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CitizenId     int32                  `protobuf:"varint,2,opt,name=citizen_id,json=citizenId,proto3" json:"citizen_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCitizenRequest) Reset() {
	*x = AddCitizenRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCitizenRequest) ProtoMessage() {}

func (x *AddCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCitizenRequest.ProtoReflect.Descriptor instead.
func (*AddCitizenRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{112}
}

func (x *AddCitizenRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddCitizenRequest) GetCitizenId() int32 {
	if x != nil {
		return x.CitizenId
	}
	return 0
}

type AddCitizenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCitizenResponse) Reset() {
	*x = AddCitizenResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCitizenResponse) ProtoMessage() {}

func (x *AddCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCitizenResponse.ProtoReflect.Descriptor instead.
func (*AddCitizenResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{113}
}

type RemoveCitizenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         int32                  `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	CitizenId     int32                  `protobuf:"varint,2,opt,name=citizen_id,json=citizenId,proto3" json:"citizen_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCitizenRequest) Reset() {
	*x = RemoveCitizenRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCitizenRequest) ProtoMessage() {}

func (x *RemoveCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCitizenRequest.ProtoReflect.Descriptor instead.
func (*RemoveCitizenRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{114}
}

func (x *RemoveCitizenRequest) GetOrgId() int32 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *RemoveCitizenRequest) GetCitizenId() int32 {
	if x != nil {
		return x.CitizenId
	}
	return 0
}

type RemoveCitizenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCitizenResponse) Reset() {
	*x = RemoveCitizenResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCitizenResponse) ProtoMessage() {}

func (x *RemoveCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCitizenResponse.ProtoReflect.Descriptor instead.
func (*RemoveCitizenResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{115}
}

// Agent 相关消息
type GetAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       int32                  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentRequest) Reset() {
	*x = GetAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentRequest) ProtoMessage() {}

func (x *GetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentRequest.ProtoReflect.Descriptor instead.
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{116}
}

func (x *GetAgentRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type GetAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentResponse) Reset() {
	*x = GetAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResponse) ProtoMessage() {}

func (x *GetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResponse.ProtoReflect.Descriptor instead.
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{117}
}

func (x *GetAgentResponse) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         *Agent                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAgentRequest) Reset() {
	*x = UpdateAgentRequest{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentRequest) ProtoMessage() {}

func (x *UpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{118}
}

func (x *UpdateAgentRequest) GetAgent() *Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAgentResponse) Reset() {
	*x = UpdateAgentResponse{}
	mi := &file_city_economy_v2_org_service_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentResponse) ProtoMessage() {}

func (x *UpdateAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_economy_v2_org_service_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentResponse.ProtoReflect.Descriptor instead.
func (*UpdateAgentResponse) Descriptor() ([]byte, []int) {
	return file_city_economy_v2_org_service_proto_rawDescGZIP(), []int{119}
}

var File_city_economy_v2_org_service_proto protoreflect.FileDescriptor

var file_city_economy_v2_org_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x76,
	0x32, 0x2f, 0x6f, 0x72, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x1a, 0x1d, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x10, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67,
	0x22, 0x3a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x38, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x67, 0x64, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x22, 0x4e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4e, 0x6f,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x67, 0x64, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4e, 0x6f,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x67, 0x64, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x47, 0x64, 0x70, 0x22, 0x45, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x67, 0x64, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x6c, 0x47, 0x64, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47,
	0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x75, 0x6e,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75,
	0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x0c, 0x75, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x19, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x77, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3e,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x77, 0x61, 0x67, 0x65, 0x73, 0x22, 0x12,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x29, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x13, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x4a, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3e,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x47, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x62,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x22, 0x5a, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66,
	0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x74, 0x6f,
	0x66, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x62, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x0c, 0x62, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x22, 0x19, 0x0a,
	0x17, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x65, 0x73, 0x5f, 0x64, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1b, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x78, 0x0a, 0x1c, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x22, 0x50, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x1a, 0x53, 0x61, 0x76, 0x65, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x53, 0x0a, 0x1b, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x1a, 0x4c, 0x6f, 0x61, 0x64, 0x45,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x53, 0x0a, 0x1b, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22,
	0x53, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x13, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x69, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x20, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x38, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x15, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x22, 0x6f, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x44,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x5a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x3e,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x54,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x22, 0x54, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x72, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x73, 0x22, 0x55, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x34, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x49, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x52, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x22, 0x31, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x5f, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f,
	0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x22,
	0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x4c,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x15, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb3, 0x2d, 0x0a, 0x0a, 0x4f, 0x72, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x12,
	0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x21, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x12, 0x1e,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x21, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x12,
	0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x12,
	0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x12, 0x22, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x47, 0x44, 0x50, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x47, 0x44, 0x50,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x6c, 0x47, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x53, 0x65, 0x74,
	0x57, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x09, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66,
	0x73, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75,
	0x74, 0x6f, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x12, 0x29, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x27, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78,
	0x65, 0x73, 0x44, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x78, 0x65, 0x73, 0x44, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x78, 0x65,
	0x73, 0x44, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x13, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x70, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x79, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x16,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x12, 0x30, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x12, 0x30, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x29,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x29, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12,
	0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x12,
	0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xbf, 0x01, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x69, 0x62,
	0x6c, 0x61, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x76, 0x32, 0x3b, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x2e,
	0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0f, 0x43, 0x69, 0x74,
	0x79, 0x5c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1b, 0x43,
	0x69, 0x74, 0x79, 0x5c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5c, 0x56, 0x32, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x69, 0x74,
	0x79, 0x3a, 0x3a, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_city_economy_v2_org_service_proto_rawDescOnce sync.Once
	file_city_economy_v2_org_service_proto_rawDescData = file_city_economy_v2_org_service_proto_rawDesc
)

func file_city_economy_v2_org_service_proto_rawDescGZIP() []byte {
	file_city_economy_v2_org_service_proto_rawDescOnce.Do(func() {
		file_city_economy_v2_org_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_economy_v2_org_service_proto_rawDescData)
	})
	return file_city_economy_v2_org_service_proto_rawDescData
}

var file_city_economy_v2_org_service_proto_msgTypes = make([]protoimpl.MessageInfo, 120)
var file_city_economy_v2_org_service_proto_goTypes = []any{
	(*AddOrgRequest)(nil),                    // 0: city.economy.v2.AddOrgRequest
	(*AddOrgResponse)(nil),                   // 1: city.economy.v2.AddOrgResponse
	(*RemoveOrgRequest)(nil),                 // 2: city.economy.v2.RemoveOrgRequest
	(*RemoveOrgResponse)(nil),                // 3: city.economy.v2.RemoveOrgResponse
	(*GetOrgRequest)(nil),                    // 4: city.economy.v2.GetOrgRequest
	(*GetOrgResponse)(nil),                   // 5: city.economy.v2.GetOrgResponse
	(*UpdateOrgRequest)(nil),                 // 6: city.economy.v2.UpdateOrgRequest
	(*UpdateOrgResponse)(nil),                // 7: city.economy.v2.UpdateOrgResponse
	(*AddAgentRequest)(nil),                  // 8: city.economy.v2.AddAgentRequest
	(*AddAgentResponse)(nil),                 // 9: city.economy.v2.AddAgentResponse
	(*RemoveAgentRequest)(nil),               // 10: city.economy.v2.RemoveAgentRequest
	(*RemoveAgentResponse)(nil),              // 11: city.economy.v2.RemoveAgentResponse
	(*GetNominalGDPRequest)(nil),             // 12: city.economy.v2.GetNominalGDPRequest
	(*GetNominalGDPResponse)(nil),            // 13: city.economy.v2.GetNominalGDPResponse
	(*SetNominalGDPRequest)(nil),             // 14: city.economy.v2.SetNominalGDPRequest
	(*SetNominalGDPResponse)(nil),            // 15: city.economy.v2.SetNominalGDPResponse
	(*GetRealGDPRequest)(nil),                // 16: city.economy.v2.GetRealGDPRequest
	(*GetRealGDPResponse)(nil),               // 17: city.economy.v2.GetRealGDPResponse
	(*SetRealGDPRequest)(nil),                // 18: city.economy.v2.SetRealGDPRequest
	(*SetRealGDPResponse)(nil),               // 19: city.economy.v2.SetRealGDPResponse
	(*GetUnemploymentRequest)(nil),           // 20: city.economy.v2.GetUnemploymentRequest
	(*GetUnemploymentResponse)(nil),          // 21: city.economy.v2.GetUnemploymentResponse
	(*SetUnemploymentRequest)(nil),           // 22: city.economy.v2.SetUnemploymentRequest
	(*SetUnemploymentResponse)(nil),          // 23: city.economy.v2.SetUnemploymentResponse
	(*GetWagesRequest)(nil),                  // 24: city.economy.v2.GetWagesRequest
	(*GetWagesResponse)(nil),                 // 25: city.economy.v2.GetWagesResponse
	(*SetWagesRequest)(nil),                  // 26: city.economy.v2.SetWagesRequest
	(*SetWagesResponse)(nil),                 // 27: city.economy.v2.SetWagesResponse
	(*GetPricesRequest)(nil),                 // 28: city.economy.v2.GetPricesRequest
	(*GetPricesResponse)(nil),                // 29: city.economy.v2.GetPricesResponse
	(*SetPricesRequest)(nil),                 // 30: city.economy.v2.SetPricesRequest
	(*SetPricesResponse)(nil),                // 31: city.economy.v2.SetPricesResponse
	(*GetInventoryRequest)(nil),              // 32: city.economy.v2.GetInventoryRequest
	(*GetInventoryResponse)(nil),             // 33: city.economy.v2.GetInventoryResponse
	(*SetInventoryRequest)(nil),              // 34: city.economy.v2.SetInventoryRequest
	(*SetInventoryResponse)(nil),             // 35: city.economy.v2.SetInventoryResponse
	(*GetPriceRequest)(nil),                  // 36: city.economy.v2.GetPriceRequest
	(*GetPriceResponse)(nil),                 // 37: city.economy.v2.GetPriceResponse
	(*SetPriceRequest)(nil),                  // 38: city.economy.v2.SetPriceRequest
	(*SetPriceResponse)(nil),                 // 39: city.economy.v2.SetPriceResponse
	(*GetCurrencyRequest)(nil),               // 40: city.economy.v2.GetCurrencyRequest
	(*GetCurrencyResponse)(nil),              // 41: city.economy.v2.GetCurrencyResponse
	(*SetCurrencyRequest)(nil),               // 42: city.economy.v2.SetCurrencyRequest
	(*SetCurrencyResponse)(nil),              // 43: city.economy.v2.SetCurrencyResponse
	(*GetInterestRateRequest)(nil),           // 44: city.economy.v2.GetInterestRateRequest
	(*GetInterestRateResponse)(nil),          // 45: city.economy.v2.GetInterestRateResponse
	(*SetInterestRateRequest)(nil),           // 46: city.economy.v2.SetInterestRateRequest
	(*SetInterestRateResponse)(nil),          // 47: city.economy.v2.SetInterestRateResponse
	(*GetBracketCutoffsRequest)(nil),         // 48: city.economy.v2.GetBracketCutoffsRequest
	(*GetBracketCutoffsResponse)(nil),        // 49: city.economy.v2.GetBracketCutoffsResponse
	(*SetBracketCutoffsRequest)(nil),         // 50: city.economy.v2.SetBracketCutoffsRequest
	(*SetBracketCutoffsResponse)(nil),        // 51: city.economy.v2.SetBracketCutoffsResponse
	(*GetBracketRatesRequest)(nil),           // 52: city.economy.v2.GetBracketRatesRequest
	(*GetBracketRatesResponse)(nil),          // 53: city.economy.v2.GetBracketRatesResponse
	(*SetBracketRatesRequest)(nil),           // 54: city.economy.v2.SetBracketRatesRequest
	(*SetBracketRatesResponse)(nil),          // 55: city.economy.v2.SetBracketRatesResponse
	(*CalculateTaxesDueRequest)(nil),         // 56: city.economy.v2.CalculateTaxesDueRequest
	(*CalculateTaxesDueResponse)(nil),        // 57: city.economy.v2.CalculateTaxesDueResponse
	(*CalculateConsumptionRequest)(nil),      // 58: city.economy.v2.CalculateConsumptionRequest
	(*CalculateConsumptionResponse)(nil),     // 59: city.economy.v2.CalculateConsumptionResponse
	(*CalculateInterestRequest)(nil),         // 60: city.economy.v2.CalculateInterestRequest
	(*CalculateInterestResponse)(nil),        // 61: city.economy.v2.CalculateInterestResponse
	(*SaveEconomyEntitiesRequest)(nil),       // 62: city.economy.v2.SaveEconomyEntitiesRequest
	(*SaveEconomyEntitiesResponse)(nil),      // 63: city.economy.v2.SaveEconomyEntitiesResponse
	(*LoadEconomyEntitiesRequest)(nil),       // 64: city.economy.v2.LoadEconomyEntitiesRequest
	(*LoadEconomyEntitiesResponse)(nil),      // 65: city.economy.v2.LoadEconomyEntitiesResponse
	(*GetConsumptionCurrencyRequest)(nil),    // 66: city.economy.v2.GetConsumptionCurrencyRequest
	(*GetConsumptionCurrencyResponse)(nil),   // 67: city.economy.v2.GetConsumptionCurrencyResponse
	(*SetConsumptionCurrencyRequest)(nil),    // 68: city.economy.v2.SetConsumptionCurrencyRequest
	(*SetConsumptionCurrencyResponse)(nil),   // 69: city.economy.v2.SetConsumptionCurrencyResponse
	(*GetConsumptionPropensityRequest)(nil),  // 70: city.economy.v2.GetConsumptionPropensityRequest
	(*GetConsumptionPropensityResponse)(nil), // 71: city.economy.v2.GetConsumptionPropensityResponse
	(*SetConsumptionPropensityRequest)(nil),  // 72: city.economy.v2.SetConsumptionPropensityRequest
	(*SetConsumptionPropensityResponse)(nil), // 73: city.economy.v2.SetConsumptionPropensityResponse
	(*GetIncomeCurrencyRequest)(nil),         // 74: city.economy.v2.GetIncomeCurrencyRequest
	(*GetIncomeCurrencyResponse)(nil),        // 75: city.economy.v2.GetIncomeCurrencyResponse
	(*SetIncomeCurrencyRequest)(nil),         // 76: city.economy.v2.SetIncomeCurrencyRequest
	(*SetIncomeCurrencyResponse)(nil),        // 77: city.economy.v2.SetIncomeCurrencyResponse
	(*GetDepressionRequest)(nil),             // 78: city.economy.v2.GetDepressionRequest
	(*GetDepressionResponse)(nil),            // 79: city.economy.v2.GetDepressionResponse
	(*SetDepressionRequest)(nil),             // 80: city.economy.v2.SetDepressionRequest
	(*SetDepressionResponse)(nil),            // 81: city.economy.v2.SetDepressionResponse
	(*GetLocusControlRequest)(nil),           // 82: city.economy.v2.GetLocusControlRequest
	(*GetLocusControlResponse)(nil),          // 83: city.economy.v2.GetLocusControlResponse
	(*SetLocusControlRequest)(nil),           // 84: city.economy.v2.SetLocusControlRequest
	(*SetLocusControlResponse)(nil),          // 85: city.economy.v2.SetLocusControlResponse
	(*GetWorkingHoursRequest)(nil),           // 86: city.economy.v2.GetWorkingHoursRequest
	(*GetWorkingHoursResponse)(nil),          // 87: city.economy.v2.GetWorkingHoursResponse
	(*SetWorkingHoursRequest)(nil),           // 88: city.economy.v2.SetWorkingHoursRequest
	(*SetWorkingHoursResponse)(nil),          // 89: city.economy.v2.SetWorkingHoursResponse
	(*GetOrgEntityIdsRequest)(nil),           // 90: city.economy.v2.GetOrgEntityIdsRequest
	(*GetOrgEntityIdsResponse)(nil),          // 91: city.economy.v2.GetOrgEntityIdsResponse
	(*AddInventoryRequest)(nil),              // 92: city.economy.v2.AddInventoryRequest
	(*AddInventoryResponse)(nil),             // 93: city.economy.v2.AddInventoryResponse
	(*AddPriceRequest)(nil),                  // 94: city.economy.v2.AddPriceRequest
	(*AddPriceResponse)(nil),                 // 95: city.economy.v2.AddPriceResponse
	(*AddCurrencyRequest)(nil),               // 96: city.economy.v2.AddCurrencyRequest
	(*AddCurrencyResponse)(nil),              // 97: city.economy.v2.AddCurrencyResponse
	(*AddInterestRateRequest)(nil),           // 98: city.economy.v2.AddInterestRateRequest
	(*AddInterestRateResponse)(nil),          // 99: city.economy.v2.AddInterestRateResponse
	(*GetEmployeesRequest)(nil),              // 100: city.economy.v2.GetEmployeesRequest
	(*GetEmployeesResponse)(nil),             // 101: city.economy.v2.GetEmployeesResponse
	(*SetEmployeesRequest)(nil),              // 102: city.economy.v2.SetEmployeesRequest
	(*SetEmployeesResponse)(nil),             // 103: city.economy.v2.SetEmployeesResponse
	(*AddEmployeeRequest)(nil),               // 104: city.economy.v2.AddEmployeeRequest
	(*AddEmployeeResponse)(nil),              // 105: city.economy.v2.AddEmployeeResponse
	(*RemoveEmployeeRequest)(nil),            // 106: city.economy.v2.RemoveEmployeeRequest
	(*RemoveEmployeeResponse)(nil),           // 107: city.economy.v2.RemoveEmployeeResponse
	(*GetCitizensRequest)(nil),               // 108: city.economy.v2.GetCitizensRequest
	(*GetCitizensResponse)(nil),              // 109: city.economy.v2.GetCitizensResponse
	(*SetCitizensRequest)(nil),               // 110: city.economy.v2.SetCitizensRequest
	(*SetCitizensResponse)(nil),              // 111: city.economy.v2.SetCitizensResponse
	(*AddCitizenRequest)(nil),                // 112: city.economy.v2.AddCitizenRequest
	(*AddCitizenResponse)(nil),               // 113: city.economy.v2.AddCitizenResponse
	(*RemoveCitizenRequest)(nil),             // 114: city.economy.v2.RemoveCitizenRequest
	(*RemoveCitizenResponse)(nil),            // 115: city.economy.v2.RemoveCitizenResponse
	(*GetAgentRequest)(nil),                  // 116: city.economy.v2.GetAgentRequest
	(*GetAgentResponse)(nil),                 // 117: city.economy.v2.GetAgentResponse
	(*UpdateAgentRequest)(nil),               // 118: city.economy.v2.UpdateAgentRequest
	(*UpdateAgentResponse)(nil),              // 119: city.economy.v2.UpdateAgentResponse
	(*Org)(nil),                              // 120: city.economy.v2.Org
	(*Agent)(nil),                            // 121: city.economy.v2.Agent
	(OrgType)(0),                             // 122: city.economy.v2.OrgType
}
var file_city_economy_v2_org_service_proto_depIdxs = []int32{
	120, // 0: city.economy.v2.AddOrgRequest.org:type_name -> city.economy.v2.Org
	120, // 1: city.economy.v2.GetOrgResponse.org:type_name -> city.economy.v2.Org
	120, // 2: city.economy.v2.UpdateOrgRequest.org:type_name -> city.economy.v2.Org
	121, // 3: city.economy.v2.AddAgentRequest.agent:type_name -> city.economy.v2.Agent
	122, // 4: city.economy.v2.GetOrgEntityIdsRequest.type:type_name -> city.economy.v2.OrgType
	121, // 5: city.economy.v2.GetAgentResponse.agent:type_name -> city.economy.v2.Agent
	121, // 6: city.economy.v2.UpdateAgentRequest.agent:type_name -> city.economy.v2.Agent
	0,   // 7: city.economy.v2.OrgService.AddOrg:input_type -> city.economy.v2.AddOrgRequest
	2,   // 8: city.economy.v2.OrgService.RemoveOrg:input_type -> city.economy.v2.RemoveOrgRequest
	4,   // 9: city.economy.v2.OrgService.GetOrg:input_type -> city.economy.v2.GetOrgRequest
	6,   // 10: city.economy.v2.OrgService.UpdateOrg:input_type -> city.economy.v2.UpdateOrgRequest
	8,   // 11: city.economy.v2.OrgService.AddAgent:input_type -> city.economy.v2.AddAgentRequest
	10,  // 12: city.economy.v2.OrgService.RemoveAgent:input_type -> city.economy.v2.RemoveAgentRequest
	12,  // 13: city.economy.v2.OrgService.GetNominalGDP:input_type -> city.economy.v2.GetNominalGDPRequest
	14,  // 14: city.economy.v2.OrgService.SetNominalGDP:input_type -> city.economy.v2.SetNominalGDPRequest
	16,  // 15: city.economy.v2.OrgService.GetRealGDP:input_type -> city.economy.v2.GetRealGDPRequest
	18,  // 16: city.economy.v2.OrgService.SetRealGDP:input_type -> city.economy.v2.SetRealGDPRequest
	20,  // 17: city.economy.v2.OrgService.GetUnemployment:input_type -> city.economy.v2.GetUnemploymentRequest
	22,  // 18: city.economy.v2.OrgService.SetUnemployment:input_type -> city.economy.v2.SetUnemploymentRequest
	24,  // 19: city.economy.v2.OrgService.GetWages:input_type -> city.economy.v2.GetWagesRequest
	26,  // 20: city.economy.v2.OrgService.SetWages:input_type -> city.economy.v2.SetWagesRequest
	28,  // 21: city.economy.v2.OrgService.GetPrices:input_type -> city.economy.v2.GetPricesRequest
	30,  // 22: city.economy.v2.OrgService.SetPrices:input_type -> city.economy.v2.SetPricesRequest
	32,  // 23: city.economy.v2.OrgService.GetInventory:input_type -> city.economy.v2.GetInventoryRequest
	34,  // 24: city.economy.v2.OrgService.SetInventory:input_type -> city.economy.v2.SetInventoryRequest
	92,  // 25: city.economy.v2.OrgService.AddInventory:input_type -> city.economy.v2.AddInventoryRequest
	36,  // 26: city.economy.v2.OrgService.GetPrice:input_type -> city.economy.v2.GetPriceRequest
	38,  // 27: city.economy.v2.OrgService.SetPrice:input_type -> city.economy.v2.SetPriceRequest
	94,  // 28: city.economy.v2.OrgService.AddPrice:input_type -> city.economy.v2.AddPriceRequest
	40,  // 29: city.economy.v2.OrgService.GetCurrency:input_type -> city.economy.v2.GetCurrencyRequest
	42,  // 30: city.economy.v2.OrgService.SetCurrency:input_type -> city.economy.v2.SetCurrencyRequest
	96,  // 31: city.economy.v2.OrgService.AddCurrency:input_type -> city.economy.v2.AddCurrencyRequest
	44,  // 32: city.economy.v2.OrgService.GetInterestRate:input_type -> city.economy.v2.GetInterestRateRequest
	46,  // 33: city.economy.v2.OrgService.SetInterestRate:input_type -> city.economy.v2.SetInterestRateRequest
	98,  // 34: city.economy.v2.OrgService.AddInterestRate:input_type -> city.economy.v2.AddInterestRateRequest
	48,  // 35: city.economy.v2.OrgService.GetBracketCutoffs:input_type -> city.economy.v2.GetBracketCutoffsRequest
	50,  // 36: city.economy.v2.OrgService.SetBracketCutoffs:input_type -> city.economy.v2.SetBracketCutoffsRequest
	52,  // 37: city.economy.v2.OrgService.GetBracketRates:input_type -> city.economy.v2.GetBracketRatesRequest
	54,  // 38: city.economy.v2.OrgService.SetBracketRates:input_type -> city.economy.v2.SetBracketRatesRequest
	56,  // 39: city.economy.v2.OrgService.CalculateTaxesDue:input_type -> city.economy.v2.CalculateTaxesDueRequest
	58,  // 40: city.economy.v2.OrgService.CalculateConsumption:input_type -> city.economy.v2.CalculateConsumptionRequest
	60,  // 41: city.economy.v2.OrgService.CalculateInterest:input_type -> city.economy.v2.CalculateInterestRequest
	62,  // 42: city.economy.v2.OrgService.SaveEconomyEntities:input_type -> city.economy.v2.SaveEconomyEntitiesRequest
	64,  // 43: city.economy.v2.OrgService.LoadEconomyEntities:input_type -> city.economy.v2.LoadEconomyEntitiesRequest
	66,  // 44: city.economy.v2.OrgService.GetConsumptionCurrency:input_type -> city.economy.v2.GetConsumptionCurrencyRequest
	68,  // 45: city.economy.v2.OrgService.SetConsumptionCurrency:input_type -> city.economy.v2.SetConsumptionCurrencyRequest
	70,  // 46: city.economy.v2.OrgService.GetConsumptionPropensity:input_type -> city.economy.v2.GetConsumptionPropensityRequest
	72,  // 47: city.economy.v2.OrgService.SetConsumptionPropensity:input_type -> city.economy.v2.SetConsumptionPropensityRequest
	74,  // 48: city.economy.v2.OrgService.GetIncomeCurrency:input_type -> city.economy.v2.GetIncomeCurrencyRequest
	76,  // 49: city.economy.v2.OrgService.SetIncomeCurrency:input_type -> city.economy.v2.SetIncomeCurrencyRequest
	78,  // 50: city.economy.v2.OrgService.GetDepression:input_type -> city.economy.v2.GetDepressionRequest
	80,  // 51: city.economy.v2.OrgService.SetDepression:input_type -> city.economy.v2.SetDepressionRequest
	82,  // 52: city.economy.v2.OrgService.GetLocusControl:input_type -> city.economy.v2.GetLocusControlRequest
	84,  // 53: city.economy.v2.OrgService.SetLocusControl:input_type -> city.economy.v2.SetLocusControlRequest
	86,  // 54: city.economy.v2.OrgService.GetWorkingHours:input_type -> city.economy.v2.GetWorkingHoursRequest
	88,  // 55: city.economy.v2.OrgService.SetWorkingHours:input_type -> city.economy.v2.SetWorkingHoursRequest
	90,  // 56: city.economy.v2.OrgService.GetOrgEntityIds:input_type -> city.economy.v2.GetOrgEntityIdsRequest
	100, // 57: city.economy.v2.OrgService.GetEmployees:input_type -> city.economy.v2.GetEmployeesRequest
	102, // 58: city.economy.v2.OrgService.SetEmployees:input_type -> city.economy.v2.SetEmployeesRequest
	104, // 59: city.economy.v2.OrgService.AddEmployee:input_type -> city.economy.v2.AddEmployeeRequest
	106, // 60: city.economy.v2.OrgService.RemoveEmployee:input_type -> city.economy.v2.RemoveEmployeeRequest
	108, // 61: city.economy.v2.OrgService.GetCitizens:input_type -> city.economy.v2.GetCitizensRequest
	110, // 62: city.economy.v2.OrgService.SetCitizens:input_type -> city.economy.v2.SetCitizensRequest
	112, // 63: city.economy.v2.OrgService.AddCitizen:input_type -> city.economy.v2.AddCitizenRequest
	114, // 64: city.economy.v2.OrgService.RemoveCitizen:input_type -> city.economy.v2.RemoveCitizenRequest
	116, // 65: city.economy.v2.OrgService.GetAgent:input_type -> city.economy.v2.GetAgentRequest
	118, // 66: city.economy.v2.OrgService.UpdateAgent:input_type -> city.economy.v2.UpdateAgentRequest
	1,   // 67: city.economy.v2.OrgService.AddOrg:output_type -> city.economy.v2.AddOrgResponse
	3,   // 68: city.economy.v2.OrgService.RemoveOrg:output_type -> city.economy.v2.RemoveOrgResponse
	5,   // 69: city.economy.v2.OrgService.GetOrg:output_type -> city.economy.v2.GetOrgResponse
	7,   // 70: city.economy.v2.OrgService.UpdateOrg:output_type -> city.economy.v2.UpdateOrgResponse
	9,   // 71: city.economy.v2.OrgService.AddAgent:output_type -> city.economy.v2.AddAgentResponse
	11,  // 72: city.economy.v2.OrgService.RemoveAgent:output_type -> city.economy.v2.RemoveAgentResponse
	13,  // 73: city.economy.v2.OrgService.GetNominalGDP:output_type -> city.economy.v2.GetNominalGDPResponse
	15,  // 74: city.economy.v2.OrgService.SetNominalGDP:output_type -> city.economy.v2.SetNominalGDPResponse
	17,  // 75: city.economy.v2.OrgService.GetRealGDP:output_type -> city.economy.v2.GetRealGDPResponse
	19,  // 76: city.economy.v2.OrgService.SetRealGDP:output_type -> city.economy.v2.SetRealGDPResponse
	21,  // 77: city.economy.v2.OrgService.GetUnemployment:output_type -> city.economy.v2.GetUnemploymentResponse
	23,  // 78: city.economy.v2.OrgService.SetUnemployment:output_type -> city.economy.v2.SetUnemploymentResponse
	25,  // 79: city.economy.v2.OrgService.GetWages:output_type -> city.economy.v2.GetWagesResponse
	27,  // 80: city.economy.v2.OrgService.SetWages:output_type -> city.economy.v2.SetWagesResponse
	29,  // 81: city.economy.v2.OrgService.GetPrices:output_type -> city.economy.v2.GetPricesResponse
	31,  // 82: city.economy.v2.OrgService.SetPrices:output_type -> city.economy.v2.SetPricesResponse
	33,  // 83: city.economy.v2.OrgService.GetInventory:output_type -> city.economy.v2.GetInventoryResponse
	35,  // 84: city.economy.v2.OrgService.SetInventory:output_type -> city.economy.v2.SetInventoryResponse
	93,  // 85: city.economy.v2.OrgService.AddInventory:output_type -> city.economy.v2.AddInventoryResponse
	37,  // 86: city.economy.v2.OrgService.GetPrice:output_type -> city.economy.v2.GetPriceResponse
	39,  // 87: city.economy.v2.OrgService.SetPrice:output_type -> city.economy.v2.SetPriceResponse
	95,  // 88: city.economy.v2.OrgService.AddPrice:output_type -> city.economy.v2.AddPriceResponse
	41,  // 89: city.economy.v2.OrgService.GetCurrency:output_type -> city.economy.v2.GetCurrencyResponse
	43,  // 90: city.economy.v2.OrgService.SetCurrency:output_type -> city.economy.v2.SetCurrencyResponse
	97,  // 91: city.economy.v2.OrgService.AddCurrency:output_type -> city.economy.v2.AddCurrencyResponse
	45,  // 92: city.economy.v2.OrgService.GetInterestRate:output_type -> city.economy.v2.GetInterestRateResponse
	47,  // 93: city.economy.v2.OrgService.SetInterestRate:output_type -> city.economy.v2.SetInterestRateResponse
	99,  // 94: city.economy.v2.OrgService.AddInterestRate:output_type -> city.economy.v2.AddInterestRateResponse
	49,  // 95: city.economy.v2.OrgService.GetBracketCutoffs:output_type -> city.economy.v2.GetBracketCutoffsResponse
	51,  // 96: city.economy.v2.OrgService.SetBracketCutoffs:output_type -> city.economy.v2.SetBracketCutoffsResponse
	53,  // 97: city.economy.v2.OrgService.GetBracketRates:output_type -> city.economy.v2.GetBracketRatesResponse
	55,  // 98: city.economy.v2.OrgService.SetBracketRates:output_type -> city.economy.v2.SetBracketRatesResponse
	57,  // 99: city.economy.v2.OrgService.CalculateTaxesDue:output_type -> city.economy.v2.CalculateTaxesDueResponse
	59,  // 100: city.economy.v2.OrgService.CalculateConsumption:output_type -> city.economy.v2.CalculateConsumptionResponse
	61,  // 101: city.economy.v2.OrgService.CalculateInterest:output_type -> city.economy.v2.CalculateInterestResponse
	63,  // 102: city.economy.v2.OrgService.SaveEconomyEntities:output_type -> city.economy.v2.SaveEconomyEntitiesResponse
	65,  // 103: city.economy.v2.OrgService.LoadEconomyEntities:output_type -> city.economy.v2.LoadEconomyEntitiesResponse
	67,  // 104: city.economy.v2.OrgService.GetConsumptionCurrency:output_type -> city.economy.v2.GetConsumptionCurrencyResponse
	69,  // 105: city.economy.v2.OrgService.SetConsumptionCurrency:output_type -> city.economy.v2.SetConsumptionCurrencyResponse
	71,  // 106: city.economy.v2.OrgService.GetConsumptionPropensity:output_type -> city.economy.v2.GetConsumptionPropensityResponse
	73,  // 107: city.economy.v2.OrgService.SetConsumptionPropensity:output_type -> city.economy.v2.SetConsumptionPropensityResponse
	75,  // 108: city.economy.v2.OrgService.GetIncomeCurrency:output_type -> city.economy.v2.GetIncomeCurrencyResponse
	77,  // 109: city.economy.v2.OrgService.SetIncomeCurrency:output_type -> city.economy.v2.SetIncomeCurrencyResponse
	79,  // 110: city.economy.v2.OrgService.GetDepression:output_type -> city.economy.v2.GetDepressionResponse
	81,  // 111: city.economy.v2.OrgService.SetDepression:output_type -> city.economy.v2.SetDepressionResponse
	83,  // 112: city.economy.v2.OrgService.GetLocusControl:output_type -> city.economy.v2.GetLocusControlResponse
	85,  // 113: city.economy.v2.OrgService.SetLocusControl:output_type -> city.economy.v2.SetLocusControlResponse
	87,  // 114: city.economy.v2.OrgService.GetWorkingHours:output_type -> city.economy.v2.GetWorkingHoursResponse
	89,  // 115: city.economy.v2.OrgService.SetWorkingHours:output_type -> city.economy.v2.SetWorkingHoursResponse
	91,  // 116: city.economy.v2.OrgService.GetOrgEntityIds:output_type -> city.economy.v2.GetOrgEntityIdsResponse
	101, // 117: city.economy.v2.OrgService.GetEmployees:output_type -> city.economy.v2.GetEmployeesResponse
	103, // 118: city.economy.v2.OrgService.SetEmployees:output_type -> city.economy.v2.SetEmployeesResponse
	105, // 119: city.economy.v2.OrgService.AddEmployee:output_type -> city.economy.v2.AddEmployeeResponse
	107, // 120: city.economy.v2.OrgService.RemoveEmployee:output_type -> city.economy.v2.RemoveEmployeeResponse
	109, // 121: city.economy.v2.OrgService.GetCitizens:output_type -> city.economy.v2.GetCitizensResponse
	111, // 122: city.economy.v2.OrgService.SetCitizens:output_type -> city.economy.v2.SetCitizensResponse
	113, // 123: city.economy.v2.OrgService.AddCitizen:output_type -> city.economy.v2.AddCitizenResponse
	115, // 124: city.economy.v2.OrgService.RemoveCitizen:output_type -> city.economy.v2.RemoveCitizenResponse
	117, // 125: city.economy.v2.OrgService.GetAgent:output_type -> city.economy.v2.GetAgentResponse
	119, // 126: city.economy.v2.OrgService.UpdateAgent:output_type -> city.economy.v2.UpdateAgentResponse
	67,  // [67:127] is the sub-list for method output_type
	7,   // [7:67] is the sub-list for method input_type
	7,   // [7:7] is the sub-list for extension type_name
	7,   // [7:7] is the sub-list for extension extendee
	0,   // [0:7] is the sub-list for field type_name
}

func init() { file_city_economy_v2_org_service_proto_init() }
func file_city_economy_v2_org_service_proto_init() {
	if File_city_economy_v2_org_service_proto != nil {
		return
	}
	file_city_economy_v2_economy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_economy_v2_org_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   120,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_economy_v2_org_service_proto_goTypes,
		DependencyIndexes: file_city_economy_v2_org_service_proto_depIdxs,
		MessageInfos:      file_city_economy_v2_org_service_proto_msgTypes,
	}.Build()
	File_city_economy_v2_org_service_proto = out.File
	file_city_economy_v2_org_service_proto_rawDesc = nil
	file_city_economy_v2_org_service_proto_goTypes = nil
	file_city_economy_v2_org_service_proto_depIdxs = nil
}

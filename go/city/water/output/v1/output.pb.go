// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: city/water/output/v1/output.proto

package outputv1

import (
	v2 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkType int32

const (
	LinkType_LINK_TYPE_UNSPECIFIED LinkType = 0
	LinkType_LINK_TYPE_PIPE        LinkType = 1
	LinkType_LINK_TYPE_PUMP        LinkType = 2
)

// Enum value maps for LinkType.
var (
	LinkType_name = map[int32]string{
		0: "LINK_TYPE_UNSPECIFIED",
		1: "LINK_TYPE_PIPE",
		2: "LINK_TYPE_PUMP",
	}
	LinkType_value = map[string]int32{
		"LINK_TYPE_UNSPECIFIED": 0,
		"LINK_TYPE_PIPE":        1,
		"LINK_TYPE_PUMP":        2,
	}
)

func (x LinkType) Enum() *LinkType {
	p := new(LinkType)
	*p = x
	return p
}

func (x LinkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_water_output_v1_output_proto_enumTypes[0].Descriptor()
}

func (LinkType) Type() protoreflect.EnumType {
	return &file_city_water_output_v1_output_proto_enumTypes[0]
}

func (x LinkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkType.Descriptor instead.
func (LinkType) EnumDescriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{0}
}

// 宏观道路水深
type Road struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Depth         float64                `protobuf:"fixed64,2,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Road) Reset() {
	*x = Road{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Road) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Road) ProtoMessage() {}

func (x *Road) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Road.ProtoReflect.Descriptor instead.
func (*Road) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{0}
}

func (x *Road) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Road) GetDepth() float64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

// 微观水深点
type RoadFlood struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *v2.LongLatPosition    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Depth         float64                `protobuf:"fixed64,2,opt,name=depth,proto3" json:"depth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoadFlood) Reset() {
	*x = RoadFlood{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoadFlood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoadFlood) ProtoMessage() {}

func (x *RoadFlood) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoadFlood.ProtoReflect.Descriptor instead.
func (*RoadFlood) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{1}
}

func (x *RoadFlood) GetPosition() *v2.LongLatPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *RoadFlood) GetDepth() float64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type DetailedRoad struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Depths        []*RoadFlood           `protobuf:"bytes,2,rep,name=depths,proto3" json:"depths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedRoad) Reset() {
	*x = DetailedRoad{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedRoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedRoad) ProtoMessage() {}

func (x *DetailedRoad) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedRoad.ProtoReflect.Descriptor instead.
func (*DetailedRoad) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{2}
}

func (x *DetailedRoad) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DetailedRoad) GetDepths() []*RoadFlood {
	if x != nil {
		return x.Depths
	}
	return nil
}

// 节点状态
type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node分两种, junction和outfall, outfall的id将以"_out"后缀
	// 但输出不关心NodeType, 不需用type字段显示记录
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 水头，单位：米
	Head          float64 `protobuf:"fixed64,2,opt,name=head,proto3" json:"head,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetHead() float64 {
	if x != nil {
		return x.Head
	}
	return 0
}

// 边的状态
type Link struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// type为LINK_TYPE_PUMP的id将以"Pump_"前缀
	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type LinkType `protobuf:"varint,2,opt,name=type,proto3,enum=city.water.output.v1.LinkType" json:"type,omitempty"`
	// 流量
	// 排水网，单位：m3/s
	// 供水网，单位：L/s
	Flow          float64 `protobuf:"fixed64,3,opt,name=flow,proto3" json:"flow,omitempty"`
	Ok            bool    `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{4}
}

func (x *Link) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Link) GetType() LinkType {
	if x != nil {
		return x.Type
	}
	return LinkType_LINK_TYPE_UNSPECIFIED
}

func (x *Link) GetFlow() float64 {
	if x != nil {
		return x.Flow
	}
	return 0
}

func (x *Link) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type Aoi struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnsatisfiedNum   int32                  `protobuf:"varint,2,opt,name=unsatisfied_num,json=unsatisfiedNum,proto3" json:"unsatisfied_num,omitempty"`        // AOI用水需求不满足人数
	UnsatisfiedRatio float64                `protobuf:"fixed64,3,opt,name=unsatisfied_ratio,json=unsatisfiedRatio,proto3" json:"unsatisfied_ratio,omitempty"` // AOI用水需求不满足比例
	Demand           float64                `protobuf:"fixed64,4,opt,name=demand,proto3" json:"demand,omitempty"`                                             // AOI用水需求量 m3/s
	Supply           float64                `protobuf:"fixed64,5,opt,name=supply,proto3" json:"supply,omitempty"`                                             // AOI供水量 m3/s
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Aoi) Reset() {
	*x = Aoi{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aoi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aoi) ProtoMessage() {}

func (x *Aoi) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aoi.ProtoReflect.Descriptor instead.
func (*Aoi) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{5}
}

func (x *Aoi) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Aoi) GetUnsatisfiedNum() int32 {
	if x != nil {
		return x.UnsatisfiedNum
	}
	return 0
}

func (x *Aoi) GetUnsatisfiedRatio() float64 {
	if x != nil {
		return x.UnsatisfiedRatio
	}
	return 0
}

func (x *Aoi) GetDemand() float64 {
	if x != nil {
		return x.Demand
	}
	return 0
}

func (x *Aoi) GetSupply() float64 {
	if x != nil {
		return x.Supply
	}
	return 0
}

// 排水基础信息
type DrainageBasicInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AveragePower    float64                `protobuf:"fixed64,1,opt,name=average_power,json=averagePower,proto3" json:"average_power,omitempty"`          // 排水泵平均功率 kW
	UndrainedVolume float64                `protobuf:"fixed64,2,opt,name=undrained_volume,json=undrainedVolume,proto3" json:"undrained_volume,omitempty"` // 待排水量 m3
	DrainedVolume   float64                `protobuf:"fixed64,3,opt,name=drained_volume,json=drainedVolume,proto3" json:"drained_volume,omitempty"`       // 已排水量 m3
	AverageFlow     float64                `protobuf:"fixed64,4,opt,name=average_flow,json=averageFlow,proto3" json:"average_flow,omitempty"`             // 平均流量 m3/s
	FloodedVolume   float64                `protobuf:"fixed64,5,opt,name=flooded_volume,json=floodedVolume,proto3" json:"flooded_volume,omitempty"`       // 积水水量 m3
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DrainageBasicInfo) Reset() {
	*x = DrainageBasicInfo{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainageBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainageBasicInfo) ProtoMessage() {}

func (x *DrainageBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainageBasicInfo.ProtoReflect.Descriptor instead.
func (*DrainageBasicInfo) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{6}
}

func (x *DrainageBasicInfo) GetAveragePower() float64 {
	if x != nil {
		return x.AveragePower
	}
	return 0
}

func (x *DrainageBasicInfo) GetUndrainedVolume() float64 {
	if x != nil {
		return x.UndrainedVolume
	}
	return 0
}

func (x *DrainageBasicInfo) GetDrainedVolume() float64 {
	if x != nil {
		return x.DrainedVolume
	}
	return 0
}

func (x *DrainageBasicInfo) GetAverageFlow() float64 {
	if x != nil {
		return x.AverageFlow
	}
	return 0
}

func (x *DrainageBasicInfo) GetFloodedVolume() float64 {
	if x != nil {
		return x.FloodedVolume
	}
	return 0
}

// 供水基础信息
type SupplyBasicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AveragePower  float64                `protobuf:"fixed64,1,opt,name=average_power,json=averagePower,proto3" json:"average_power,omitempty"` // 供水泵平均功率 kW
	AverageFlow   float64                `protobuf:"fixed64,2,opt,name=average_flow,json=averageFlow,proto3" json:"average_flow,omitempty"`    // 平均流量 m3/s
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupplyBasicInfo) Reset() {
	*x = SupplyBasicInfo{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyBasicInfo) ProtoMessage() {}

func (x *SupplyBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyBasicInfo.ProtoReflect.Descriptor instead.
func (*SupplyBasicInfo) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{7}
}

func (x *SupplyBasicInfo) GetAveragePower() float64 {
	if x != nil {
		return x.AveragePower
	}
	return 0
}

func (x *SupplyBasicInfo) GetAverageFlow() float64 {
	if x != nil {
		return x.AverageFlow
	}
	return 0
}

// 供水需求及满足情况
type SupplyDemandStatistics struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PersonsDemand           float64                `protobuf:"fixed64,1,opt,name=persons_demand,json=personsDemand,proto3" json:"persons_demand,omitempty"`                                 // 居民总用水需求 m3/s
	UnsatisfiedPersons      int32                  `protobuf:"varint,2,opt,name=unsatisfied_persons,json=unsatisfiedPersons,proto3" json:"unsatisfied_persons,omitempty"`                   // 居民需求不满足人数
	UnsatisfiedPersonsRatio float64                `protobuf:"fixed64,3,opt,name=unsatisfied_persons_ratio,json=unsatisfiedPersonsRatio,proto3" json:"unsatisfied_persons_ratio,omitempty"` // 居民需求不满足比例
	AoisDemand              float64                `protobuf:"fixed64,4,opt,name=aois_demand,json=aoisDemand,proto3" json:"aois_demand,omitempty"`                                          // AOI总用水需求 m3/s
	UnsatisfiedAois         int32                  `protobuf:"varint,5,opt,name=unsatisfied_aois,json=unsatisfiedAois,proto3" json:"unsatisfied_aois,omitempty"`                            // AOI需求不满足个数
	UnsatisfiedAoisRatio    float64                `protobuf:"fixed64,6,opt,name=unsatisfied_aois_ratio,json=unsatisfiedAoisRatio,proto3" json:"unsatisfied_aois_ratio,omitempty"`          // AOI需求不满足比例
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SupplyDemandStatistics) Reset() {
	*x = SupplyDemandStatistics{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyDemandStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyDemandStatistics) ProtoMessage() {}

func (x *SupplyDemandStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyDemandStatistics.ProtoReflect.Descriptor instead.
func (*SupplyDemandStatistics) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{8}
}

func (x *SupplyDemandStatistics) GetPersonsDemand() float64 {
	if x != nil {
		return x.PersonsDemand
	}
	return 0
}

func (x *SupplyDemandStatistics) GetUnsatisfiedPersons() int32 {
	if x != nil {
		return x.UnsatisfiedPersons
	}
	return 0
}

func (x *SupplyDemandStatistics) GetUnsatisfiedPersonsRatio() float64 {
	if x != nil {
		return x.UnsatisfiedPersonsRatio
	}
	return 0
}

func (x *SupplyDemandStatistics) GetAoisDemand() float64 {
	if x != nil {
		return x.AoisDemand
	}
	return 0
}

func (x *SupplyDemandStatistics) GetUnsatisfiedAois() int32 {
	if x != nil {
		return x.UnsatisfiedAois
	}
	return 0
}

func (x *SupplyDemandStatistics) GetUnsatisfiedAoisRatio() float64 {
	if x != nil {
		return x.UnsatisfiedAoisRatio
	}
	return 0
}

// 水泵损坏情况
type FailureStatistics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FailureNum    int32                  `protobuf:"varint,1,opt,name=failure_num,json=failureNum,proto3" json:"failure_num,omitempty"`
	NormalNum     int32                  `protobuf:"varint,2,opt,name=normal_num,json=normalNum,proto3" json:"normal_num,omitempty"`
	FailureRatio  float64                `protobuf:"fixed64,3,opt,name=failure_ratio,json=failureRatio,proto3" json:"failure_ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureStatistics) Reset() {
	*x = FailureStatistics{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureStatistics) ProtoMessage() {}

func (x *FailureStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureStatistics.ProtoReflect.Descriptor instead.
func (*FailureStatistics) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{9}
}

func (x *FailureStatistics) GetFailureNum() int32 {
	if x != nil {
		return x.FailureNum
	}
	return 0
}

func (x *FailureStatistics) GetNormalNum() int32 {
	if x != nil {
		return x.NormalNum
	}
	return 0
}

func (x *FailureStatistics) GetFailureRatio() float64 {
	if x != nil {
		return x.FailureRatio
	}
	return 0
}

// 排水指标
type DrainageMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DrainageBasicInfo *DrainageBasicInfo     `protobuf:"bytes,1,opt,name=drainage_basic_info,json=drainageBasicInfo,proto3" json:"drainage_basic_info,omitempty"`
	LoadRatio         float64                `protobuf:"fixed64,2,opt,name=load_ratio,json=loadRatio,proto3" json:"load_ratio,omitempty"` // 负载
	FailureStatistics *FailureStatistics     `protobuf:"bytes,3,opt,name=failure_statistics,json=failureStatistics,proto3" json:"failure_statistics,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DrainageMetrics) Reset() {
	*x = DrainageMetrics{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainageMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainageMetrics) ProtoMessage() {}

func (x *DrainageMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainageMetrics.ProtoReflect.Descriptor instead.
func (*DrainageMetrics) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{10}
}

func (x *DrainageMetrics) GetDrainageBasicInfo() *DrainageBasicInfo {
	if x != nil {
		return x.DrainageBasicInfo
	}
	return nil
}

func (x *DrainageMetrics) GetLoadRatio() float64 {
	if x != nil {
		return x.LoadRatio
	}
	return 0
}

func (x *DrainageMetrics) GetFailureStatistics() *FailureStatistics {
	if x != nil {
		return x.FailureStatistics
	}
	return nil
}

// 供水指标
type SupplyMetrics struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	SupplyBasicInfo        *SupplyBasicInfo        `protobuf:"bytes,1,opt,name=supply_basic_info,json=supplyBasicInfo,proto3" json:"supply_basic_info,omitempty"`
	SupplyDemandStatistics *SupplyDemandStatistics `protobuf:"bytes,2,opt,name=supply_demand_statistics,json=supplyDemandStatistics,proto3" json:"supply_demand_statistics,omitempty"`
	LoadRatio              float64                 `protobuf:"fixed64,3,opt,name=load_ratio,json=loadRatio,proto3" json:"load_ratio,omitempty"` // 负载
	FailureStatistics      *FailureStatistics      `protobuf:"bytes,4,opt,name=failure_statistics,json=failureStatistics,proto3" json:"failure_statistics,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SupplyMetrics) Reset() {
	*x = SupplyMetrics{}
	mi := &file_city_water_output_v1_output_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyMetrics) ProtoMessage() {}

func (x *SupplyMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_city_water_output_v1_output_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyMetrics.ProtoReflect.Descriptor instead.
func (*SupplyMetrics) Descriptor() ([]byte, []int) {
	return file_city_water_output_v1_output_proto_rawDescGZIP(), []int{11}
}

func (x *SupplyMetrics) GetSupplyBasicInfo() *SupplyBasicInfo {
	if x != nil {
		return x.SupplyBasicInfo
	}
	return nil
}

func (x *SupplyMetrics) GetSupplyDemandStatistics() *SupplyDemandStatistics {
	if x != nil {
		return x.SupplyDemandStatistics
	}
	return nil
}

func (x *SupplyMetrics) GetLoadRatio() float64 {
	if x != nil {
		return x.LoadRatio
	}
	return 0
}

func (x *SupplyMetrics) GetFailureStatistics() *FailureStatistics {
	if x != nil {
		return x.FailureStatistics
	}
	return nil
}

var File_city_water_output_v1_output_proto protoreflect.FileDescriptor

const file_city_water_output_v1_output_proto_rawDesc = "" +
	"\n" +
	"!city/water/output/v1/output.proto\x12\x14city.water.output.v1\x1a\x15city/geo/v2/geo.proto\",\n" +
	"\x04Road\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x01R\x05depth\"[\n" +
	"\tRoadFlood\x128\n" +
	"\bposition\x18\x01 \x01(\v2\x1c.city.geo.v2.LongLatPositionR\bposition\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\x01R\x05depth\"W\n" +
	"\fDetailedRoad\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x127\n" +
	"\x06depths\x18\x02 \x03(\v2\x1f.city.water.output.v1.RoadFloodR\x06depths\"*\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04head\x18\x02 \x01(\x01R\x04head\"n\n" +
	"\x04Link\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.city.water.output.v1.LinkTypeR\x04type\x12\x12\n" +
	"\x04flow\x18\x03 \x01(\x01R\x04flow\x12\x0e\n" +
	"\x02ok\x18\x04 \x01(\bR\x02ok\"\x9b\x01\n" +
	"\x03Aoi\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12'\n" +
	"\x0funsatisfied_num\x18\x02 \x01(\x05R\x0eunsatisfiedNum\x12+\n" +
	"\x11unsatisfied_ratio\x18\x03 \x01(\x01R\x10unsatisfiedRatio\x12\x16\n" +
	"\x06demand\x18\x04 \x01(\x01R\x06demand\x12\x16\n" +
	"\x06supply\x18\x05 \x01(\x01R\x06supply\"\xd4\x01\n" +
	"\x11DrainageBasicInfo\x12#\n" +
	"\raverage_power\x18\x01 \x01(\x01R\faveragePower\x12)\n" +
	"\x10undrained_volume\x18\x02 \x01(\x01R\x0fundrainedVolume\x12%\n" +
	"\x0edrained_volume\x18\x03 \x01(\x01R\rdrainedVolume\x12!\n" +
	"\faverage_flow\x18\x04 \x01(\x01R\vaverageFlow\x12%\n" +
	"\x0eflooded_volume\x18\x05 \x01(\x01R\rfloodedVolume\"Y\n" +
	"\x0fSupplyBasicInfo\x12#\n" +
	"\raverage_power\x18\x01 \x01(\x01R\faveragePower\x12!\n" +
	"\faverage_flow\x18\x02 \x01(\x01R\vaverageFlow\"\xae\x02\n" +
	"\x16SupplyDemandStatistics\x12%\n" +
	"\x0epersons_demand\x18\x01 \x01(\x01R\rpersonsDemand\x12/\n" +
	"\x13unsatisfied_persons\x18\x02 \x01(\x05R\x12unsatisfiedPersons\x12:\n" +
	"\x19unsatisfied_persons_ratio\x18\x03 \x01(\x01R\x17unsatisfiedPersonsRatio\x12\x1f\n" +
	"\vaois_demand\x18\x04 \x01(\x01R\n" +
	"aoisDemand\x12)\n" +
	"\x10unsatisfied_aois\x18\x05 \x01(\x05R\x0funsatisfiedAois\x124\n" +
	"\x16unsatisfied_aois_ratio\x18\x06 \x01(\x01R\x14unsatisfiedAoisRatio\"x\n" +
	"\x11FailureStatistics\x12\x1f\n" +
	"\vfailure_num\x18\x01 \x01(\x05R\n" +
	"failureNum\x12\x1d\n" +
	"\n" +
	"normal_num\x18\x02 \x01(\x05R\tnormalNum\x12#\n" +
	"\rfailure_ratio\x18\x03 \x01(\x01R\ffailureRatio\"\xe1\x01\n" +
	"\x0fDrainageMetrics\x12W\n" +
	"\x13drainage_basic_info\x18\x01 \x01(\v2'.city.water.output.v1.DrainageBasicInfoR\x11drainageBasicInfo\x12\x1d\n" +
	"\n" +
	"load_ratio\x18\x02 \x01(\x01R\tloadRatio\x12V\n" +
	"\x12failure_statistics\x18\x03 \x01(\v2'.city.water.output.v1.FailureStatisticsR\x11failureStatistics\"\xc1\x02\n" +
	"\rSupplyMetrics\x12Q\n" +
	"\x11supply_basic_info\x18\x01 \x01(\v2%.city.water.output.v1.SupplyBasicInfoR\x0fsupplyBasicInfo\x12f\n" +
	"\x18supply_demand_statistics\x18\x02 \x01(\v2,.city.water.output.v1.SupplyDemandStatisticsR\x16supplyDemandStatistics\x12\x1d\n" +
	"\n" +
	"load_ratio\x18\x03 \x01(\x01R\tloadRatio\x12V\n" +
	"\x12failure_statistics\x18\x04 \x01(\v2'.city.water.output.v1.FailureStatisticsR\x11failureStatistics*M\n" +
	"\bLinkType\x12\x19\n" +
	"\x15LINK_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eLINK_TYPE_PIPE\x10\x01\x12\x12\n" +
	"\x0eLINK_TYPE_PUMP\x10\x02B\xd9\x01\n" +
	"\x18com.city.water.output.v1B\vOutputProtoP\x01Z=git.fiblab.net/sim/protos/v2/go/city/water/output/v1;outputv1\xa2\x02\x03CWO\xaa\x02\x14City.Water.Output.V1\xca\x02\x14City\\Water\\Output\\V1\xe2\x02 City\\Water\\Output\\V1\\GPBMetadata\xea\x02\x17City::Water::Output::V1b\x06proto3"

var (
	file_city_water_output_v1_output_proto_rawDescOnce sync.Once
	file_city_water_output_v1_output_proto_rawDescData []byte
)

func file_city_water_output_v1_output_proto_rawDescGZIP() []byte {
	file_city_water_output_v1_output_proto_rawDescOnce.Do(func() {
		file_city_water_output_v1_output_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_water_output_v1_output_proto_rawDesc), len(file_city_water_output_v1_output_proto_rawDesc)))
	})
	return file_city_water_output_v1_output_proto_rawDescData
}

var file_city_water_output_v1_output_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_city_water_output_v1_output_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_city_water_output_v1_output_proto_goTypes = []any{
	(LinkType)(0),                  // 0: city.water.output.v1.LinkType
	(*Road)(nil),                   // 1: city.water.output.v1.Road
	(*RoadFlood)(nil),              // 2: city.water.output.v1.RoadFlood
	(*DetailedRoad)(nil),           // 3: city.water.output.v1.DetailedRoad
	(*Node)(nil),                   // 4: city.water.output.v1.Node
	(*Link)(nil),                   // 5: city.water.output.v1.Link
	(*Aoi)(nil),                    // 6: city.water.output.v1.Aoi
	(*DrainageBasicInfo)(nil),      // 7: city.water.output.v1.DrainageBasicInfo
	(*SupplyBasicInfo)(nil),        // 8: city.water.output.v1.SupplyBasicInfo
	(*SupplyDemandStatistics)(nil), // 9: city.water.output.v1.SupplyDemandStatistics
	(*FailureStatistics)(nil),      // 10: city.water.output.v1.FailureStatistics
	(*DrainageMetrics)(nil),        // 11: city.water.output.v1.DrainageMetrics
	(*SupplyMetrics)(nil),          // 12: city.water.output.v1.SupplyMetrics
	(*v2.LongLatPosition)(nil),     // 13: city.geo.v2.LongLatPosition
}
var file_city_water_output_v1_output_proto_depIdxs = []int32{
	13, // 0: city.water.output.v1.RoadFlood.position:type_name -> city.geo.v2.LongLatPosition
	2,  // 1: city.water.output.v1.DetailedRoad.depths:type_name -> city.water.output.v1.RoadFlood
	0,  // 2: city.water.output.v1.Link.type:type_name -> city.water.output.v1.LinkType
	7,  // 3: city.water.output.v1.DrainageMetrics.drainage_basic_info:type_name -> city.water.output.v1.DrainageBasicInfo
	10, // 4: city.water.output.v1.DrainageMetrics.failure_statistics:type_name -> city.water.output.v1.FailureStatistics
	8,  // 5: city.water.output.v1.SupplyMetrics.supply_basic_info:type_name -> city.water.output.v1.SupplyBasicInfo
	9,  // 6: city.water.output.v1.SupplyMetrics.supply_demand_statistics:type_name -> city.water.output.v1.SupplyDemandStatistics
	10, // 7: city.water.output.v1.SupplyMetrics.failure_statistics:type_name -> city.water.output.v1.FailureStatistics
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_city_water_output_v1_output_proto_init() }
func file_city_water_output_v1_output_proto_init() {
	if File_city_water_output_v1_output_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_water_output_v1_output_proto_rawDesc), len(file_city_water_output_v1_output_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_water_output_v1_output_proto_goTypes,
		DependencyIndexes: file_city_water_output_v1_output_proto_depIdxs,
		EnumInfos:         file_city_water_output_v1_output_proto_enumTypes,
		MessageInfos:      file_city_water_output_v1_output_proto_msgTypes,
	}.Build()
	File_city_water_output_v1_output_proto = out.File
	file_city_water_output_v1_output_proto_goTypes = nil
	file_city_water_output_v1_output_proto_depIdxs = nil
}

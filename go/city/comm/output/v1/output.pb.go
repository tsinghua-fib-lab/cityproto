// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: city/comm/output/v1/output.proto

package outputv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeStatus int32

const (
	NodeStatus_NODE_STATUS_UNSPECIFIED NodeStatus = 0
	// 正常供电
	NodeStatus_NODE_STATUS_OK NodeStatus = 1
	// 电池供电
	NodeStatus_NODE_STATUS_BATTERY NodeStatus = 2
	// 停电
	NodeStatus_NODE_STATUS_FAILURE NodeStatus = 3
	// 损坏
	NodeStatus_NODE_STATUS_RUINED NodeStatus = 4
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NODE_STATUS_UNSPECIFIED",
		1: "NODE_STATUS_OK",
		2: "NODE_STATUS_BATTERY",
		3: "NODE_STATUS_FAILURE",
		4: "NODE_STATUS_RUINED",
	}
	NodeStatus_value = map[string]int32{
		"NODE_STATUS_UNSPECIFIED": 0,
		"NODE_STATUS_OK":          1,
		"NODE_STATUS_BATTERY":     2,
		"NODE_STATUS_FAILURE":     3,
		"NODE_STATUS_RUINED":      4,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_city_comm_output_v1_output_proto_enumTypes[0].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_city_comm_output_v1_output_proto_enumTypes[0]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{0}
}

// 用户连接基站状态
type PersonConnectStatus int32

const (
	PersonConnectStatus_PERSON_CONNECT_STATUS_UNSPECIFIED PersonConnectStatus = 0
	// 可以连接到基站
	PersonConnectStatus_PERSON_CONNECT_STATUS_OK PersonConnectStatus = 1
	// 无法连接到基站
	PersonConnectStatus_PERSON_CONNECT_STATUS_OUTAGE PersonConnectStatus = 2
)

// Enum value maps for PersonConnectStatus.
var (
	PersonConnectStatus_name = map[int32]string{
		0: "PERSON_CONNECT_STATUS_UNSPECIFIED",
		1: "PERSON_CONNECT_STATUS_OK",
		2: "PERSON_CONNECT_STATUS_OUTAGE",
	}
	PersonConnectStatus_value = map[string]int32{
		"PERSON_CONNECT_STATUS_UNSPECIFIED": 0,
		"PERSON_CONNECT_STATUS_OK":          1,
		"PERSON_CONNECT_STATUS_OUTAGE":      2,
	}
)

func (x PersonConnectStatus) Enum() *PersonConnectStatus {
	p := new(PersonConnectStatus)
	*p = x
	return p
}

func (x PersonConnectStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersonConnectStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_city_comm_output_v1_output_proto_enumTypes[1].Descriptor()
}

func (PersonConnectStatus) Type() protoreflect.EnumType {
	return &file_city_comm_output_v1_output_proto_enumTypes[1]
}

func (x PersonConnectStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersonConnectStatus.Descriptor instead.
func (PersonConnectStatus) EnumDescriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{1}
}

// 用户需求满足状态
type PersonDemandStatus int32

const (
	PersonDemandStatus_PERSON_DEMAND_STATUS_UNSPECIFIED PersonDemandStatus = 0
	// 需求被满足
	PersonDemandStatus_PERSON_DEMAND_STATUS_SATISFIED PersonDemandStatus = 1
	// 需求不满足
	PersonDemandStatus_PERSON_DEMAND_STATUS_UNSATISFIED PersonDemandStatus = 2
	// 没有需求
	PersonDemandStatus_PERSON_DEMAND_STATUS_NO PersonDemandStatus = 3
)

// Enum value maps for PersonDemandStatus.
var (
	PersonDemandStatus_name = map[int32]string{
		0: "PERSON_DEMAND_STATUS_UNSPECIFIED",
		1: "PERSON_DEMAND_STATUS_SATISFIED",
		2: "PERSON_DEMAND_STATUS_UNSATISFIED",
		3: "PERSON_DEMAND_STATUS_NO",
	}
	PersonDemandStatus_value = map[string]int32{
		"PERSON_DEMAND_STATUS_UNSPECIFIED": 0,
		"PERSON_DEMAND_STATUS_SATISFIED":   1,
		"PERSON_DEMAND_STATUS_UNSATISFIED": 2,
		"PERSON_DEMAND_STATUS_NO":          3,
	}
)

func (x PersonDemandStatus) Enum() *PersonDemandStatus {
	p := new(PersonDemandStatus)
	*p = x
	return p
}

func (x PersonDemandStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersonDemandStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_city_comm_output_v1_output_proto_enumTypes[2].Descriptor()
}

func (PersonDemandStatus) Type() protoreflect.EnumType {
	return &file_city_comm_output_v1_output_proto_enumTypes[2]
}

func (x PersonDemandStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersonDemandStatus.Descriptor instead.
func (PersonDemandStatus) EnumDescriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{2}
}

// 设备状态
type Node struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status NodeStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=city.comm.output.v1.NodeStatus" json:"status,omitempty"`
	// 电池剩余可用时间（单位：秒）（仅当gateway状态为“电池供电”时启用）
	BatteryRemainingTime *float64 `protobuf:"fixed64,3,opt,name=battery_remaining_time,json=batteryRemainingTime,proto3,oneof" json:"battery_remaining_time,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NODE_STATUS_UNSPECIFIED
}

func (x *Node) GetBatteryRemainingTime() float64 {
	if x != nil && x.BatteryRemainingTime != nil {
		return *x.BatteryRemainingTime
	}
	return 0
}

// 基站状态
type BaseStation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 基站需求流量（单位：Bytes）
	DemandFlow float64 `protobuf:"fixed64,2,opt,name=demand_flow,json=demandFlow,proto3" json:"demand_flow,omitempty"`
	// 基站真实流量（单位：Bytes）
	ActualFlow float64 `protobuf:"fixed64,3,opt,name=actual_flow,json=actualFlow,proto3" json:"actual_flow,omitempty"`
	// 基站用户数
	NumAgents int32 `protobuf:"varint,4,opt,name=num_agents,json=numAgents,proto3" json:"num_agents,omitempty"`
	// 基站是否过载
	Overload bool `protobuf:"varint,5,opt,name=overload,proto3" json:"overload,omitempty"`
	// 不满足通信需求用户数
	UnsatisfiedNum int32 `protobuf:"varint,6,opt,name=unsatisfied_num,json=unsatisfiedNum,proto3" json:"unsatisfied_num,omitempty"`
	// 满足通信需求用户数
	SatisfiedNum int32 `protobuf:"varint,7,opt,name=satisfied_num,json=satisfiedNum,proto3" json:"satisfied_num,omitempty"`
	// 通信中断用户数
	OutageNum int32 `protobuf:"varint,8,opt,name=outage_num,json=outageNum,proto3" json:"outage_num,omitempty"`
	// 有通信需求人数
	ActiveNum int32 `protobuf:"varint,9,opt,name=active_num,json=activeNum,proto3" json:"active_num,omitempty"`
	// 基站发射功率
	TransmitPower float64 `protobuf:"fixed64,10,opt,name=transmit_power,json=transmitPower,proto3" json:"transmit_power,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseStation) Reset() {
	*x = BaseStation{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseStation) ProtoMessage() {}

func (x *BaseStation) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseStation.ProtoReflect.Descriptor instead.
func (*BaseStation) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{1}
}

func (x *BaseStation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseStation) GetDemandFlow() float64 {
	if x != nil {
		return x.DemandFlow
	}
	return 0
}

func (x *BaseStation) GetActualFlow() float64 {
	if x != nil {
		return x.ActualFlow
	}
	return 0
}

func (x *BaseStation) GetNumAgents() int32 {
	if x != nil {
		return x.NumAgents
	}
	return 0
}

func (x *BaseStation) GetOverload() bool {
	if x != nil {
		return x.Overload
	}
	return false
}

func (x *BaseStation) GetUnsatisfiedNum() int32 {
	if x != nil {
		return x.UnsatisfiedNum
	}
	return 0
}

func (x *BaseStation) GetSatisfiedNum() int32 {
	if x != nil {
		return x.SatisfiedNum
	}
	return 0
}

func (x *BaseStation) GetOutageNum() int32 {
	if x != nil {
		return x.OutageNum
	}
	return 0
}

func (x *BaseStation) GetActiveNum() int32 {
	if x != nil {
		return x.ActiveNum
	}
	return 0
}

func (x *BaseStation) GetTransmitPower() float64 {
	if x != nil {
		return x.TransmitPower
	}
	return 0
}

// 信号情况
type Signal struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	NumRows    int32                  `protobuf:"varint,1,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	NumColumns int32                  `protobuf:"varint,2,opt,name=num_columns,json=numColumns,proto3" json:"num_columns,omitempty"`
	// 信号强度（单位：dBm）
	Strength []float64 `protobuf:"fixed64,3,rep,packed,name=strength,proto3" json:"strength,omitempty"`
	// 基站ID
	BaseStationId []int32 `protobuf:"varint,4,rep,packed,name=base_station_id,json=baseStationId,proto3" json:"base_station_id,omitempty"`
	// 基站频段
	FreqRangeId   []int32 `protobuf:"varint,5,rep,packed,name=freq_range_id,json=freqRangeId,proto3" json:"freq_range_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signal) Reset() {
	*x = Signal{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{2}
}

func (x *Signal) GetNumRows() int32 {
	if x != nil {
		return x.NumRows
	}
	return 0
}

func (x *Signal) GetNumColumns() int32 {
	if x != nil {
		return x.NumColumns
	}
	return 0
}

func (x *Signal) GetStrength() []float64 {
	if x != nil {
		return x.Strength
	}
	return nil
}

func (x *Signal) GetBaseStationId() []int32 {
	if x != nil {
		return x.BaseStationId
	}
	return nil
}

func (x *Signal) GetFreqRangeId() []int32 {
	if x != nil {
		return x.FreqRangeId
	}
	return nil
}

// 人（可见的，交通模拟或室内模拟正在计算位置变动的）
type Person struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 通信需求速率（单位：Bytes/s）
	DemandRate float64 `protobuf:"fixed64,2,opt,name=demand_rate,json=demandRate,proto3" json:"demand_rate,omitempty"`
	// 通信真实速率（单位：Bytes/s）
	ActualRate    float64             `protobuf:"fixed64,3,opt,name=actual_rate,json=actualRate,proto3" json:"actual_rate,omitempty"`
	ConnectStatus PersonConnectStatus `protobuf:"varint,4,opt,name=connect_status,json=connectStatus,proto3,enum=city.comm.output.v1.PersonConnectStatus" json:"connect_status,omitempty"`
	DemandStatus  PersonDemandStatus  `protobuf:"varint,9,opt,name=demand_status,json=demandStatus,proto3,enum=city.comm.output.v1.PersonDemandStatus" json:"demand_status,omitempty"`
	// 信号强度（单位：dBm）
	Strength float64 `protobuf:"fixed64,5,opt,name=strength,proto3" json:"strength,omitempty"`
	// 连接基站
	BaseStationId int32 `protobuf:"varint,6,opt,name=base_station_id,json=baseStationId,proto3" json:"base_station_id,omitempty"`
	// 信道分配
	FreqRangeIds []int32 `protobuf:"varint,7,rep,packed,name=freq_range_ids,json=freqRangeIds,proto3" json:"freq_range_ids,omitempty"`
	// 接收发射功率（单位：dBm）
	ReceivedPower float64 `protobuf:"fixed64,8,opt,name=received_power,json=receivedPower,proto3" json:"received_power,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{3}
}

func (x *Person) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetDemandRate() float64 {
	if x != nil {
		return x.DemandRate
	}
	return 0
}

func (x *Person) GetActualRate() float64 {
	if x != nil {
		return x.ActualRate
	}
	return 0
}

func (x *Person) GetConnectStatus() PersonConnectStatus {
	if x != nil {
		return x.ConnectStatus
	}
	return PersonConnectStatus_PERSON_CONNECT_STATUS_UNSPECIFIED
}

func (x *Person) GetDemandStatus() PersonDemandStatus {
	if x != nil {
		return x.DemandStatus
	}
	return PersonDemandStatus_PERSON_DEMAND_STATUS_UNSPECIFIED
}

func (x *Person) GetStrength() float64 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *Person) GetBaseStationId() int32 {
	if x != nil {
		return x.BaseStationId
	}
	return 0
}

func (x *Person) GetFreqRangeIds() []int32 {
	if x != nil {
		return x.FreqRangeIds
	}
	return nil
}

func (x *Person) GetReceivedPower() float64 {
	if x != nil {
		return x.ReceivedPower
	}
	return 0
}

type Aoi struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 通信需求总量（单位：Bytes）
	DemandFlow float64 `protobuf:"fixed64,2,opt,name=demand_flow,json=demandFlow,proto3" json:"demand_flow,omitempty"`
	// 通信真实总量（单位：Bytes）
	ActualFlow float64 `protobuf:"fixed64,3,opt,name=actual_flow,json=actualFlow,proto3" json:"actual_flow,omitempty"`
	// 通信中断人数
	OutageNum int32 `protobuf:"varint,4,opt,name=outage_num,json=outageNum,proto3" json:"outage_num,omitempty"`
	// 通信满足人数
	SatisfiedNum int32 `protobuf:"varint,5,opt,name=satisfied_num,json=satisfiedNum,proto3" json:"satisfied_num,omitempty"`
	// 通信不满足人数
	UnsatisfiedNum int32 `protobuf:"varint,6,opt,name=unsatisfied_num,json=unsatisfiedNum,proto3" json:"unsatisfied_num,omitempty"`
	// 有通信需求的人数
	ActiveUserNum int32 `protobuf:"varint,7,opt,name=active_user_num,json=activeUserNum,proto3" json:"active_user_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Aoi) Reset() {
	*x = Aoi{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Aoi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aoi) ProtoMessage() {}

func (x *Aoi) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aoi.ProtoReflect.Descriptor instead.
func (*Aoi) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{4}
}

func (x *Aoi) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Aoi) GetDemandFlow() float64 {
	if x != nil {
		return x.DemandFlow
	}
	return 0
}

func (x *Aoi) GetActualFlow() float64 {
	if x != nil {
		return x.ActualFlow
	}
	return 0
}

func (x *Aoi) GetOutageNum() int32 {
	if x != nil {
		return x.OutageNum
	}
	return 0
}

func (x *Aoi) GetSatisfiedNum() int32 {
	if x != nil {
		return x.SatisfiedNum
	}
	return 0
}

func (x *Aoi) GetUnsatisfiedNum() int32 {
	if x != nil {
		return x.UnsatisfiedNum
	}
	return 0
}

func (x *Aoi) GetActiveUserNum() int32 {
	if x != nil {
		return x.ActiveUserNum
	}
	return 0
}

type Statistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 满足通信需求用户数
	NumSatisfiedAgents int32 `protobuf:"varint,1,opt,name=num_satisfied_agents,json=numSatisfiedAgents,proto3" json:"num_satisfied_agents,omitempty"`
	// 未能满足通信需求的用户数
	NumUnsatisfiedAgents int32 `protobuf:"varint,2,opt,name=num_unsatisfied_agents,json=numUnsatisfiedAgents,proto3" json:"num_unsatisfied_agents,omitempty"`
	// 通信中断的用户数
	NumOutageAgents int32 `protobuf:"varint,3,opt,name=num_outage_agents,json=numOutageAgents,proto3" json:"num_outage_agents,omitempty"`
	// 有通信需求的用户数
	NumActiveAgents int32 `protobuf:"varint,4,opt,name=num_active_agents,json=numActiveAgents,proto3" json:"num_active_agents,omitempty"`
	// 需求总流量（单位：Bytes）
	DemandFlow float64 `protobuf:"fixed64,5,opt,name=demand_flow,json=demandFlow,proto3" json:"demand_flow,omitempty"`
	// 真实总流量（单位：Bytes）
	ActualFlow float64 `protobuf:"fixed64,6,opt,name=actual_flow,json=actualFlow,proto3" json:"actual_flow,omitempty"`
	// 总基站数
	NumBaseStation int32 `protobuf:"varint,7,opt,name=num_base_station,json=numBaseStation,proto3" json:"num_base_station,omitempty"`
	// 正常基站数
	NumOkBaseStation int32 `protobuf:"varint,8,opt,name=num_ok_base_station,json=numOkBaseStation,proto3" json:"num_ok_base_station,omitempty"`
	// 损坏基站数
	NumRuinedBaseStation int32 `protobuf:"varint,9,opt,name=num_ruined_base_station,json=numRuinedBaseStation,proto3" json:"num_ruined_base_station,omitempty"`
	// 断电基站数
	NumStoppedBaseStation int32 `protobuf:"varint,10,opt,name=num_stopped_base_station,json=numStoppedBaseStation,proto3" json:"num_stopped_base_station,omitempty"`
	// 过载基站数
	NumOverloadedBaseStation int32 `protobuf:"varint,11,opt,name=num_overloaded_base_station,json=numOverloadedBaseStation,proto3" json:"num_overloaded_base_station,omitempty"`
	// 总网关数
	NumGateway int32 `protobuf:"varint,12,opt,name=num_gateway,json=numGateway,proto3" json:"num_gateway,omitempty"`
	// 正常网关数
	NumOkGateway int32 `protobuf:"varint,13,opt,name=num_ok_gateway,json=numOkGateway,proto3" json:"num_ok_gateway,omitempty"`
	// 损坏网关数
	NumRuinedGateway int32 `protobuf:"varint,14,opt,name=num_ruined_gateway,json=numRuinedGateway,proto3" json:"num_ruined_gateway,omitempty"`
	// 断电网关数
	NumStoppedGateway int32 `protobuf:"varint,15,opt,name=num_stopped_gateway,json=numStoppedGateway,proto3" json:"num_stopped_gateway,omitempty"`
	// 过载网关数
	NumOverloadedGateway int32 `protobuf:"varint,16,opt,name=num_overloaded_gateway,json=numOverloadedGateway,proto3" json:"num_overloaded_gateway,omitempty"`
	// 直流电网关数
	NumBatteryGateway int32 `protobuf:"varint,17,opt,name=num_battery_gateway,json=numBatteryGateway,proto3" json:"num_battery_gateway,omitempty"`
	// 基站耗电量(单位：kW·h)
	PowerConsumption float64 `protobuf:"fixed64,18,opt,name=power_consumption,json=powerConsumption,proto3" json:"power_consumption,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	mi := &file_city_comm_output_v1_output_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_comm_output_v1_output_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_city_comm_output_v1_output_proto_rawDescGZIP(), []int{5}
}

func (x *Statistics) GetNumSatisfiedAgents() int32 {
	if x != nil {
		return x.NumSatisfiedAgents
	}
	return 0
}

func (x *Statistics) GetNumUnsatisfiedAgents() int32 {
	if x != nil {
		return x.NumUnsatisfiedAgents
	}
	return 0
}

func (x *Statistics) GetNumOutageAgents() int32 {
	if x != nil {
		return x.NumOutageAgents
	}
	return 0
}

func (x *Statistics) GetNumActiveAgents() int32 {
	if x != nil {
		return x.NumActiveAgents
	}
	return 0
}

func (x *Statistics) GetDemandFlow() float64 {
	if x != nil {
		return x.DemandFlow
	}
	return 0
}

func (x *Statistics) GetActualFlow() float64 {
	if x != nil {
		return x.ActualFlow
	}
	return 0
}

func (x *Statistics) GetNumBaseStation() int32 {
	if x != nil {
		return x.NumBaseStation
	}
	return 0
}

func (x *Statistics) GetNumOkBaseStation() int32 {
	if x != nil {
		return x.NumOkBaseStation
	}
	return 0
}

func (x *Statistics) GetNumRuinedBaseStation() int32 {
	if x != nil {
		return x.NumRuinedBaseStation
	}
	return 0
}

func (x *Statistics) GetNumStoppedBaseStation() int32 {
	if x != nil {
		return x.NumStoppedBaseStation
	}
	return 0
}

func (x *Statistics) GetNumOverloadedBaseStation() int32 {
	if x != nil {
		return x.NumOverloadedBaseStation
	}
	return 0
}

func (x *Statistics) GetNumGateway() int32 {
	if x != nil {
		return x.NumGateway
	}
	return 0
}

func (x *Statistics) GetNumOkGateway() int32 {
	if x != nil {
		return x.NumOkGateway
	}
	return 0
}

func (x *Statistics) GetNumRuinedGateway() int32 {
	if x != nil {
		return x.NumRuinedGateway
	}
	return 0
}

func (x *Statistics) GetNumStoppedGateway() int32 {
	if x != nil {
		return x.NumStoppedGateway
	}
	return 0
}

func (x *Statistics) GetNumOverloadedGateway() int32 {
	if x != nil {
		return x.NumOverloadedGateway
	}
	return 0
}

func (x *Statistics) GetNumBatteryGateway() int32 {
	if x != nil {
		return x.NumBatteryGateway
	}
	return 0
}

func (x *Statistics) GetPowerConsumption() float64 {
	if x != nil {
		return x.PowerConsumption
	}
	return 0
}

var File_city_comm_output_v1_output_proto protoreflect.FileDescriptor

const file_city_comm_output_v1_output_proto_rawDesc = "" +
	"\n" +
	" city/comm/output/v1/output.proto\x12\x13city.comm.output.v1\"\xa5\x01\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x127\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1f.city.comm.output.v1.NodeStatusR\x06status\x129\n" +
	"\x16battery_remaining_time\x18\x03 \x01(\x01H\x00R\x14batteryRemainingTime\x88\x01\x01B\x19\n" +
	"\x17_battery_remaining_time\"\xcd\x02\n" +
	"\vBaseStation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vdemand_flow\x18\x02 \x01(\x01R\n" +
	"demandFlow\x12\x1f\n" +
	"\vactual_flow\x18\x03 \x01(\x01R\n" +
	"actualFlow\x12\x1d\n" +
	"\n" +
	"num_agents\x18\x04 \x01(\x05R\tnumAgents\x12\x1a\n" +
	"\boverload\x18\x05 \x01(\bR\boverload\x12'\n" +
	"\x0funsatisfied_num\x18\x06 \x01(\x05R\x0eunsatisfiedNum\x12#\n" +
	"\rsatisfied_num\x18\a \x01(\x05R\fsatisfiedNum\x12\x1d\n" +
	"\n" +
	"outage_num\x18\b \x01(\x05R\toutageNum\x12\x1d\n" +
	"\n" +
	"active_num\x18\t \x01(\x05R\tactiveNum\x12%\n" +
	"\x0etransmit_power\x18\n" +
	" \x01(\x01R\rtransmitPower\"\xac\x01\n" +
	"\x06Signal\x12\x19\n" +
	"\bnum_rows\x18\x01 \x01(\x05R\anumRows\x12\x1f\n" +
	"\vnum_columns\x18\x02 \x01(\x05R\n" +
	"numColumns\x12\x1a\n" +
	"\bstrength\x18\x03 \x03(\x01R\bstrength\x12&\n" +
	"\x0fbase_station_id\x18\x04 \x03(\x05R\rbaseStationId\x12\"\n" +
	"\rfreq_range_id\x18\x05 \x03(\x05R\vfreqRangeId\"\x8a\x03\n" +
	"\x06Person\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vdemand_rate\x18\x02 \x01(\x01R\n" +
	"demandRate\x12\x1f\n" +
	"\vactual_rate\x18\x03 \x01(\x01R\n" +
	"actualRate\x12O\n" +
	"\x0econnect_status\x18\x04 \x01(\x0e2(.city.comm.output.v1.PersonConnectStatusR\rconnectStatus\x12L\n" +
	"\rdemand_status\x18\t \x01(\x0e2'.city.comm.output.v1.PersonDemandStatusR\fdemandStatus\x12\x1a\n" +
	"\bstrength\x18\x05 \x01(\x01R\bstrength\x12&\n" +
	"\x0fbase_station_id\x18\x06 \x01(\x05R\rbaseStationId\x12$\n" +
	"\x0efreq_range_ids\x18\a \x03(\x05R\ffreqRangeIds\x12%\n" +
	"\x0ereceived_power\x18\b \x01(\x01R\rreceivedPower\"\xec\x01\n" +
	"\x03Aoi\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vdemand_flow\x18\x02 \x01(\x01R\n" +
	"demandFlow\x12\x1f\n" +
	"\vactual_flow\x18\x03 \x01(\x01R\n" +
	"actualFlow\x12\x1d\n" +
	"\n" +
	"outage_num\x18\x04 \x01(\x05R\toutageNum\x12#\n" +
	"\rsatisfied_num\x18\x05 \x01(\x05R\fsatisfiedNum\x12'\n" +
	"\x0funsatisfied_num\x18\x06 \x01(\x05R\x0eunsatisfiedNum\x12&\n" +
	"\x0factive_user_num\x18\a \x01(\x05R\ractiveUserNum\"\xce\x06\n" +
	"\n" +
	"Statistics\x120\n" +
	"\x14num_satisfied_agents\x18\x01 \x01(\x05R\x12numSatisfiedAgents\x124\n" +
	"\x16num_unsatisfied_agents\x18\x02 \x01(\x05R\x14numUnsatisfiedAgents\x12*\n" +
	"\x11num_outage_agents\x18\x03 \x01(\x05R\x0fnumOutageAgents\x12*\n" +
	"\x11num_active_agents\x18\x04 \x01(\x05R\x0fnumActiveAgents\x12\x1f\n" +
	"\vdemand_flow\x18\x05 \x01(\x01R\n" +
	"demandFlow\x12\x1f\n" +
	"\vactual_flow\x18\x06 \x01(\x01R\n" +
	"actualFlow\x12(\n" +
	"\x10num_base_station\x18\a \x01(\x05R\x0enumBaseStation\x12-\n" +
	"\x13num_ok_base_station\x18\b \x01(\x05R\x10numOkBaseStation\x125\n" +
	"\x17num_ruined_base_station\x18\t \x01(\x05R\x14numRuinedBaseStation\x127\n" +
	"\x18num_stopped_base_station\x18\n" +
	" \x01(\x05R\x15numStoppedBaseStation\x12=\n" +
	"\x1bnum_overloaded_base_station\x18\v \x01(\x05R\x18numOverloadedBaseStation\x12\x1f\n" +
	"\vnum_gateway\x18\f \x01(\x05R\n" +
	"numGateway\x12$\n" +
	"\x0enum_ok_gateway\x18\r \x01(\x05R\fnumOkGateway\x12,\n" +
	"\x12num_ruined_gateway\x18\x0e \x01(\x05R\x10numRuinedGateway\x12.\n" +
	"\x13num_stopped_gateway\x18\x0f \x01(\x05R\x11numStoppedGateway\x124\n" +
	"\x16num_overloaded_gateway\x18\x10 \x01(\x05R\x14numOverloadedGateway\x12.\n" +
	"\x13num_battery_gateway\x18\x11 \x01(\x05R\x11numBatteryGateway\x12+\n" +
	"\x11power_consumption\x18\x12 \x01(\x01R\x10powerConsumption*\x87\x01\n" +
	"\n" +
	"NodeStatus\x12\x1b\n" +
	"\x17NODE_STATUS_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eNODE_STATUS_OK\x10\x01\x12\x17\n" +
	"\x13NODE_STATUS_BATTERY\x10\x02\x12\x17\n" +
	"\x13NODE_STATUS_FAILURE\x10\x03\x12\x16\n" +
	"\x12NODE_STATUS_RUINED\x10\x04*|\n" +
	"\x13PersonConnectStatus\x12%\n" +
	"!PERSON_CONNECT_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18PERSON_CONNECT_STATUS_OK\x10\x01\x12 \n" +
	"\x1cPERSON_CONNECT_STATUS_OUTAGE\x10\x02*\xa1\x01\n" +
	"\x12PersonDemandStatus\x12$\n" +
	" PERSON_DEMAND_STATUS_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1ePERSON_DEMAND_STATUS_SATISFIED\x10\x01\x12$\n" +
	" PERSON_DEMAND_STATUS_UNSATISFIED\x10\x02\x12\x1b\n" +
	"\x17PERSON_DEMAND_STATUS_NO\x10\x03B\xd3\x01\n" +
	"\x17com.city.comm.output.v1B\vOutputProtoP\x01Z<git.fiblab.net/sim/protos/v2/go/city/comm/output/v1;outputv1\xa2\x02\x03CCO\xaa\x02\x13City.Comm.Output.V1\xca\x02\x13City\\Comm\\Output\\V1\xe2\x02\x1fCity\\Comm\\Output\\V1\\GPBMetadata\xea\x02\x16City::Comm::Output::V1b\x06proto3"

var (
	file_city_comm_output_v1_output_proto_rawDescOnce sync.Once
	file_city_comm_output_v1_output_proto_rawDescData []byte
)

func file_city_comm_output_v1_output_proto_rawDescGZIP() []byte {
	file_city_comm_output_v1_output_proto_rawDescOnce.Do(func() {
		file_city_comm_output_v1_output_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_comm_output_v1_output_proto_rawDesc), len(file_city_comm_output_v1_output_proto_rawDesc)))
	})
	return file_city_comm_output_v1_output_proto_rawDescData
}

var file_city_comm_output_v1_output_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_city_comm_output_v1_output_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_city_comm_output_v1_output_proto_goTypes = []any{
	(NodeStatus)(0),          // 0: city.comm.output.v1.NodeStatus
	(PersonConnectStatus)(0), // 1: city.comm.output.v1.PersonConnectStatus
	(PersonDemandStatus)(0),  // 2: city.comm.output.v1.PersonDemandStatus
	(*Node)(nil),             // 3: city.comm.output.v1.Node
	(*BaseStation)(nil),      // 4: city.comm.output.v1.BaseStation
	(*Signal)(nil),           // 5: city.comm.output.v1.Signal
	(*Person)(nil),           // 6: city.comm.output.v1.Person
	(*Aoi)(nil),              // 7: city.comm.output.v1.Aoi
	(*Statistics)(nil),       // 8: city.comm.output.v1.Statistics
}
var file_city_comm_output_v1_output_proto_depIdxs = []int32{
	0, // 0: city.comm.output.v1.Node.status:type_name -> city.comm.output.v1.NodeStatus
	1, // 1: city.comm.output.v1.Person.connect_status:type_name -> city.comm.output.v1.PersonConnectStatus
	2, // 2: city.comm.output.v1.Person.demand_status:type_name -> city.comm.output.v1.PersonDemandStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_city_comm_output_v1_output_proto_init() }
func file_city_comm_output_v1_output_proto_init() {
	if File_city_comm_output_v1_output_proto != nil {
		return
	}
	file_city_comm_output_v1_output_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_comm_output_v1_output_proto_rawDesc), len(file_city_comm_output_v1_output_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_comm_output_v1_output_proto_goTypes,
		DependencyIndexes: file_city_comm_output_v1_output_proto_depIdxs,
		EnumInfos:         file_city_comm_output_v1_output_proto_enumTypes,
		MessageInfos:      file_city_comm_output_v1_output_proto_msgTypes,
	}.Build()
	File_city_comm_output_v1_output_proto = out.File
	file_city_comm_output_v1_output_proto_goTypes = nil
	file_city_comm_output_v1_output_proto_depIdxs = nil
}

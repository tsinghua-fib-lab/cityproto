// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: city/map/v2/junction_service.proto

package mapv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询路口信息请求
// Request for getting junction information
type GetJunctionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 指定查询的路口ID列表，为空代表查询所有路口
	// List of targeted junction IDs. If empty, it means querying all junctions.
	JunctionIds []int32 `protobuf:"varint,1,rep,packed,name=junction_ids,json=junctionIds,proto3" json:"junction_ids,omitempty" bson:"junction_ids" db:"junction_ids" yaml:"junction_ids"`
	// 是否要排除车道信息
	// Whether to exclude lane information
	ExcludeLane bool `protobuf:"varint,2,opt,name=exclude_lane,json=excludeLane,proto3" json:"exclude_lane,omitempty" bson:"exclude_lane" db:"exclude_lane" yaml:"exclude_lane"`
	// 是否要排除车道上的人的信息（仅在包含车道信息时有效）
	// Whether to exclude information about person in the lane (only valid when lane information is included)
	ExcludePerson bool `protobuf:"varint,3,opt,name=exclude_person,json=excludePerson,proto3" json:"exclude_person,omitempty" bson:"exclude_person" db:"exclude_person" yaml:"exclude_person"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJunctionRequest) Reset() {
	*x = GetJunctionRequest{}
	mi := &file_city_map_v2_junction_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJunctionRequest) ProtoMessage() {}

func (x *GetJunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_junction_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJunctionRequest.ProtoReflect.Descriptor instead.
func (*GetJunctionRequest) Descriptor() ([]byte, []int) {
	return file_city_map_v2_junction_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetJunctionRequest) GetJunctionIds() []int32 {
	if x != nil {
		return x.JunctionIds
	}
	return nil
}

func (x *GetJunctionRequest) GetExcludeLane() bool {
	if x != nil {
		return x.ExcludeLane
	}
	return false
}

func (x *GetJunctionRequest) GetExcludePerson() bool {
	if x != nil {
		return x.ExcludePerson
	}
	return false
}

// 查询路口信息响应
// Response of getting junction information
type GetJunctionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 路口信息列表
	// List of junction information
	States        []*JunctionState `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty" bson:"states" db:"states" yaml:"states"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJunctionResponse) Reset() {
	*x = GetJunctionResponse{}
	mi := &file_city_map_v2_junction_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJunctionResponse) ProtoMessage() {}

func (x *GetJunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_junction_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJunctionResponse.ProtoReflect.Descriptor instead.
func (*GetJunctionResponse) Descriptor() ([]byte, []int) {
	return file_city_map_v2_junction_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetJunctionResponse) GetStates() []*JunctionState {
	if x != nil {
		return x.States
	}
	return nil
}

// 路口状态
// junction state
type JunctionState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 路口ID
	// junction ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id" db:"id" yaml:"id"`
	// 当前进入道路的车辆数
	// current entering road vehicle count
	InVehicleCnt int32 `protobuf:"varint,2,opt,name=in_vehicle_cnt,json=inVehicleCnt,proto3" json:"in_vehicle_cnt,omitempty" bson:"in_vehicle_cnt" db:"in_vehicle_cnt" yaml:"in_vehicle_cnt"`
	// 当前离开道路的车辆数
	// current leaving road vehicle count
	OutVehicleCnt int32 `protobuf:"varint,3,opt,name=out_vehicle_cnt,json=outVehicleCnt,proto3" json:"out_vehicle_cnt,omitempty" bson:"out_vehicle_cnt" db:"out_vehicle_cnt" yaml:"out_vehicle_cnt"`
	// 当前道路车辆数
	// current road vehicle count
	VehicleCnt int32 `protobuf:"varint,4,opt,name=vehicle_cnt,json=vehicleCnt,proto3" json:"vehicle_cnt,omitempty" bson:"vehicle_cnt" db:"vehicle_cnt" yaml:"vehicle_cnt"`
	// 累计进入道路的车辆数
	// cumulative entering road vehicle count
	CumInVehicleCnt int32 `protobuf:"varint,5,opt,name=cum_in_vehicle_cnt,json=cumInVehicleCnt,proto3" json:"cum_in_vehicle_cnt,omitempty" bson:"cum_in_vehicle_cnt" db:"cum_in_vehicle_cnt" yaml:"cum_in_vehicle_cnt"`
	// 累计离开道路的车辆数
	// cumulative leaving road vehicle count
	CumOutVehicleCnt int32 `protobuf:"varint,6,opt,name=cum_out_vehicle_cnt,json=cumOutVehicleCnt,proto3" json:"cum_out_vehicle_cnt,omitempty" bson:"cum_out_vehicle_cnt" db:"cum_out_vehicle_cnt" yaml:"cum_out_vehicle_cnt"`
	// 车道情况
	// lane state
	Lanes []*LaneState `protobuf:"bytes,7,rep,name=lanes,proto3" json:"lanes,omitempty" bson:"lanes" db:"lanes" yaml:"lanes"`
	// 前驱车道情况（用于查看驶入路口的车道情况）
	// predecessor lane state (used to view the lane situation of entering the junction)
	PredecessorDrivingLanes []*LaneState `protobuf:"bytes,8,rep,name=predecessor_driving_lanes,json=predecessorDrivingLanes,proto3" json:"predecessor_driving_lanes,omitempty" bson:"predecessor_driving_lanes" db:"predecessor_driving_lanes" yaml:"predecessor_driving_lanes"`
	// 总排队车辆数
	// total queuing vehicle count
	TotalQueuingVehicleCnt int32 `protobuf:"varint,9,opt,name=total_queuing_vehicle_cnt,json=totalQueuingVehicleCnt,proto3" json:"total_queuing_vehicle_cnt,omitempty" bson:"total_queuing_vehicle_cnt" db:"total_queuing_vehicle_cnt" yaml:"total_queuing_vehicle_cnt"`
	// 总排队时间
	// total queuing time
	TotalQueuingTime float64 `protobuf:"fixed64,10,opt,name=total_queuing_time,json=totalQueuingTime,proto3" json:"total_queuing_time,omitempty" bson:"total_queuing_time" db:"total_queuing_time" yaml:"total_queuing_time"`
	// 当前平均排队时间
	// current average queuing time
	AvgQueuingTime float64 `protobuf:"fixed64,11,opt,name=avg_queuing_time,json=avgQueuingTime,proto3" json:"avg_queuing_time,omitempty" bson:"avg_queuing_time" db:"avg_queuing_time" yaml:"avg_queuing_time"`
	// 最大排队长度（按车道）
	// max queuing vehicle count
	MaxQueuingVehicleCnt int32 `protobuf:"varint,12,opt,name=max_queuing_vehicle_cnt,json=maxQueuingVehicleCnt,proto3" json:"max_queuing_vehicle_cnt,omitempty" bson:"max_queuing_vehicle_cnt" db:"max_queuing_vehicle_cnt" yaml:"max_queuing_vehicle_cnt"`
	// 是否有信号灯
	// whether there is a traffic light
	HasTrafficLight bool `protobuf:"varint,13,opt,name=has_traffic_light,json=hasTrafficLight,proto3" json:"has_traffic_light,omitempty" bson:"has_traffic_light" db:"has_traffic_light" yaml:"has_traffic_light"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *JunctionState) Reset() {
	*x = JunctionState{}
	mi := &file_city_map_v2_junction_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JunctionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunctionState) ProtoMessage() {}

func (x *JunctionState) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_junction_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunctionState.ProtoReflect.Descriptor instead.
func (*JunctionState) Descriptor() ([]byte, []int) {
	return file_city_map_v2_junction_service_proto_rawDescGZIP(), []int{2}
}

func (x *JunctionState) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JunctionState) GetInVehicleCnt() int32 {
	if x != nil {
		return x.InVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetOutVehicleCnt() int32 {
	if x != nil {
		return x.OutVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetVehicleCnt() int32 {
	if x != nil {
		return x.VehicleCnt
	}
	return 0
}

func (x *JunctionState) GetCumInVehicleCnt() int32 {
	if x != nil {
		return x.CumInVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetCumOutVehicleCnt() int32 {
	if x != nil {
		return x.CumOutVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetLanes() []*LaneState {
	if x != nil {
		return x.Lanes
	}
	return nil
}

func (x *JunctionState) GetPredecessorDrivingLanes() []*LaneState {
	if x != nil {
		return x.PredecessorDrivingLanes
	}
	return nil
}

func (x *JunctionState) GetTotalQueuingVehicleCnt() int32 {
	if x != nil {
		return x.TotalQueuingVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetTotalQueuingTime() float64 {
	if x != nil {
		return x.TotalQueuingTime
	}
	return 0
}

func (x *JunctionState) GetAvgQueuingTime() float64 {
	if x != nil {
		return x.AvgQueuingTime
	}
	return 0
}

func (x *JunctionState) GetMaxQueuingVehicleCnt() int32 {
	if x != nil {
		return x.MaxQueuingVehicleCnt
	}
	return 0
}

func (x *JunctionState) GetHasTrafficLight() bool {
	if x != nil {
		return x.HasTrafficLight
	}
	return false
}

var File_city_map_v2_junction_service_proto protoreflect.FileDescriptor

const file_city_map_v2_junction_service_proto_rawDesc = "" +
	"\n" +
	"\"city/map/v2/junction_service.proto\x12\vcity.map.v2\x1a\x1ccity/map/v2/lane_state.proto\"\x81\x01\n" +
	"\x12GetJunctionRequest\x12!\n" +
	"\fjunction_ids\x18\x01 \x03(\x05R\vjunctionIds\x12!\n" +
	"\fexclude_lane\x18\x02 \x01(\bR\vexcludeLane\x12%\n" +
	"\x0eexclude_person\x18\x03 \x01(\bR\rexcludePerson\"I\n" +
	"\x13GetJunctionResponse\x122\n" +
	"\x06states\x18\x01 \x03(\v2\x1a.city.map.v2.JunctionStateR\x06states\"\xe2\x04\n" +
	"\rJunctionState\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12$\n" +
	"\x0ein_vehicle_cnt\x18\x02 \x01(\x05R\finVehicleCnt\x12&\n" +
	"\x0fout_vehicle_cnt\x18\x03 \x01(\x05R\routVehicleCnt\x12\x1f\n" +
	"\vvehicle_cnt\x18\x04 \x01(\x05R\n" +
	"vehicleCnt\x12+\n" +
	"\x12cum_in_vehicle_cnt\x18\x05 \x01(\x05R\x0fcumInVehicleCnt\x12-\n" +
	"\x13cum_out_vehicle_cnt\x18\x06 \x01(\x05R\x10cumOutVehicleCnt\x12,\n" +
	"\x05lanes\x18\a \x03(\v2\x16.city.map.v2.LaneStateR\x05lanes\x12R\n" +
	"\x19predecessor_driving_lanes\x18\b \x03(\v2\x16.city.map.v2.LaneStateR\x17predecessorDrivingLanes\x129\n" +
	"\x19total_queuing_vehicle_cnt\x18\t \x01(\x05R\x16totalQueuingVehicleCnt\x12,\n" +
	"\x12total_queuing_time\x18\n" +
	" \x01(\x01R\x10totalQueuingTime\x12(\n" +
	"\x10avg_queuing_time\x18\v \x01(\x01R\x0eavgQueuingTime\x125\n" +
	"\x17max_queuing_vehicle_cnt\x18\f \x01(\x05R\x14maxQueuingVehicleCnt\x12*\n" +
	"\x11has_traffic_light\x18\r \x01(\bR\x0fhasTrafficLight2c\n" +
	"\x0fJunctionService\x12P\n" +
	"\vGetJunction\x12\x1f.city.map.v2.GetJunctionRequest\x1a .city.map.v2.GetJunctionResponseB\xa8\x01\n" +
	"\x0fcom.city.map.v2B\x14JunctionServiceProtoP\x01Z1git.fiblab.net/sim/protos/v2/go/city/map/v2;mapv2\xa2\x02\x03CMX\xaa\x02\vCity.Map.V2\xca\x02\vCity\\Map\\V2\xe2\x02\x17City\\Map\\V2\\GPBMetadata\xea\x02\rCity::Map::V2b\x06proto3"

var (
	file_city_map_v2_junction_service_proto_rawDescOnce sync.Once
	file_city_map_v2_junction_service_proto_rawDescData []byte
)

func file_city_map_v2_junction_service_proto_rawDescGZIP() []byte {
	file_city_map_v2_junction_service_proto_rawDescOnce.Do(func() {
		file_city_map_v2_junction_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_map_v2_junction_service_proto_rawDesc), len(file_city_map_v2_junction_service_proto_rawDesc)))
	})
	return file_city_map_v2_junction_service_proto_rawDescData
}

var file_city_map_v2_junction_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_city_map_v2_junction_service_proto_goTypes = []any{
	(*GetJunctionRequest)(nil),  // 0: city.map.v2.GetJunctionRequest
	(*GetJunctionResponse)(nil), // 1: city.map.v2.GetJunctionResponse
	(*JunctionState)(nil),       // 2: city.map.v2.JunctionState
	(*LaneState)(nil),           // 3: city.map.v2.LaneState
}
var file_city_map_v2_junction_service_proto_depIdxs = []int32{
	2, // 0: city.map.v2.GetJunctionResponse.states:type_name -> city.map.v2.JunctionState
	3, // 1: city.map.v2.JunctionState.lanes:type_name -> city.map.v2.LaneState
	3, // 2: city.map.v2.JunctionState.predecessor_driving_lanes:type_name -> city.map.v2.LaneState
	0, // 3: city.map.v2.JunctionService.GetJunction:input_type -> city.map.v2.GetJunctionRequest
	1, // 4: city.map.v2.JunctionService.GetJunction:output_type -> city.map.v2.GetJunctionResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_city_map_v2_junction_service_proto_init() }
func file_city_map_v2_junction_service_proto_init() {
	if File_city_map_v2_junction_service_proto != nil {
		return
	}
	file_city_map_v2_lane_state_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_map_v2_junction_service_proto_rawDesc), len(file_city_map_v2_junction_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_map_v2_junction_service_proto_goTypes,
		DependencyIndexes: file_city_map_v2_junction_service_proto_depIdxs,
		MessageInfos:      file_city_map_v2_junction_service_proto_msgTypes,
	}.Build()
	File_city_map_v2_junction_service_proto = out.File
	file_city_map_v2_junction_service_proto_goTypes = nil
	file_city_map_v2_junction_service_proto_depIdxs = nil
}

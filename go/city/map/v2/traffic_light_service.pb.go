// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: city/map/v2/traffic_light_service.proto

package mapv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取路口的红绿灯信息请求
// Reqeust for getting traffic light information
type GetTrafficLightRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 信号等相关的接口精确到junction
	// The interfaces related to signals are precise to junction
	JunctionId    int32 `protobuf:"varint,1,opt,name=junction_id,json=junctionId,proto3" json:"junction_id,omitempty" bson:"junction_id" db:"junction_id" yaml:"junction_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrafficLightRequest) Reset() {
	*x = GetTrafficLightRequest{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrafficLightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrafficLightRequest) ProtoMessage() {}

func (x *GetTrafficLightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrafficLightRequest.ProtoReflect.Descriptor instead.
func (*GetTrafficLightRequest) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTrafficLightRequest) GetJunctionId() int32 {
	if x != nil {
		return x.JunctionId
	}
	return 0
}

// 获取路口的红绿灯信息响应
// Response of getting traffic light information
type GetTrafficLightResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 当前路口处的红绿灯
	// The traffic light at the junction
	TrafficLight *TrafficLight `protobuf:"bytes,1,opt,name=traffic_light,json=trafficLight,proto3" json:"traffic_light,omitempty" bson:"traffic_light" db:"traffic_light" yaml:"traffic_light"`
	// 表示当前路口处的红绿灯处于哪一个相位
	// Which phase the traffic light is currently in
	PhaseIndex int32 `protobuf:"varint,2,opt,name=phase_index,json=phaseIndex,proto3" json:"phase_index,omitempty" bson:"phase_index" db:"phase_index" yaml:"phase_index"`
	// 当前相位的剩余时间
	// The remaining time of the current phase
	TimeRemaining float64 `protobuf:"fixed64,3,opt,name=time_remaining,json=timeRemaining,proto3" json:"time_remaining,omitempty" bson:"time_remaining" db:"time_remaining" yaml:"time_remaining"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrafficLightResponse) Reset() {
	*x = GetTrafficLightResponse{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrafficLightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrafficLightResponse) ProtoMessage() {}

func (x *GetTrafficLightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrafficLightResponse.ProtoReflect.Descriptor instead.
func (*GetTrafficLightResponse) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTrafficLightResponse) GetTrafficLight() *TrafficLight {
	if x != nil {
		return x.TrafficLight
	}
	return nil
}

func (x *GetTrafficLightResponse) GetPhaseIndex() int32 {
	if x != nil {
		return x.PhaseIndex
	}
	return 0
}

func (x *GetTrafficLightResponse) GetTimeRemaining() float64 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

// 设置路口的红绿灯信息请求
// Request for setting traffic light information
type SetTrafficLightRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 需要改变的红绿灯（含路口编号）
	// The target traffic light (including junction ID)
	TrafficLight *TrafficLight `protobuf:"bytes,1,opt,name=traffic_light,json=trafficLight,proto3" json:"traffic_light,omitempty" bson:"traffic_light" db:"traffic_light" yaml:"traffic_light"`
	// 指定当前路口处的红绿灯的相位
	// Specify the phase of the traffic light
	PhaseIndex int32 `protobuf:"varint,2,opt,name=phase_index,json=phaseIndex,proto3" json:"phase_index,omitempty" bson:"phase_index" db:"phase_index" yaml:"phase_index"`
	// 当前相位的剩余时间
	// The remaining time of the current phase
	TimeRemaining float64 `protobuf:"fixed64,3,opt,name=time_remaining,json=timeRemaining,proto3" json:"time_remaining,omitempty" bson:"time_remaining" db:"time_remaining" yaml:"time_remaining"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightRequest) Reset() {
	*x = SetTrafficLightRequest{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightRequest) ProtoMessage() {}

func (x *SetTrafficLightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightRequest.ProtoReflect.Descriptor instead.
func (*SetTrafficLightRequest) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{2}
}

func (x *SetTrafficLightRequest) GetTrafficLight() *TrafficLight {
	if x != nil {
		return x.TrafficLight
	}
	return nil
}

func (x *SetTrafficLightRequest) GetPhaseIndex() int32 {
	if x != nil {
		return x.PhaseIndex
	}
	return 0
}

func (x *SetTrafficLightRequest) GetTimeRemaining() float64 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

// 设置路口的红绿灯信息响应
// Response of setting traffic light information
type SetTrafficLightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightResponse) Reset() {
	*x = SetTrafficLightResponse{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightResponse) ProtoMessage() {}

func (x *SetTrafficLightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightResponse.ProtoReflect.Descriptor instead.
func (*SetTrafficLightResponse) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{3}
}

// 设置路口的红绿灯相位请求
// Request for setting traffic light phase
type SetTrafficLightPhaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 需要改变相位的路口编号
	// The target junction ID
	JunctionId int32 `protobuf:"varint,1,opt,name=junction_id,json=junctionId,proto3" json:"junction_id,omitempty" bson:"junction_id" db:"junction_id" yaml:"junction_id"`
	// 指定当前路口红绿灯的相位
	// Specify the traffic light phase
	PhaseIndex int32 `protobuf:"varint,2,opt,name=phase_index,json=phaseIndex,proto3" json:"phase_index,omitempty" bson:"phase_index" db:"phase_index" yaml:"phase_index"`
	// 当前相位的剩余时间
	// The remaining time of the current phase
	TimeRemaining float64 `protobuf:"fixed64,3,opt,name=time_remaining,json=timeRemaining,proto3" json:"time_remaining,omitempty" bson:"time_remaining" db:"time_remaining" yaml:"time_remaining"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightPhaseRequest) Reset() {
	*x = SetTrafficLightPhaseRequest{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightPhaseRequest) ProtoMessage() {}

func (x *SetTrafficLightPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightPhaseRequest.ProtoReflect.Descriptor instead.
func (*SetTrafficLightPhaseRequest) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetTrafficLightPhaseRequest) GetJunctionId() int32 {
	if x != nil {
		return x.JunctionId
	}
	return 0
}

func (x *SetTrafficLightPhaseRequest) GetPhaseIndex() int32 {
	if x != nil {
		return x.PhaseIndex
	}
	return 0
}

func (x *SetTrafficLightPhaseRequest) GetTimeRemaining() float64 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

// 设置路口的红绿灯相位响应
// Response of setting traffic light phase
type SetTrafficLightPhaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightPhaseResponse) Reset() {
	*x = SetTrafficLightPhaseResponse{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightPhaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightPhaseResponse) ProtoMessage() {}

func (x *SetTrafficLightPhaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightPhaseResponse.ProtoReflect.Descriptor instead.
func (*SetTrafficLightPhaseResponse) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{5}
}

// 设置路口的红绿灯状态请求
// Request for setting traffic light status
type SetTrafficLightStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 需要改变状态的路口编号
	// The target junction ID
	JunctionId int32 `protobuf:"varint,1,opt,name=junction_id,json=junctionId,proto3" json:"junction_id,omitempty" bson:"junction_id" db:"junction_id" yaml:"junction_id"`
	// 当前路口红绿灯状态，true为通，false为断
	// The current traffic light status at the junction, true is on, false is off
	Ok            bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty" bson:"ok" db:"ok" yaml:"ok"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightStatusRequest) Reset() {
	*x = SetTrafficLightStatusRequest{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightStatusRequest) ProtoMessage() {}

func (x *SetTrafficLightStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightStatusRequest.ProtoReflect.Descriptor instead.
func (*SetTrafficLightStatusRequest) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{6}
}

func (x *SetTrafficLightStatusRequest) GetJunctionId() int32 {
	if x != nil {
		return x.JunctionId
	}
	return 0
}

func (x *SetTrafficLightStatusRequest) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// 设置路口的红绿灯状态响应
// Response of setting traffic light status
type SetTrafficLightStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTrafficLightStatusResponse) Reset() {
	*x = SetTrafficLightStatusResponse{}
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficLightStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficLightStatusResponse) ProtoMessage() {}

func (x *SetTrafficLightStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_map_v2_traffic_light_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficLightStatusResponse.ProtoReflect.Descriptor instead.
func (*SetTrafficLightStatusResponse) Descriptor() ([]byte, []int) {
	return file_city_map_v2_traffic_light_service_proto_rawDescGZIP(), []int{7}
}

var File_city_map_v2_traffic_light_service_proto protoreflect.FileDescriptor

const file_city_map_v2_traffic_light_service_proto_rawDesc = "" +
	"\n" +
	"'city/map/v2/traffic_light_service.proto\x12\vcity.map.v2\x1a\x17city/map/v2/light.proto\"9\n" +
	"\x16GetTrafficLightRequest\x12\x1f\n" +
	"\vjunction_id\x18\x01 \x01(\x05R\n" +
	"junctionId\"\xa1\x01\n" +
	"\x17GetTrafficLightResponse\x12>\n" +
	"\rtraffic_light\x18\x01 \x01(\v2\x19.city.map.v2.TrafficLightR\ftrafficLight\x12\x1f\n" +
	"\vphase_index\x18\x02 \x01(\x05R\n" +
	"phaseIndex\x12%\n" +
	"\x0etime_remaining\x18\x03 \x01(\x01R\rtimeRemaining\"\xa0\x01\n" +
	"\x16SetTrafficLightRequest\x12>\n" +
	"\rtraffic_light\x18\x01 \x01(\v2\x19.city.map.v2.TrafficLightR\ftrafficLight\x12\x1f\n" +
	"\vphase_index\x18\x02 \x01(\x05R\n" +
	"phaseIndex\x12%\n" +
	"\x0etime_remaining\x18\x03 \x01(\x01R\rtimeRemaining\"\x19\n" +
	"\x17SetTrafficLightResponse\"\x86\x01\n" +
	"\x1bSetTrafficLightPhaseRequest\x12\x1f\n" +
	"\vjunction_id\x18\x01 \x01(\x05R\n" +
	"junctionId\x12\x1f\n" +
	"\vphase_index\x18\x02 \x01(\x05R\n" +
	"phaseIndex\x12%\n" +
	"\x0etime_remaining\x18\x03 \x01(\x01R\rtimeRemaining\"\x1e\n" +
	"\x1cSetTrafficLightPhaseResponse\"O\n" +
	"\x1cSetTrafficLightStatusRequest\x12\x1f\n" +
	"\vjunction_id\x18\x01 \x01(\x05R\n" +
	"junctionId\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\"\x1f\n" +
	"\x1dSetTrafficLightStatusResponse2\xae\x03\n" +
	"\x13TrafficLightService\x12\\\n" +
	"\x0fGetTrafficLight\x12#.city.map.v2.GetTrafficLightRequest\x1a$.city.map.v2.GetTrafficLightResponse\x12\\\n" +
	"\x0fSetTrafficLight\x12#.city.map.v2.SetTrafficLightRequest\x1a$.city.map.v2.SetTrafficLightResponse\x12k\n" +
	"\x14SetTrafficLightPhase\x12(.city.map.v2.SetTrafficLightPhaseRequest\x1a).city.map.v2.SetTrafficLightPhaseResponse\x12n\n" +
	"\x15SetTrafficLightStatus\x12).city.map.v2.SetTrafficLightStatusRequest\x1a*.city.map.v2.SetTrafficLightStatusResponseB\xac\x01\n" +
	"\x0fcom.city.map.v2B\x18TrafficLightServiceProtoP\x01Z1git.fiblab.net/sim/protos/v2/go/city/map/v2;mapv2\xa2\x02\x03CMX\xaa\x02\vCity.Map.V2\xca\x02\vCity\\Map\\V2\xe2\x02\x17City\\Map\\V2\\GPBMetadata\xea\x02\rCity::Map::V2b\x06proto3"

var (
	file_city_map_v2_traffic_light_service_proto_rawDescOnce sync.Once
	file_city_map_v2_traffic_light_service_proto_rawDescData []byte
)

func file_city_map_v2_traffic_light_service_proto_rawDescGZIP() []byte {
	file_city_map_v2_traffic_light_service_proto_rawDescOnce.Do(func() {
		file_city_map_v2_traffic_light_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_map_v2_traffic_light_service_proto_rawDesc), len(file_city_map_v2_traffic_light_service_proto_rawDesc)))
	})
	return file_city_map_v2_traffic_light_service_proto_rawDescData
}

var file_city_map_v2_traffic_light_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_city_map_v2_traffic_light_service_proto_goTypes = []any{
	(*GetTrafficLightRequest)(nil),        // 0: city.map.v2.GetTrafficLightRequest
	(*GetTrafficLightResponse)(nil),       // 1: city.map.v2.GetTrafficLightResponse
	(*SetTrafficLightRequest)(nil),        // 2: city.map.v2.SetTrafficLightRequest
	(*SetTrafficLightResponse)(nil),       // 3: city.map.v2.SetTrafficLightResponse
	(*SetTrafficLightPhaseRequest)(nil),   // 4: city.map.v2.SetTrafficLightPhaseRequest
	(*SetTrafficLightPhaseResponse)(nil),  // 5: city.map.v2.SetTrafficLightPhaseResponse
	(*SetTrafficLightStatusRequest)(nil),  // 6: city.map.v2.SetTrafficLightStatusRequest
	(*SetTrafficLightStatusResponse)(nil), // 7: city.map.v2.SetTrafficLightStatusResponse
	(*TrafficLight)(nil),                  // 8: city.map.v2.TrafficLight
}
var file_city_map_v2_traffic_light_service_proto_depIdxs = []int32{
	8, // 0: city.map.v2.GetTrafficLightResponse.traffic_light:type_name -> city.map.v2.TrafficLight
	8, // 1: city.map.v2.SetTrafficLightRequest.traffic_light:type_name -> city.map.v2.TrafficLight
	0, // 2: city.map.v2.TrafficLightService.GetTrafficLight:input_type -> city.map.v2.GetTrafficLightRequest
	2, // 3: city.map.v2.TrafficLightService.SetTrafficLight:input_type -> city.map.v2.SetTrafficLightRequest
	4, // 4: city.map.v2.TrafficLightService.SetTrafficLightPhase:input_type -> city.map.v2.SetTrafficLightPhaseRequest
	6, // 5: city.map.v2.TrafficLightService.SetTrafficLightStatus:input_type -> city.map.v2.SetTrafficLightStatusRequest
	1, // 6: city.map.v2.TrafficLightService.GetTrafficLight:output_type -> city.map.v2.GetTrafficLightResponse
	3, // 7: city.map.v2.TrafficLightService.SetTrafficLight:output_type -> city.map.v2.SetTrafficLightResponse
	5, // 8: city.map.v2.TrafficLightService.SetTrafficLightPhase:output_type -> city.map.v2.SetTrafficLightPhaseResponse
	7, // 9: city.map.v2.TrafficLightService.SetTrafficLightStatus:output_type -> city.map.v2.SetTrafficLightStatusResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_city_map_v2_traffic_light_service_proto_init() }
func file_city_map_v2_traffic_light_service_proto_init() {
	if File_city_map_v2_traffic_light_service_proto != nil {
		return
	}
	file_city_map_v2_light_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_map_v2_traffic_light_service_proto_rawDesc), len(file_city_map_v2_traffic_light_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_map_v2_traffic_light_service_proto_goTypes,
		DependencyIndexes: file_city_map_v2_traffic_light_service_proto_depIdxs,
		MessageInfos:      file_city_map_v2_traffic_light_service_proto_msgTypes,
	}.Build()
	File_city_map_v2_traffic_light_service_proto = out.File
	file_city_map_v2_traffic_light_service_proto_goTypes = nil
	file_city_map_v2_traffic_light_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: city/person/v1/person.proto

package personv1

import (
	v2 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	v21 "git.fiblab.net/sim/protos/v2/go/city/trip/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 公交车
// Type of Bus
type BusType int32

const (
	// 未指定
	// unspecified
	BusType_BUS_TYPE_UNSPECIFIED BusType = 0
	// 公交类型
	// The bus is a trolleybus, BRT, eta.
	BusType_BUS_TYPE_BUS BusType = 1
	// 地铁类型
	// The bus is a subway
	BusType_BUS_TYPE_SUBWAY BusType = 2
)

// Enum value maps for BusType.
var (
	BusType_name = map[int32]string{
		0: "BUS_TYPE_UNSPECIFIED",
		1: "BUS_TYPE_BUS",
		2: "BUS_TYPE_SUBWAY",
	}
	BusType_value = map[string]int32{
		"BUS_TYPE_UNSPECIFIED": 0,
		"BUS_TYPE_BUS":         1,
		"BUS_TYPE_SUBWAY":      2,
	}
)

func (x BusType) Enum() *BusType {
	p := new(BusType)
	*p = x
	return p
}

func (x BusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v1_person_proto_enumTypes[0].Descriptor()
}

func (BusType) Type() protoreflect.EnumType {
	return &file_city_person_v1_person_proto_enumTypes[0]
}

func (x BusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusType.Descriptor instead.
func (BusType) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{0}
}

// 智能体教育等级
// Agent education level
type Education int32

const (
	// 未指定
	// unspecified
	Education_EDUCATION_UNSPECIFIED Education = 0
	// 博士
	// doctor
	Education_EDUCATION_DOCTOR Education = 1
	// 硕士
	// master
	Education_EDUCATION_MASTER Education = 2
	// 本科
	// bachelor
	Education_EDUCATION_BACHELOR Education = 3
	// 高中
	// high school
	Education_EDUCATION_HIGH_SCHOOL Education = 4
	// 初中
	// junior high school
	Education_EDUCATION_JUNIOR_HIGH_SCHOOL Education = 5
	// 小学
	// primary school
	Education_EDUCATION_PRIMARY_SCHOOL Education = 6
	// 大专
	// college
	Education_EDUCATION_COLLEGE Education = 7
)

// Enum value maps for Education.
var (
	Education_name = map[int32]string{
		0: "EDUCATION_UNSPECIFIED",
		1: "EDUCATION_DOCTOR",
		2: "EDUCATION_MASTER",
		3: "EDUCATION_BACHELOR",
		4: "EDUCATION_HIGH_SCHOOL",
		5: "EDUCATION_JUNIOR_HIGH_SCHOOL",
		6: "EDUCATION_PRIMARY_SCHOOL",
		7: "EDUCATION_COLLEGE",
	}
	Education_value = map[string]int32{
		"EDUCATION_UNSPECIFIED":        0,
		"EDUCATION_DOCTOR":             1,
		"EDUCATION_MASTER":             2,
		"EDUCATION_BACHELOR":           3,
		"EDUCATION_HIGH_SCHOOL":        4,
		"EDUCATION_JUNIOR_HIGH_SCHOOL": 5,
		"EDUCATION_PRIMARY_SCHOOL":     6,
		"EDUCATION_COLLEGE":            7,
	}
)

func (x Education) Enum() *Education {
	p := new(Education)
	*p = x
	return p
}

func (x Education) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Education) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v1_person_proto_enumTypes[1].Descriptor()
}

func (Education) Type() protoreflect.EnumType {
	return &file_city_person_v1_person_proto_enumTypes[1]
}

func (x Education) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Education.Descriptor instead.
func (Education) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{1}
}

// 智能体性别
// agent gender
type Gender int32

const (
	// 未指定
	// unspecified
	Gender_GENDER_UNSPECIFIED Gender = 0
	// 男性
	// male
	Gender_GENDER_MALE Gender = 1
	// 女性
	// female
	Gender_GENDER_FEMALE Gender = 2
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GENDER_UNSPECIFIED",
		1: "GENDER_MALE",
		2: "GENDER_FEMALE",
	}
	Gender_value = map[string]int32{
		"GENDER_UNSPECIFIED": 0,
		"GENDER_MALE":        1,
		"GENDER_FEMALE":      2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v1_person_proto_enumTypes[2].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_city_person_v1_person_proto_enumTypes[2]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{2}
}

// 智能体消费水平
// agent consumption level
type Consumption int32

const (
	// 未指定
	// unspecified
	Consumption_CONSUMPTION_UNSPECIFIED Consumption = 0
	// 低
	// low
	Consumption_CONSUMPTION_LOW Consumption = 1
	// 较低
	// relatively low
	Consumption_CONSUMPTION_RELATIVELY_LOW Consumption = 2
	// 中等
	// medium
	Consumption_CONSUMPTION_MEDIUM Consumption = 3
	// 较高
	// relatively high
	Consumption_CONSUMPTION_RELATIVELY_HIGH Consumption = 4
	// 高
	// high
	Consumption_CONSUMPTION_HIGH Consumption = 5
)

// Enum value maps for Consumption.
var (
	Consumption_name = map[int32]string{
		0: "CONSUMPTION_UNSPECIFIED",
		1: "CONSUMPTION_LOW",
		2: "CONSUMPTION_RELATIVELY_LOW",
		3: "CONSUMPTION_MEDIUM",
		4: "CONSUMPTION_RELATIVELY_HIGH",
		5: "CONSUMPTION_HIGH",
	}
	Consumption_value = map[string]int32{
		"CONSUMPTION_UNSPECIFIED":     0,
		"CONSUMPTION_LOW":             1,
		"CONSUMPTION_RELATIVELY_LOW":  2,
		"CONSUMPTION_MEDIUM":          3,
		"CONSUMPTION_RELATIVELY_HIGH": 4,
		"CONSUMPTION_HIGH":            5,
	}
)

func (x Consumption) Enum() *Consumption {
	p := new(Consumption)
	*p = x
	return p
}

func (x Consumption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Consumption) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v1_person_proto_enumTypes[3].Descriptor()
}

func (Consumption) Type() protoreflect.EnumType {
	return &file_city_person_v1_person_proto_enumTypes[3]
}

func (x Consumption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Consumption.Descriptor instead.
func (Consumption) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{3}
}

// 智能体属性（通用）
// Agent properties (general)
type PersonAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 单位: m，长度
	// length: m
	Length float64 `protobuf:"fixed64,2,opt,name=length,proto3" json:"length,omitempty" bson:"length" db:"length" yaml:"length"`
	// 单位: m，宽度
	// width: m
	Width float64 `protobuf:"fixed64,3,opt,name=width,proto3" json:"width,omitempty" bson:"width" db:"width" yaml:"width"`
	// 单位: m/s
	// max speed: m/s
	MaxSpeed float64 `protobuf:"fixed64,4,opt,name=max_speed,json=maxSpeed,proto3" json:"max_speed,omitempty" bson:"max_speed" db:"max_speed" yaml:"max_speed"`
	// 单位: m/s^2, 最大加速度（正值）
	// max accelaration: m/s^2 (positive value)
	MaxAcceleration float64 `protobuf:"fixed64,5,opt,name=max_acceleration,json=maxAcceleration,proto3" json:"max_acceleration,omitempty" bson:"max_acceleration" db:"max_acceleration" yaml:"max_acceleration"`
	// 单位: m/s^2, 最大减速度（负值）
	// max deceleration: m/s^2 (negative value)
	MaxBrakingAcceleration float64 `protobuf:"fixed64,6,opt,name=max_braking_acceleration,json=maxBrakingAcceleration,proto3" json:"max_braking_acceleration,omitempty" bson:"max_braking_acceleration" db:"max_braking_acceleration" yaml:"max_braking_acceleration"`
	// 单位: m/s^2, 一般加速度（正值），要求小于最大加速度
	// usual acceleration: m/s^2 (positive value), required to be less than the max acceleration
	UsualAcceleration float64 `protobuf:"fixed64,7,opt,name=usual_acceleration,json=usualAcceleration,proto3" json:"usual_acceleration,omitempty" bson:"usual_acceleration" db:"usual_acceleration" yaml:"usual_acceleration"`
	// 单位: m/s^2, 一般减速度（负值），要求大于最大减速度
	// usual deceleration: m/s^2 (negative value), required to be greater than the max deceleration
	UsualBrakingAcceleration float64 `protobuf:"fixed64,8,opt,name=usual_braking_acceleration,json=usualBrakingAcceleration,proto3" json:"usual_braking_acceleration,omitempty" bson:"usual_braking_acceleration" db:"usual_braking_acceleration" yaml:"usual_braking_acceleration"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PersonAttribute) Reset() {
	*x = PersonAttribute{}
	mi := &file_city_person_v1_person_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonAttribute) ProtoMessage() {}

func (x *PersonAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonAttribute.ProtoReflect.Descriptor instead.
func (*PersonAttribute) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{0}
}

func (x *PersonAttribute) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PersonAttribute) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PersonAttribute) GetMaxSpeed() float64 {
	if x != nil {
		return x.MaxSpeed
	}
	return 0
}

func (x *PersonAttribute) GetMaxAcceleration() float64 {
	if x != nil {
		return x.MaxAcceleration
	}
	return 0
}

func (x *PersonAttribute) GetMaxBrakingAcceleration() float64 {
	if x != nil {
		return x.MaxBrakingAcceleration
	}
	return 0
}

func (x *PersonAttribute) GetUsualAcceleration() float64 {
	if x != nil {
		return x.UsualAcceleration
	}
	return 0
}

func (x *PersonAttribute) GetUsualBrakingAcceleration() float64 {
	if x != nil {
		return x.UsualBrakingAcceleration
	}
	return 0
}

// 车辆附加属性
// Vehicle additional attributes
type VehicleAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 单位: m, 完成变道所需路程
	// Distance required to complete lane change: m
	LaneChangeLength float64 `protobuf:"fixed64,1,opt,name=lane_change_length,json=laneChangeLength,proto3" json:"lane_change_length,omitempty" bson:"lane_change_length" db:"lane_change_length" yaml:"lane_change_length"`
	// 单位：米，本车距离前车的最小距离
	// The minimum distance between the vehicle and the vehicle in front: m
	MinGap float64 `protobuf:"fixed64,2,opt,name=min_gap,json=minGap,proto3" json:"min_gap,omitempty" bson:"min_gap" db:"min_gap" yaml:"min_gap"`
	// 车辆模型标签
	// Vehicle model tag
	Model         *string `protobuf:"bytes,3,opt,name=model,proto3,oneof" json:"model,omitempty" bson:"model" db:"model" yaml:"model"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleAttribute) Reset() {
	*x = VehicleAttribute{}
	mi := &file_city_person_v1_person_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAttribute) ProtoMessage() {}

func (x *VehicleAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAttribute.ProtoReflect.Descriptor instead.
func (*VehicleAttribute) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{1}
}

func (x *VehicleAttribute) GetLaneChangeLength() float64 {
	if x != nil {
		return x.LaneChangeLength
	}
	return 0
}

func (x *VehicleAttribute) GetMinGap() float64 {
	if x != nil {
		return x.MinGap
	}
	return 0
}

func (x *VehicleAttribute) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

// 公交车附加属性
// Bus additional attributes
type BusAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 公交线路ID
	// bus line ID
	SublineId int32 `protobuf:"varint,1,opt,name=subline_id,json=sublineId,proto3" json:"subline_id,omitempty" bson:"subline_id" db:"subline_id" yaml:"subline_id"`
	// 公交车容量
	// bus capacity
	Capacity int32 `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty" bson:"capacity" db:"capacity" yaml:"capacity"`
	// 公交车模型标签
	// bus model tag
	Model *string `protobuf:"bytes,3,opt,name=model,proto3,oneof" json:"model,omitempty" bson:"model" db:"model" yaml:"model"`
	// 公交车类型
	// type of bus
	Type          BusType `protobuf:"varint,5,opt,name=type,proto3,enum=city.person.v1.BusType" json:"type,omitempty" bson:"type" db:"type" yaml:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusAttribute) Reset() {
	*x = BusAttribute{}
	mi := &file_city_person_v1_person_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusAttribute) ProtoMessage() {}

func (x *BusAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusAttribute.ProtoReflect.Descriptor instead.
func (*BusAttribute) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{2}
}

func (x *BusAttribute) GetSublineId() int32 {
	if x != nil {
		return x.SublineId
	}
	return 0
}

func (x *BusAttribute) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *BusAttribute) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *BusAttribute) GetType() BusType {
	if x != nil {
		return x.Type
	}
	return BusType_BUS_TYPE_UNSPECIFIED
}

// 行人附加属性
// Pedestrian additional attributes
type PedestrianAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 单位: m/s
	// speed: m/s
	Speed float64 `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty" bson:"speed" db:"speed" yaml:"speed"`
	// 行人模型标签
	// Pedestrian model tag
	Model         *string `protobuf:"bytes,2,opt,name=model,proto3,oneof" json:"model,omitempty" bson:"model" db:"model" yaml:"model"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedestrianAttribute) Reset() {
	*x = PedestrianAttribute{}
	mi := &file_city_person_v1_person_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedestrianAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedestrianAttribute) ProtoMessage() {}

func (x *PedestrianAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedestrianAttribute.ProtoReflect.Descriptor instead.
func (*PedestrianAttribute) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{3}
}

func (x *PedestrianAttribute) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PedestrianAttribute) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

// 自行车附加属性
// Bike additional attributes
type BikeAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 单位: m/s
	// speed: m/s
	Speed float64 `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty" bson:"speed" db:"speed" yaml:"speed"`
	// 自行车模型标签
	// Bike model tag
	Model         *string `protobuf:"bytes,2,opt,name=model,proto3,oneof" json:"model,omitempty" bson:"model" db:"model" yaml:"model"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BikeAttribute) Reset() {
	*x = BikeAttribute{}
	mi := &file_city_person_v1_person_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BikeAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BikeAttribute) ProtoMessage() {}

func (x *BikeAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BikeAttribute.ProtoReflect.Descriptor instead.
func (*BikeAttribute) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{4}
}

func (x *BikeAttribute) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *BikeAttribute) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

// 智能体简介
// agent profile
type PersonProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 年龄
	// age
	Age int32 `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty" bson:"age" db:"age" yaml:"age"`
	// 教育水平
	// education level
	Education Education `protobuf:"varint,2,opt,name=education,proto3,enum=city.person.v1.Education" json:"education,omitempty" bson:"education" db:"education" yaml:"education"`
	// 性别
	// gender
	Gender Gender `protobuf:"varint,3,opt,name=gender,proto3,enum=city.person.v1.Gender" json:"gender,omitempty" bson:"gender" db:"gender" yaml:"gender"`
	// 消费水平
	// consumption level
	Consumption Consumption `protobuf:"varint,4,opt,name=consumption,proto3,enum=city.person.v1.Consumption" json:"consumption,omitempty" bson:"consumption" db:"consumption" yaml:"consumption"`
	// 房屋ID 区分不同家庭
	// House ID, identify which family this person belongs to
	HouseId       int32 `protobuf:"varint,5,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty" bson:"house_id" db:"house_id" yaml:"house_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersonProfile) Reset() {
	*x = PersonProfile{}
	mi := &file_city_person_v1_person_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonProfile) ProtoMessage() {}

func (x *PersonProfile) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonProfile.ProtoReflect.Descriptor instead.
func (*PersonProfile) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{5}
}

func (x *PersonProfile) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PersonProfile) GetEducation() Education {
	if x != nil {
		return x.Education
	}
	return Education_EDUCATION_UNSPECIFIED
}

func (x *PersonProfile) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_GENDER_UNSPECIFIED
}

func (x *PersonProfile) GetConsumption() Consumption {
	if x != nil {
		return x.Consumption
	}
	return Consumption_CONSUMPTION_UNSPECIFIED
}

func (x *PersonProfile) GetHouseId() int32 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

// 智能体
// agent
type Person struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 智能体ID
	// agent ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id" db:"id" yaml:"id"`
	// 参数
	// attribute
	Attribute *PersonAttribute `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty" bson:"attribute" db:"attribute" yaml:"attribute"`
	// 初始位置
	// initial position
	Home *v2.Position `protobuf:"bytes,3,opt,name=home,proto3" json:"home,omitempty" bson:"home" db:"home" yaml:"home"`
	// 初始日程
	// initial schedules
	Schedules []*v21.Schedule `protobuf:"bytes,4,rep,name=schedules,proto3" json:"schedules,omitempty" bson:"schedules" db:"schedules" yaml:"schedules"`
	// 车辆附加属性
	// vehicle addtional attribute
	VehicleAttribute *VehicleAttribute `protobuf:"bytes,7,opt,name=vehicle_attribute,json=vehicleAttribute,proto3,oneof" json:"vehicle_attribute,omitempty" bson:"vehicle_attribute" db:"vehicle_attribute" yaml:"vehicle_attribute"`
	// 公交车附加属性
	// bus additional attribute
	BusAttribute *BusAttribute `protobuf:"bytes,8,opt,name=bus_attribute,json=busAttribute,proto3,oneof" json:"bus_attribute,omitempty" bson:"bus_attribute" db:"bus_attribute" yaml:"bus_attribute"`
	// 行人附加属性
	// pedestrian additional attribute
	PedestrianAttribute *PedestrianAttribute `protobuf:"bytes,12,opt,name=pedestrian_attribute,json=pedestrianAttribute,proto3,oneof" json:"pedestrian_attribute,omitempty" bson:"pedestrian_attribute" db:"pedestrian_attribute" yaml:"pedestrian_attribute"`
	// 自行车附加属性
	// bike addition attribute
	BikeAttribute *BikeAttribute `protobuf:"bytes,9,opt,name=bike_attribute,json=bikeAttribute,proto3,oneof" json:"bike_attribute,omitempty" bson:"bike_attribute" db:"bike_attribute" yaml:"bike_attribute"`
	// [可空] 额外的标签（例如：抢修车类型->电网）
	// [can be empty] additional tags (e.g. repair vehicle type -> power grid)
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" bson:"labels" db:"labels" yaml:"labels"`
	// [可空] 智能体简介
	// [can be empty] agent profile
	Profile *PersonProfile `protobuf:"bytes,11,opt,name=profile,proto3,oneof" json:"profile,omitempty" bson:"profile" db:"profile" yaml:"profile"`
	// 工作地位置
	// work position
	Work *v2.Position `protobuf:"bytes,13,opt,name=work,proto3,oneof" json:"work,omitempty" bson:"work" db:"work" yaml:"work"`
	// 是否在SLEEP状态下也输出可视化（仅限车辆）
	// Whether to output visualization in the SLEEP state (vehicles only)
	OutputWhenSleep *bool `protobuf:"varint,14,opt,name=output_when_sleep,json=outputWhenSleep,proto3,oneof" json:"output_when_sleep,omitempty" bson:"output_when_sleep" db:"output_when_sleep" yaml:"output_when_sleep"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_city_person_v1_person_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{6}
}

func (x *Person) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Person) GetAttribute() *PersonAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Person) GetHome() *v2.Position {
	if x != nil {
		return x.Home
	}
	return nil
}

func (x *Person) GetSchedules() []*v21.Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *Person) GetVehicleAttribute() *VehicleAttribute {
	if x != nil {
		return x.VehicleAttribute
	}
	return nil
}

func (x *Person) GetBusAttribute() *BusAttribute {
	if x != nil {
		return x.BusAttribute
	}
	return nil
}

func (x *Person) GetPedestrianAttribute() *PedestrianAttribute {
	if x != nil {
		return x.PedestrianAttribute
	}
	return nil
}

func (x *Person) GetBikeAttribute() *BikeAttribute {
	if x != nil {
		return x.BikeAttribute
	}
	return nil
}

func (x *Person) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Person) GetProfile() *PersonProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Person) GetWork() *v2.Position {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *Person) GetOutputWhenSleep() bool {
	if x != nil && x.OutputWhenSleep != nil {
		return *x.OutputWhenSleep
	}
	return false
}

// 智能体集合，对应一个智能体pb文件或一个智能体mongodb collection
// Agent collection, corresponding to an agent pb file or an agent mongodb collection
type Persons struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Persons       []*Person              `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty" bson:"persons" db:"persons" yaml:"persons"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Persons) Reset() {
	*x = Persons{}
	mi := &file_city_person_v1_person_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Persons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Persons) ProtoMessage() {}

func (x *Persons) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v1_person_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Persons.ProtoReflect.Descriptor instead.
func (*Persons) Descriptor() ([]byte, []int) {
	return file_city_person_v1_person_proto_rawDescGZIP(), []int{7}
}

func (x *Persons) GetPersons() []*Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

var File_city_person_v1_person_proto protoreflect.FileDescriptor

const file_city_person_v1_person_proto_rawDesc = "" +
	"\n" +
	"\x1bcity/person/v1/person.proto\x12\x0ecity.person.v1\x1a\x15city/geo/v2/geo.proto\x1a\x17city/trip/v2/trip.proto\"\xae\x02\n" +
	"\x0fPersonAttribute\x12\x16\n" +
	"\x06length\x18\x02 \x01(\x01R\x06length\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x01R\x05width\x12\x1b\n" +
	"\tmax_speed\x18\x04 \x01(\x01R\bmaxSpeed\x12)\n" +
	"\x10max_acceleration\x18\x05 \x01(\x01R\x0fmaxAcceleration\x128\n" +
	"\x18max_braking_acceleration\x18\x06 \x01(\x01R\x16maxBrakingAcceleration\x12-\n" +
	"\x12usual_acceleration\x18\a \x01(\x01R\x11usualAcceleration\x12<\n" +
	"\x1ausual_braking_acceleration\x18\b \x01(\x01R\x18usualBrakingAcceleration\"~\n" +
	"\x10VehicleAttribute\x12,\n" +
	"\x12lane_change_length\x18\x01 \x01(\x01R\x10laneChangeLength\x12\x17\n" +
	"\amin_gap\x18\x02 \x01(\x01R\x06minGap\x12\x19\n" +
	"\x05model\x18\x03 \x01(\tH\x00R\x05model\x88\x01\x01B\b\n" +
	"\x06_model\"\x9b\x01\n" +
	"\fBusAttribute\x12\x1d\n" +
	"\n" +
	"subline_id\x18\x01 \x01(\x05R\tsublineId\x12\x1a\n" +
	"\bcapacity\x18\x02 \x01(\x05R\bcapacity\x12\x19\n" +
	"\x05model\x18\x03 \x01(\tH\x00R\x05model\x88\x01\x01\x12+\n" +
	"\x04type\x18\x05 \x01(\x0e2\x17.city.person.v1.BusTypeR\x04typeB\b\n" +
	"\x06_model\"P\n" +
	"\x13PedestrianAttribute\x12\x14\n" +
	"\x05speed\x18\x01 \x01(\x01R\x05speed\x12\x19\n" +
	"\x05model\x18\x02 \x01(\tH\x00R\x05model\x88\x01\x01B\b\n" +
	"\x06_model\"J\n" +
	"\rBikeAttribute\x12\x14\n" +
	"\x05speed\x18\x01 \x01(\x01R\x05speed\x12\x19\n" +
	"\x05model\x18\x02 \x01(\tH\x00R\x05model\x88\x01\x01B\b\n" +
	"\x06_model\"\xe4\x01\n" +
	"\rPersonProfile\x12\x10\n" +
	"\x03age\x18\x01 \x01(\x05R\x03age\x127\n" +
	"\teducation\x18\x02 \x01(\x0e2\x19.city.person.v1.EducationR\teducation\x12.\n" +
	"\x06gender\x18\x03 \x01(\x0e2\x16.city.person.v1.GenderR\x06gender\x12=\n" +
	"\vconsumption\x18\x04 \x01(\x0e2\x1b.city.person.v1.ConsumptionR\vconsumption\x12\x19\n" +
	"\bhouse_id\x18\x05 \x01(\x05R\ahouseId\"\x91\a\n" +
	"\x06Person\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12=\n" +
	"\tattribute\x18\x02 \x01(\v2\x1f.city.person.v1.PersonAttributeR\tattribute\x12)\n" +
	"\x04home\x18\x03 \x01(\v2\x15.city.geo.v2.PositionR\x04home\x124\n" +
	"\tschedules\x18\x04 \x03(\v2\x16.city.trip.v2.ScheduleR\tschedules\x12R\n" +
	"\x11vehicle_attribute\x18\a \x01(\v2 .city.person.v1.VehicleAttributeH\x00R\x10vehicleAttribute\x88\x01\x01\x12F\n" +
	"\rbus_attribute\x18\b \x01(\v2\x1c.city.person.v1.BusAttributeH\x01R\fbusAttribute\x88\x01\x01\x12[\n" +
	"\x14pedestrian_attribute\x18\f \x01(\v2#.city.person.v1.PedestrianAttributeH\x02R\x13pedestrianAttribute\x88\x01\x01\x12I\n" +
	"\x0ebike_attribute\x18\t \x01(\v2\x1d.city.person.v1.BikeAttributeH\x03R\rbikeAttribute\x88\x01\x01\x12:\n" +
	"\x06labels\x18\n" +
	" \x03(\v2\".city.person.v1.Person.LabelsEntryR\x06labels\x12<\n" +
	"\aprofile\x18\v \x01(\v2\x1d.city.person.v1.PersonProfileH\x04R\aprofile\x88\x01\x01\x12.\n" +
	"\x04work\x18\r \x01(\v2\x15.city.geo.v2.PositionH\x05R\x04work\x88\x01\x01\x12/\n" +
	"\x11output_when_sleep\x18\x0e \x01(\bH\x06R\x0foutputWhenSleep\x88\x01\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x14\n" +
	"\x12_vehicle_attributeB\x10\n" +
	"\x0e_bus_attributeB\x17\n" +
	"\x15_pedestrian_attributeB\x11\n" +
	"\x0f_bike_attributeB\n" +
	"\n" +
	"\b_profileB\a\n" +
	"\x05_workB\x14\n" +
	"\x12_output_when_sleep\";\n" +
	"\aPersons\x120\n" +
	"\apersons\x18\x01 \x03(\v2\x16.city.person.v1.PersonR\apersons*J\n" +
	"\aBusType\x12\x18\n" +
	"\x14BUS_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fBUS_TYPE_BUS\x10\x01\x12\x13\n" +
	"\x0fBUS_TYPE_SUBWAY\x10\x02*\xdc\x01\n" +
	"\tEducation\x12\x19\n" +
	"\x15EDUCATION_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10EDUCATION_DOCTOR\x10\x01\x12\x14\n" +
	"\x10EDUCATION_MASTER\x10\x02\x12\x16\n" +
	"\x12EDUCATION_BACHELOR\x10\x03\x12\x19\n" +
	"\x15EDUCATION_HIGH_SCHOOL\x10\x04\x12 \n" +
	"\x1cEDUCATION_JUNIOR_HIGH_SCHOOL\x10\x05\x12\x1c\n" +
	"\x18EDUCATION_PRIMARY_SCHOOL\x10\x06\x12\x15\n" +
	"\x11EDUCATION_COLLEGE\x10\a*D\n" +
	"\x06Gender\x12\x16\n" +
	"\x12GENDER_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vGENDER_MALE\x10\x01\x12\x11\n" +
	"\rGENDER_FEMALE\x10\x02*\xae\x01\n" +
	"\vConsumption\x12\x1b\n" +
	"\x17CONSUMPTION_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCONSUMPTION_LOW\x10\x01\x12\x1e\n" +
	"\x1aCONSUMPTION_RELATIVELY_LOW\x10\x02\x12\x16\n" +
	"\x12CONSUMPTION_MEDIUM\x10\x03\x12\x1f\n" +
	"\x1bCONSUMPTION_RELATIVELY_HIGH\x10\x04\x12\x14\n" +
	"\x10CONSUMPTION_HIGH\x10\x05B\xb4\x01\n" +
	"\x12com.city.person.v1B\vPersonProtoP\x01Z7git.fiblab.net/sim/protos/v2/go/city/person/v1;personv1\xa2\x02\x03CPX\xaa\x02\x0eCity.Person.V1\xca\x02\x0eCity\\Person\\V1\xe2\x02\x1aCity\\Person\\V1\\GPBMetadata\xea\x02\x10City::Person::V1b\x06proto3"

var (
	file_city_person_v1_person_proto_rawDescOnce sync.Once
	file_city_person_v1_person_proto_rawDescData []byte
)

func file_city_person_v1_person_proto_rawDescGZIP() []byte {
	file_city_person_v1_person_proto_rawDescOnce.Do(func() {
		file_city_person_v1_person_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_person_v1_person_proto_rawDesc), len(file_city_person_v1_person_proto_rawDesc)))
	})
	return file_city_person_v1_person_proto_rawDescData
}

var file_city_person_v1_person_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_city_person_v1_person_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_city_person_v1_person_proto_goTypes = []any{
	(BusType)(0),                // 0: city.person.v1.BusType
	(Education)(0),              // 1: city.person.v1.Education
	(Gender)(0),                 // 2: city.person.v1.Gender
	(Consumption)(0),            // 3: city.person.v1.Consumption
	(*PersonAttribute)(nil),     // 4: city.person.v1.PersonAttribute
	(*VehicleAttribute)(nil),    // 5: city.person.v1.VehicleAttribute
	(*BusAttribute)(nil),        // 6: city.person.v1.BusAttribute
	(*PedestrianAttribute)(nil), // 7: city.person.v1.PedestrianAttribute
	(*BikeAttribute)(nil),       // 8: city.person.v1.BikeAttribute
	(*PersonProfile)(nil),       // 9: city.person.v1.PersonProfile
	(*Person)(nil),              // 10: city.person.v1.Person
	(*Persons)(nil),             // 11: city.person.v1.Persons
	nil,                         // 12: city.person.v1.Person.LabelsEntry
	(*v2.Position)(nil),         // 13: city.geo.v2.Position
	(*v21.Schedule)(nil),        // 14: city.trip.v2.Schedule
}
var file_city_person_v1_person_proto_depIdxs = []int32{
	0,  // 0: city.person.v1.BusAttribute.type:type_name -> city.person.v1.BusType
	1,  // 1: city.person.v1.PersonProfile.education:type_name -> city.person.v1.Education
	2,  // 2: city.person.v1.PersonProfile.gender:type_name -> city.person.v1.Gender
	3,  // 3: city.person.v1.PersonProfile.consumption:type_name -> city.person.v1.Consumption
	4,  // 4: city.person.v1.Person.attribute:type_name -> city.person.v1.PersonAttribute
	13, // 5: city.person.v1.Person.home:type_name -> city.geo.v2.Position
	14, // 6: city.person.v1.Person.schedules:type_name -> city.trip.v2.Schedule
	5,  // 7: city.person.v1.Person.vehicle_attribute:type_name -> city.person.v1.VehicleAttribute
	6,  // 8: city.person.v1.Person.bus_attribute:type_name -> city.person.v1.BusAttribute
	7,  // 9: city.person.v1.Person.pedestrian_attribute:type_name -> city.person.v1.PedestrianAttribute
	8,  // 10: city.person.v1.Person.bike_attribute:type_name -> city.person.v1.BikeAttribute
	12, // 11: city.person.v1.Person.labels:type_name -> city.person.v1.Person.LabelsEntry
	9,  // 12: city.person.v1.Person.profile:type_name -> city.person.v1.PersonProfile
	13, // 13: city.person.v1.Person.work:type_name -> city.geo.v2.Position
	10, // 14: city.person.v1.Persons.persons:type_name -> city.person.v1.Person
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_city_person_v1_person_proto_init() }
func file_city_person_v1_person_proto_init() {
	if File_city_person_v1_person_proto != nil {
		return
	}
	file_city_person_v1_person_proto_msgTypes[1].OneofWrappers = []any{}
	file_city_person_v1_person_proto_msgTypes[2].OneofWrappers = []any{}
	file_city_person_v1_person_proto_msgTypes[3].OneofWrappers = []any{}
	file_city_person_v1_person_proto_msgTypes[4].OneofWrappers = []any{}
	file_city_person_v1_person_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_person_v1_person_proto_rawDesc), len(file_city_person_v1_person_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_person_v1_person_proto_goTypes,
		DependencyIndexes: file_city_person_v1_person_proto_depIdxs,
		EnumInfos:         file_city_person_v1_person_proto_enumTypes,
		MessageInfos:      file_city_person_v1_person_proto_msgTypes,
	}.Build()
	File_city_person_v1_person_proto = out.File
	file_city_person_v1_person_proto_goTypes = nil
	file_city_person_v1_person_proto_depIdxs = nil
}

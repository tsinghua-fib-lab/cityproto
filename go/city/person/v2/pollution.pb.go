// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: city/person/v2/pollution.proto

package personv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PollutionStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 累计二氧化碳排放（单位：g）
	// Cumulative carbon dioxide emissions (unit: g)
	Co2 float64 `protobuf:"fixed64,1,opt,name=co2,proto3" json:"co2,omitempty" bson:"co_2" db:"co_2" yaml:"co_2"`
	// 累计PM排放（单位：g）
	// Cumulative PM emissions (unit: g)
	Pm float64 `protobuf:"fixed64,2,opt,name=pm,proto3" json:"pm,omitempty" bson:"pm" db:"pm" yaml:"pm"`
	// 累计VOC排放（单位：g）
	// Cumulative VOC emissions (unit: g)
	Voc float64 `protobuf:"fixed64,3,opt,name=voc,proto3" json:"voc,omitempty" bson:"voc" db:"voc" yaml:"voc"`
	// 累计NOX排放（单位：g）
	// Cumulative NOX emissions (unit: g)
	Nox           float64 `protobuf:"fixed64,4,opt,name=nox,proto3" json:"nox,omitempty" bson:"nox" db:"nox" yaml:"nox"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollutionStatistics) Reset() {
	*x = PollutionStatistics{}
	mi := &file_city_person_v2_pollution_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollutionStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollutionStatistics) ProtoMessage() {}

func (x *PollutionStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_pollution_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollutionStatistics.ProtoReflect.Descriptor instead.
func (*PollutionStatistics) Descriptor() ([]byte, []int) {
	return file_city_person_v2_pollution_proto_rawDescGZIP(), []int{0}
}

func (x *PollutionStatistics) GetCo2() float64 {
	if x != nil {
		return x.Co2
	}
	return 0
}

func (x *PollutionStatistics) GetPm() float64 {
	if x != nil {
		return x.Pm
	}
	return 0
}

func (x *PollutionStatistics) GetVoc() float64 {
	if x != nil {
		return x.Voc
	}
	return 0
}

func (x *PollutionStatistics) GetNox() float64 {
	if x != nil {
		return x.Nox
	}
	return 0
}

var File_city_person_v2_pollution_proto protoreflect.FileDescriptor

const file_city_person_v2_pollution_proto_rawDesc = "" +
	"\n" +
	"\x1ecity/person/v2/pollution.proto\x12\x0ecity.person.v2\"[\n" +
	"\x13PollutionStatistics\x12\x10\n" +
	"\x03co2\x18\x01 \x01(\x01R\x03co2\x12\x0e\n" +
	"\x02pm\x18\x02 \x01(\x01R\x02pm\x12\x10\n" +
	"\x03voc\x18\x03 \x01(\x01R\x03voc\x12\x10\n" +
	"\x03nox\x18\x04 \x01(\x01R\x03noxB\xb7\x01\n" +
	"\x12com.city.person.v2B\x0ePollutionProtoP\x01Z7git.fiblab.net/sim/protos/v2/go/city/person/v2;personv2\xa2\x02\x03CPX\xaa\x02\x0eCity.Person.V2\xca\x02\x0eCity\\Person\\V2\xe2\x02\x1aCity\\Person\\V2\\GPBMetadata\xea\x02\x10City::Person::V2b\x06proto3"

var (
	file_city_person_v2_pollution_proto_rawDescOnce sync.Once
	file_city_person_v2_pollution_proto_rawDescData []byte
)

func file_city_person_v2_pollution_proto_rawDescGZIP() []byte {
	file_city_person_v2_pollution_proto_rawDescOnce.Do(func() {
		file_city_person_v2_pollution_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_person_v2_pollution_proto_rawDesc), len(file_city_person_v2_pollution_proto_rawDesc)))
	})
	return file_city_person_v2_pollution_proto_rawDescData
}

var file_city_person_v2_pollution_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_city_person_v2_pollution_proto_goTypes = []any{
	(*PollutionStatistics)(nil), // 0: city.person.v2.PollutionStatistics
}
var file_city_person_v2_pollution_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_city_person_v2_pollution_proto_init() }
func file_city_person_v2_pollution_proto_init() {
	if File_city_person_v2_pollution_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_person_v2_pollution_proto_rawDesc), len(file_city_person_v2_pollution_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_person_v2_pollution_proto_goTypes,
		DependencyIndexes: file_city_person_v2_pollution_proto_depIdxs,
		MessageInfos:      file_city_person_v2_pollution_proto_msgTypes,
	}.Build()
	File_city_person_v2_pollution_proto = out.File
	file_city_person_v2_pollution_proto_goTypes = nil
	file_city_person_v2_pollution_proto_depIdxs = nil
}

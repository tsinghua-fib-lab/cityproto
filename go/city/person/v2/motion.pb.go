// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: city/person/v2/motion.proto

package personv2

import (
	v2 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Person（人）的运行时状态
// Person's runtime state
type Status int32

const (
	// 未指定
	// unspecified
	Status_STATUS_UNSPECIFIED Status = 0
	// 没有移动行为
	// no mobility behaviors
	Status_STATUS_SLEEP Status = 1
	// 开车
	// driving
	Status_STATUS_DRIVING Status = 2
	// 步行
	// walking
	Status_STATUS_WALKING Status = 3
	// 室内行人
	// indoor pedestrian
	Status_STATUS_CROWD Status = 4
	// 乘客
	// vehicle passenger
	Status_STATUS_PASSENGER Status = 5
	// 等待路径规划
	// wait for path routing
	Status_STATUS_WAIT_ROUTE Status = 6
	// 等待公交车
	// wait for bus coming
	Status_STATUS_WAIT_BUS Status = 7
	// 操控轨道交通
	// operating rail transit
	Status_STATUS_RAIL_TRANSIT Status = 8
	// 等待出租车
	// wait for taxi
	Status_STATUS_WAIT_TAXI Status = 9
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SLEEP",
		2: "STATUS_DRIVING",
		3: "STATUS_WALKING",
		4: "STATUS_CROWD",
		5: "STATUS_PASSENGER",
		6: "STATUS_WAIT_ROUTE",
		7: "STATUS_WAIT_BUS",
		8: "STATUS_RAIL_TRANSIT",
		9: "STATUS_WAIT_TAXI",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":  0,
		"STATUS_SLEEP":        1,
		"STATUS_DRIVING":      2,
		"STATUS_WALKING":      3,
		"STATUS_CROWD":        4,
		"STATUS_PASSENGER":    5,
		"STATUS_WAIT_ROUTE":   6,
		"STATUS_WAIT_BUS":     7,
		"STATUS_RAIL_TRANSIT": 8,
		"STATUS_WAIT_TAXI":    9,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v2_motion_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_city_person_v2_motion_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v2_motion_proto_rawDescGZIP(), []int{0}
}

// Person（人）的运动状态
// Person's motion state
type PersonMotion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id" db:"id" yaml:"id"`
	// 状态
	// status
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=city.person.v2.Status" json:"status,omitempty" bson:"status" db:"status" yaml:"status"`
	// 位置（包含逻辑位置、XY位置、经纬度位置）
	// Position (including logical position, XY position, longitude and latitude position)
	Position *v2.Position `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty" bson:"position" db:"position" yaml:"position"`
	// speed
	V float64 `protobuf:"fixed64,4,opt,name=v,proto3" json:"v,omitempty" bson:"v" db:"v" yaml:"v"`
	// 方向角（atan2计算得到的弧度）
	// Direction angle (radians calculated by atan2)
	Direction float64 `protobuf:"fixed64,5,opt,name=direction,proto3" json:"direction,omitempty" bson:"direction" db:"direction" yaml:"direction"`
	// 活动描述
	// activity descriptions
	Activity string `protobuf:"bytes,6,opt,name=activity,proto3" json:"activity,omitempty" bson:"activity" db:"activity" yaml:"activity"`
	// 长度
	// length
	L float64 `protobuf:"fixed64,7,opt,name=l,proto3" json:"l,omitempty" bson:"l" db:"l" yaml:"l"`
	// 加速度
	// acceleration
	A float64 `protobuf:"fixed64,8,opt,name=a,proto3" json:"a,omitempty" bson:"a" db:"a" yaml:"a"`
	// 是否排队
	// whether queuing on lane
	IsQueuingOnLane bool `protobuf:"varint,9,opt,name=is_queuing_on_lane,json=isQueuingOnLane,proto3" json:"is_queuing_on_lane,omitempty" bson:"is_queuing_on_lane" db:"is_queuing_on_lane" yaml:"is_queuing_on_lane"`
	// 在当前车道排队时间
	// queuing time on current lane
	QueuingTimeOnCurLane float64 `protobuf:"fixed64,10,opt,name=queuing_time_on_cur_lane,json=queuingTimeOnCurLane,proto3" json:"queuing_time_on_cur_lane,omitempty" bson:"queuing_time_on_cur_lane" db:"queuing_time_on_cur_lane" yaml:"queuing_time_on_cur_lane"`
	// 乘客数量
	// number of passengers
	NumPassengers int32 `protobuf:"varint,11,opt,name=num_passengers,json=numPassengers,proto3" json:"num_passengers,omitempty" bson:"num_passengers" db:"num_passengers" yaml:"num_passengers"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersonMotion) Reset() {
	*x = PersonMotion{}
	mi := &file_city_person_v2_motion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersonMotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonMotion) ProtoMessage() {}

func (x *PersonMotion) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_motion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonMotion.ProtoReflect.Descriptor instead.
func (*PersonMotion) Descriptor() ([]byte, []int) {
	return file_city_person_v2_motion_proto_rawDescGZIP(), []int{0}
}

func (x *PersonMotion) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PersonMotion) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *PersonMotion) GetPosition() *v2.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PersonMotion) GetV() float64 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *PersonMotion) GetDirection() float64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *PersonMotion) GetActivity() string {
	if x != nil {
		return x.Activity
	}
	return ""
}

func (x *PersonMotion) GetL() float64 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *PersonMotion) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *PersonMotion) GetIsQueuingOnLane() bool {
	if x != nil {
		return x.IsQueuingOnLane
	}
	return false
}

func (x *PersonMotion) GetQueuingTimeOnCurLane() float64 {
	if x != nil {
		return x.QueuingTimeOnCurLane
	}
	return 0
}

func (x *PersonMotion) GetNumPassengers() int32 {
	if x != nil {
		return x.NumPassengers
	}
	return 0
}

var File_city_person_v2_motion_proto protoreflect.FileDescriptor

const file_city_person_v2_motion_proto_rawDesc = "" +
	"\n" +
	"\x1bcity/person/v2/motion.proto\x12\x0ecity.person.v2\x1a\x15city/geo/v2/geo.proto\"\xf1\x02\n" +
	"\fPersonMotion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.city.person.v2.StatusR\x06status\x121\n" +
	"\bposition\x18\x03 \x01(\v2\x15.city.geo.v2.PositionR\bposition\x12\f\n" +
	"\x01v\x18\x04 \x01(\x01R\x01v\x12\x1c\n" +
	"\tdirection\x18\x05 \x01(\x01R\tdirection\x12\x1a\n" +
	"\bactivity\x18\x06 \x01(\tR\bactivity\x12\f\n" +
	"\x01l\x18\a \x01(\x01R\x01l\x12\f\n" +
	"\x01a\x18\b \x01(\x01R\x01a\x12+\n" +
	"\x12is_queuing_on_lane\x18\t \x01(\bR\x0fisQueuingOnLane\x126\n" +
	"\x18queuing_time_on_cur_lane\x18\n" +
	" \x01(\x01R\x14queuingTimeOnCurLane\x12%\n" +
	"\x0enum_passengers\x18\v \x01(\x05R\rnumPassengers*\xdd\x01\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fSTATUS_SLEEP\x10\x01\x12\x12\n" +
	"\x0eSTATUS_DRIVING\x10\x02\x12\x12\n" +
	"\x0eSTATUS_WALKING\x10\x03\x12\x10\n" +
	"\fSTATUS_CROWD\x10\x04\x12\x14\n" +
	"\x10STATUS_PASSENGER\x10\x05\x12\x15\n" +
	"\x11STATUS_WAIT_ROUTE\x10\x06\x12\x13\n" +
	"\x0fSTATUS_WAIT_BUS\x10\a\x12\x17\n" +
	"\x13STATUS_RAIL_TRANSIT\x10\b\x12\x14\n" +
	"\x10STATUS_WAIT_TAXI\x10\tB\xb4\x01\n" +
	"\x12com.city.person.v2B\vMotionProtoP\x01Z7git.fiblab.net/sim/protos/v2/go/city/person/v2;personv2\xa2\x02\x03CPX\xaa\x02\x0eCity.Person.V2\xca\x02\x0eCity\\Person\\V2\xe2\x02\x1aCity\\Person\\V2\\GPBMetadata\xea\x02\x10City::Person::V2b\x06proto3"

var (
	file_city_person_v2_motion_proto_rawDescOnce sync.Once
	file_city_person_v2_motion_proto_rawDescData []byte
)

func file_city_person_v2_motion_proto_rawDescGZIP() []byte {
	file_city_person_v2_motion_proto_rawDescOnce.Do(func() {
		file_city_person_v2_motion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_person_v2_motion_proto_rawDesc), len(file_city_person_v2_motion_proto_rawDesc)))
	})
	return file_city_person_v2_motion_proto_rawDescData
}

var file_city_person_v2_motion_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_city_person_v2_motion_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_city_person_v2_motion_proto_goTypes = []any{
	(Status)(0),          // 0: city.person.v2.Status
	(*PersonMotion)(nil), // 1: city.person.v2.PersonMotion
	(*v2.Position)(nil),  // 2: city.geo.v2.Position
}
var file_city_person_v2_motion_proto_depIdxs = []int32{
	0, // 0: city.person.v2.PersonMotion.status:type_name -> city.person.v2.Status
	2, // 1: city.person.v2.PersonMotion.position:type_name -> city.geo.v2.Position
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_city_person_v2_motion_proto_init() }
func file_city_person_v2_motion_proto_init() {
	if File_city_person_v2_motion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_person_v2_motion_proto_rawDesc), len(file_city_person_v2_motion_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_person_v2_motion_proto_goTypes,
		DependencyIndexes: file_city_person_v2_motion_proto_depIdxs,
		EnumInfos:         file_city_person_v2_motion_proto_enumTypes,
		MessageInfos:      file_city_person_v2_motion_proto_msgTypes,
	}.Build()
	File_city_person_v2_motion_proto = out.File
	file_city_person_v2_motion_proto_goTypes = nil
	file_city_person_v2_motion_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: city/person/v2/taxi.proto

package personv2

import (
	v2 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderStatus int32

const (
	// 未指定
	// unspecified
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	// 等待接单
	// waiting for order
	OrderStatus_ORDER_STATUS_WAITING OrderStatus = 1
	// 正在接人
	// picking up
	OrderStatus_ORDER_STATUS_PICKING_UP OrderStatus = 2
	// 正在送人
	// delivering
	OrderStatus_ORDER_STATUS_DELIVERING OrderStatus = 3
	// 已完成
	// order completed
	OrderStatus_ORDER_STATUS_COMPLETED OrderStatus = 4
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "ORDER_STATUS_WAITING",
		2: "ORDER_STATUS_PICKING_UP",
		3: "ORDER_STATUS_DELIVERING",
		4: "ORDER_STATUS_COMPLETED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED": 0,
		"ORDER_STATUS_WAITING":     1,
		"ORDER_STATUS_PICKING_UP":  2,
		"ORDER_STATUS_DELIVERING":  3,
		"ORDER_STATUS_COMPLETED":   4,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v2_taxi_proto_enumTypes[0].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_city_person_v2_taxi_proto_enumTypes[0]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v2_taxi_proto_rawDescGZIP(), []int{0}
}

// 分配方案类型
// Allocation plan type
type AllocationPlanType int32

const (
	// 未指定
	// unspecified
	AllocationPlanType_ALLOCATION_PLAN_TYPE_UNSPECIFIED AllocationPlanType = 0
	// 接人
	// pick up
	AllocationPlanType_ALLOCATION_PLAN_TYPE_PICK_UP AllocationPlanType = 1
	// 送人
	// deliver
	AllocationPlanType_ALLOCATION_PLAN_TYPE_DELIVER AllocationPlanType = 2
)

// Enum value maps for AllocationPlanType.
var (
	AllocationPlanType_name = map[int32]string{
		0: "ALLOCATION_PLAN_TYPE_UNSPECIFIED",
		1: "ALLOCATION_PLAN_TYPE_PICK_UP",
		2: "ALLOCATION_PLAN_TYPE_DELIVER",
	}
	AllocationPlanType_value = map[string]int32{
		"ALLOCATION_PLAN_TYPE_UNSPECIFIED": 0,
		"ALLOCATION_PLAN_TYPE_PICK_UP":     1,
		"ALLOCATION_PLAN_TYPE_DELIVER":     2,
	}
)

func (x AllocationPlanType) Enum() *AllocationPlanType {
	p := new(AllocationPlanType)
	*p = x
	return p
}

func (x AllocationPlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllocationPlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_person_v2_taxi_proto_enumTypes[1].Descriptor()
}

func (AllocationPlanType) Type() protoreflect.EnumType {
	return &file_city_person_v2_taxi_proto_enumTypes[1]
}

func (x AllocationPlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllocationPlanType.Descriptor instead.
func (AllocationPlanType) EnumDescriptor() ([]byte, []int) {
	return file_city_person_v2_taxi_proto_rawDescGZIP(), []int{1}
}

// 乘客发出的请求订单信息
// Request order information from passengers
type RequestOrderInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 发出请求的person id
	// person id who sends the request
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty" bson:"person_id" db:"person_id" yaml:"person_id"`
	// 请求时间（s）
	// request time（s）
	RequestTime float64 `protobuf:"fixed64,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty" bson:"request_time" db:"request_time" yaml:"request_time"`
	// 订单id
	// order id
	OrderId int32 `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty" bson:"order_id" db:"order_id" yaml:"order_id"`
	// 出发地
	// departure position
	Departure *v2.Position `protobuf:"bytes,4,opt,name=departure,proto3" json:"departure,omitempty" bson:"departure" db:"departure" yaml:"departure"`
	// 目的地
	// destination
	Destination *v2.Position `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty" bson:"destination" db:"destination" yaml:"destination"`
	// 状态
	// status
	Status OrderStatus `protobuf:"varint,6,opt,name=status,proto3,enum=city.person.v2.OrderStatus" json:"status,omitempty" bson:"status" db:"status" yaml:"status"`
	// 出发时间
	// departure time
	DepartureTime float64 `protobuf:"fixed64,7,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty" bson:"departure_time" db:"departure_time" yaml:"departure_time"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestOrderInfo) Reset() {
	*x = RequestOrderInfo{}
	mi := &file_city_person_v2_taxi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOrderInfo) ProtoMessage() {}

func (x *RequestOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_taxi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOrderInfo.ProtoReflect.Descriptor instead.
func (*RequestOrderInfo) Descriptor() ([]byte, []int) {
	return file_city_person_v2_taxi_proto_rawDescGZIP(), []int{0}
}

func (x *RequestOrderInfo) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *RequestOrderInfo) GetRequestTime() float64 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *RequestOrderInfo) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *RequestOrderInfo) GetDeparture() *v2.Position {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *RequestOrderInfo) GetDestination() *v2.Position {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *RequestOrderInfo) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *RequestOrderInfo) GetDepartureTime() float64 {
	if x != nil {
		return x.DepartureTime
	}
	return 0
}

// 受外部控制的出租车接受的订单分配方案
// Order allocation plan accepted by taxis controlled by external
type OrderAllocationPlan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 相关的订单id，一个订单对应一个乘客
	// order ids related, one order corresponds to one passenger
	OrderIds []int32 `protobuf:"varint,1,rep,packed,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty" bson:"order_ids" db:"order_ids" yaml:"order_ids"`
	// 出租车id
	// taxi id
	TaxiId int32 `protobuf:"varint,2,opt,name=taxi_id,json=taxiId,proto3" json:"taxi_id,omitempty" bson:"taxi_id" db:"taxi_id" yaml:"taxi_id"`
	// 分配方案类型
	// allocation plan type
	Type AllocationPlanType `protobuf:"varint,3,opt,name=type,proto3,enum=city.person.v2.AllocationPlanType" json:"type,omitempty" bson:"type" db:"type" yaml:"type"`
	// 待接的乘客ids，当type为ALLOCATION_PLAN_TYPE_PICK_UP时有效，和deliver_person_ids不同时有效
	// passenger ids to be picked up，valid when type is ALLOCATION_PLAN_TYPE_PICK_UP, not valid when deliver_person_ids is valid
	PickUpPersonIds []int32 `protobuf:"varint,4,rep,packed,name=pick_up_person_ids,json=pickUpPersonIds,proto3" json:"pick_up_person_ids,omitempty" bson:"pick_up_person_ids" db:"pick_up_person_ids" yaml:"pick_up_person_ids"`
	// 待送的乘客ids，当type为ALLOCATION_PLAN_TYPE_DELIVER时有效，和pick_up_person_ids不同时有效
	// passenger ids to be delivered，valid when type is ALLOCATION_PLAN_TYPE_DELIVER, not valid when pick_up_person_ids is valid
	DeliverPersonIds []int32 `protobuf:"varint,5,rep,packed,name=deliver_person_ids,json=deliverPersonIds,proto3" json:"deliver_person_ids,omitempty" bson:"deliver_person_ids" db:"deliver_person_ids" yaml:"deliver_person_ids"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OrderAllocationPlan) Reset() {
	*x = OrderAllocationPlan{}
	mi := &file_city_person_v2_taxi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderAllocationPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllocationPlan) ProtoMessage() {}

func (x *OrderAllocationPlan) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_taxi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllocationPlan.ProtoReflect.Descriptor instead.
func (*OrderAllocationPlan) Descriptor() ([]byte, []int) {
	return file_city_person_v2_taxi_proto_rawDescGZIP(), []int{1}
}

func (x *OrderAllocationPlan) GetOrderIds() []int32 {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *OrderAllocationPlan) GetTaxiId() int32 {
	if x != nil {
		return x.TaxiId
	}
	return 0
}

func (x *OrderAllocationPlan) GetType() AllocationPlanType {
	if x != nil {
		return x.Type
	}
	return AllocationPlanType_ALLOCATION_PLAN_TYPE_UNSPECIFIED
}

func (x *OrderAllocationPlan) GetPickUpPersonIds() []int32 {
	if x != nil {
		return x.PickUpPersonIds
	}
	return nil
}

func (x *OrderAllocationPlan) GetDeliverPersonIds() []int32 {
	if x != nil {
		return x.DeliverPersonIds
	}
	return nil
}

type OrderAllocations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 订单分配方案
	// order allocation plan
	OrderAllocations []*OrderAllocationPlan `protobuf:"bytes,1,rep,name=order_allocations,json=orderAllocations,proto3" json:"order_allocations,omitempty" bson:"order_allocations" db:"order_allocations" yaml:"order_allocations"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OrderAllocations) Reset() {
	*x = OrderAllocations{}
	mi := &file_city_person_v2_taxi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAllocations) ProtoMessage() {}

func (x *OrderAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_taxi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAllocations.ProtoReflect.Descriptor instead.
func (*OrderAllocations) Descriptor() ([]byte, []int) {
	return file_city_person_v2_taxi_proto_rawDescGZIP(), []int{2}
}

func (x *OrderAllocations) GetOrderAllocations() []*OrderAllocationPlan {
	if x != nil {
		return x.OrderAllocations
	}
	return nil
}

var File_city_person_v2_taxi_proto protoreflect.FileDescriptor

const file_city_person_v2_taxi_proto_rawDesc = "" +
	"\n" +
	"\x19city/person/v2/taxi.proto\x12\x0ecity.person.v2\x1a\x15city/geo/v2/geo.proto\"\xb7\x02\n" +
	"\x10RequestOrderInfo\x12\x1b\n" +
	"\tperson_id\x18\x01 \x01(\x05R\bpersonId\x12!\n" +
	"\frequest_time\x18\x02 \x01(\x01R\vrequestTime\x12\x19\n" +
	"\border_id\x18\x03 \x01(\x05R\aorderId\x123\n" +
	"\tdeparture\x18\x04 \x01(\v2\x15.city.geo.v2.PositionR\tdeparture\x127\n" +
	"\vdestination\x18\x05 \x01(\v2\x15.city.geo.v2.PositionR\vdestination\x123\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1b.city.person.v2.OrderStatusR\x06status\x12%\n" +
	"\x0edeparture_time\x18\a \x01(\x01R\rdepartureTime\"\xde\x01\n" +
	"\x13OrderAllocationPlan\x12\x1b\n" +
	"\torder_ids\x18\x01 \x03(\x05R\borderIds\x12\x17\n" +
	"\ataxi_id\x18\x02 \x01(\x05R\x06taxiId\x126\n" +
	"\x04type\x18\x03 \x01(\x0e2\".city.person.v2.AllocationPlanTypeR\x04type\x12+\n" +
	"\x12pick_up_person_ids\x18\x04 \x03(\x05R\x0fpickUpPersonIds\x12,\n" +
	"\x12deliver_person_ids\x18\x05 \x03(\x05R\x10deliverPersonIds\"d\n" +
	"\x10OrderAllocations\x12P\n" +
	"\x11order_allocations\x18\x01 \x03(\v2#.city.person.v2.OrderAllocationPlanR\x10orderAllocations*\x9b\x01\n" +
	"\vOrderStatus\x12\x1c\n" +
	"\x18ORDER_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ORDER_STATUS_WAITING\x10\x01\x12\x1b\n" +
	"\x17ORDER_STATUS_PICKING_UP\x10\x02\x12\x1b\n" +
	"\x17ORDER_STATUS_DELIVERING\x10\x03\x12\x1a\n" +
	"\x16ORDER_STATUS_COMPLETED\x10\x04*~\n" +
	"\x12AllocationPlanType\x12$\n" +
	" ALLOCATION_PLAN_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cALLOCATION_PLAN_TYPE_PICK_UP\x10\x01\x12 \n" +
	"\x1cALLOCATION_PLAN_TYPE_DELIVER\x10\x02B\xb2\x01\n" +
	"\x12com.city.person.v2B\tTaxiProtoP\x01Z7git.fiblab.net/sim/protos/v2/go/city/person/v2;personv2\xa2\x02\x03CPX\xaa\x02\x0eCity.Person.V2\xca\x02\x0eCity\\Person\\V2\xe2\x02\x1aCity\\Person\\V2\\GPBMetadata\xea\x02\x10City::Person::V2b\x06proto3"

var (
	file_city_person_v2_taxi_proto_rawDescOnce sync.Once
	file_city_person_v2_taxi_proto_rawDescData []byte
)

func file_city_person_v2_taxi_proto_rawDescGZIP() []byte {
	file_city_person_v2_taxi_proto_rawDescOnce.Do(func() {
		file_city_person_v2_taxi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_person_v2_taxi_proto_rawDesc), len(file_city_person_v2_taxi_proto_rawDesc)))
	})
	return file_city_person_v2_taxi_proto_rawDescData
}

var file_city_person_v2_taxi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_city_person_v2_taxi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_city_person_v2_taxi_proto_goTypes = []any{
	(OrderStatus)(0),            // 0: city.person.v2.OrderStatus
	(AllocationPlanType)(0),     // 1: city.person.v2.AllocationPlanType
	(*RequestOrderInfo)(nil),    // 2: city.person.v2.RequestOrderInfo
	(*OrderAllocationPlan)(nil), // 3: city.person.v2.OrderAllocationPlan
	(*OrderAllocations)(nil),    // 4: city.person.v2.OrderAllocations
	(*v2.Position)(nil),         // 5: city.geo.v2.Position
}
var file_city_person_v2_taxi_proto_depIdxs = []int32{
	5, // 0: city.person.v2.RequestOrderInfo.departure:type_name -> city.geo.v2.Position
	5, // 1: city.person.v2.RequestOrderInfo.destination:type_name -> city.geo.v2.Position
	0, // 2: city.person.v2.RequestOrderInfo.status:type_name -> city.person.v2.OrderStatus
	1, // 3: city.person.v2.OrderAllocationPlan.type:type_name -> city.person.v2.AllocationPlanType
	3, // 4: city.person.v2.OrderAllocations.order_allocations:type_name -> city.person.v2.OrderAllocationPlan
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_city_person_v2_taxi_proto_init() }
func file_city_person_v2_taxi_proto_init() {
	if File_city_person_v2_taxi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_person_v2_taxi_proto_rawDesc), len(file_city_person_v2_taxi_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_person_v2_taxi_proto_goTypes,
		DependencyIndexes: file_city_person_v2_taxi_proto_depIdxs,
		EnumInfos:         file_city_person_v2_taxi_proto_enumTypes,
		MessageInfos:      file_city_person_v2_taxi_proto_msgTypes,
	}.Build()
	File_city_person_v2_taxi_proto = out.File
	file_city_person_v2_taxi_proto_goTypes = nil
	file_city_person_v2_taxi_proto_depIdxs = nil
}

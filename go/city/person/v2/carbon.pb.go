// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: city/person/v2/carbon.proto

package personv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 车辆瞬时碳排放信息
// Vehicle instantaneous carbon emission information
type VehicleCarbon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id" db:"id" yaml:"id"`
	// delta distance (m)
	Ds float64 `protobuf:"fixed64,2,opt,name=ds,proto3" json:"ds,omitempty" bson:"ds" db:"ds" yaml:"ds"`
	// vehicle speed (m/s)
	V float64 `protobuf:"fixed64,3,opt,name=v,proto3" json:"v,omitempty" bson:"v" db:"v" yaml:"v"`
	// vehicle acceleration (m/s^2)
	A float64 `protobuf:"fixed64,4,opt,name=a,proto3" json:"a,omitempty" bson:"a" db:"a" yaml:"a"`
	// energy for acceleration (J)
	UAcc float64 `protobuf:"fixed64,5,opt,name=u_acc,json=uAcc,proto3" json:"u_acc,omitempty" bson:"u_acc" db:"u_acc" yaml:"u_acc"`
	// energy for rolling resistance (J)
	URoll float64 `protobuf:"fixed64,6,opt,name=u_roll,json=uRoll,proto3" json:"u_roll,omitempty" bson:"u_roll" db:"u_roll" yaml:"u_roll"`
	// energy for air resistance (J)
	UAero float64 `protobuf:"fixed64,7,opt,name=u_aero,json=uAero,proto3" json:"u_aero,omitempty" bson:"u_aero" db:"u_aero" yaml:"u_aero"`
	// C_D: drag coefficient
	CD            float64 `protobuf:"fixed64,8,opt,name=c_d,json=cD,proto3" json:"c_d,omitempty" bson:"cd" db:"cd" yaml:"cd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VehicleCarbon) Reset() {
	*x = VehicleCarbon{}
	mi := &file_city_person_v2_carbon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleCarbon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCarbon) ProtoMessage() {}

func (x *VehicleCarbon) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_carbon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCarbon.ProtoReflect.Descriptor instead.
func (*VehicleCarbon) Descriptor() ([]byte, []int) {
	return file_city_person_v2_carbon_proto_rawDescGZIP(), []int{0}
}

func (x *VehicleCarbon) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VehicleCarbon) GetDs() float64 {
	if x != nil {
		return x.Ds
	}
	return 0
}

func (x *VehicleCarbon) GetV() float64 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *VehicleCarbon) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *VehicleCarbon) GetUAcc() float64 {
	if x != nil {
		return x.UAcc
	}
	return 0
}

func (x *VehicleCarbon) GetURoll() float64 {
	if x != nil {
		return x.URoll
	}
	return 0
}

func (x *VehicleCarbon) GetUAero() float64 {
	if x != nil {
		return x.UAero
	}
	return 0
}

func (x *VehicleCarbon) GetCD() float64 {
	if x != nil {
		return x.CD
	}
	return 0
}

type EmissionStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 累计能量消耗（单位:MJ）
	// Cumulative energy consumption（unit:MJ）
	U             float64 `protobuf:"fixed64,1,opt,name=u,proto3" json:"u,omitempty" bson:"u" db:"u" yaml:"u"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmissionStatistics) Reset() {
	*x = EmissionStatistics{}
	mi := &file_city_person_v2_carbon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmissionStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmissionStatistics) ProtoMessage() {}

func (x *EmissionStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_carbon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmissionStatistics.ProtoReflect.Descriptor instead.
func (*EmissionStatistics) Descriptor() ([]byte, []int) {
	return file_city_person_v2_carbon_proto_rawDescGZIP(), []int{1}
}

func (x *EmissionStatistics) GetU() float64 {
	if x != nil {
		return x.U
	}
	return 0
}

var File_city_person_v2_carbon_proto protoreflect.FileDescriptor

const file_city_person_v2_carbon_proto_rawDesc = "" +
	"\n" +
	"\x1bcity/person/v2/carbon.proto\x12\x0ecity.person.v2\"\x9f\x01\n" +
	"\rVehicleCarbon\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x0e\n" +
	"\x02ds\x18\x02 \x01(\x01R\x02ds\x12\f\n" +
	"\x01v\x18\x03 \x01(\x01R\x01v\x12\f\n" +
	"\x01a\x18\x04 \x01(\x01R\x01a\x12\x13\n" +
	"\x05u_acc\x18\x05 \x01(\x01R\x04uAcc\x12\x15\n" +
	"\x06u_roll\x18\x06 \x01(\x01R\x05uRoll\x12\x15\n" +
	"\x06u_aero\x18\a \x01(\x01R\x05uAero\x12\x0f\n" +
	"\x03c_d\x18\b \x01(\x01R\x02cD\"\"\n" +
	"\x12EmissionStatistics\x12\f\n" +
	"\x01u\x18\x01 \x01(\x01R\x01uB\xb4\x01\n" +
	"\x12com.city.person.v2B\vCarbonProtoP\x01Z7git.fiblab.net/sim/protos/v2/go/city/person/v2;personv2\xa2\x02\x03CPX\xaa\x02\x0eCity.Person.V2\xca\x02\x0eCity\\Person\\V2\xe2\x02\x1aCity\\Person\\V2\\GPBMetadata\xea\x02\x10City::Person::V2b\x06proto3"

var (
	file_city_person_v2_carbon_proto_rawDescOnce sync.Once
	file_city_person_v2_carbon_proto_rawDescData []byte
)

func file_city_person_v2_carbon_proto_rawDescGZIP() []byte {
	file_city_person_v2_carbon_proto_rawDescOnce.Do(func() {
		file_city_person_v2_carbon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_person_v2_carbon_proto_rawDesc), len(file_city_person_v2_carbon_proto_rawDesc)))
	})
	return file_city_person_v2_carbon_proto_rawDescData
}

var file_city_person_v2_carbon_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_city_person_v2_carbon_proto_goTypes = []any{
	(*VehicleCarbon)(nil),      // 0: city.person.v2.VehicleCarbon
	(*EmissionStatistics)(nil), // 1: city.person.v2.EmissionStatistics
}
var file_city_person_v2_carbon_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_city_person_v2_carbon_proto_init() }
func file_city_person_v2_carbon_proto_init() {
	if File_city_person_v2_carbon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_person_v2_carbon_proto_rawDesc), len(file_city_person_v2_carbon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_person_v2_carbon_proto_goTypes,
		DependencyIndexes: file_city_person_v2_carbon_proto_depIdxs,
		MessageInfos:      file_city_person_v2_carbon_proto_msgTypes,
	}.Build()
	File_city_person_v2_carbon_proto = out.File
	file_city_person_v2_carbon_proto_goTypes = nil
	file_city_person_v2_carbon_proto_depIdxs = nil
}

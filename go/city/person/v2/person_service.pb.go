// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: city/person/v2/person_service.proto

package personv2

import (
	v21 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	v2 "git.fiblab.net/sim/protos/v2/go/city/trip/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取person信息请求
// Request for getting person information
type GetPersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// person id
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty" yaml:"person_id" bson:"person_id" db:"person_id"`
}

func (x *GetPersonRequest) Reset() {
	*x = GetPersonRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonRequest) ProtoMessage() {}

func (x *GetPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonRequest.ProtoReflect.Descriptor instead.
func (*GetPersonRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPersonRequest) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

// 获取person信息响应
// Response of getting person information
type GetPersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person *PersonRuntime `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty" yaml:"person" bson:"person" db:"person"`
}

func (x *GetPersonResponse) Reset() {
	*x = GetPersonResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonResponse) ProtoMessage() {}

func (x *GetPersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonResponse.ProtoReflect.Descriptor instead.
func (*GetPersonResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPersonResponse) GetPerson() *PersonRuntime {
	if x != nil {
		return x.Person
	}
	return nil
}

// 新增person请求
// Request for adding a new person
type AddPersonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 约定：person中不设置id
	// Convention: personid is not set here
	Person *Person `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty" yaml:"person" bson:"person" db:"person"`
}

func (x *AddPersonRequest) Reset() {
	*x = AddPersonRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonRequest) ProtoMessage() {}

func (x *AddPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonRequest.ProtoReflect.Descriptor instead.
func (*AddPersonRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddPersonRequest) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

// 新增person响应
// Response of adding a new person
type AddPersonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 新增的person分配得到的ID
	// The ID assigned to the newly added person
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty" yaml:"person_id" bson:"person_id" db:"person_id"`
}

func (x *AddPersonResponse) Reset() {
	*x = AddPersonResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonResponse) ProtoMessage() {}

func (x *AddPersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonResponse.ProtoReflect.Descriptor instead.
func (*AddPersonResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddPersonResponse) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

// 修改person的schedule请求
// Request for setting person schedule
type SetScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// person id
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty" yaml:"person_id" bson:"person_id" db:"person_id"`
	// 新的schedule（覆盖原有的schedule）
	// New schedule (overwrites the original schedule)
	Schedules []*v2.Schedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty" db:"schedules" yaml:"schedules" bson:"schedules"`
}

func (x *SetScheduleRequest) Reset() {
	*x = SetScheduleRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScheduleRequest) ProtoMessage() {}

func (x *SetScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScheduleRequest.ProtoReflect.Descriptor instead.
func (*SetScheduleRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetScheduleRequest) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *SetScheduleRequest) GetSchedules() []*v2.Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

// 修改person的schedule响应
// Response of setting person schedule
type SetScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetScheduleResponse) Reset() {
	*x = SetScheduleResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScheduleResponse) ProtoMessage() {}

func (x *SetScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScheduleResponse.ProtoReflect.Descriptor instead.
func (*SetScheduleResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{5}
}

// 获取多个person信息请求
// Request for getting information of multiple persons
type GetPersonsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// person id列表，为空则返回所有person
	// List of person ids, return all persons if empty
	PersonIds []int32 `protobuf:"varint,1,rep,packed,name=person_ids,json=personIds,proto3" json:"person_ids,omitempty" yaml:"person_ids" bson:"person_ids" db:"person_ids"`
	// 过滤人的状态（状态为列表内的值的人不返回），即使包含在person_ids中
	// Filter person's status (person whose status is in the list will not be returned), even if included in person_ids
	ExcludeStatuses []Status `protobuf:"varint,2,rep,packed,name=exclude_statuses,json=excludeStatuses,proto3,enum=city.person.v2.Status" json:"exclude_statuses,omitempty" bson:"exclude_statuses" db:"exclude_statuses" yaml:"exclude_statuses"`
	// 设置是否返回base信息
	// Set whether to return base information
	ReturnBase bool `protobuf:"varint,3,opt,name=return_base,json=returnBase,proto3" json:"return_base,omitempty" yaml:"return_base" bson:"return_base" db:"return_base"`
}

func (x *GetPersonsRequest) Reset() {
	*x = GetPersonsRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonsRequest) ProtoMessage() {}

func (x *GetPersonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonsRequest.ProtoReflect.Descriptor instead.
func (*GetPersonsRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetPersonsRequest) GetPersonIds() []int32 {
	if x != nil {
		return x.PersonIds
	}
	return nil
}

func (x *GetPersonsRequest) GetExcludeStatuses() []Status {
	if x != nil {
		return x.ExcludeStatuses
	}
	return nil
}

func (x *GetPersonsRequest) GetReturnBase() bool {
	if x != nil {
		return x.ReturnBase
	}
	return false
}

// 获取多个person信息响应
// Response of getting information of multiple persons
type GetPersonsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// person信息
	// person information
	Persons []*PersonRuntime `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty" yaml:"persons" bson:"persons" db:"persons"`
}

func (x *GetPersonsResponse) Reset() {
	*x = GetPersonsResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonsResponse) ProtoMessage() {}

func (x *GetPersonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonsResponse.ProtoReflect.Descriptor instead.
func (*GetPersonsResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPersonsResponse) GetPersons() []*PersonRuntime {
	if x != nil {
		return x.Persons
	}
	return nil
}

// 获取特定区域内的person请求
// Request for getting persons in region
type GetPersonByLongLatBBoxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 经纬度范围
	// longitude and latitude bounding box
	Bbox *v21.LongLatBBox `protobuf:"bytes,1,opt,name=bbox,proto3" json:"bbox,omitempty" yaml:"bbox" bson:"bbox" db:"bbox"`
	// 过滤人的状态（状态为列表内的值的人不返回）
	// Filter person's status (person whose status is in the list will not be returned)
	ExcludeStatuses []Status `protobuf:"varint,2,rep,packed,name=exclude_statuses,json=excludeStatuses,proto3,enum=city.person.v2.Status" json:"exclude_statuses,omitempty" yaml:"exclude_statuses" bson:"exclude_statuses" db:"exclude_statuses"`
	// 设置是否返回base信息
	// Set whether to return base information
	ReturnBase bool `protobuf:"varint,3,opt,name=return_base,json=returnBase,proto3" json:"return_base,omitempty" yaml:"return_base" bson:"return_base" db:"return_base"`
}

func (x *GetPersonByLongLatBBoxRequest) Reset() {
	*x = GetPersonByLongLatBBoxRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByLongLatBBoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByLongLatBBoxRequest) ProtoMessage() {}

func (x *GetPersonByLongLatBBoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByLongLatBBoxRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByLongLatBBoxRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPersonByLongLatBBoxRequest) GetBbox() *v21.LongLatBBox {
	if x != nil {
		return x.Bbox
	}
	return nil
}

func (x *GetPersonByLongLatBBoxRequest) GetExcludeStatuses() []Status {
	if x != nil {
		return x.ExcludeStatuses
	}
	return nil
}

func (x *GetPersonByLongLatBBoxRequest) GetReturnBase() bool {
	if x != nil {
		return x.ReturnBase
	}
	return false
}

// 获取特定区域内的person响应
// Response of getting persons in region
type GetPersonByLongLatBBoxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区域内的person的信息
	// Information of persons in the region
	Persons []*PersonRuntime `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty" yaml:"persons" bson:"persons" db:"persons"`
}

func (x *GetPersonByLongLatBBoxResponse) Reset() {
	*x = GetPersonByLongLatBBoxResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByLongLatBBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByLongLatBBoxResponse) ProtoMessage() {}

func (x *GetPersonByLongLatBBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByLongLatBBoxResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByLongLatBBoxResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetPersonByLongLatBBoxResponse) GetPersons() []*PersonRuntime {
	if x != nil {
		return x.Persons
	}
	return nil
}

// 获取所有车辆请求
// Request for getting all vehicles
type GetAllVehiclesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllVehiclesRequest) Reset() {
	*x = GetAllVehiclesRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllVehiclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVehiclesRequest) ProtoMessage() {}

func (x *GetAllVehiclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVehiclesRequest.ProtoReflect.Descriptor instead.
func (*GetAllVehiclesRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{10}
}

// 获取所有车辆响应
// Response of getting all vehicles
type GetAllVehiclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 所有车辆的信息
	// Information of all vehicles
	Vehicles []*VehicleRuntime `protobuf:"bytes,1,rep,name=vehicles,proto3" json:"vehicles,omitempty" bson:"vehicles" db:"vehicles" yaml:"vehicles"`
}

func (x *GetAllVehiclesResponse) Reset() {
	*x = GetAllVehiclesResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllVehiclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVehiclesResponse) ProtoMessage() {}

func (x *GetAllVehiclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVehiclesResponse.ProtoReflect.Descriptor instead.
func (*GetAllVehiclesResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetAllVehiclesResponse) GetVehicles() []*VehicleRuntime {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

// 重置人的位置请求
// Request for resetting person's position
type ResetPersonPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// person id
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty" yaml:"person_id" bson:"person_id" db:"person_id"`
	// 重置位置
	// reset position
	Position *v21.Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty" yaml:"position" bson:"position" db:"position"`
}

func (x *ResetPersonPositionRequest) Reset() {
	*x = ResetPersonPositionRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPersonPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonPositionRequest) ProtoMessage() {}

func (x *ResetPersonPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonPositionRequest.ProtoReflect.Descriptor instead.
func (*ResetPersonPositionRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{12}
}

func (x *ResetPersonPositionRequest) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *ResetPersonPositionRequest) GetPosition() *v21.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// 重置人的位置响应
// Response of resetting person's position
type ResetPersonPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPersonPositionResponse) Reset() {
	*x = ResetPersonPositionResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPersonPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonPositionResponse) ProtoMessage() {}

func (x *ResetPersonPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonPositionResponse.ProtoReflect.Descriptor instead.
func (*ResetPersonPositionResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{13}
}

// 设置由外部控制行为的vehicle请求（下一个step生效）
// Request for setting vehicle controlled by external behavior
type SetControlledVehicleIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 由外部控制行为的vehicle id列表
	// List of vehicle ids controlled by external behavior
	VehicleIds []int32 `protobuf:"varint,1,rep,packed,name=vehicle_ids,json=vehicleIds,proto3" json:"vehicle_ids,omitempty" yaml:"vehicle_ids" bson:"vehicle_ids" db:"vehicle_ids"`
	// 由外部控制车辆路由的vehicle id列表（在进入新的road后触发控制）
	// List of vehicle ids controlled by external behavior (control is triggered after entering a new road)
	RouteVehicleIds []int32 `protobuf:"varint,2,rep,packed,name=route_vehicle_ids,json=routeVehicleIds,proto3" json:"route_vehicle_ids,omitempty" yaml:"route_vehicle_ids" bson:"route_vehicle_ids" db:"route_vehicle_ids"`
}

func (x *SetControlledVehicleIDsRequest) Reset() {
	*x = SetControlledVehicleIDsRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetControlledVehicleIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetControlledVehicleIDsRequest) ProtoMessage() {}

func (x *SetControlledVehicleIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetControlledVehicleIDsRequest.ProtoReflect.Descriptor instead.
func (*SetControlledVehicleIDsRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{14}
}

func (x *SetControlledVehicleIDsRequest) GetVehicleIds() []int32 {
	if x != nil {
		return x.VehicleIds
	}
	return nil
}

func (x *SetControlledVehicleIDsRequest) GetRouteVehicleIds() []int32 {
	if x != nil {
		return x.RouteVehicleIds
	}
	return nil
}

// 设置由外部控制行为的vehicle响应
// Response of setting vehicle controlled by external behavior
type SetControlledVehicleIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetControlledVehicleIDsResponse) Reset() {
	*x = SetControlledVehicleIDsResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetControlledVehicleIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetControlledVehicleIDsResponse) ProtoMessage() {}

func (x *SetControlledVehicleIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetControlledVehicleIDsResponse.ProtoReflect.Descriptor instead.
func (*SetControlledVehicleIDsResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{15}
}

// 获取由外部控制行为的vehicle信息请求
// Request for getting information of vehicle controlled by external behavior
type FetchControlledVehicleEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchControlledVehicleEnvsRequest) Reset() {
	*x = FetchControlledVehicleEnvsRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchControlledVehicleEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchControlledVehicleEnvsRequest) ProtoMessage() {}

func (x *FetchControlledVehicleEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchControlledVehicleEnvsRequest.ProtoReflect.Descriptor instead.
func (*FetchControlledVehicleEnvsRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{16}
}

// 获取由外部控制行为的vehicle信息响应
// Response of getting information of vehicle controlled by external behavior
type FetchControlledVehicleEnvsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 由外部控制行为的vehicle信息
	// Information of vehicle controlled by external behavior
	VehicleEnvs []*VehicleEnv `protobuf:"bytes,1,rep,name=vehicle_envs,json=vehicleEnvs,proto3" json:"vehicle_envs,omitempty" yaml:"vehicle_envs" bson:"vehicle_envs" db:"vehicle_envs"`
	// 由外部控制车辆路由的vehicle信息
	// Information of vehicle controlled by external behavior (control is triggered after entering a new road)
	RouteVehicleEnvs []*VehicleEnv `protobuf:"bytes,2,rep,name=route_vehicle_envs,json=routeVehicleEnvs,proto3" json:"route_vehicle_envs,omitempty" yaml:"route_vehicle_envs" bson:"route_vehicle_envs" db:"route_vehicle_envs"`
}

func (x *FetchControlledVehicleEnvsResponse) Reset() {
	*x = FetchControlledVehicleEnvsResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchControlledVehicleEnvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchControlledVehicleEnvsResponse) ProtoMessage() {}

func (x *FetchControlledVehicleEnvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchControlledVehicleEnvsResponse.ProtoReflect.Descriptor instead.
func (*FetchControlledVehicleEnvsResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{17}
}

func (x *FetchControlledVehicleEnvsResponse) GetVehicleEnvs() []*VehicleEnv {
	if x != nil {
		return x.VehicleEnvs
	}
	return nil
}

func (x *FetchControlledVehicleEnvsResponse) GetRouteVehicleEnvs() []*VehicleEnv {
	if x != nil {
		return x.RouteVehicleEnvs
	}
	return nil
}

// 设置由外部控制行为的vehicle的行为请求
// Request for setting behavior of vehicle controlled by external behavior
type SetControlledVehicleActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 由外部控制行为的vehicle的行为
	// Behavior of vehicle controlled by external behavior
	VehicleActions []*VehicleAction `protobuf:"bytes,1,rep,name=vehicle_actions,json=vehicleActions,proto3" json:"vehicle_actions,omitempty" yaml:"vehicle_actions" bson:"vehicle_actions" db:"vehicle_actions"`
	// 由外部控制车辆路由的vehicle的新路由
	// New route of vehicle controlled by external behavior (control is triggered after entering a new road)
	VehicleJourneys []*VehicleRouteAction `protobuf:"bytes,2,rep,name=vehicle_journeys,json=vehicleJourneys,proto3" json:"vehicle_journeys,omitempty" yaml:"vehicle_journeys" bson:"vehicle_journeys" db:"vehicle_journeys"`
}

func (x *SetControlledVehicleActionsRequest) Reset() {
	*x = SetControlledVehicleActionsRequest{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetControlledVehicleActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetControlledVehicleActionsRequest) ProtoMessage() {}

func (x *SetControlledVehicleActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetControlledVehicleActionsRequest.ProtoReflect.Descriptor instead.
func (*SetControlledVehicleActionsRequest) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{18}
}

func (x *SetControlledVehicleActionsRequest) GetVehicleActions() []*VehicleAction {
	if x != nil {
		return x.VehicleActions
	}
	return nil
}

func (x *SetControlledVehicleActionsRequest) GetVehicleJourneys() []*VehicleRouteAction {
	if x != nil {
		return x.VehicleJourneys
	}
	return nil
}

// 设置由外部控制行为的vehicle的行为响应
// Response of setting behavior of vehicle controlled by external behavior
type SetControlledVehicleActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetControlledVehicleActionsResponse) Reset() {
	*x = SetControlledVehicleActionsResponse{}
	mi := &file_city_person_v2_person_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetControlledVehicleActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetControlledVehicleActionsResponse) ProtoMessage() {}

func (x *SetControlledVehicleActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_person_v2_person_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetControlledVehicleActionsResponse.ProtoReflect.Descriptor instead.
func (*SetControlledVehicleActionsResponse) Descriptor() ([]byte, []int) {
	return file_city_person_v2_person_service_proto_rawDescGZIP(), []int{19}
}

var File_city_person_v2_person_service_proto protoreflect.FileDescriptor

var file_city_person_v2_person_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x15, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x67, 0x65, 0x6f, 0x2f,
	0x76, 0x32, 0x2f, 0x67, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x69,
	0x74, 0x79, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x69, 0x74, 0x79, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x69, 0x74,
	0x79, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x69, 0x74, 0x79, 0x2f,
	0x74, 0x72, 0x69, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22,
	0x42, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x15,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x22, 0x4d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0xb1, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x6e,
	0x67, 0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x62, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x6e, 0x67,
	0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f, 0x78, 0x52, 0x04, 0x62, 0x62, 0x6f, 0x78, 0x12, 0x41, 0x0a,
	0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x61, 0x73,
	0x65, 0x22, 0x59, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79,
	0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x1a, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x67, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xad, 0x01, 0x0a, 0x22, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x10, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x22,
	0xbb, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d,
	0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x22, 0x25, 0x0a,
	0x23, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb5, 0x08, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73,
	0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f,
	0x78, 0x12, 0x2d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f,
	0x6e, 0x67, 0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x79, 0x4c, 0x6f, 0x6e,
	0x67, 0x4c, 0x61, 0x74, 0x42, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6e, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7a, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x2e, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x1a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x31, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xbb, 0x01, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x42, 0x12, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x2e, 0x66,
	0x69, 0x62, 0x6c, 0x61, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x50, 0x58, 0xaa, 0x02, 0x0e, 0x43, 0x69, 0x74, 0x79, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0e, 0x43, 0x69, 0x74, 0x79,
	0x5c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1a, 0x43, 0x69, 0x74,
	0x79, 0x5c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x69, 0x74, 0x79, 0x3a, 0x3a,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_city_person_v2_person_service_proto_rawDescOnce sync.Once
	file_city_person_v2_person_service_proto_rawDescData = file_city_person_v2_person_service_proto_rawDesc
)

func file_city_person_v2_person_service_proto_rawDescGZIP() []byte {
	file_city_person_v2_person_service_proto_rawDescOnce.Do(func() {
		file_city_person_v2_person_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_person_v2_person_service_proto_rawDescData)
	})
	return file_city_person_v2_person_service_proto_rawDescData
}

var file_city_person_v2_person_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_city_person_v2_person_service_proto_goTypes = []any{
	(*GetPersonRequest)(nil),                    // 0: city.person.v2.GetPersonRequest
	(*GetPersonResponse)(nil),                   // 1: city.person.v2.GetPersonResponse
	(*AddPersonRequest)(nil),                    // 2: city.person.v2.AddPersonRequest
	(*AddPersonResponse)(nil),                   // 3: city.person.v2.AddPersonResponse
	(*SetScheduleRequest)(nil),                  // 4: city.person.v2.SetScheduleRequest
	(*SetScheduleResponse)(nil),                 // 5: city.person.v2.SetScheduleResponse
	(*GetPersonsRequest)(nil),                   // 6: city.person.v2.GetPersonsRequest
	(*GetPersonsResponse)(nil),                  // 7: city.person.v2.GetPersonsResponse
	(*GetPersonByLongLatBBoxRequest)(nil),       // 8: city.person.v2.GetPersonByLongLatBBoxRequest
	(*GetPersonByLongLatBBoxResponse)(nil),      // 9: city.person.v2.GetPersonByLongLatBBoxResponse
	(*GetAllVehiclesRequest)(nil),               // 10: city.person.v2.GetAllVehiclesRequest
	(*GetAllVehiclesResponse)(nil),              // 11: city.person.v2.GetAllVehiclesResponse
	(*ResetPersonPositionRequest)(nil),          // 12: city.person.v2.ResetPersonPositionRequest
	(*ResetPersonPositionResponse)(nil),         // 13: city.person.v2.ResetPersonPositionResponse
	(*SetControlledVehicleIDsRequest)(nil),      // 14: city.person.v2.SetControlledVehicleIDsRequest
	(*SetControlledVehicleIDsResponse)(nil),     // 15: city.person.v2.SetControlledVehicleIDsResponse
	(*FetchControlledVehicleEnvsRequest)(nil),   // 16: city.person.v2.FetchControlledVehicleEnvsRequest
	(*FetchControlledVehicleEnvsResponse)(nil),  // 17: city.person.v2.FetchControlledVehicleEnvsResponse
	(*SetControlledVehicleActionsRequest)(nil),  // 18: city.person.v2.SetControlledVehicleActionsRequest
	(*SetControlledVehicleActionsResponse)(nil), // 19: city.person.v2.SetControlledVehicleActionsResponse
	(*PersonRuntime)(nil),                       // 20: city.person.v2.PersonRuntime
	(*Person)(nil),                              // 21: city.person.v2.Person
	(*v2.Schedule)(nil),                         // 22: city.trip.v2.Schedule
	(Status)(0),                                 // 23: city.person.v2.Status
	(*v21.LongLatBBox)(nil),                     // 24: city.geo.v2.LongLatBBox
	(*VehicleRuntime)(nil),                      // 25: city.person.v2.VehicleRuntime
	(*v21.Position)(nil),                        // 26: city.geo.v2.Position
	(*VehicleEnv)(nil),                          // 27: city.person.v2.VehicleEnv
	(*VehicleAction)(nil),                       // 28: city.person.v2.VehicleAction
	(*VehicleRouteAction)(nil),                  // 29: city.person.v2.VehicleRouteAction
}
var file_city_person_v2_person_service_proto_depIdxs = []int32{
	20, // 0: city.person.v2.GetPersonResponse.person:type_name -> city.person.v2.PersonRuntime
	21, // 1: city.person.v2.AddPersonRequest.person:type_name -> city.person.v2.Person
	22, // 2: city.person.v2.SetScheduleRequest.schedules:type_name -> city.trip.v2.Schedule
	23, // 3: city.person.v2.GetPersonsRequest.exclude_statuses:type_name -> city.person.v2.Status
	20, // 4: city.person.v2.GetPersonsResponse.persons:type_name -> city.person.v2.PersonRuntime
	24, // 5: city.person.v2.GetPersonByLongLatBBoxRequest.bbox:type_name -> city.geo.v2.LongLatBBox
	23, // 6: city.person.v2.GetPersonByLongLatBBoxRequest.exclude_statuses:type_name -> city.person.v2.Status
	20, // 7: city.person.v2.GetPersonByLongLatBBoxResponse.persons:type_name -> city.person.v2.PersonRuntime
	25, // 8: city.person.v2.GetAllVehiclesResponse.vehicles:type_name -> city.person.v2.VehicleRuntime
	26, // 9: city.person.v2.ResetPersonPositionRequest.position:type_name -> city.geo.v2.Position
	27, // 10: city.person.v2.FetchControlledVehicleEnvsResponse.vehicle_envs:type_name -> city.person.v2.VehicleEnv
	27, // 11: city.person.v2.FetchControlledVehicleEnvsResponse.route_vehicle_envs:type_name -> city.person.v2.VehicleEnv
	28, // 12: city.person.v2.SetControlledVehicleActionsRequest.vehicle_actions:type_name -> city.person.v2.VehicleAction
	29, // 13: city.person.v2.SetControlledVehicleActionsRequest.vehicle_journeys:type_name -> city.person.v2.VehicleRouteAction
	0,  // 14: city.person.v2.PersonService.GetPerson:input_type -> city.person.v2.GetPersonRequest
	2,  // 15: city.person.v2.PersonService.AddPerson:input_type -> city.person.v2.AddPersonRequest
	4,  // 16: city.person.v2.PersonService.SetSchedule:input_type -> city.person.v2.SetScheduleRequest
	6,  // 17: city.person.v2.PersonService.GetPersons:input_type -> city.person.v2.GetPersonsRequest
	8,  // 18: city.person.v2.PersonService.GetPersonByLongLatBBox:input_type -> city.person.v2.GetPersonByLongLatBBoxRequest
	10, // 19: city.person.v2.PersonService.GetAllVehicles:input_type -> city.person.v2.GetAllVehiclesRequest
	12, // 20: city.person.v2.PersonService.ResetPersonPosition:input_type -> city.person.v2.ResetPersonPositionRequest
	14, // 21: city.person.v2.PersonService.SetControlledVehicleIDs:input_type -> city.person.v2.SetControlledVehicleIDsRequest
	16, // 22: city.person.v2.PersonService.FetchControlledVehicleEnvs:input_type -> city.person.v2.FetchControlledVehicleEnvsRequest
	18, // 23: city.person.v2.PersonService.SetControlledVehicleActions:input_type -> city.person.v2.SetControlledVehicleActionsRequest
	1,  // 24: city.person.v2.PersonService.GetPerson:output_type -> city.person.v2.GetPersonResponse
	3,  // 25: city.person.v2.PersonService.AddPerson:output_type -> city.person.v2.AddPersonResponse
	5,  // 26: city.person.v2.PersonService.SetSchedule:output_type -> city.person.v2.SetScheduleResponse
	7,  // 27: city.person.v2.PersonService.GetPersons:output_type -> city.person.v2.GetPersonsResponse
	9,  // 28: city.person.v2.PersonService.GetPersonByLongLatBBox:output_type -> city.person.v2.GetPersonByLongLatBBoxResponse
	11, // 29: city.person.v2.PersonService.GetAllVehicles:output_type -> city.person.v2.GetAllVehiclesResponse
	13, // 30: city.person.v2.PersonService.ResetPersonPosition:output_type -> city.person.v2.ResetPersonPositionResponse
	15, // 31: city.person.v2.PersonService.SetControlledVehicleIDs:output_type -> city.person.v2.SetControlledVehicleIDsResponse
	17, // 32: city.person.v2.PersonService.FetchControlledVehicleEnvs:output_type -> city.person.v2.FetchControlledVehicleEnvsResponse
	19, // 33: city.person.v2.PersonService.SetControlledVehicleActions:output_type -> city.person.v2.SetControlledVehicleActionsResponse
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_city_person_v2_person_service_proto_init() }
func file_city_person_v2_person_service_proto_init() {
	if File_city_person_v2_person_service_proto != nil {
		return
	}
	file_city_person_v2_motion_proto_init()
	file_city_person_v2_person_proto_init()
	file_city_person_v2_person_runtime_proto_init()
	file_city_person_v2_vehicle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_person_v2_person_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_person_v2_person_service_proto_goTypes,
		DependencyIndexes: file_city_person_v2_person_service_proto_depIdxs,
		MessageInfos:      file_city_person_v2_person_service_proto_msgTypes,
	}.Build()
	File_city_person_v2_person_service_proto = out.File
	file_city_person_v2_person_service_proto_rawDesc = nil
	file_city_person_v2_person_service_proto_goTypes = nil
	file_city_person_v2_person_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: city/traffic/interaction/road/v1/road.proto

package roadv1

import (
	v1 "git.fiblab.net/sim/protos/go/city/traffic/interaction/lane/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoadLevel int32

const (
	RoadLevel_ROAD_LEVEL_UNSPECIFIED RoadLevel = 0
	RoadLevel_ROAD_LEVEL_CLEAR       RoadLevel = 1
	RoadLevel_ROAD_LEVEL_LIGHT_LOAD  RoadLevel = 2
	RoadLevel_ROAD_LEVEL_MEDIUM_LOAD RoadLevel = 3
	RoadLevel_ROAD_LEVEL_HEAVY_LOAD  RoadLevel = 4
	RoadLevel_ROAD_LEVEL_OVERLOAD    RoadLevel = 5
	RoadLevel_ROAD_LEVEL_RESTRICTED  RoadLevel = 6
)

// Enum value maps for RoadLevel.
var (
	RoadLevel_name = map[int32]string{
		0: "ROAD_LEVEL_UNSPECIFIED",
		1: "ROAD_LEVEL_CLEAR",
		2: "ROAD_LEVEL_LIGHT_LOAD",
		3: "ROAD_LEVEL_MEDIUM_LOAD",
		4: "ROAD_LEVEL_HEAVY_LOAD",
		5: "ROAD_LEVEL_OVERLOAD",
		6: "ROAD_LEVEL_RESTRICTED",
	}
	RoadLevel_value = map[string]int32{
		"ROAD_LEVEL_UNSPECIFIED": 0,
		"ROAD_LEVEL_CLEAR":       1,
		"ROAD_LEVEL_LIGHT_LOAD":  2,
		"ROAD_LEVEL_MEDIUM_LOAD": 3,
		"ROAD_LEVEL_HEAVY_LOAD":  4,
		"ROAD_LEVEL_OVERLOAD":    5,
		"ROAD_LEVEL_RESTRICTED":  6,
	}
)

func (x RoadLevel) Enum() *RoadLevel {
	p := new(RoadLevel)
	*p = x
	return p
}

func (x RoadLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoadLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_city_traffic_interaction_road_v1_road_proto_enumTypes[0].Descriptor()
}

func (RoadLevel) Type() protoreflect.EnumType {
	return &file_city_traffic_interaction_road_v1_road_proto_enumTypes[0]
}

func (x RoadLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoadLevel.Descriptor instead.
func (RoadLevel) EnumDescriptor() ([]byte, []int) {
	return file_city_traffic_interaction_road_v1_road_proto_rawDescGZIP(), []int{0}
}

type InterruptionReason int32

const (
	InterruptionReason_INTERRUPTION_REASON_UNSPECIFIED InterruptionReason = 0
	InterruptionReason_INTERRUPTION_REASON_RUINED      InterruptionReason = 1
	InterruptionReason_INTERRUPTION_REASON_CASCADE     InterruptionReason = 2
	InterruptionReason_INTERRUPTION_REASON_CONGESTION  InterruptionReason = 3
)

// Enum value maps for InterruptionReason.
var (
	InterruptionReason_name = map[int32]string{
		0: "INTERRUPTION_REASON_UNSPECIFIED",
		1: "INTERRUPTION_REASON_RUINED",
		2: "INTERRUPTION_REASON_CASCADE",
		3: "INTERRUPTION_REASON_CONGESTION",
	}
	InterruptionReason_value = map[string]int32{
		"INTERRUPTION_REASON_UNSPECIFIED": 0,
		"INTERRUPTION_REASON_RUINED":      1,
		"INTERRUPTION_REASON_CASCADE":     2,
		"INTERRUPTION_REASON_CONGESTION":  3,
	}
)

func (x InterruptionReason) Enum() *InterruptionReason {
	p := new(InterruptionReason)
	*p = x
	return p
}

func (x InterruptionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterruptionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_city_traffic_interaction_road_v1_road_proto_enumTypes[1].Descriptor()
}

func (InterruptionReason) Type() protoreflect.EnumType {
	return &file_city_traffic_interaction_road_v1_road_proto_enumTypes[1]
}

func (x InterruptionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterruptionReason.Descriptor instead.
func (InterruptionReason) EnumDescriptor() ([]byte, []int) {
	return file_city_traffic_interaction_road_v1_road_proto_rawDescGZIP(), []int{1}
}

type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 道路ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 道路平均速度（m/s）
	AvgV float64 `protobuf:"fixed64,4,opt,name=avg_v,json=avgV,proto3" json:"avg_v,omitempty"`
	// 道路拥堵情况
	Level RoadLevel `protobuf:"varint,2,opt,name=level,proto3,enum=city.traffic.interaction.road.v1.RoadLevel" json:"level,omitempty"`
	// 道路中断原因
	Reason InterruptionReason `protobuf:"varint,3,opt,name=reason,proto3,enum=city.traffic.interaction.road.v1.InterruptionReason" json:"reason,omitempty"`
	// 车道情况
	Lanes []*v1.State `protobuf:"bytes,5,rep,name=lanes,proto3" json:"lanes,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_traffic_interaction_road_v1_road_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_city_traffic_interaction_road_v1_road_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_city_traffic_interaction_road_v1_road_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *State) GetAvgV() float64 {
	if x != nil {
		return x.AvgV
	}
	return 0
}

func (x *State) GetLevel() RoadLevel {
	if x != nil {
		return x.Level
	}
	return RoadLevel_ROAD_LEVEL_UNSPECIFIED
}

func (x *State) GetReason() InterruptionReason {
	if x != nil {
		return x.Reason
	}
	return InterruptionReason_INTERRUPTION_REASON_UNSPECIFIED
}

func (x *State) GetLanes() []*v1.State {
	if x != nil {
		return x.Lanes
	}
	return nil
}

var File_city_traffic_interaction_road_v1_road_proto protoreflect.FileDescriptor

var file_city_traffic_interaction_road_v1_road_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x6f, 0x61, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x1a,
	0x2b, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x76, 0x67, 0x5f, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x76, 0x67, 0x56, 0x12, 0x41, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4c,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x05,
	0x6c, 0x61, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x2a, 0xc3, 0x01, 0x0a, 0x09,
	0x52, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x41,
	0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x4c, 0x4f, 0x41, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x5f, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c,
	0x5f, 0x48, 0x45, 0x41, 0x56, 0x59, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x56, 0x45, 0x52,
	0x4c, 0x4f, 0x41, 0x44, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x06, 0x2a, 0x9e, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a,
	0x1b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x41, 0x44, 0x45, 0x10, 0x02, 0x12, 0x22,
	0x0a, 0x1e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x47, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x42, 0x9c, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x52, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x69,
	0x62, 0x6c, 0x61, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x72, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x6f, 0x61, 0x64, 0x76, 0x31, 0xa2, 0x02,
	0x04, 0x43, 0x54, 0x49, 0x52, 0xaa, 0x02, 0x20, 0x43, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x6f, 0x61, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x20, 0x43, 0x69, 0x74, 0x79, 0x5c,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5c, 0x52, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2c, 0x43, 0x69,
	0x74, 0x79, 0x5c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x52, 0x6f, 0x61, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x24, 0x43, 0x69, 0x74,
	0x79, 0x3a, 0x3a, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x3a, 0x3a, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x52, 0x6f, 0x61, 0x64, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_city_traffic_interaction_road_v1_road_proto_rawDescOnce sync.Once
	file_city_traffic_interaction_road_v1_road_proto_rawDescData = file_city_traffic_interaction_road_v1_road_proto_rawDesc
)

func file_city_traffic_interaction_road_v1_road_proto_rawDescGZIP() []byte {
	file_city_traffic_interaction_road_v1_road_proto_rawDescOnce.Do(func() {
		file_city_traffic_interaction_road_v1_road_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_traffic_interaction_road_v1_road_proto_rawDescData)
	})
	return file_city_traffic_interaction_road_v1_road_proto_rawDescData
}

var file_city_traffic_interaction_road_v1_road_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_city_traffic_interaction_road_v1_road_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_city_traffic_interaction_road_v1_road_proto_goTypes = []interface{}{
	(RoadLevel)(0),          // 0: city.traffic.interaction.road.v1.RoadLevel
	(InterruptionReason)(0), // 1: city.traffic.interaction.road.v1.InterruptionReason
	(*State)(nil),           // 2: city.traffic.interaction.road.v1.State
	(*v1.State)(nil),        // 3: city.traffic.interaction.lane.v1.State
}
var file_city_traffic_interaction_road_v1_road_proto_depIdxs = []int32{
	0, // 0: city.traffic.interaction.road.v1.State.level:type_name -> city.traffic.interaction.road.v1.RoadLevel
	1, // 1: city.traffic.interaction.road.v1.State.reason:type_name -> city.traffic.interaction.road.v1.InterruptionReason
	3, // 2: city.traffic.interaction.road.v1.State.lanes:type_name -> city.traffic.interaction.lane.v1.State
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_city_traffic_interaction_road_v1_road_proto_init() }
func file_city_traffic_interaction_road_v1_road_proto_init() {
	if File_city_traffic_interaction_road_v1_road_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_city_traffic_interaction_road_v1_road_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_traffic_interaction_road_v1_road_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_traffic_interaction_road_v1_road_proto_goTypes,
		DependencyIndexes: file_city_traffic_interaction_road_v1_road_proto_depIdxs,
		EnumInfos:         file_city_traffic_interaction_road_v1_road_proto_enumTypes,
		MessageInfos:      file_city_traffic_interaction_road_v1_road_proto_msgTypes,
	}.Build()
	File_city_traffic_interaction_road_v1_road_proto = out.File
	file_city_traffic_interaction_road_v1_road_proto_rawDesc = nil
	file_city_traffic_interaction_road_v1_road_proto_goTypes = nil
	file_city_traffic_interaction_road_v1_road_proto_depIdxs = nil
}

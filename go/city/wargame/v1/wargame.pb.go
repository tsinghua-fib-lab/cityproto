// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: city/wargame/v1/wargame.proto

package wargamev1

import (
	v2 "git.fiblab.net/sim/protos/go/city/geo/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedWeaponType int32

const (
	RedWeaponType_RED_WEAPON_TYPE_UNSPECIFIED RedWeaponType = 0
	RedWeaponType_RED_WEAPON_TYPE_AGM_158     RedWeaponType = 1
	RedWeaponType_RED_WEAPON_TYPE_AGM_183     RedWeaponType = 2
	RedWeaponType_RED_WEAPON_TYPE_AGM_88      RedWeaponType = 3
	RedWeaponType_RED_WEAPON_TYPE_UGM_109     RedWeaponType = 4
	RedWeaponType_RED_WEAPON_TYPE_AGM_142     RedWeaponType = 5
)

// Enum value maps for RedWeaponType.
var (
	RedWeaponType_name = map[int32]string{
		0: "RED_WEAPON_TYPE_UNSPECIFIED",
		1: "RED_WEAPON_TYPE_AGM_158",
		2: "RED_WEAPON_TYPE_AGM_183",
		3: "RED_WEAPON_TYPE_AGM_88",
		4: "RED_WEAPON_TYPE_UGM_109",
		5: "RED_WEAPON_TYPE_AGM_142",
	}
	RedWeaponType_value = map[string]int32{
		"RED_WEAPON_TYPE_UNSPECIFIED": 0,
		"RED_WEAPON_TYPE_AGM_158":     1,
		"RED_WEAPON_TYPE_AGM_183":     2,
		"RED_WEAPON_TYPE_AGM_88":      3,
		"RED_WEAPON_TYPE_UGM_109":     4,
		"RED_WEAPON_TYPE_AGM_142":     5,
	}
)

func (x RedWeaponType) Enum() *RedWeaponType {
	p := new(RedWeaponType)
	*p = x
	return p
}

func (x RedWeaponType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedWeaponType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_wargame_v1_wargame_proto_enumTypes[0].Descriptor()
}

func (RedWeaponType) Type() protoreflect.EnumType {
	return &file_city_wargame_v1_wargame_proto_enumTypes[0]
}

func (x RedWeaponType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedWeaponType.Descriptor instead.
func (RedWeaponType) EnumDescriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{0}
}

type BlueWeaponType int32

const (
	BlueWeaponType_BLUE_WEAPON_TYPE_UNSPECIFIED BlueWeaponType = 0
	BlueWeaponType_BLUE_WEAPON_TYPE_HQ_9        BlueWeaponType = 1
	BlueWeaponType_BLUE_WEAPON_TYPE_HQ_12       BlueWeaponType = 2
	BlueWeaponType_BLUE_WEAPON_TYPE_HQ_16       BlueWeaponType = 3
	BlueWeaponType_BLUE_WEAPON_TYPE_HQ_22       BlueWeaponType = 4
)

// Enum value maps for BlueWeaponType.
var (
	BlueWeaponType_name = map[int32]string{
		0: "BLUE_WEAPON_TYPE_UNSPECIFIED",
		1: "BLUE_WEAPON_TYPE_HQ_9",
		2: "BLUE_WEAPON_TYPE_HQ_12",
		3: "BLUE_WEAPON_TYPE_HQ_16",
		4: "BLUE_WEAPON_TYPE_HQ_22",
	}
	BlueWeaponType_value = map[string]int32{
		"BLUE_WEAPON_TYPE_UNSPECIFIED": 0,
		"BLUE_WEAPON_TYPE_HQ_9":        1,
		"BLUE_WEAPON_TYPE_HQ_12":       2,
		"BLUE_WEAPON_TYPE_HQ_16":       3,
		"BLUE_WEAPON_TYPE_HQ_22":       4,
	}
)

func (x BlueWeaponType) Enum() *BlueWeaponType {
	p := new(BlueWeaponType)
	*p = x
	return p
}

func (x BlueWeaponType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlueWeaponType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_wargame_v1_wargame_proto_enumTypes[1].Descriptor()
}

func (BlueWeaponType) Type() protoreflect.EnumType {
	return &file_city_wargame_v1_wargame_proto_enumTypes[1]
}

func (x BlueWeaponType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlueWeaponType.Descriptor instead.
func (BlueWeaponType) EnumDescriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{1}
}

type Camp int32

const (
	Camp_CAMP_UNSPECIFIED Camp = 0
	Camp_CAMP_RED         Camp = 1
	Camp_CAMP_BLUE        Camp = 2
)

// Enum value maps for Camp.
var (
	Camp_name = map[int32]string{
		0: "CAMP_UNSPECIFIED",
		1: "CAMP_RED",
		2: "CAMP_BLUE",
	}
	Camp_value = map[string]int32{
		"CAMP_UNSPECIFIED": 0,
		"CAMP_RED":         1,
		"CAMP_BLUE":        2,
	}
)

func (x Camp) Enum() *Camp {
	p := new(Camp)
	*p = x
	return p
}

func (x Camp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Camp) Descriptor() protoreflect.EnumDescriptor {
	return file_city_wargame_v1_wargame_proto_enumTypes[2].Descriptor()
}

func (Camp) Type() protoreflect.EnumType {
	return &file_city_wargame_v1_wargame_proto_enumTypes[2]
}

func (x Camp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Camp.Descriptor instead.
func (Camp) EnumDescriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{2}
}

type RecoType int32

const (
	RecoType_RECO_TYPE_UNSPECIFIED RecoType = 0
	RecoType_RECO_TYPE_MISSILE     RecoType = 1
	RecoType_RECO_TYPE_ELEC        RecoType = 2
)

// Enum value maps for RecoType.
var (
	RecoType_name = map[int32]string{
		0: "RECO_TYPE_UNSPECIFIED",
		1: "RECO_TYPE_MISSILE",
		2: "RECO_TYPE_ELEC",
	}
	RecoType_value = map[string]int32{
		"RECO_TYPE_UNSPECIFIED": 0,
		"RECO_TYPE_MISSILE":     1,
		"RECO_TYPE_ELEC":        2,
	}
)

func (x RecoType) Enum() *RecoType {
	p := new(RecoType)
	*p = x
	return p
}

func (x RecoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecoType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_wargame_v1_wargame_proto_enumTypes[3].Descriptor()
}

func (RecoType) Type() protoreflect.EnumType {
	return &file_city_wargame_v1_wargame_proto_enumTypes[3]
}

func (x RecoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecoType.Descriptor instead.
func (RecoType) EnumDescriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{3}
}

type RecoAlgoType int32

const (
	RecoAlgoType_RECO_ALGO_TYPE_UNSPECIFIED RecoAlgoType = 0
	RecoAlgoType_RECO_ALGO_TYPE_MAX_DESTORY RecoAlgoType = 1
	RecoAlgoType_RECO_ALGO_TYPE_RANDOM      RecoAlgoType = 2
	RecoAlgoType_RECO_ALGO_TYPE_MIN_DESTORY RecoAlgoType = 3
)

// Enum value maps for RecoAlgoType.
var (
	RecoAlgoType_name = map[int32]string{
		0: "RECO_ALGO_TYPE_UNSPECIFIED",
		1: "RECO_ALGO_TYPE_MAX_DESTORY",
		2: "RECO_ALGO_TYPE_RANDOM",
		3: "RECO_ALGO_TYPE_MIN_DESTORY",
	}
	RecoAlgoType_value = map[string]int32{
		"RECO_ALGO_TYPE_UNSPECIFIED": 0,
		"RECO_ALGO_TYPE_MAX_DESTORY": 1,
		"RECO_ALGO_TYPE_RANDOM":      2,
		"RECO_ALGO_TYPE_MIN_DESTORY": 3,
	}
)

func (x RecoAlgoType) Enum() *RecoAlgoType {
	p := new(RecoAlgoType)
	*p = x
	return p
}

func (x RecoAlgoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecoAlgoType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_wargame_v1_wargame_proto_enumTypes[4].Descriptor()
}

func (RecoAlgoType) Type() protoreflect.EnumType {
	return &file_city_wargame_v1_wargame_proto_enumTypes[4]
}

func (x RecoAlgoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecoAlgoType.Descriptor instead.
func (RecoAlgoType) EnumDescriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{4}
}

type RecoPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos  *v2.LongLatPosition `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Type RecoType            `protobuf:"varint,2,opt,name=type,proto3,enum=city.wargame.v1.RecoType" json:"type,omitempty"`
}

func (x *RecoPoint) Reset() {
	*x = RecoPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoPoint) ProtoMessage() {}

func (x *RecoPoint) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoPoint.ProtoReflect.Descriptor instead.
func (*RecoPoint) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{0}
}

func (x *RecoPoint) GetPos() *v2.LongLatPosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *RecoPoint) GetType() RecoType {
	if x != nil {
		return x.Type
	}
	return RecoType_RECO_TYPE_UNSPECIFIED
}

type Weapon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedType  *RedWeaponType  `protobuf:"varint,2,opt,name=red_type,json=redType,proto3,enum=city.wargame.v1.RedWeaponType,oneof" json:"red_type,omitempty"`
	BlueType *BlueWeaponType `protobuf:"varint,3,opt,name=blue_type,json=blueType,proto3,enum=city.wargame.v1.BlueWeaponType,oneof" json:"blue_type,omitempty"`
	Num      int32           `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *Weapon) Reset() {
	*x = Weapon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weapon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weapon) ProtoMessage() {}

func (x *Weapon) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weapon.ProtoReflect.Descriptor instead.
func (*Weapon) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{1}
}

func (x *Weapon) GetRedType() RedWeaponType {
	if x != nil && x.RedType != nil {
		return *x.RedType
	}
	return RedWeaponType_RED_WEAPON_TYPE_UNSPECIFIED
}

func (x *Weapon) GetBlueType() BlueWeaponType {
	if x != nil && x.BlueType != nil {
		return *x.BlueType
	}
	return BlueWeaponType_BLUE_WEAPON_TYPE_UNSPECIFIED
}

func (x *Weapon) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weapon *Weapon             `protobuf:"bytes,1,opt,name=weapon,proto3" json:"weapon,omitempty"`
	Pos    *v2.LongLatPosition `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Radius float64             `protobuf:"fixed64,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{2}
}

func (x *Point) GetWeapon() *Weapon {
	if x != nil {
		return x.Weapon
	}
	return nil
}

func (x *Point) GetPos() *v2.LongLatPosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Point) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type Hit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attack   *Point   `protobuf:"bytes,1,opt,name=attack,proto3" json:"attack,omitempty"`
	Defenses []*Point `protobuf:"bytes,2,rep,name=defenses,proto3" json:"defenses,omitempty"`
	Result   bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Arrive   int32    `protobuf:"varint,4,opt,name=arrive,proto3" json:"arrive,omitempty"`
}

func (x *Hit) Reset() {
	*x = Hit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hit) ProtoMessage() {}

func (x *Hit) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hit.ProtoReflect.Descriptor instead.
func (*Hit) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{3}
}

func (x *Hit) GetAttack() *Point {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *Hit) GetDefenses() []*Point {
	if x != nil {
		return x.Defenses
	}
	return nil
}

func (x *Hit) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *Hit) GetArrive() int32 {
	if x != nil {
		return x.Arrive
	}
	return 0
}

type HitHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hits []*Hit `protobuf:"bytes,1,rep,name=hits,proto3" json:"hits,omitempty"`
}

func (x *HitHistory) Reset() {
	*x = HitHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitHistory) ProtoMessage() {}

func (x *HitHistory) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitHistory.ProtoReflect.Descriptor instead.
func (*HitHistory) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{4}
}

func (x *HitHistory) GetHits() []*Hit {
	if x != nil {
		return x.Hits
	}
	return nil
}

type Casualty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AoiId int32 `protobuf:"varint,1,opt,name=aoi_id,json=aoiId,proto3" json:"aoi_id,omitempty"`
	Num   int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *Casualty) Reset() {
	*x = Casualty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_wargame_v1_wargame_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Casualty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Casualty) ProtoMessage() {}

func (x *Casualty) ProtoReflect() protoreflect.Message {
	mi := &file_city_wargame_v1_wargame_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Casualty.ProtoReflect.Descriptor instead.
func (*Casualty) Descriptor() ([]byte, []int) {
	return file_city_wargame_v1_wargame_proto_rawDescGZIP(), []int{5}
}

func (x *Casualty) GetAoiId() int32 {
	if x != nil {
		return x.AoiId
	}
	return 0
}

func (x *Casualty) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

var File_city_wargame_v1_wargame_proto protoreflect.FileDescriptor

var file_city_wargame_v1_wargame_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x15, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x67, 0x65, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x06, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41,
	0x0a, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x01, 0x52, 0x08, 0x62, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x80,
	0x01, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x65,
	0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x03, 0x48, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x72, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x72, 0x72, 0x69, 0x76, 0x65, 0x22, 0x36, 0x0a,
	0x0a, 0x48, 0x69, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x68,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x74, 0x52,
	0x04, 0x68, 0x69, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x75, 0x61, 0x6c, 0x74,
	0x79, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6f, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x6f, 0x69, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x2a, 0xc0, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x64, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b,
	0x52, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x47, 0x4d, 0x5f, 0x31, 0x35, 0x38, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45,
	0x44, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47,
	0x4d, 0x5f, 0x31, 0x38, 0x33, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x44, 0x5f, 0x57,
	0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x4d, 0x5f, 0x38,
	0x38, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x47, 0x4d, 0x5f, 0x31, 0x30, 0x39, 0x10, 0x04,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x4d, 0x5f, 0x31, 0x34, 0x32, 0x10, 0x05, 0x2a, 0xa1, 0x01,
	0x0a, 0x0e, 0x42, 0x6c, 0x75, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x1c, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x51, 0x5f, 0x39, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x51, 0x5f, 0x31, 0x32, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x55,
	0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x51,
	0x5f, 0x31, 0x36, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x55, 0x45, 0x5f, 0x57, 0x45,
	0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x51, 0x5f, 0x32, 0x32, 0x10,
	0x04, 0x2a, 0x39, 0x0a, 0x04, 0x43, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x4d,
	0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4d, 0x50, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x41, 0x4d, 0x50, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x08,
	0x52, 0x65, 0x63, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x43, 0x4f,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x43, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45,
	0x43, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4c, 0x45, 0x43, 0x10, 0x02, 0x2a, 0x89,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x41, 0x6c, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x43, 0x4f, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x43, 0x4f, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x52, 0x45, 0x43, 0x4f, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45,
	0x43, 0x4f, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x5f, 0x44, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x03, 0x42, 0xb9, 0x01, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x42, 0x0c, 0x57, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x69, 0x62, 0x6c, 0x61, 0x62, 0x2e, 0x6e,
	0x65, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6f,
	0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x77, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x57, 0x58,
	0xaa, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x2e, 0x57, 0x61, 0x72, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x5c, 0x57, 0x61, 0x72, 0x67, 0x61, 0x6d,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x69, 0x74, 0x79, 0x5c, 0x57, 0x61, 0x72, 0x67,
	0x61, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x57, 0x61, 0x72, 0x67, 0x61,
	0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_city_wargame_v1_wargame_proto_rawDescOnce sync.Once
	file_city_wargame_v1_wargame_proto_rawDescData = file_city_wargame_v1_wargame_proto_rawDesc
)

func file_city_wargame_v1_wargame_proto_rawDescGZIP() []byte {
	file_city_wargame_v1_wargame_proto_rawDescOnce.Do(func() {
		file_city_wargame_v1_wargame_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_wargame_v1_wargame_proto_rawDescData)
	})
	return file_city_wargame_v1_wargame_proto_rawDescData
}

var file_city_wargame_v1_wargame_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_city_wargame_v1_wargame_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_city_wargame_v1_wargame_proto_goTypes = []any{
	(RedWeaponType)(0),         // 0: city.wargame.v1.RedWeaponType
	(BlueWeaponType)(0),        // 1: city.wargame.v1.BlueWeaponType
	(Camp)(0),                  // 2: city.wargame.v1.Camp
	(RecoType)(0),              // 3: city.wargame.v1.RecoType
	(RecoAlgoType)(0),          // 4: city.wargame.v1.RecoAlgoType
	(*RecoPoint)(nil),          // 5: city.wargame.v1.RecoPoint
	(*Weapon)(nil),             // 6: city.wargame.v1.Weapon
	(*Point)(nil),              // 7: city.wargame.v1.Point
	(*Hit)(nil),                // 8: city.wargame.v1.Hit
	(*HitHistory)(nil),         // 9: city.wargame.v1.HitHistory
	(*Casualty)(nil),           // 10: city.wargame.v1.Casualty
	(*v2.LongLatPosition)(nil), // 11: city.geo.v2.LongLatPosition
}
var file_city_wargame_v1_wargame_proto_depIdxs = []int32{
	11, // 0: city.wargame.v1.RecoPoint.pos:type_name -> city.geo.v2.LongLatPosition
	3,  // 1: city.wargame.v1.RecoPoint.type:type_name -> city.wargame.v1.RecoType
	0,  // 2: city.wargame.v1.Weapon.red_type:type_name -> city.wargame.v1.RedWeaponType
	1,  // 3: city.wargame.v1.Weapon.blue_type:type_name -> city.wargame.v1.BlueWeaponType
	6,  // 4: city.wargame.v1.Point.weapon:type_name -> city.wargame.v1.Weapon
	11, // 5: city.wargame.v1.Point.pos:type_name -> city.geo.v2.LongLatPosition
	7,  // 6: city.wargame.v1.Hit.attack:type_name -> city.wargame.v1.Point
	7,  // 7: city.wargame.v1.Hit.defenses:type_name -> city.wargame.v1.Point
	8,  // 8: city.wargame.v1.HitHistory.hits:type_name -> city.wargame.v1.Hit
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_city_wargame_v1_wargame_proto_init() }
func file_city_wargame_v1_wargame_proto_init() {
	if File_city_wargame_v1_wargame_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_city_wargame_v1_wargame_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RecoPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_wargame_v1_wargame_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Weapon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_wargame_v1_wargame_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_wargame_v1_wargame_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Hit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_wargame_v1_wargame_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HitHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_wargame_v1_wargame_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Casualty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_city_wargame_v1_wargame_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_wargame_v1_wargame_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_wargame_v1_wargame_proto_goTypes,
		DependencyIndexes: file_city_wargame_v1_wargame_proto_depIdxs,
		EnumInfos:         file_city_wargame_v1_wargame_proto_enumTypes,
		MessageInfos:      file_city_wargame_v1_wargame_proto_msgTypes,
	}.Build()
	File_city_wargame_v1_wargame_proto = out.File
	file_city_wargame_v1_wargame_proto_rawDesc = nil
	file_city_wargame_v1_wargame_proto_goTypes = nil
	file_city_wargame_v1_wargame_proto_depIdxs = nil
}

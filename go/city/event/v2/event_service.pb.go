// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: city/event/v2/event_service.proto

package eventv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 按照topic查询事件请求
type GetEventsByTopicRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 主题
	Topic         string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsByTopicRequest) Reset() {
	*x = GetEventsByTopicRequest{}
	mi := &file_city_event_v2_event_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsByTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByTopicRequest) ProtoMessage() {}

func (x *GetEventsByTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByTopicRequest.ProtoReflect.Descriptor instead.
func (*GetEventsByTopicRequest) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventsByTopicRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// 按照topic查询事件响应
type GetEventsByTopicResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 事件列表
	Events        []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsByTopicResponse) Reset() {
	*x = GetEventsByTopicResponse{}
	mi := &file_city_event_v2_event_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsByTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsByTopicResponse) ProtoMessage() {}

func (x *GetEventsByTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsByTopicResponse.ProtoReflect.Descriptor instead.
func (*GetEventsByTopicResponse) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventsByTopicResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// 确认事件已被处理请求
type ResolveEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 事件列表
	Events        []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveEventsRequest) Reset() {
	*x = ResolveEventsRequest{}
	mi := &file_city_event_v2_event_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveEventsRequest) ProtoMessage() {}

func (x *ResolveEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveEventsRequest.ProtoReflect.Descriptor instead.
func (*ResolveEventsRequest) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_service_proto_rawDescGZIP(), []int{2}
}

func (x *ResolveEventsRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// 确认事件已被处理响应
type ResolveEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveEventsResponse) Reset() {
	*x = ResolveEventsResponse{}
	mi := &file_city_event_v2_event_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveEventsResponse) ProtoMessage() {}

func (x *ResolveEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveEventsResponse.ProtoReflect.Descriptor instead.
func (*ResolveEventsResponse) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_service_proto_rawDescGZIP(), []int{3}
}

var File_city_event_v2_event_service_proto protoreflect.FileDescriptor

const file_city_event_v2_event_service_proto_rawDesc = "" +
	"\n" +
	"!city/event/v2/event_service.proto\x12\rcity.event.v2\x1a\x19city/event/v2/event.proto\"/\n" +
	"\x17GetEventsByTopicRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\"H\n" +
	"\x18GetEventsByTopicResponse\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.city.event.v2.EventR\x06events\"D\n" +
	"\x14ResolveEventsRequest\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.city.event.v2.EventR\x06events\"\x17\n" +
	"\x15ResolveEventsResponse2\xcf\x01\n" +
	"\fEventService\x12c\n" +
	"\x10GetEventsByTopic\x12&.city.event.v2.GetEventsByTopicRequest\x1a'.city.event.v2.GetEventsByTopicResponse\x12Z\n" +
	"\rResolveEvents\x12#.city.event.v2.ResolveEventsRequest\x1a$.city.event.v2.ResolveEventsResponseB\xb3\x01\n" +
	"\x11com.city.event.v2B\x11EventServiceProtoP\x01Z5git.fiblab.net/sim/protos/v2/go/city/event/v2;eventv2\xa2\x02\x03CEX\xaa\x02\rCity.Event.V2\xca\x02\rCity\\Event\\V2\xe2\x02\x19City\\Event\\V2\\GPBMetadata\xea\x02\x0fCity::Event::V2b\x06proto3"

var (
	file_city_event_v2_event_service_proto_rawDescOnce sync.Once
	file_city_event_v2_event_service_proto_rawDescData []byte
)

func file_city_event_v2_event_service_proto_rawDescGZIP() []byte {
	file_city_event_v2_event_service_proto_rawDescOnce.Do(func() {
		file_city_event_v2_event_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_event_v2_event_service_proto_rawDesc), len(file_city_event_v2_event_service_proto_rawDesc)))
	})
	return file_city_event_v2_event_service_proto_rawDescData
}

var file_city_event_v2_event_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_city_event_v2_event_service_proto_goTypes = []any{
	(*GetEventsByTopicRequest)(nil),  // 0: city.event.v2.GetEventsByTopicRequest
	(*GetEventsByTopicResponse)(nil), // 1: city.event.v2.GetEventsByTopicResponse
	(*ResolveEventsRequest)(nil),     // 2: city.event.v2.ResolveEventsRequest
	(*ResolveEventsResponse)(nil),    // 3: city.event.v2.ResolveEventsResponse
	(*Event)(nil),                    // 4: city.event.v2.Event
}
var file_city_event_v2_event_service_proto_depIdxs = []int32{
	4, // 0: city.event.v2.GetEventsByTopicResponse.events:type_name -> city.event.v2.Event
	4, // 1: city.event.v2.ResolveEventsRequest.events:type_name -> city.event.v2.Event
	0, // 2: city.event.v2.EventService.GetEventsByTopic:input_type -> city.event.v2.GetEventsByTopicRequest
	2, // 3: city.event.v2.EventService.ResolveEvents:input_type -> city.event.v2.ResolveEventsRequest
	1, // 4: city.event.v2.EventService.GetEventsByTopic:output_type -> city.event.v2.GetEventsByTopicResponse
	3, // 5: city.event.v2.EventService.ResolveEvents:output_type -> city.event.v2.ResolveEventsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_city_event_v2_event_service_proto_init() }
func file_city_event_v2_event_service_proto_init() {
	if File_city_event_v2_event_service_proto != nil {
		return
	}
	file_city_event_v2_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_event_v2_event_service_proto_rawDesc), len(file_city_event_v2_event_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_event_v2_event_service_proto_goTypes,
		DependencyIndexes: file_city_event_v2_event_service_proto_depIdxs,
		MessageInfos:      file_city_event_v2_event_service_proto_msgTypes,
	}.Build()
	File_city_event_v2_event_service_proto = out.File
	file_city_event_v2_event_service_proto_goTypes = nil
	file_city_event_v2_event_service_proto_depIdxs = nil
}

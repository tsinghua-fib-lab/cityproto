// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: city/event/v2/event.proto

package eventv2

import (
	v2 "git.fiblab.net/sim/protos/v2/go/city/geo/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体类型
type EntityType int32

const (
	// 未指定
	EntityType_ENTITY_TYPE_UNSPECIFIED EntityType = 0
	// Lane
	EntityType_ENTITY_TYPE_LANE EntityType = 1
	// Road
	EntityType_ENTITY_TYPE_ROAD EntityType = 2
	// Junction
	EntityType_ENTITY_TYPE_JUNCTION EntityType = 3
	// AOI
	EntityType_ENTITY_TYPE_AOI EntityType = 4
	// POI
	EntityType_ENTITY_TYPE_POI EntityType = 5
	// 人
	EntityType_ENTITY_TYPE_PERSON EntityType = 6
	// 组织
	EntityType_ENTITY_TYPE_ORG EntityType = 7
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "ENTITY_TYPE_UNSPECIFIED",
		1: "ENTITY_TYPE_LANE",
		2: "ENTITY_TYPE_ROAD",
		3: "ENTITY_TYPE_JUNCTION",
		4: "ENTITY_TYPE_AOI",
		5: "ENTITY_TYPE_POI",
		6: "ENTITY_TYPE_PERSON",
		7: "ENTITY_TYPE_ORG",
	}
	EntityType_value = map[string]int32{
		"ENTITY_TYPE_UNSPECIFIED": 0,
		"ENTITY_TYPE_LANE":        1,
		"ENTITY_TYPE_ROAD":        2,
		"ENTITY_TYPE_JUNCTION":    3,
		"ENTITY_TYPE_AOI":         4,
		"ENTITY_TYPE_POI":         5,
		"ENTITY_TYPE_PERSON":      6,
		"ENTITY_TYPE_ORG":         7,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_city_event_v2_event_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_city_event_v2_event_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_city_event_v2_event_proto_rawDescGZIP(), []int{0}
}

// 主语
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 实体类型
	Type EntityType `protobuf:"varint,1,opt,name=type,proto3,enum=city.event.v2.EntityType" json:"type,omitempty" yaml:"type" bson:"type" db:"type"`
	// 实体ID
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty" yaml:"id" bson:"id" db:"id"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_city_event_v2_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *Entity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 模拟器中的事件
// 包含主题、主语（Who）、谓词（内容）、地点（Where）、时间（When）
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主题
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty" yaml:"topic" bson:"topic" db:"topic"`
	// ID
	Id *int32 `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty" yaml:"id" bson:"id" db:"id"`
	// 主语
	Subject *Entity `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty" yaml:"subject" bson:"subject" db:"subject"`
	// 谓词
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty" yaml:"content" bson:"content" db:"content"`
	// 地点
	Position *v2.Position `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty" yaml:"position" bson:"position" db:"position"`
	// 时间
	T float64 `protobuf:"fixed64,6,opt,name=t,proto3" json:"t,omitempty" yaml:"t" bson:"t" db:"t"`
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_city_event_v2_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_city_event_v2_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_city_event_v2_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Event) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Event) GetSubject() *Entity {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Event) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Event) GetPosition() *v2.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Event) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

var File_city_event_v2_event_proto protoreflect.FileDescriptor

var file_city_event_v2_event_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x1a, 0x15, 0x63, 0x69, 0x74, 0x79,
	0x2f, 0x67, 0x65, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x47, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x67, 0x65, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a,
	0x01, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x2a, 0xc6, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x41,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x41, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a, 0x55, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x4f, 0x49, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x54,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x10, 0x05, 0x12, 0x16,
	0x0a, 0x12, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45,
	0x52, 0x53, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x10, 0x07, 0x42, 0xac, 0x01, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x32, 0x42, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x69, 0x62, 0x6c, 0x61, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2f,
	0x73, 0x69, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f,
	0x2f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x32, 0x3b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x0d, 0x43,
	0x69, 0x74, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0d, 0x43,
	0x69, 0x74, 0x79, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x19, 0x43,
	0x69, 0x74, 0x79, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x3a,
	0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_city_event_v2_event_proto_rawDescOnce sync.Once
	file_city_event_v2_event_proto_rawDescData = file_city_event_v2_event_proto_rawDesc
)

func file_city_event_v2_event_proto_rawDescGZIP() []byte {
	file_city_event_v2_event_proto_rawDescOnce.Do(func() {
		file_city_event_v2_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_event_v2_event_proto_rawDescData)
	})
	return file_city_event_v2_event_proto_rawDescData
}

var file_city_event_v2_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_city_event_v2_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_city_event_v2_event_proto_goTypes = []any{
	(EntityType)(0),     // 0: city.event.v2.EntityType
	(*Entity)(nil),      // 1: city.event.v2.Entity
	(*Event)(nil),       // 2: city.event.v2.Event
	(*v2.Position)(nil), // 3: city.geo.v2.Position
}
var file_city_event_v2_event_proto_depIdxs = []int32{
	0, // 0: city.event.v2.Entity.type:type_name -> city.event.v2.EntityType
	1, // 1: city.event.v2.Event.subject:type_name -> city.event.v2.Entity
	3, // 2: city.event.v2.Event.position:type_name -> city.geo.v2.Position
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_city_event_v2_event_proto_init() }
func file_city_event_v2_event_proto_init() {
	if File_city_event_v2_event_proto != nil {
		return
	}
	file_city_event_v2_event_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_event_v2_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_city_event_v2_event_proto_goTypes,
		DependencyIndexes: file_city_event_v2_event_proto_depIdxs,
		EnumInfos:         file_city_event_v2_event_proto_enumTypes,
		MessageInfos:      file_city_event_v2_event_proto_msgTypes,
	}.Build()
	File_city_event_v2_event_proto = out.File
	file_city_event_v2_event_proto_rawDesc = nil
	file_city_event_v2_event_proto_goTypes = nil
	file_city_event_v2_event_proto_depIdxs = nil
}

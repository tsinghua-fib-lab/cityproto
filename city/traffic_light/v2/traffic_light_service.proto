syntax = "proto3";

package city.traffic_light.v2;

import "city/traffic_light/v2/traffic_light.proto";

service TrafficLightService {
  // 获取路口的红绿灯信息
  rpc GetTrafficLight(GetTrafficLightRequest) returns (GetTrafficLightResponse);
  // 设置路口的红绿灯信息
  rpc SetTrafficLight(SetTrafficLightRequest) returns (SetTrafficLightResponse);
  // 设置路口的红绿灯相位
  rpc SetTrafficLightPhase(SetTrafficLightPhaseRequest) returns (SetTrafficLightPhaseResponse);
  // 设置路口的红绿灯状态
  rpc SetTrafficLightStatus(SetTrafficLightStatusRequest) returns (SetTrafficLightStatusResponse);
}

// 获取路口的红绿灯信息请求
message GetTrafficLightRequest {
  // 信号等相关的接口精确到junction
  int32 junction_id = 1;
}

// 获取路口的红绿灯信息响应
message GetTrafficLightResponse {
  // 当前路口处的红绿灯
  TrafficLight traffic_light = 1;
  // 表示当前路口处的红绿灯处于哪一个相位
  int32 phase_index = 2;
  // 当前相位的剩余时间
  double time_remaining = 3;
}

// 设置路口的红绿灯信息请求
message SetTrafficLightRequest {
  // 需要改变的红绿灯（含路口编号）
  TrafficLight traffic_light = 1;
  // 指定当前路口处的红绿灯的相位
  int32 phase_index = 2;
  // 当前相位的剩余时间
  double time_remaining = 3;
}

// 设置路口的红绿灯信息响应
message SetTrafficLightResponse {}

// 设置路口的红绿灯相位请求
message SetTrafficLightPhaseRequest {
  // 需要改变相位的路口编号
  int32 junction_id = 1;
  // 指定当前路口红绿灯的相位
  int32 phase_index = 2;
  // 当前相位的剩余时间
  double time_remaining = 3;
}

// 设置路口的红绿灯相位响应
message SetTrafficLightPhaseResponse {}

// 设置路口的红绿灯状态请求
message SetTrafficLightStatusRequest {
  // 需要改变状态的路口编号
  int32 junction_id = 1;
  // 当前路口红绿灯状态，true为通，false为断
  bool ok = 2;
}

// 设置路口的红绿灯状态响应
message SetTrafficLightStatusResponse {}

syntax = "proto3";

package city.economy.v2;

import "city/economy/v2/economy.proto";

// 组织经济情况接口
service OrgService {
  // 添加组织
  // add org
  rpc AddOrg(AddOrgRequest) returns (AddOrgResponse);
  // 移除组织
  // remove org
  rpc RemoveOrg(RemoveOrgRequest) returns (RemoveOrgResponse);
  // 添加Agent
  // add agent
  rpc AddAgent(AddAgentRequest) returns (AddAgentResponse);
  // 移除Agent
  // remove agent
  rpc RemoveAgent(RemoveAgentRequest) returns (RemoveAgentResponse);
  // Nominal GDP
  rpc GetNominalGDP(GetNominalGDPRequest) returns (GetNominalGDPResponse);
  rpc SetNominalGDP(SetNominalGDPRequest) returns (SetNominalGDPResponse);

  // Real GDP
  rpc GetRealGDP(GetRealGDPRequest) returns (GetRealGDPResponse);
  rpc SetRealGDP(SetRealGDPRequest) returns (SetRealGDPResponse);

  // Unemployment
  rpc GetUnemployment(GetUnemploymentRequest) returns (GetUnemploymentResponse);
  rpc SetUnemployment(SetUnemploymentRequest) returns (SetUnemploymentResponse);

  // Wages
  rpc GetWages(GetWagesRequest) returns (GetWagesResponse);
  rpc SetWages(SetWagesRequest) returns (SetWagesResponse);

  // Prices
  rpc GetPrices(GetPricesRequest) returns (GetPricesResponse);
  rpc SetPrices(SetPricesRequest) returns (SetPricesResponse);

  // Inventory
  rpc GetInventory(GetInventoryRequest) returns (GetInventoryResponse);
  rpc SetInventory(SetInventoryRequest) returns (SetInventoryResponse);

  // Price
  rpc GetPrice(GetPriceRequest) returns (GetPriceResponse);
  rpc SetPrice(SetPriceRequest) returns (SetPriceResponse);

  // Currency
  rpc GetCurrency(GetCurrencyRequest) returns (GetCurrencyResponse);
  rpc SetCurrency(SetCurrencyRequest) returns (SetCurrencyResponse);

  // Interest Rate
  rpc GetInterestRate(GetInterestRateRequest) returns (GetInterestRateResponse);
  rpc SetInterestRate(SetInterestRateRequest) returns (SetInterestRateResponse);

  // Bracket Cutoffs
  rpc GetBracketCutoffs(GetBracketCutoffsRequest) returns (GetBracketCutoffsResponse);
  rpc SetBracketCutoffs(SetBracketCutoffsRequest) returns (SetBracketCutoffsResponse);

  // Bracket Rates
  rpc GetBracketRates(GetBracketRatesRequest) returns (GetBracketRatesResponse);
  rpc SetBracketRates(SetBracketRatesRequest) returns (SetBracketRatesResponse);

  // Taxes Due
  rpc CalculateTaxesDue(CalculateTaxesDueRequest) returns (CalculateTaxesDueResponse);
  // Consumption
  rpc CalculateConsumption(CalculateConsumptionRequest) returns (CalculateConsumptionResponse);
  // Consumption
  rpc CalculateInterest(CalculateInterestRequest) returns (CalculateInterestResponse);
  // Save
  rpc SaveEconomyEntities(SaveEconomyEntitiesRequest) returns (SaveEconomyEntitiesResponse);
  // Load
  rpc LoadEconomyEntities(LoadEconomyEntitiesRequest) returns (LoadEconomyEntitiesResponse);

  // Consumption Currency
  rpc GetConsumptionCurrency(GetConsumptionCurrencyRequest) returns (GetConsumptionCurrencyResponse);
  rpc SetConsumptionCurrency(SetConsumptionCurrencyRequest) returns (SetConsumptionCurrencyResponse);

  // Consumption Propensity
  rpc GetConsumptionPropensity(GetConsumptionPropensityRequest) returns (GetConsumptionPropensityResponse);
  rpc SetConsumptionPropensity(SetConsumptionPropensityRequest) returns (SetConsumptionPropensityResponse);

  // Income Currency
  rpc GetIncomeCurrency(GetIncomeCurrencyRequest) returns (GetIncomeCurrencyResponse);
  rpc SetIncomeCurrency(SetIncomeCurrencyRequest) returns (SetIncomeCurrencyResponse);

  // Depression
  rpc GetDepressionStatus(GetDepressionStatusRequest) returns (GetDepressionStatusResponse);
  rpc SetDepressionStatus(SetDepressionStatusRequest) returns (SetDepressionStatusResponse);

  // Locus of Control
  rpc GetLocusControl(GetLocusControlRequest) returns (GetLocusControlResponse);
  rpc SetLocusControl(SetLocusControlRequest) returns (SetLocusControlResponse);

  // Working Hours
  rpc GetWorkingHours(GetWorkingHoursRequest) returns (GetWorkingHoursResponse);
  rpc SetWorkingHours(SetWorkingHoursRequest) returns (SetWorkingHoursResponse);
}

message AddOrgRequest {
  Org org = 1;
}
message AddOrgResponse {}

message RemoveOrgRequest {
  int32 org_id = 1;
}
message RemoveOrgResponse {}

message AddAgentRequest {
  Agent agent = 1;
}
message AddAgentResponse {}

message RemoveAgentRequest {
  int32 agent_id = 1;
}
message RemoveAgentResponse {}

message GetNominalGDPRequest {
  int32 org_id = 1;
}
message GetNominalGDPResponse {
  repeated float nominal_gdp = 1;
}

message SetNominalGDPRequest {
  int32 org_id = 1;
  repeated float nominal_gdp = 2;
}
message SetNominalGDPResponse {}

message GetRealGDPRequest {
  int32 org_id = 1;
}
message GetRealGDPResponse {
  repeated float real_gdp = 1;
}

message SetRealGDPRequest {
  int32 org_id = 1;
  repeated float real_gdp = 2;
}
message SetRealGDPResponse {}

message GetUnemploymentRequest {
  int32 org_id = 1;
}
message GetUnemploymentResponse {
  repeated float unemployment = 1;
}

message SetUnemploymentRequest {
  int32 org_id = 1;
  repeated float unemployment = 2;
}
message SetUnemploymentResponse {}

message GetWagesRequest {
  int32 org_id = 1;
}
message GetWagesResponse {
  repeated float wages = 1;
}

message SetWagesRequest {
  int32 org_id = 1;
  repeated float wages = 2;
}
message SetWagesResponse {}

message GetPricesRequest {
  int32 org_id = 1;
}
message GetPricesResponse {
  repeated float prices = 1;
}

message SetPricesRequest {
  int32 org_id = 1;
  repeated float prices = 2;
}
message SetPricesResponse {}

message GetInventoryRequest {
  int32 org_id = 1;
}
message GetInventoryResponse {
  int32 inventory = 1;
}

message SetInventoryRequest {
  int32 org_id = 1;
  int32 inventory = 2;
}
message SetInventoryResponse {}

message GetPriceRequest {
  int32 org_id = 1;
}
message GetPriceResponse {
  float price = 1;
}

message SetPriceRequest {
  int32 org_id = 1;
  float price = 2;
}
message SetPriceResponse {}

message GetCurrencyRequest {
  int32 org_id = 1;
}
message GetCurrencyResponse {
  float currency = 1;
}

message SetCurrencyRequest {
  int32 org_id = 1;
  float currency = 2;
}
message SetCurrencyResponse {}

message GetInterestRateRequest {
  int32 org_id = 1;
}
message GetInterestRateResponse {
  float interest_rate = 1;
}

message SetInterestRateRequest {
  int32 org_id = 1;
  float interest_rate = 2;
}
message SetInterestRateResponse {}

message GetBracketCutoffsRequest {
  int32 org_id = 1;
}
message GetBracketCutoffsResponse {
  repeated float bracket_cutoffs = 1;
}

message SetBracketCutoffsRequest {
  int32 org_id = 1;
  repeated float bracket_cutoffs = 2;
}
message SetBracketCutoffsResponse {}

message GetBracketRatesRequest {
  int32 org_id = 1;
}
message GetBracketRatesResponse {
  repeated float bracket_rates = 1;
}

message SetBracketRatesRequest {
  int32 org_id = 1;
  repeated float bracket_rates = 2;
}
message SetBracketRatesResponse {}

// government tax calculation

message CalculateTaxesDueRequest {
  int32 government_id = 1;
  // id of agents who needs to pay tax
  repeated int32 agent_ids = 2;
  // income of agents who needs to pay tax, corresponds one-to-one with `agent_ids` by index
  repeated float incomes = 3;
  // Whether redistribute the taxes to all agents or not
  bool enable_redistribution = 4;
}

message CalculateTaxesDueResponse {
  // total taxes from agents
  float taxes_due = 1;
  // after-tax income of agents, corresponds one-to-one with `agent_ids` by index
  repeated float updated_incomes = 2;
}

// consumption

message CalculateConsumptionRequest {
  int32 firm_id = 1;
  // id of agents who has demand to consume at this firm
  repeated int32 agent_ids = 2;
  // item demand number of each agents, corresponds one-to-one with `agent_ids` by index
  repeated int32 demands = 3;
}

message CalculateConsumptionResponse {
  // the item remaining count
  int32 remain_inventory = 1;
  // currencies after consumption of each agents, corresponds one-to-one with `agent_ids` by index
  repeated float updated_currencies = 2;
}

// bank interest calculation

message CalculateInterestRequest {
  int32 bank_id = 1;
  // id of agents who has currency stored in the bank
  repeated int32 agent_ids = 2;
}

message CalculateInterestResponse {
  // total interest that the agents got from the bank
  float total_interest = 1;
  // currencies with interest of each agents, corresponds one-to-one with `agent_ids` by index
  repeated float updated_currencies = 2;
}

message SaveEconomyEntitiesRequest {
  string file_path = 1;
}

message SaveEconomyEntitiesResponse {
  repeated int32 agent_ids = 1;
  repeated int32 org_ids = 2;
}

message LoadEconomyEntitiesRequest {
  string file_path = 1;
}

message LoadEconomyEntitiesResponse {
  repeated int32 agent_ids = 1;
  repeated int32 org_ids = 2;
}

// Consumption Currency
message GetConsumptionCurrencyRequest {
  int32 org_id = 1;
}
message GetConsumptionCurrencyResponse {
  repeated float consumption_currency = 1;
}

message SetConsumptionCurrencyRequest {
  int32 org_id = 1;
  repeated float consumption_currency = 2;
}
message SetConsumptionCurrencyResponse {}

// Consumption Propensity
message GetConsumptionPropensityRequest {
  int32 org_id = 1;
}
message GetConsumptionPropensityResponse {
  repeated float consumption_propensity = 1;
}

message SetConsumptionPropensityRequest {
  int32 org_id = 1;
  repeated float consumption_propensity = 2;
}
message SetConsumptionPropensityResponse {}

// Income Currency
message GetIncomeCurrencyRequest {
  int32 org_id = 1;
}
message GetIncomeCurrencyResponse {
  repeated float income_currency = 1;
}

message SetIncomeCurrencyRequest {
  int32 org_id = 1;
  repeated float income_currency = 2;
}
message SetIncomeCurrencyResponse {}

// Depression
message GetDepressionStatusRequest {
  int32 org_id = 1;
}
message GetDepressionStatusResponse {
  repeated float depression = 1;
}

message SetDepressionStatusRequest {
  int32 org_id = 1;
  repeated float depression = 2;
}
message SetDepressionStatusResponse {}

// Locus of Control
message GetLocusControlRequest {
  int32 org_id = 1;
}
message GetLocusControlResponse {
  repeated float locus_control = 1;
}

message SetLocusControlRequest {
  int32 org_id = 1;
  repeated float locus_control = 2;
}
message SetLocusControlResponse {}

// Working Hours
message GetWorkingHoursRequest {
  int32 org_id = 1;
}
message GetWorkingHoursResponse {
  repeated float working_hours = 1;
}

message SetWorkingHoursRequest {
  int32 org_id = 1;
  repeated float working_hours = 2;
}
message SetWorkingHoursResponse {}

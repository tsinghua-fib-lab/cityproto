// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/routing/v2/routing_service.proto

#include "city/routing/v2/routing_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace routing {
namespace v2 {
PROTOBUF_CONSTEXPR GetRouteRequest::GetRouteRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_)*/nullptr
  , /*decltype(_impl_.end_)*/nullptr
  , /*decltype(_impl_.time_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRouteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRouteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRouteRequestDefaultTypeInternal() {}
  union {
    GetRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRouteRequestDefaultTypeInternal _GetRouteRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRouteResponse::GetRouteResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.journeys_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRouteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRouteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRouteResponseDefaultTypeInternal() {}
  union {
    GetRouteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRouteResponseDefaultTypeInternal _GetRouteResponse_default_instance_;
PROTOBUF_CONSTEXPR SetDrivingCostsRequest::SetDrivingCostsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.costs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetDrivingCostsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDrivingCostsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDrivingCostsRequestDefaultTypeInternal() {}
  union {
    SetDrivingCostsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDrivingCostsRequestDefaultTypeInternal _SetDrivingCostsRequest_default_instance_;
PROTOBUF_CONSTEXPR SetDrivingCostsResponse::SetDrivingCostsResponse(
    ::_pbi::ConstantInitialized) {}
struct SetDrivingCostsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDrivingCostsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDrivingCostsResponseDefaultTypeInternal() {}
  union {
    SetDrivingCostsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDrivingCostsResponseDefaultTypeInternal _SetDrivingCostsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDrivingCostsRequest::GetDrivingCostsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.costs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDrivingCostsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDrivingCostsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDrivingCostsRequestDefaultTypeInternal() {}
  union {
    GetDrivingCostsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDrivingCostsRequestDefaultTypeInternal _GetDrivingCostsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDrivingCostsResponse::GetDrivingCostsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.costs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDrivingCostsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDrivingCostsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDrivingCostsResponseDefaultTypeInternal() {}
  union {
    GetDrivingCostsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDrivingCostsResponseDefaultTypeInternal _GetDrivingCostsResponse_default_instance_;
}  // namespace v2
}  // namespace routing
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2frouting_2fv2_2frouting_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2frouting_2fv2_2frouting_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2frouting_2fv2_2frouting_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteRequest, _impl_.start_),
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteRequest, _impl_.end_),
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteRequest, _impl_.time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetRouteResponse, _impl_.journeys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::SetDrivingCostsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::SetDrivingCostsRequest, _impl_.costs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::SetDrivingCostsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetDrivingCostsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetDrivingCostsRequest, _impl_.costs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetDrivingCostsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::routing::v2::GetDrivingCostsResponse, _impl_.costs_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::routing::v2::GetRouteRequest)},
  { 10, -1, -1, sizeof(::city::routing::v2::GetRouteResponse)},
  { 17, -1, -1, sizeof(::city::routing::v2::SetDrivingCostsRequest)},
  { 24, -1, -1, sizeof(::city::routing::v2::SetDrivingCostsResponse)},
  { 30, -1, -1, sizeof(::city::routing::v2::GetDrivingCostsRequest)},
  { 37, -1, -1, sizeof(::city::routing::v2::GetDrivingCostsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::routing::v2::_GetRouteRequest_default_instance_._instance,
  &::city::routing::v2::_GetRouteResponse_default_instance_._instance,
  &::city::routing::v2::_SetDrivingCostsRequest_default_instance_._instance,
  &::city::routing::v2::_SetDrivingCostsResponse_default_instance_._instance,
  &::city::routing::v2::_GetDrivingCostsRequest_default_instance_._instance,
  &::city::routing::v2::_GetDrivingCostsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2frouting_2fv2_2frouting_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%city/routing/v2/routing_service.proto\022"
  "\017city.routing.v2\032\025city/geo/v2/geo.proto\032"
  "\032city/routing/v2/cost.proto\032\035city/routin"
  "g/v2/routing.proto\"\253\001\n\017GetRouteRequest\022."
  "\n\004type\030\001 \001(\0162\032.city.routing.v2.RouteType"
  "R\004type\022+\n\005start\030\002 \001(\0132\025.city.geo.v2.Posi"
  "tionR\005start\022\'\n\003end\030\003 \001(\0132\025.city.geo.v2.P"
  "ositionR\003end\022\022\n\004time\030\005 \001(\001R\004time\"H\n\020GetR"
  "outeResponse\0224\n\010journeys\030\001 \003(\0132\030.city.ro"
  "uting.v2.JourneyR\010journeys\"E\n\026SetDriving"
  "CostsRequest\022+\n\005costs\030\001 \003(\0132\025.city.routi"
  "ng.v2.CostR\005costs\"\031\n\027SetDrivingCostsResp"
  "onse\"E\n\026GetDrivingCostsRequest\022+\n\005costs\030"
  "\001 \003(\0132\025.city.routing.v2.CostR\005costs\"F\n\027G"
  "etDrivingCostsResponse\022+\n\005costs\030\001 \003(\0132\025."
  "city.routing.v2.CostR\005costs2\255\002\n\016RoutingS"
  "ervice\022O\n\010GetRoute\022 .city.routing.v2.Get"
  "RouteRequest\032!.city.routing.v2.GetRouteR"
  "esponse\022d\n\017SetDrivingCosts\022\'.city.routin"
  "g.v2.SetDrivingCostsRequest\032(.city.routi"
  "ng.v2.SetDrivingCostsResponse\022d\n\017GetDriv"
  "ingCosts\022\'.city.routing.v2.GetDrivingCos"
  "tsRequest\032(.city.routing.v2.GetDrivingCo"
  "stsResponseB\303\001\n\023com.city.routing.v2B\023Rou"
  "tingServiceProtoP\001Z9git.fiblab.net/sim/p"
  "rotos/go/v2/city/routing/v2;routingv2\242\002\003"
  "CRX\252\002\017City.Routing.V2\312\002\017City\\Routing\\V2\342"
  "\002\033City\\Routing\\V2\\GPBMetadata\352\002\021City::Ro"
  "uting::V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_deps[3] = {
  &::descriptor_table_city_2fgeo_2fv2_2fgeo_2eproto,
  &::descriptor_table_city_2frouting_2fv2_2fcost_2eproto,
  &::descriptor_table_city_2frouting_2fv2_2frouting_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto = {
    false, false, 1137, descriptor_table_protodef_city_2frouting_2fv2_2frouting_5fservice_2eproto,
    "city/routing/v2/routing_service.proto",
    &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once, descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_deps, 3, 6,
    schemas, file_default_instances, TableStruct_city_2frouting_2fv2_2frouting_5fservice_2eproto::offsets,
    file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto, file_level_enum_descriptors_city_2frouting_2fv2_2frouting_5fservice_2eproto,
    file_level_service_descriptors_city_2frouting_2fv2_2frouting_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter() {
  return &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2frouting_2fv2_2frouting_5fservice_2eproto(&descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto);
namespace city {
namespace routing {
namespace v2 {

// ===================================================================

class GetRouteRequest::_Internal {
 public:
  static const ::city::geo::v2::Position& start(const GetRouteRequest* msg);
  static const ::city::geo::v2::Position& end(const GetRouteRequest* msg);
};

const ::city::geo::v2::Position&
GetRouteRequest::_Internal::start(const GetRouteRequest* msg) {
  return *msg->_impl_.start_;
}
const ::city::geo::v2::Position&
GetRouteRequest::_Internal::end(const GetRouteRequest* msg) {
  return *msg->_impl_.end_;
}
void GetRouteRequest::clear_start() {
  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
}
void GetRouteRequest::clear_end() {
  if (GetArenaForAllocation() == nullptr && _impl_.end_ != nullptr) {
    delete _impl_.end_;
  }
  _impl_.end_ = nullptr;
}
GetRouteRequest::GetRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.GetRouteRequest)
}
GetRouteRequest::GetRouteRequest(const GetRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRouteRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){nullptr}
    , decltype(_impl_.end_){nullptr}
    , decltype(_impl_.time_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_start()) {
    _this->_impl_.start_ = new ::city::geo::v2::Position(*from._impl_.start_);
  }
  if (from._internal_has_end()) {
    _this->_impl_.end_ = new ::city::geo::v2::Position(*from._impl_.end_);
  }
  ::memcpy(&_impl_.time_, &from._impl_.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.GetRouteRequest)
}

inline void GetRouteRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_){nullptr}
    , decltype(_impl_.end_){nullptr}
    , decltype(_impl_.time_){0}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRouteRequest::~GetRouteRequest() {
  // @@protoc_insertion_point(destructor:city.routing.v2.GetRouteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.start_;
  if (this != internal_default_instance()) delete _impl_.end_;
}

void GetRouteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.GetRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.start_ != nullptr) {
    delete _impl_.start_;
  }
  _impl_.start_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.end_ != nullptr) {
    delete _impl_.end_;
  }
  _impl_.end_ = nullptr;
  ::memset(&_impl_.time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRouteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.routing.v2.RouteType type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::city::routing::v2::RouteType>(val));
        } else
          goto handle_unusual;
        continue;
      // .city.geo.v2.Position start = 2 [json_name = "start"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .city.geo.v2.Position end = 3 [json_name = "end"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double time = 5 [json_name = "time"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.GetRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.routing.v2.RouteType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .city.geo.v2.Position start = 2 [json_name = "start"];
  if (this->_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  // .city.geo.v2.Position end = 3 [json_name = "end"];
  if (this->_internal_has_end()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::end(this),
        _Internal::end(this).GetCachedSize(), target, stream);
  }

  // double time = 5 [json_name = "time"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time = this->_internal_time();
  uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.GetRouteRequest)
  return target;
}

size_t GetRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.GetRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.geo.v2.Position start = 2 [json_name = "start"];
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.start_);
  }

  // .city.geo.v2.Position end = 3 [json_name = "end"];
  if (this->_internal_has_end()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.end_);
  }

  // double time = 5 [json_name = "time"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time = this->_internal_time();
  uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 1 + 8;
  }

  // .city.routing.v2.RouteType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRouteRequest::GetClassData() const { return &_class_data_; }


void GetRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRouteRequest*>(&to_msg);
  auto& from = static_cast<const GetRouteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.GetRouteRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_start()) {
    _this->_internal_mutable_start()->::city::geo::v2::Position::MergeFrom(
        from._internal_start());
  }
  if (from._internal_has_end()) {
    _this->_internal_mutable_end()->::city::geo::v2::Position::MergeFrom(
        from._internal_end());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time = from._internal_time();
  uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRouteRequest::CopyFrom(const GetRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.GetRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRouteRequest::IsInitialized() const {
  return true;
}

void GetRouteRequest::InternalSwap(GetRouteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRouteRequest, _impl_.type_)
      + sizeof(GetRouteRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(GetRouteRequest, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRouteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[0]);
}

// ===================================================================

class GetRouteResponse::_Internal {
 public:
};

void GetRouteResponse::clear_journeys() {
  _impl_.journeys_.Clear();
}
GetRouteResponse::GetRouteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.GetRouteResponse)
}
GetRouteResponse::GetRouteResponse(const GetRouteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRouteResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.journeys_){from._impl_.journeys_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.GetRouteResponse)
}

inline void GetRouteResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.journeys_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRouteResponse::~GetRouteResponse() {
  // @@protoc_insertion_point(destructor:city.routing.v2.GetRouteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRouteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.journeys_.~RepeatedPtrField();
}

void GetRouteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRouteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.GetRouteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.journeys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRouteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.routing.v2.Journey journeys = 1 [json_name = "journeys"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_journeys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRouteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.GetRouteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.routing.v2.Journey journeys = 1 [json_name = "journeys"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_journeys_size()); i < n; i++) {
    const auto& repfield = this->_internal_journeys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.GetRouteResponse)
  return target;
}

size_t GetRouteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.GetRouteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.Journey journeys = 1 [json_name = "journeys"];
  total_size += 1UL * this->_internal_journeys_size();
  for (const auto& msg : this->_impl_.journeys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRouteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRouteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRouteResponse::GetClassData() const { return &_class_data_; }


void GetRouteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRouteResponse*>(&to_msg);
  auto& from = static_cast<const GetRouteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.GetRouteResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.journeys_.MergeFrom(from._impl_.journeys_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRouteResponse::CopyFrom(const GetRouteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.GetRouteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRouteResponse::IsInitialized() const {
  return true;
}

void GetRouteResponse::InternalSwap(GetRouteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.journeys_.InternalSwap(&other->_impl_.journeys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRouteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[1]);
}

// ===================================================================

class SetDrivingCostsRequest::_Internal {
 public:
};

void SetDrivingCostsRequest::clear_costs() {
  _impl_.costs_.Clear();
}
SetDrivingCostsRequest::SetDrivingCostsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.SetDrivingCostsRequest)
}
SetDrivingCostsRequest::SetDrivingCostsRequest(const SetDrivingCostsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetDrivingCostsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){from._impl_.costs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.SetDrivingCostsRequest)
}

inline void SetDrivingCostsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetDrivingCostsRequest::~SetDrivingCostsRequest() {
  // @@protoc_insertion_point(destructor:city.routing.v2.SetDrivingCostsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetDrivingCostsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.costs_.~RepeatedPtrField();
}

void SetDrivingCostsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetDrivingCostsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.SetDrivingCostsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.costs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetDrivingCostsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_costs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetDrivingCostsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.SetDrivingCostsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_costs_size()); i < n; i++) {
    const auto& repfield = this->_internal_costs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.SetDrivingCostsRequest)
  return target;
}

size_t SetDrivingCostsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.SetDrivingCostsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  total_size += 1UL * this->_internal_costs_size();
  for (const auto& msg : this->_impl_.costs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetDrivingCostsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetDrivingCostsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetDrivingCostsRequest::GetClassData() const { return &_class_data_; }


void SetDrivingCostsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetDrivingCostsRequest*>(&to_msg);
  auto& from = static_cast<const SetDrivingCostsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.SetDrivingCostsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.costs_.MergeFrom(from._impl_.costs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetDrivingCostsRequest::CopyFrom(const SetDrivingCostsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.SetDrivingCostsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDrivingCostsRequest::IsInitialized() const {
  return true;
}

void SetDrivingCostsRequest::InternalSwap(SetDrivingCostsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.costs_.InternalSwap(&other->_impl_.costs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDrivingCostsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[2]);
}

// ===================================================================

class SetDrivingCostsResponse::_Internal {
 public:
};

SetDrivingCostsResponse::SetDrivingCostsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.SetDrivingCostsResponse)
}
SetDrivingCostsResponse::SetDrivingCostsResponse(const SetDrivingCostsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetDrivingCostsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.SetDrivingCostsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetDrivingCostsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetDrivingCostsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetDrivingCostsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[3]);
}

// ===================================================================

class GetDrivingCostsRequest::_Internal {
 public:
};

void GetDrivingCostsRequest::clear_costs() {
  _impl_.costs_.Clear();
}
GetDrivingCostsRequest::GetDrivingCostsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.GetDrivingCostsRequest)
}
GetDrivingCostsRequest::GetDrivingCostsRequest(const GetDrivingCostsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDrivingCostsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){from._impl_.costs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.GetDrivingCostsRequest)
}

inline void GetDrivingCostsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetDrivingCostsRequest::~GetDrivingCostsRequest() {
  // @@protoc_insertion_point(destructor:city.routing.v2.GetDrivingCostsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDrivingCostsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.costs_.~RepeatedPtrField();
}

void GetDrivingCostsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDrivingCostsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.GetDrivingCostsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.costs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDrivingCostsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_costs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDrivingCostsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.GetDrivingCostsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_costs_size()); i < n; i++) {
    const auto& repfield = this->_internal_costs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.GetDrivingCostsRequest)
  return target;
}

size_t GetDrivingCostsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.GetDrivingCostsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  total_size += 1UL * this->_internal_costs_size();
  for (const auto& msg : this->_impl_.costs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDrivingCostsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDrivingCostsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDrivingCostsRequest::GetClassData() const { return &_class_data_; }


void GetDrivingCostsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDrivingCostsRequest*>(&to_msg);
  auto& from = static_cast<const GetDrivingCostsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.GetDrivingCostsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.costs_.MergeFrom(from._impl_.costs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDrivingCostsRequest::CopyFrom(const GetDrivingCostsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.GetDrivingCostsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDrivingCostsRequest::IsInitialized() const {
  return true;
}

void GetDrivingCostsRequest::InternalSwap(GetDrivingCostsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.costs_.InternalSwap(&other->_impl_.costs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDrivingCostsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[4]);
}

// ===================================================================

class GetDrivingCostsResponse::_Internal {
 public:
};

void GetDrivingCostsResponse::clear_costs() {
  _impl_.costs_.Clear();
}
GetDrivingCostsResponse::GetDrivingCostsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.GetDrivingCostsResponse)
}
GetDrivingCostsResponse::GetDrivingCostsResponse(const GetDrivingCostsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDrivingCostsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){from._impl_.costs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.GetDrivingCostsResponse)
}

inline void GetDrivingCostsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.costs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetDrivingCostsResponse::~GetDrivingCostsResponse() {
  // @@protoc_insertion_point(destructor:city.routing.v2.GetDrivingCostsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDrivingCostsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.costs_.~RepeatedPtrField();
}

void GetDrivingCostsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDrivingCostsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.GetDrivingCostsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.costs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDrivingCostsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_costs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDrivingCostsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.GetDrivingCostsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_costs_size()); i < n; i++) {
    const auto& repfield = this->_internal_costs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.GetDrivingCostsResponse)
  return target;
}

size_t GetDrivingCostsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.GetDrivingCostsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.Cost costs = 1 [json_name = "costs"];
  total_size += 1UL * this->_internal_costs_size();
  for (const auto& msg : this->_impl_.costs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDrivingCostsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDrivingCostsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDrivingCostsResponse::GetClassData() const { return &_class_data_; }


void GetDrivingCostsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDrivingCostsResponse*>(&to_msg);
  auto& from = static_cast<const GetDrivingCostsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.GetDrivingCostsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.costs_.MergeFrom(from._impl_.costs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDrivingCostsResponse::CopyFrom(const GetDrivingCostsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.GetDrivingCostsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDrivingCostsResponse::IsInitialized() const {
  return true;
}

void GetDrivingCostsResponse::InternalSwap(GetDrivingCostsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.costs_.InternalSwap(&other->_impl_.costs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDrivingCostsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_5fservice_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_5fservice_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace routing
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::routing::v2::GetRouteRequest*
Arena::CreateMaybeMessage< ::city::routing::v2::GetRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::GetRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::routing::v2::GetRouteResponse*
Arena::CreateMaybeMessage< ::city::routing::v2::GetRouteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::GetRouteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::routing::v2::SetDrivingCostsRequest*
Arena::CreateMaybeMessage< ::city::routing::v2::SetDrivingCostsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::SetDrivingCostsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::routing::v2::SetDrivingCostsResponse*
Arena::CreateMaybeMessage< ::city::routing::v2::SetDrivingCostsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::SetDrivingCostsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::routing::v2::GetDrivingCostsRequest*
Arena::CreateMaybeMessage< ::city::routing::v2::GetDrivingCostsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::GetDrivingCostsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::routing::v2::GetDrivingCostsResponse*
Arena::CreateMaybeMessage< ::city::routing::v2::GetDrivingCostsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::routing::v2::GetDrivingCostsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

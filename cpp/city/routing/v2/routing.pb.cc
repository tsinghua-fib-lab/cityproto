// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/routing/v2/routing.proto

#include "city/routing/v2/routing.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace routing {
namespace v2 {
        template <typename>
PROTOBUF_CONSTEXPR DrivingJourneyBody::DrivingJourneyBody(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.road_ids_)*/ {},
      /* _impl_._road_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_.eta_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DrivingJourneyBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrivingJourneyBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrivingJourneyBodyDefaultTypeInternal() {}
  union {
    DrivingJourneyBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrivingJourneyBodyDefaultTypeInternal _DrivingJourneyBody_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WalkingRouteSegment::WalkingRouteSegment(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lane_id_)*/ 0,
      /*decltype(_impl_.moving_direction_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WalkingRouteSegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WalkingRouteSegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WalkingRouteSegmentDefaultTypeInternal() {}
  union {
    WalkingRouteSegment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WalkingRouteSegmentDefaultTypeInternal _WalkingRouteSegment_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WalkingJourneyBody::WalkingJourneyBody(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.route_)*/ {},
      /*decltype(_impl_.eta_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WalkingJourneyBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WalkingJourneyBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WalkingJourneyBodyDefaultTypeInternal() {}
  union {
    WalkingJourneyBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WalkingJourneyBodyDefaultTypeInternal _WalkingJourneyBody_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BusJourneyBody::BusJourneyBody(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.line_id_)*/ 0,
      /*decltype(_impl_.start_station_id_)*/ 0,
      /*decltype(_impl_.end_station_id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BusJourneyBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BusJourneyBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BusJourneyBodyDefaultTypeInternal() {}
  union {
    BusJourneyBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BusJourneyBodyDefaultTypeInternal _BusJourneyBody_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Journey::Journey(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.driving_)*/ nullptr,
      /*decltype(_impl_.walking_)*/ nullptr,
      /*decltype(_impl_.by_bus_)*/ nullptr,
      /*decltype(_impl_.type_)*/ 0,
    } {}
struct JourneyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JourneyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JourneyDefaultTypeInternal() {}
  union {
    Journey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JourneyDefaultTypeInternal _Journey_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BusLine::BusLine(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.stops_)*/ {},
      /* _impl_._stops_cached_byte_size_ = */ {0},
      /*decltype(_impl_.distances_)*/ {},
      /*decltype(_impl_.line_id_)*/ 0,
      /*decltype(_impl_.interval_)*/ 0,
      /*decltype(_impl_.count_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BusLineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BusLineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BusLineDefaultTypeInternal() {}
  union {
    BusLine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BusLineDefaultTypeInternal _BusLine_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BusLines::BusLines(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lines_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BusLinesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BusLinesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BusLinesDefaultTypeInternal() {}
  union {
    BusLines _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BusLinesDefaultTypeInternal _BusLines_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RoadStatus::RoadStatus(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.speed_)*/ {},
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct RoadStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoadStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoadStatusDefaultTypeInternal() {}
  union {
    RoadStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoadStatusDefaultTypeInternal _RoadStatus_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RoadStatuses::RoadStatuses(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.road_statuses_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct RoadStatusesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoadStatusesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoadStatusesDefaultTypeInternal() {}
  union {
    RoadStatuses _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoadStatusesDefaultTypeInternal _RoadStatuses_default_instance_;
}  // namespace v2
}  // namespace routing
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_city_2frouting_2fv2_2frouting_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2frouting_2fv2_2frouting_2eproto = nullptr;
const ::uint32_t TableStruct_city_2frouting_2fv2_2frouting_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::DrivingJourneyBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::DrivingJourneyBody, _impl_.road_ids_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::DrivingJourneyBody, _impl_.eta_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingRouteSegment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingRouteSegment, _impl_.lane_id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingRouteSegment, _impl_.moving_direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingJourneyBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingJourneyBody, _impl_.route_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::WalkingJourneyBody, _impl_.eta_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusJourneyBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusJourneyBody, _impl_.line_id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusJourneyBody, _impl_.start_station_id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusJourneyBody, _impl_.end_station_id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _impl_.driving_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _impl_.walking_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::Journey, _impl_.by_bus_),
    ~0u,
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _impl_.line_id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _impl_.stops_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _impl_.distances_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _impl_.interval_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLine, _impl_.count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLines, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::BusLines, _impl_.lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::RoadStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::RoadStatus, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::RoadStatus, _impl_.speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::RoadStatuses, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::routing::v2::RoadStatuses, _impl_.road_statuses_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::routing::v2::DrivingJourneyBody)},
        {10, -1, -1, sizeof(::city::routing::v2::WalkingRouteSegment)},
        {20, -1, -1, sizeof(::city::routing::v2::WalkingJourneyBody)},
        {30, -1, -1, sizeof(::city::routing::v2::BusJourneyBody)},
        {41, 53, -1, sizeof(::city::routing::v2::Journey)},
        {57, -1, -1, sizeof(::city::routing::v2::BusLine)},
        {70, -1, -1, sizeof(::city::routing::v2::BusLines)},
        {79, -1, -1, sizeof(::city::routing::v2::RoadStatus)},
        {89, -1, -1, sizeof(::city::routing::v2::RoadStatuses)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::routing::v2::_DrivingJourneyBody_default_instance_._instance,
    &::city::routing::v2::_WalkingRouteSegment_default_instance_._instance,
    &::city::routing::v2::_WalkingJourneyBody_default_instance_._instance,
    &::city::routing::v2::_BusJourneyBody_default_instance_._instance,
    &::city::routing::v2::_Journey_default_instance_._instance,
    &::city::routing::v2::_BusLine_default_instance_._instance,
    &::city::routing::v2::_BusLines_default_instance_._instance,
    &::city::routing::v2::_RoadStatus_default_instance_._instance,
    &::city::routing::v2::_RoadStatuses_default_instance_._instance,
};
const char descriptor_table_protodef_city_2frouting_2fv2_2frouting_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035city/routing/v2/routing.proto\022\017city.ro"
    "uting.v2\"A\n\022DrivingJourneyBody\022\031\n\010road_i"
    "ds\030\002 \003(\005R\007roadIds\022\020\n\003eta\030\003 \001(\001R\003eta\"{\n\023W"
    "alkingRouteSegment\022\027\n\007lane_id\030\001 \001(\005R\006lan"
    "eId\022K\n\020moving_direction\030\002 \001(\0162 .city.rou"
    "ting.v2.MovingDirectionR\017movingDirection"
    "\"b\n\022WalkingJourneyBody\022:\n\005route\030\001 \003(\0132$."
    "city.routing.v2.WalkingRouteSegmentR\005rou"
    "te\022\020\n\003eta\030\002 \001(\001R\003eta\"y\n\016BusJourneyBody\022\027"
    "\n\007line_id\030\001 \001(\005R\006lineId\022(\n\020start_station"
    "_id\030\002 \001(\005R\016startStationId\022$\n\016end_station"
    "_id\030\003 \001(\005R\014endStationId\"\243\002\n\007Journey\0220\n\004t"
    "ype\030\001 \001(\0162\034.city.routing.v2.JourneyTypeR"
    "\004type\022B\n\007driving\030\002 \001(\0132#.city.routing.v2"
    ".DrivingJourneyBodyH\000R\007driving\210\001\001\022B\n\007wal"
    "king\030\003 \001(\0132#.city.routing.v2.WalkingJour"
    "neyBodyH\001R\007walking\210\001\001\022;\n\006by_bus\030\004 \001(\0132\037."
    "city.routing.v2.BusJourneyBodyH\002R\005byBus\210"
    "\001\001B\n\n\010_drivingB\n\n\010_walkingB\t\n\007_by_bus\"\210\001"
    "\n\007BusLine\022\027\n\007line_id\030\001 \001(\005R\006lineId\022\024\n\005st"
    "ops\030\002 \003(\005R\005stops\022\034\n\tdistances\030\003 \003(\001R\tdis"
    "tances\022\032\n\010interval\030\004 \001(\005R\010interval\022\024\n\005co"
    "unt\030\005 \001(\005R\005count\":\n\010BusLines\022.\n\005lines\030\001 "
    "\003(\0132\030.city.routing.v2.BusLineR\005lines\"2\n\n"
    "RoadStatus\022\016\n\002id\030\001 \001(\005R\002id\022\024\n\005speed\030\002 \003("
    "\001R\005speed\"P\n\014RoadStatuses\022@\n\rroad_statuse"
    "s\030\001 \003(\0132\033.city.routing.v2.RoadStatusR\014ro"
    "adStatuses*n\n\tRouteType\022\032\n\026ROUTE_TYPE_UN"
    "SPECIFIED\020\000\022\026\n\022ROUTE_TYPE_DRIVING\020\001\022\026\n\022R"
    "OUTE_TYPE_WALKING\020\002\022\025\n\021ROUTE_TYPE_BY_BUS"
    "\020\003*x\n\013JourneyType\022\034\n\030JOURNEY_TYPE_UNSPEC"
    "IFIED\020\000\022\030\n\024JOURNEY_TYPE_DRIVING\020\001\022\030\n\024JOU"
    "RNEY_TYPE_WALKING\020\002\022\027\n\023JOURNEY_TYPE_BY_B"
    "US\020\003*p\n\017MovingDirection\022 \n\034MOVING_DIRECT"
    "ION_UNSPECIFIED\020\000\022\034\n\030MOVING_DIRECTION_FO"
    "RWARD\020\001\022\035\n\031MOVING_DIRECTION_BACKWARD\020\002B\271"
    "\001\n\023com.city.routing.v2B\014RoutingProtoP\001Z6"
    "git.fiblab.net/sim/protos/go/city/routin"
    "g/v2;routingv2\242\002\003CRX\252\002\017City.Routing.V2\312\002"
    "\017City\\Routing\\V2\342\002\033City\\Routing\\V2\\GPBMe"
    "tadata\352\002\021City::Routing::V2b\006proto3"
};
static ::absl::once_flag descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2frouting_2fv2_2frouting_2eproto = {
    false,
    false,
    1634,
    descriptor_table_protodef_city_2frouting_2fv2_2frouting_2eproto,
    "city/routing/v2/routing.proto",
    &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_city_2frouting_2fv2_2frouting_2eproto::offsets,
    file_level_metadata_city_2frouting_2fv2_2frouting_2eproto,
    file_level_enum_descriptors_city_2frouting_2fv2_2frouting_2eproto,
    file_level_service_descriptors_city_2frouting_2fv2_2frouting_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter() {
  return &descriptor_table_city_2frouting_2fv2_2frouting_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2frouting_2fv2_2frouting_2eproto(&descriptor_table_city_2frouting_2fv2_2frouting_2eproto);
namespace city {
namespace routing {
namespace v2 {
const ::google::protobuf::EnumDescriptor* RouteType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_city_2frouting_2fv2_2frouting_2eproto);
  return file_level_enum_descriptors_city_2frouting_2fv2_2frouting_2eproto[0];
}
bool RouteType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* JourneyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_city_2frouting_2fv2_2frouting_2eproto);
  return file_level_enum_descriptors_city_2frouting_2fv2_2frouting_2eproto[1];
}
bool JourneyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* MovingDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_city_2frouting_2fv2_2frouting_2eproto);
  return file_level_enum_descriptors_city_2frouting_2fv2_2frouting_2eproto[2];
}
bool MovingDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class DrivingJourneyBody::_Internal {
 public:
};

DrivingJourneyBody::DrivingJourneyBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.DrivingJourneyBody)
}
DrivingJourneyBody::DrivingJourneyBody(const DrivingJourneyBody& from) : ::google::protobuf::Message() {
  DrivingJourneyBody* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.road_ids_){from._impl_.road_ids_},
      /* _impl_._road_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.eta_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.eta_ = from._impl_.eta_;

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.DrivingJourneyBody)
}
inline void DrivingJourneyBody::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.road_ids_){arena},
      /* _impl_._road_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.eta_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
DrivingJourneyBody::~DrivingJourneyBody() {
  // @@protoc_insertion_point(destructor:city.routing.v2.DrivingJourneyBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrivingJourneyBody::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.road_ids_.~RepeatedField();
}
void DrivingJourneyBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DrivingJourneyBody::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.DrivingJourneyBody)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_road_ids()->Clear();
  _impl_.eta_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DrivingJourneyBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DrivingJourneyBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DrivingJourneyBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 road_ids = 2 [json_name = "roadIds"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DrivingJourneyBody, _impl_.road_ids_)}},
    // double eta = 3 [json_name = "eta"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(DrivingJourneyBody, _impl_.eta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 road_ids = 2 [json_name = "roadIds"];
    {PROTOBUF_FIELD_OFFSET(DrivingJourneyBody, _impl_.road_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // double eta = 3 [json_name = "eta"];
    {PROTOBUF_FIELD_OFFSET(DrivingJourneyBody, _impl_.eta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DrivingJourneyBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.DrivingJourneyBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 road_ids = 2 [json_name = "roadIds"];
  {
    int byte_size = _impl_._road_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(2, _internal_road_ids(),
                                                 byte_size, target);
    }
  }

  // double eta = 3 [json_name = "eta"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = this->_internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_eta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.DrivingJourneyBody)
  return target;
}

::size_t DrivingJourneyBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.DrivingJourneyBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 road_ids = 2 [json_name = "roadIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_road_ids())
    ;
    _impl_._road_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // double eta = 3 [json_name = "eta"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = this->_internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DrivingJourneyBody::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DrivingJourneyBody::MergeImpl
};
const ::google::protobuf::Message::ClassData*DrivingJourneyBody::GetClassData() const { return &_class_data_; }


void DrivingJourneyBody::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DrivingJourneyBody*>(&to_msg);
  auto& from = static_cast<const DrivingJourneyBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.DrivingJourneyBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_road_ids()->MergeFrom(from._internal_road_ids());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = from._internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    _this->_internal_set_eta(from._internal_eta());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrivingJourneyBody::CopyFrom(const DrivingJourneyBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.DrivingJourneyBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DrivingJourneyBody::IsInitialized() const {
  return true;
}

void DrivingJourneyBody::InternalSwap(DrivingJourneyBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.road_ids_.InternalSwap(&other->_impl_.road_ids_);
        swap(_impl_.eta_, other->_impl_.eta_);
}

::google::protobuf::Metadata DrivingJourneyBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[0]);
}
// ===================================================================

class WalkingRouteSegment::_Internal {
 public:
};

WalkingRouteSegment::WalkingRouteSegment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.WalkingRouteSegment)
}
WalkingRouteSegment::WalkingRouteSegment(const WalkingRouteSegment& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.WalkingRouteSegment)
}
inline void WalkingRouteSegment::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lane_id_){0},
      decltype(_impl_.moving_direction_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WalkingRouteSegment::~WalkingRouteSegment() {
  // @@protoc_insertion_point(destructor:city.routing.v2.WalkingRouteSegment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WalkingRouteSegment::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void WalkingRouteSegment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WalkingRouteSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.WalkingRouteSegment)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lane_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.moving_direction_) -
      reinterpret_cast<char*>(&_impl_.lane_id_)) + sizeof(_impl_.moving_direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WalkingRouteSegment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> WalkingRouteSegment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WalkingRouteSegment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .city.routing.v2.MovingDirection moving_direction = 2 [json_name = "movingDirection"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WalkingRouteSegment, _impl_.moving_direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.moving_direction_)}},
    // int32 lane_id = 1 [json_name = "laneId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WalkingRouteSegment, _impl_.lane_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.lane_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 lane_id = 1 [json_name = "laneId"];
    {PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.lane_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .city.routing.v2.MovingDirection moving_direction = 2 [json_name = "movingDirection"];
    {PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.moving_direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WalkingRouteSegment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.WalkingRouteSegment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 lane_id = 1 [json_name = "laneId"];
  if (this->_internal_lane_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_lane_id(), target);
  }

  // .city.routing.v2.MovingDirection moving_direction = 2 [json_name = "movingDirection"];
  if (this->_internal_moving_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_moving_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.WalkingRouteSegment)
  return target;
}

::size_t WalkingRouteSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.WalkingRouteSegment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 lane_id = 1 [json_name = "laneId"];
  if (this->_internal_lane_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lane_id());
  }

  // .city.routing.v2.MovingDirection moving_direction = 2 [json_name = "movingDirection"];
  if (this->_internal_moving_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_moving_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WalkingRouteSegment::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WalkingRouteSegment::MergeImpl
};
const ::google::protobuf::Message::ClassData*WalkingRouteSegment::GetClassData() const { return &_class_data_; }


void WalkingRouteSegment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WalkingRouteSegment*>(&to_msg);
  auto& from = static_cast<const WalkingRouteSegment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.WalkingRouteSegment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lane_id() != 0) {
    _this->_internal_set_lane_id(from._internal_lane_id());
  }
  if (from._internal_moving_direction() != 0) {
    _this->_internal_set_moving_direction(from._internal_moving_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WalkingRouteSegment::CopyFrom(const WalkingRouteSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.WalkingRouteSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WalkingRouteSegment::IsInitialized() const {
  return true;
}

void WalkingRouteSegment::InternalSwap(WalkingRouteSegment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.moving_direction_)
      + sizeof(WalkingRouteSegment::_impl_.moving_direction_)
      - PROTOBUF_FIELD_OFFSET(WalkingRouteSegment, _impl_.lane_id_)>(
          reinterpret_cast<char*>(&_impl_.lane_id_),
          reinterpret_cast<char*>(&other->_impl_.lane_id_));
}

::google::protobuf::Metadata WalkingRouteSegment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[1]);
}
// ===================================================================

class WalkingJourneyBody::_Internal {
 public:
};

WalkingJourneyBody::WalkingJourneyBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.WalkingJourneyBody)
}
WalkingJourneyBody::WalkingJourneyBody(const WalkingJourneyBody& from) : ::google::protobuf::Message() {
  WalkingJourneyBody* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.route_){from._impl_.route_},
      decltype(_impl_.eta_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.eta_ = from._impl_.eta_;

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.WalkingJourneyBody)
}
inline void WalkingJourneyBody::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.route_){arena},
      decltype(_impl_.eta_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WalkingJourneyBody::~WalkingJourneyBody() {
  // @@protoc_insertion_point(destructor:city.routing.v2.WalkingJourneyBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WalkingJourneyBody::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.route_.~RepeatedPtrField();
}
void WalkingJourneyBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WalkingJourneyBody::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.WalkingJourneyBody)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_route()->Clear();
  _impl_.eta_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WalkingJourneyBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> WalkingJourneyBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WalkingJourneyBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double eta = 2 [json_name = "eta"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(WalkingJourneyBody, _impl_.eta_)}},
    // repeated .city.routing.v2.WalkingRouteSegment route = 1 [json_name = "route"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WalkingJourneyBody, _impl_.route_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.routing.v2.WalkingRouteSegment route = 1 [json_name = "route"];
    {PROTOBUF_FIELD_OFFSET(WalkingJourneyBody, _impl_.route_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double eta = 2 [json_name = "eta"];
    {PROTOBUF_FIELD_OFFSET(WalkingJourneyBody, _impl_.eta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::routing::v2::WalkingRouteSegment>()},
  }}, {{
  }},
};

::uint8_t* WalkingJourneyBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.WalkingJourneyBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.routing.v2.WalkingRouteSegment route = 1 [json_name = "route"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_route_size()); i < n; i++) {
    const auto& repfield = this->_internal_route().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // double eta = 2 [json_name = "eta"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = this->_internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_eta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.WalkingJourneyBody)
  return target;
}

::size_t WalkingJourneyBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.WalkingJourneyBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.WalkingRouteSegment route = 1 [json_name = "route"];
  total_size += 1UL * this->_internal_route_size();
  for (const auto& msg : this->_internal_route()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // double eta = 2 [json_name = "eta"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = this->_internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WalkingJourneyBody::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WalkingJourneyBody::MergeImpl
};
const ::google::protobuf::Message::ClassData*WalkingJourneyBody::GetClassData() const { return &_class_data_; }


void WalkingJourneyBody::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WalkingJourneyBody*>(&to_msg);
  auto& from = static_cast<const WalkingJourneyBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.WalkingJourneyBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_route()->MergeFrom(from._internal_route());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_eta = from._internal_eta();
  ::uint64_t raw_eta;
  memcpy(&raw_eta, &tmp_eta, sizeof(tmp_eta));
  if (raw_eta != 0) {
    _this->_internal_set_eta(from._internal_eta());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WalkingJourneyBody::CopyFrom(const WalkingJourneyBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.WalkingJourneyBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WalkingJourneyBody::IsInitialized() const {
  return true;
}

void WalkingJourneyBody::InternalSwap(WalkingJourneyBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.route_.InternalSwap(&other->_impl_.route_);
        swap(_impl_.eta_, other->_impl_.eta_);
}

::google::protobuf::Metadata WalkingJourneyBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[2]);
}
// ===================================================================

class BusJourneyBody::_Internal {
 public:
};

BusJourneyBody::BusJourneyBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.BusJourneyBody)
}
BusJourneyBody::BusJourneyBody(const BusJourneyBody& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.routing.v2.BusJourneyBody)
}
inline void BusJourneyBody::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.line_id_){0},
      decltype(_impl_.start_station_id_){0},
      decltype(_impl_.end_station_id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BusJourneyBody::~BusJourneyBody() {
  // @@protoc_insertion_point(destructor:city.routing.v2.BusJourneyBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BusJourneyBody::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void BusJourneyBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BusJourneyBody::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.BusJourneyBody)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.line_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.end_station_id_) -
      reinterpret_cast<char*>(&_impl_.line_id_)) + sizeof(_impl_.end_station_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BusJourneyBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BusJourneyBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BusJourneyBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 line_id = 1 [json_name = "lineId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusJourneyBody, _impl_.line_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.line_id_)}},
    // int32 start_station_id = 2 [json_name = "startStationId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusJourneyBody, _impl_.start_station_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.start_station_id_)}},
    // int32 end_station_id = 3 [json_name = "endStationId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusJourneyBody, _impl_.end_station_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.end_station_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 line_id = 1 [json_name = "lineId"];
    {PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.line_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 start_station_id = 2 [json_name = "startStationId"];
    {PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.start_station_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 end_station_id = 3 [json_name = "endStationId"];
    {PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.end_station_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BusJourneyBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.BusJourneyBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 line_id = 1 [json_name = "lineId"];
  if (this->_internal_line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_line_id(), target);
  }

  // int32 start_station_id = 2 [json_name = "startStationId"];
  if (this->_internal_start_station_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_start_station_id(), target);
  }

  // int32 end_station_id = 3 [json_name = "endStationId"];
  if (this->_internal_end_station_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_end_station_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.BusJourneyBody)
  return target;
}

::size_t BusJourneyBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.BusJourneyBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 line_id = 1 [json_name = "lineId"];
  if (this->_internal_line_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_line_id());
  }

  // int32 start_station_id = 2 [json_name = "startStationId"];
  if (this->_internal_start_station_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_start_station_id());
  }

  // int32 end_station_id = 3 [json_name = "endStationId"];
  if (this->_internal_end_station_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_end_station_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BusJourneyBody::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BusJourneyBody::MergeImpl
};
const ::google::protobuf::Message::ClassData*BusJourneyBody::GetClassData() const { return &_class_data_; }


void BusJourneyBody::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BusJourneyBody*>(&to_msg);
  auto& from = static_cast<const BusJourneyBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.BusJourneyBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_line_id() != 0) {
    _this->_internal_set_line_id(from._internal_line_id());
  }
  if (from._internal_start_station_id() != 0) {
    _this->_internal_set_start_station_id(from._internal_start_station_id());
  }
  if (from._internal_end_station_id() != 0) {
    _this->_internal_set_end_station_id(from._internal_end_station_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BusJourneyBody::CopyFrom(const BusJourneyBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.BusJourneyBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BusJourneyBody::IsInitialized() const {
  return true;
}

void BusJourneyBody::InternalSwap(BusJourneyBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.end_station_id_)
      + sizeof(BusJourneyBody::_impl_.end_station_id_)
      - PROTOBUF_FIELD_OFFSET(BusJourneyBody, _impl_.line_id_)>(
          reinterpret_cast<char*>(&_impl_.line_id_),
          reinterpret_cast<char*>(&other->_impl_.line_id_));
}

::google::protobuf::Metadata BusJourneyBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[3]);
}
// ===================================================================

class Journey::_Internal {
 public:
  using HasBits = decltype(std::declval<Journey>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Journey, _impl_._has_bits_);
  static const ::city::routing::v2::DrivingJourneyBody& driving(const Journey* msg);
  static void set_has_driving(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::city::routing::v2::WalkingJourneyBody& walking(const Journey* msg);
  static void set_has_walking(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::city::routing::v2::BusJourneyBody& by_bus(const Journey* msg);
  static void set_has_by_bus(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::city::routing::v2::DrivingJourneyBody& Journey::_Internal::driving(const Journey* msg) {
  return *msg->_impl_.driving_;
}
const ::city::routing::v2::WalkingJourneyBody& Journey::_Internal::walking(const Journey* msg) {
  return *msg->_impl_.walking_;
}
const ::city::routing::v2::BusJourneyBody& Journey::_Internal::by_bus(const Journey* msg) {
  return *msg->_impl_.by_bus_;
}
Journey::Journey(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.Journey)
}
Journey::Journey(const Journey& from) : ::google::protobuf::Message() {
  Journey* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.driving_){nullptr},
      decltype(_impl_.walking_){nullptr},
      decltype(_impl_.by_bus_){nullptr},
      decltype(_impl_.type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.driving_ = new ::city::routing::v2::DrivingJourneyBody(*from._impl_.driving_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.walking_ = new ::city::routing::v2::WalkingJourneyBody(*from._impl_.walking_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.by_bus_ = new ::city::routing::v2::BusJourneyBody(*from._impl_.by_bus_);
  }
  _this->_impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.Journey)
}
inline void Journey::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.driving_){nullptr},
      decltype(_impl_.walking_){nullptr},
      decltype(_impl_.by_bus_){nullptr},
      decltype(_impl_.type_){0},
  };
}
Journey::~Journey() {
  // @@protoc_insertion_point(destructor:city.routing.v2.Journey)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Journey::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.driving_;
  if (this != internal_default_instance()) delete _impl_.walking_;
  if (this != internal_default_instance()) delete _impl_.by_bus_;
}
void Journey::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Journey::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.Journey)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.driving_ != nullptr);
      _impl_.driving_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.walking_ != nullptr);
      _impl_.walking_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.by_bus_ != nullptr);
      _impl_.by_bus_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Journey::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> Journey::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Journey, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Journey_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .city.routing.v2.BusJourneyBody by_bus = 4 [json_name = "byBus"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(Journey, _impl_.by_bus_)}},
    // .city.routing.v2.JourneyType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Journey, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Journey, _impl_.type_)}},
    // optional .city.routing.v2.DrivingJourneyBody driving = 2 [json_name = "driving"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Journey, _impl_.driving_)}},
    // optional .city.routing.v2.WalkingJourneyBody walking = 3 [json_name = "walking"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Journey, _impl_.walking_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .city.routing.v2.JourneyType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Journey, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .city.routing.v2.DrivingJourneyBody driving = 2 [json_name = "driving"];
    {PROTOBUF_FIELD_OFFSET(Journey, _impl_.driving_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .city.routing.v2.WalkingJourneyBody walking = 3 [json_name = "walking"];
    {PROTOBUF_FIELD_OFFSET(Journey, _impl_.walking_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .city.routing.v2.BusJourneyBody by_bus = 4 [json_name = "byBus"];
    {PROTOBUF_FIELD_OFFSET(Journey, _impl_.by_bus_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::routing::v2::DrivingJourneyBody>()},
    {::_pbi::TcParser::GetTable<::city::routing::v2::WalkingJourneyBody>()},
    {::_pbi::TcParser::GetTable<::city::routing::v2::BusJourneyBody>()},
  }}, {{
  }},
};

::uint8_t* Journey::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.Journey)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .city.routing.v2.JourneyType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .city.routing.v2.DrivingJourneyBody driving = 2 [json_name = "driving"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::driving(this),
        _Internal::driving(this).GetCachedSize(), target, stream);
  }

  // optional .city.routing.v2.WalkingJourneyBody walking = 3 [json_name = "walking"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::walking(this),
        _Internal::walking(this).GetCachedSize(), target, stream);
  }

  // optional .city.routing.v2.BusJourneyBody by_bus = 4 [json_name = "byBus"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::by_bus(this),
        _Internal::by_bus(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.Journey)
  return target;
}

::size_t Journey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.Journey)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .city.routing.v2.DrivingJourneyBody driving = 2 [json_name = "driving"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.driving_);
    }

    // optional .city.routing.v2.WalkingJourneyBody walking = 3 [json_name = "walking"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.walking_);
    }

    // optional .city.routing.v2.BusJourneyBody by_bus = 4 [json_name = "byBus"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.by_bus_);
    }

  }
  // .city.routing.v2.JourneyType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Journey::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Journey::MergeImpl
};
const ::google::protobuf::Message::ClassData*Journey::GetClassData() const { return &_class_data_; }


void Journey::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Journey*>(&to_msg);
  auto& from = static_cast<const Journey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.Journey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_driving()->::city::routing::v2::DrivingJourneyBody::MergeFrom(
          from._internal_driving());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_walking()->::city::routing::v2::WalkingJourneyBody::MergeFrom(
          from._internal_walking());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_by_bus()->::city::routing::v2::BusJourneyBody::MergeFrom(
          from._internal_by_bus());
    }
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Journey::CopyFrom(const Journey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.Journey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Journey::IsInitialized() const {
  return true;
}

void Journey::InternalSwap(Journey* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Journey, _impl_.type_)
      + sizeof(Journey::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Journey, _impl_.driving_)>(
          reinterpret_cast<char*>(&_impl_.driving_),
          reinterpret_cast<char*>(&other->_impl_.driving_));
}

::google::protobuf::Metadata Journey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[4]);
}
// ===================================================================

class BusLine::_Internal {
 public:
};

BusLine::BusLine(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.BusLine)
}
BusLine::BusLine(const BusLine& from) : ::google::protobuf::Message() {
  BusLine* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){from._impl_.stops_},
      /* _impl_._stops_cached_byte_size_ = */ {0},
      decltype(_impl_.distances_){from._impl_.distances_},
      decltype(_impl_.line_id_){},
      decltype(_impl_.interval_){},
      decltype(_impl_.count_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.line_id_, &from._impl_.line_id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.line_id_)) + sizeof(_impl_.count_));

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.BusLine)
}
inline void BusLine::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.stops_){arena},
      /* _impl_._stops_cached_byte_size_ = */ {0},
      decltype(_impl_.distances_){arena},
      decltype(_impl_.line_id_){0},
      decltype(_impl_.interval_){0},
      decltype(_impl_.count_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BusLine::~BusLine() {
  // @@protoc_insertion_point(destructor:city.routing.v2.BusLine)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BusLine::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stops_.~RepeatedField();
  _impl_.distances_.~RepeatedField();
}
void BusLine::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BusLine::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.BusLine)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stops()->Clear();
  _internal_mutable_distances()->Clear();
  ::memset(&_impl_.line_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.line_id_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BusLine::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> BusLine::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BusLine_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 line_id = 1 [json_name = "lineId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusLine, _impl_.line_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BusLine, _impl_.line_id_)}},
    // repeated int32 stops = 2 [json_name = "stops"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BusLine, _impl_.stops_)}},
    // repeated double distances = 3 [json_name = "distances"];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BusLine, _impl_.distances_)}},
    // int32 interval = 4 [json_name = "interval"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusLine, _impl_.interval_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BusLine, _impl_.interval_)}},
    // int32 count = 5 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BusLine, _impl_.count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BusLine, _impl_.count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 line_id = 1 [json_name = "lineId"];
    {PROTOBUF_FIELD_OFFSET(BusLine, _impl_.line_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 stops = 2 [json_name = "stops"];
    {PROTOBUF_FIELD_OFFSET(BusLine, _impl_.stops_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated double distances = 3 [json_name = "distances"];
    {PROTOBUF_FIELD_OFFSET(BusLine, _impl_.distances_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // int32 interval = 4 [json_name = "interval"];
    {PROTOBUF_FIELD_OFFSET(BusLine, _impl_.interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 count = 5 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(BusLine, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BusLine::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.BusLine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 line_id = 1 [json_name = "lineId"];
  if (this->_internal_line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_line_id(), target);
  }

  // repeated int32 stops = 2 [json_name = "stops"];
  {
    int byte_size = _impl_._stops_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(2, _internal_stops(),
                                                 byte_size, target);
    }
  }

  // repeated double distances = 3 [json_name = "distances"];
  if (this->_internal_distances_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_distances(), target);
  }

  // int32 interval = 4 [json_name = "interval"];
  if (this->_internal_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_interval(), target);
  }

  // int32 count = 5 [json_name = "count"];
  if (this->_internal_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.BusLine)
  return target;
}

::size_t BusLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.BusLine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 stops = 2 [json_name = "stops"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_stops())
    ;
    _impl_._stops_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double distances = 3 [json_name = "distances"];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_distances_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 line_id = 1 [json_name = "lineId"];
  if (this->_internal_line_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_line_id());
  }

  // int32 interval = 4 [json_name = "interval"];
  if (this->_internal_interval() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_interval());
  }

  // int32 count = 5 [json_name = "count"];
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BusLine::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BusLine::MergeImpl
};
const ::google::protobuf::Message::ClassData*BusLine::GetClassData() const { return &_class_data_; }


void BusLine::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BusLine*>(&to_msg);
  auto& from = static_cast<const BusLine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.BusLine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stops()->MergeFrom(from._internal_stops());
  _this->_internal_mutable_distances()->MergeFrom(from._internal_distances());
  if (from._internal_line_id() != 0) {
    _this->_internal_set_line_id(from._internal_line_id());
  }
  if (from._internal_interval() != 0) {
    _this->_internal_set_interval(from._internal_interval());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BusLine::CopyFrom(const BusLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.BusLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BusLine::IsInitialized() const {
  return true;
}

void BusLine::InternalSwap(BusLine* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stops_.InternalSwap(&other->_impl_.stops_);
  _impl_.distances_.InternalSwap(&other->_impl_.distances_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BusLine, _impl_.count_)
      + sizeof(BusLine::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(BusLine, _impl_.line_id_)>(
          reinterpret_cast<char*>(&_impl_.line_id_),
          reinterpret_cast<char*>(&other->_impl_.line_id_));
}

::google::protobuf::Metadata BusLine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[5]);
}
// ===================================================================

class BusLines::_Internal {
 public:
};

BusLines::BusLines(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.BusLines)
}
BusLines::BusLines(const BusLines& from) : ::google::protobuf::Message() {
  BusLines* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){from._impl_.lines_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.BusLines)
}
inline void BusLines::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BusLines::~BusLines() {
  // @@protoc_insertion_point(destructor:city.routing.v2.BusLines)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BusLines::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lines_.~RepeatedPtrField();
}
void BusLines::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BusLines::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.BusLines)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_lines()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BusLines::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BusLines::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BusLines_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.routing.v2.BusLine lines = 1 [json_name = "lines"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BusLines, _impl_.lines_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.routing.v2.BusLine lines = 1 [json_name = "lines"];
    {PROTOBUF_FIELD_OFFSET(BusLines, _impl_.lines_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::routing::v2::BusLine>()},
  }}, {{
  }},
};

::uint8_t* BusLines::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.BusLines)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.routing.v2.BusLine lines = 1 [json_name = "lines"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_lines_size()); i < n; i++) {
    const auto& repfield = this->_internal_lines().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.BusLines)
  return target;
}

::size_t BusLines::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.BusLines)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.BusLine lines = 1 [json_name = "lines"];
  total_size += 1UL * this->_internal_lines_size();
  for (const auto& msg : this->_internal_lines()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BusLines::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BusLines::MergeImpl
};
const ::google::protobuf::Message::ClassData*BusLines::GetClassData() const { return &_class_data_; }


void BusLines::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BusLines*>(&to_msg);
  auto& from = static_cast<const BusLines&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.BusLines)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BusLines::CopyFrom(const BusLines& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.BusLines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BusLines::IsInitialized() const {
  return true;
}

void BusLines::InternalSwap(BusLines* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lines_.InternalSwap(&other->_impl_.lines_);
}

::google::protobuf::Metadata BusLines::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[6]);
}
// ===================================================================

class RoadStatus::_Internal {
 public:
};

RoadStatus::RoadStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.RoadStatus)
}
RoadStatus::RoadStatus(const RoadStatus& from) : ::google::protobuf::Message() {
  RoadStatus* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){from._impl_.speed_},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.RoadStatus)
}
inline void RoadStatus::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.speed_){arena},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
RoadStatus::~RoadStatus() {
  // @@protoc_insertion_point(destructor:city.routing.v2.RoadStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoadStatus::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.speed_.~RepeatedField();
}
void RoadStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RoadStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.RoadStatus)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_speed()->Clear();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoadStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RoadStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RoadStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double speed = 2 [json_name = "speed"];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoadStatus, _impl_.speed_)}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoadStatus, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RoadStatus, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(RoadStatus, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated double speed = 2 [json_name = "speed"];
    {PROTOBUF_FIELD_OFFSET(RoadStatus, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RoadStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.RoadStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated double speed = 2 [json_name = "speed"];
  if (this->_internal_speed_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.RoadStatus)
  return target;
}

::size_t RoadStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.RoadStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double speed = 2 [json_name = "speed"];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_speed_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RoadStatus::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RoadStatus::MergeImpl
};
const ::google::protobuf::Message::ClassData*RoadStatus::GetClassData() const { return &_class_data_; }


void RoadStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RoadStatus*>(&to_msg);
  auto& from = static_cast<const RoadStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.RoadStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_speed()->MergeFrom(from._internal_speed());
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoadStatus::CopyFrom(const RoadStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.RoadStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoadStatus::IsInitialized() const {
  return true;
}

void RoadStatus::InternalSwap(RoadStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.speed_.InternalSwap(&other->_impl_.speed_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata RoadStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[7]);
}
// ===================================================================

class RoadStatuses::_Internal {
 public:
};

RoadStatuses::RoadStatuses(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.routing.v2.RoadStatuses)
}
RoadStatuses::RoadStatuses(const RoadStatuses& from) : ::google::protobuf::Message() {
  RoadStatuses* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.road_statuses_){from._impl_.road_statuses_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.routing.v2.RoadStatuses)
}
inline void RoadStatuses::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.road_statuses_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
RoadStatuses::~RoadStatuses() {
  // @@protoc_insertion_point(destructor:city.routing.v2.RoadStatuses)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RoadStatuses::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.road_statuses_.~RepeatedPtrField();
}
void RoadStatuses::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RoadStatuses::Clear() {
// @@protoc_insertion_point(message_clear_start:city.routing.v2.RoadStatuses)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_road_statuses()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RoadStatuses::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RoadStatuses::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RoadStatuses_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.routing.v2.RoadStatus road_statuses = 1 [json_name = "roadStatuses"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoadStatuses, _impl_.road_statuses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.routing.v2.RoadStatus road_statuses = 1 [json_name = "roadStatuses"];
    {PROTOBUF_FIELD_OFFSET(RoadStatuses, _impl_.road_statuses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::routing::v2::RoadStatus>()},
  }}, {{
  }},
};

::uint8_t* RoadStatuses::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.routing.v2.RoadStatuses)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.routing.v2.RoadStatus road_statuses = 1 [json_name = "roadStatuses"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_road_statuses_size()); i < n; i++) {
    const auto& repfield = this->_internal_road_statuses().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.routing.v2.RoadStatuses)
  return target;
}

::size_t RoadStatuses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.routing.v2.RoadStatuses)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.routing.v2.RoadStatus road_statuses = 1 [json_name = "roadStatuses"];
  total_size += 1UL * this->_internal_road_statuses_size();
  for (const auto& msg : this->_internal_road_statuses()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RoadStatuses::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RoadStatuses::MergeImpl
};
const ::google::protobuf::Message::ClassData*RoadStatuses::GetClassData() const { return &_class_data_; }


void RoadStatuses::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RoadStatuses*>(&to_msg);
  auto& from = static_cast<const RoadStatuses&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.routing.v2.RoadStatuses)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_road_statuses()->MergeFrom(from._internal_road_statuses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoadStatuses::CopyFrom(const RoadStatuses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.routing.v2.RoadStatuses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RoadStatuses::IsInitialized() const {
  return true;
}

void RoadStatuses::InternalSwap(RoadStatuses* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.road_statuses_.InternalSwap(&other->_impl_.road_statuses_);
}

::google::protobuf::Metadata RoadStatuses::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_getter, &descriptor_table_city_2frouting_2fv2_2frouting_2eproto_once,
      file_level_metadata_city_2frouting_2fv2_2frouting_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace routing
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

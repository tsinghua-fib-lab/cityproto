// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/agentcomm/v1/agent_service.proto

#include "city/agentcomm/v1/agent_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace agentcomm {
namespace v1 {
PROTOBUF_CONSTEXPR CommunicateRequest::CommunicateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.source_agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.target_agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicateRequestDefaultTypeInternal() {}
  union {
    CommunicateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicateRequestDefaultTypeInternal _CommunicateRequest_default_instance_;
PROTOBUF_CONSTEXPR CommunicateResponse::CommunicateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommunicateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunicateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunicateResponseDefaultTypeInternal() {}
  union {
    CommunicateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunicateResponseDefaultTypeInternal _CommunicateResponse_default_instance_;
}  // namespace v1
}  // namespace agentcomm
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateRequest, _impl_.source_agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateRequest, _impl_.target_agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateRequest, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agentcomm::v1::CommunicateResponse, _impl_.message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::agentcomm::v1::CommunicateRequest)},
  { 9, -1, -1, sizeof(::city::agentcomm::v1::CommunicateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::agentcomm::v1::_CommunicateRequest_default_instance_._instance,
  &::city::agentcomm::v1::_CommunicateResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%city/agentcomm/v1/agent_service.proto\022"
  "\021city.agentcomm.v1\"x\n\022CommunicateRequest"
  "\022&\n\017source_agent_id\030\001 \001(\tR\rsourceAgentId"
  "\022&\n\017target_agent_id\030\002 \001(\tR\rtargetAgentId"
  "\022\022\n\004data\030\003 \001(\tR\004data\"/\n\023CommunicateRespo"
  "nse\022\030\n\007message\030\001 \001(\tR\007message2p\n\014AgentSe"
  "rvice\022`\n\013Communicate\022%.city.agentcomm.v1"
  ".CommunicateRequest\032&.city.agentcomm.v1."
  "CommunicateResponse(\0010\001B\317\001\n\025com.city.age"
  "ntcomm.v1B\021AgentServiceProtoP\001Z=git.fibl"
  "ab.net/sim/protos/v2/go/city/agentcomm/v"
  "1;agentcommv1\242\002\003CAX\252\002\021City.Agentcomm.V1\312"
  "\002\021City\\Agentcomm\\V1\342\002\035City\\Agentcomm\\V1\\"
  "GPBMetadata\352\002\023City::Agentcomm::V1b\006proto"
  "3"
  ;
static ::_pbi::once_flag descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto = {
    false, false, 561, descriptor_table_protodef_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto,
    "city/agentcomm/v1/agent_service.proto",
    &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto::offsets,
    file_level_metadata_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto, file_level_enum_descriptors_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto,
    file_level_service_descriptors_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto(&descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto);
namespace city {
namespace agentcomm {
namespace v1 {

// ===================================================================

class CommunicateRequest::_Internal {
 public:
};

CommunicateRequest::CommunicateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agentcomm.v1.CommunicateRequest)
}
CommunicateRequest::CommunicateRequest(const CommunicateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.source_agent_id_){}
    , decltype(_impl_.target_agent_id_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.source_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_agent_id().empty()) {
    _this->_impl_.source_agent_id_.Set(from._internal_source_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.target_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_target_agent_id().empty()) {
    _this->_impl_.target_agent_id_.Set(from._internal_target_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.agentcomm.v1.CommunicateRequest)
}

inline void CommunicateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.source_agent_id_){}
    , decltype(_impl_.target_agent_id_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.source_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.target_agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.target_agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommunicateRequest::~CommunicateRequest() {
  // @@protoc_insertion_point(destructor:city.agentcomm.v1.CommunicateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.source_agent_id_.Destroy();
  _impl_.target_agent_id_.Destroy();
  _impl_.data_.Destroy();
}

void CommunicateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agentcomm.v1.CommunicateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_agent_id_.ClearToEmpty();
  _impl_.target_agent_id_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string source_agent_id = 1 [json_name = "sourceAgentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_source_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.agentcomm.v1.CommunicateRequest.source_agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string target_agent_id = 2 [json_name = "targetAgentId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_target_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.agentcomm.v1.CommunicateRequest.target_agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string data = 3 [json_name = "data"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.agentcomm.v1.CommunicateRequest.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agentcomm.v1.CommunicateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string source_agent_id = 1 [json_name = "sourceAgentId"];
  if (!this->_internal_source_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_agent_id().data(), static_cast<int>(this->_internal_source_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.agentcomm.v1.CommunicateRequest.source_agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_source_agent_id(), target);
  }

  // string target_agent_id = 2 [json_name = "targetAgentId"];
  if (!this->_internal_target_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_agent_id().data(), static_cast<int>(this->_internal_target_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.agentcomm.v1.CommunicateRequest.target_agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target_agent_id(), target);
  }

  // string data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.agentcomm.v1.CommunicateRequest.data");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agentcomm.v1.CommunicateRequest)
  return target;
}

size_t CommunicateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agentcomm.v1.CommunicateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_agent_id = 1 [json_name = "sourceAgentId"];
  if (!this->_internal_source_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_agent_id());
  }

  // string target_agent_id = 2 [json_name = "targetAgentId"];
  if (!this->_internal_target_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_agent_id());
  }

  // string data = 3 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicateRequest::GetClassData() const { return &_class_data_; }


void CommunicateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicateRequest*>(&to_msg);
  auto& from = static_cast<const CommunicateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agentcomm.v1.CommunicateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_agent_id().empty()) {
    _this->_internal_set_source_agent_id(from._internal_source_agent_id());
  }
  if (!from._internal_target_agent_id().empty()) {
    _this->_internal_set_target_agent_id(from._internal_target_agent_id());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicateRequest::CopyFrom(const CommunicateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agentcomm.v1.CommunicateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicateRequest::IsInitialized() const {
  return true;
}

void CommunicateRequest::InternalSwap(CommunicateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.source_agent_id_, lhs_arena,
      &other->_impl_.source_agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.target_agent_id_, lhs_arena,
      &other->_impl_.target_agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto[0]);
}

// ===================================================================

class CommunicateResponse::_Internal {
 public:
};

CommunicateResponse::CommunicateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agentcomm.v1.CommunicateResponse)
}
CommunicateResponse::CommunicateResponse(const CommunicateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommunicateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.agentcomm.v1.CommunicateResponse)
}

inline void CommunicateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommunicateResponse::~CommunicateResponse() {
  // @@protoc_insertion_point(destructor:city.agentcomm.v1.CommunicateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommunicateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void CommunicateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommunicateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agentcomm.v1.CommunicateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommunicateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1 [json_name = "message"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.agentcomm.v1.CommunicateResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommunicateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agentcomm.v1.CommunicateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.agentcomm.v1.CommunicateResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agentcomm.v1.CommunicateResponse)
  return target;
}

size_t CommunicateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agentcomm.v1.CommunicateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommunicateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommunicateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommunicateResponse::GetClassData() const { return &_class_data_; }


void CommunicateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommunicateResponse*>(&to_msg);
  auto& from = static_cast<const CommunicateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agentcomm.v1.CommunicateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommunicateResponse::CopyFrom(const CommunicateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agentcomm.v1.CommunicateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommunicateResponse::IsInitialized() const {
  return true;
}

void CommunicateResponse::InternalSwap(CommunicateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CommunicateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagentcomm_2fv1_2fagent_5fservice_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace agentcomm
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::agentcomm::v1::CommunicateRequest*
Arena::CreateMaybeMessage< ::city::agentcomm::v1::CommunicateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agentcomm::v1::CommunicateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agentcomm::v1::CommunicateResponse*
Arena::CreateMaybeMessage< ::city::agentcomm::v1::CommunicateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agentcomm::v1::CommunicateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

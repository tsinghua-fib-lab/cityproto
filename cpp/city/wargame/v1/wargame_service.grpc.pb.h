// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: city/wargame/v1/wargame_service.proto
#ifndef GRPC_city_2fwargame_2fv1_2fwargame_5fservice_2eproto__INCLUDED
#define GRPC_city_2fwargame_2fv1_2fwargame_5fservice_2eproto__INCLUDED

#include "city/wargame/v1/wargame_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace city {
namespace wargame {
namespace v1 {

class WarGameService final {
 public:
  static constexpr char const* service_full_name() {
    return "city.wargame.v1.WarGameService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 地图选点
    virtual ::grpc::Status PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::city::wargame::v1::PickPointsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>> AsyncPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>>(AsyncPickPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>> PrepareAsyncPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>>(PrepareAsyncPickPointsRaw(context, request, cq));
    }
    // 获取当前轮选点
    virtual ::grpc::Status GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::city::wargame::v1::GetPickPointsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>> AsyncGetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>>(AsyncGetPickPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>> PrepareAsyncGetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>>(PrepareAsyncGetPickPointsRaw(context, request, cq));
    }
    // 指定防守方条令
    virtual ::grpc::Status GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::city::wargame::v1::GiveDefenseOrderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>> AsyncGiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>>(AsyncGiveDefenseOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>> PrepareAsyncGiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>>(PrepareAsyncGiveDefenseOrderRaw(context, request, cq));
    }
    // 分值权重设定
    virtual ::grpc::Status SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::city::wargame::v1::SetScoreWeightResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>> AsyncSetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>>(AsyncSetScoreWeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>> PrepareAsyncSetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>>(PrepareAsyncSetScoreWeightRaw(context, request, cq));
    }
    // 打击历史获取
    virtual ::grpc::Status GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::city::wargame::v1::GetHitHistoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>> AsyncGetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>>(AsyncGetHitHistoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>> PrepareAsyncGetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>>(PrepareAsyncGetHitHistoryRaw(context, request, cq));
    }
    // 推荐选点获取
    virtual ::grpc::Status GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::city::wargame::v1::GetRecoPointsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>> AsyncGetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>>(AsyncGetRecoPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>> PrepareAsyncGetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>>(PrepareAsyncGetRecoPointsRaw(context, request, cq));
    }
    // 当前步与状态获取
    virtual ::grpc::Status GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::city::wargame::v1::GetStepResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>> AsyncGetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>>(AsyncGetStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>> PrepareAsyncGetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>>(PrepareAsyncGetStepRaw(context, request, cq));
    }
    // 人口损伤人数和aoi的id获取
    virtual ::grpc::Status GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::city::wargame::v1::GetCasualtiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>> AsyncGetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>>(AsyncGetCasualtiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>> PrepareAsyncGetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>>(PrepareAsyncGetCasualtiesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 地图选点
      virtual void PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取当前轮选点
      virtual void GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 指定防守方条令
      virtual void GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 分值权重设定
      virtual void SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 打击历史获取
      virtual void GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 推荐选点获取
      virtual void GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 当前步与状态获取
      virtual void GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 人口损伤人数和aoi的id获取
      virtual void GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>* AsyncPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::PickPointsResponse>* PrepareAsyncPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>* AsyncGetPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetPickPointsResponse>* PrepareAsyncGetPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>* AsyncGiveDefenseOrderRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GiveDefenseOrderResponse>* PrepareAsyncGiveDefenseOrderRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>* AsyncSetScoreWeightRaw(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::SetScoreWeightResponse>* PrepareAsyncSetScoreWeightRaw(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>* AsyncGetHitHistoryRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetHitHistoryResponse>* PrepareAsyncGetHitHistoryRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>* AsyncGetRecoPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetRecoPointsResponse>* PrepareAsyncGetRecoPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>* AsyncGetStepRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetStepResponse>* PrepareAsyncGetStepRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>* AsyncGetCasualtiesRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::wargame::v1::GetCasualtiesResponse>* PrepareAsyncGetCasualtiesRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::city::wargame::v1::PickPointsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>> AsyncPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>>(AsyncPickPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>> PrepareAsyncPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>>(PrepareAsyncPickPointsRaw(context, request, cq));
    }
    ::grpc::Status GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::city::wargame::v1::GetPickPointsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>> AsyncGetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>>(AsyncGetPickPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>> PrepareAsyncGetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>>(PrepareAsyncGetPickPointsRaw(context, request, cq));
    }
    ::grpc::Status GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::city::wargame::v1::GiveDefenseOrderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>> AsyncGiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>>(AsyncGiveDefenseOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>> PrepareAsyncGiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>>(PrepareAsyncGiveDefenseOrderRaw(context, request, cq));
    }
    ::grpc::Status SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::city::wargame::v1::SetScoreWeightResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>> AsyncSetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>>(AsyncSetScoreWeightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>> PrepareAsyncSetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>>(PrepareAsyncSetScoreWeightRaw(context, request, cq));
    }
    ::grpc::Status GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::city::wargame::v1::GetHitHistoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>> AsyncGetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>>(AsyncGetHitHistoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>> PrepareAsyncGetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>>(PrepareAsyncGetHitHistoryRaw(context, request, cq));
    }
    ::grpc::Status GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::city::wargame::v1::GetRecoPointsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>> AsyncGetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>>(AsyncGetRecoPointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>> PrepareAsyncGetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>>(PrepareAsyncGetRecoPointsRaw(context, request, cq));
    }
    ::grpc::Status GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::city::wargame::v1::GetStepResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>> AsyncGetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>>(AsyncGetStepRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>> PrepareAsyncGetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>>(PrepareAsyncGetStepRaw(context, request, cq));
    }
    ::grpc::Status GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::city::wargame::v1::GetCasualtiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>> AsyncGetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>>(AsyncGetCasualtiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>> PrepareAsyncGetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>>(PrepareAsyncGetCasualtiesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response, std::function<void(::grpc::Status)>) override;
      void PickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPickPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response, std::function<void(::grpc::Status)>) override;
      void GiveDefenseOrder(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response, std::function<void(::grpc::Status)>) override;
      void SetScoreWeight(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetHitHistory(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRecoPoints(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response, std::function<void(::grpc::Status)>) override;
      void GetStep(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCasualties(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>* AsyncPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::PickPointsResponse>* PrepareAsyncPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::PickPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>* AsyncGetPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetPickPointsResponse>* PrepareAsyncGetPickPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetPickPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>* AsyncGiveDefenseOrderRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GiveDefenseOrderResponse>* PrepareAsyncGiveDefenseOrderRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>* AsyncSetScoreWeightRaw(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::SetScoreWeightResponse>* PrepareAsyncSetScoreWeightRaw(::grpc::ClientContext* context, const ::city::wargame::v1::SetScoreWeightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>* AsyncGetHitHistoryRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetHitHistoryResponse>* PrepareAsyncGetHitHistoryRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetHitHistoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>* AsyncGetRecoPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetRecoPointsResponse>* PrepareAsyncGetRecoPointsRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetRecoPointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>* AsyncGetStepRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetStepResponse>* PrepareAsyncGetStepRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetStepRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>* AsyncGetCasualtiesRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::wargame::v1::GetCasualtiesResponse>* PrepareAsyncGetCasualtiesRaw(::grpc::ClientContext* context, const ::city::wargame::v1::GetCasualtiesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PickPoints_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPickPoints_;
    const ::grpc::internal::RpcMethod rpcmethod_GiveDefenseOrder_;
    const ::grpc::internal::RpcMethod rpcmethod_SetScoreWeight_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHitHistory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecoPoints_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStep_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCasualties_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 地图选点
    virtual ::grpc::Status PickPoints(::grpc::ServerContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response);
    // 获取当前轮选点
    virtual ::grpc::Status GetPickPoints(::grpc::ServerContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response);
    // 指定防守方条令
    virtual ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response);
    // 分值权重设定
    virtual ::grpc::Status SetScoreWeight(::grpc::ServerContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response);
    // 打击历史获取
    virtual ::grpc::Status GetHitHistory(::grpc::ServerContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response);
    // 推荐选点获取
    virtual ::grpc::Status GetRecoPoints(::grpc::ServerContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response);
    // 当前步与状态获取
    virtual ::grpc::Status GetStep(::grpc::ServerContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response);
    // 人口损伤人数和aoi的id获取
    virtual ::grpc::Status GetCasualties(::grpc::ServerContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PickPoints() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPickPoints(::grpc::ServerContext* context, ::city::wargame::v1::PickPointsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::PickPointsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPickPoints(::grpc::ServerContext* context, ::city::wargame::v1::GetPickPointsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GetPickPointsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGiveDefenseOrder(::grpc::ServerContext* context, ::city::wargame::v1::GiveDefenseOrderRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GiveDefenseOrderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetScoreWeight(::grpc::ServerContext* context, ::city::wargame::v1::SetScoreWeightRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::SetScoreWeightResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHitHistory(::grpc::ServerContext* context, ::city::wargame::v1::GetHitHistoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GetHitHistoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecoPoints(::grpc::ServerContext* context, ::city::wargame::v1::GetRecoPointsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GetRecoPointsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetStep() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStep(::grpc::ServerContext* context, ::city::wargame::v1::GetStepRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GetStepResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCasualties() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCasualties(::grpc::ServerContext* context, ::city::wargame::v1::GetCasualtiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::wargame::v1::GetCasualtiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PickPoints<WithAsyncMethod_GetPickPoints<WithAsyncMethod_GiveDefenseOrder<WithAsyncMethod_SetScoreWeight<WithAsyncMethod_GetHitHistory<WithAsyncMethod_GetRecoPoints<WithAsyncMethod_GetStep<WithAsyncMethod_GetCasualties<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PickPoints() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::PickPointsRequest, ::city::wargame::v1::PickPointsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::PickPointsRequest* request, ::city::wargame::v1::PickPointsResponse* response) { return this->PickPoints(context, request, response); }));}
    void SetMessageAllocatorFor_PickPoints(
        ::grpc::MessageAllocator< ::city::wargame::v1::PickPointsRequest, ::city::wargame::v1::PickPointsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::PickPointsRequest, ::city::wargame::v1::PickPointsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PickPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetPickPointsRequest, ::city::wargame::v1::GetPickPointsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GetPickPointsRequest* request, ::city::wargame::v1::GetPickPointsResponse* response) { return this->GetPickPoints(context, request, response); }));}
    void SetMessageAllocatorFor_GetPickPoints(
        ::grpc::MessageAllocator< ::city::wargame::v1::GetPickPointsRequest, ::city::wargame::v1::GetPickPointsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetPickPointsRequest, ::city::wargame::v1::GetPickPointsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPickPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GiveDefenseOrderRequest, ::city::wargame::v1::GiveDefenseOrderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GiveDefenseOrderRequest* request, ::city::wargame::v1::GiveDefenseOrderResponse* response) { return this->GiveDefenseOrder(context, request, response); }));}
    void SetMessageAllocatorFor_GiveDefenseOrder(
        ::grpc::MessageAllocator< ::city::wargame::v1::GiveDefenseOrderRequest, ::city::wargame::v1::GiveDefenseOrderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GiveDefenseOrderRequest, ::city::wargame::v1::GiveDefenseOrderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GiveDefenseOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::SetScoreWeightRequest, ::city::wargame::v1::SetScoreWeightResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::SetScoreWeightRequest* request, ::city::wargame::v1::SetScoreWeightResponse* response) { return this->SetScoreWeight(context, request, response); }));}
    void SetMessageAllocatorFor_SetScoreWeight(
        ::grpc::MessageAllocator< ::city::wargame::v1::SetScoreWeightRequest, ::city::wargame::v1::SetScoreWeightResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::SetScoreWeightRequest, ::city::wargame::v1::SetScoreWeightResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetScoreWeight(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetHitHistoryRequest, ::city::wargame::v1::GetHitHistoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GetHitHistoryRequest* request, ::city::wargame::v1::GetHitHistoryResponse* response) { return this->GetHitHistory(context, request, response); }));}
    void SetMessageAllocatorFor_GetHitHistory(
        ::grpc::MessageAllocator< ::city::wargame::v1::GetHitHistoryRequest, ::city::wargame::v1::GetHitHistoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetHitHistoryRequest, ::city::wargame::v1::GetHitHistoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetHitHistory(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetRecoPointsRequest, ::city::wargame::v1::GetRecoPointsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GetRecoPointsRequest* request, ::city::wargame::v1::GetRecoPointsResponse* response) { return this->GetRecoPoints(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecoPoints(
        ::grpc::MessageAllocator< ::city::wargame::v1::GetRecoPointsRequest, ::city::wargame::v1::GetRecoPointsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetRecoPointsRequest, ::city::wargame::v1::GetRecoPointsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecoPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetStep() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetStepRequest, ::city::wargame::v1::GetStepResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GetStepRequest* request, ::city::wargame::v1::GetStepResponse* response) { return this->GetStep(context, request, response); }));}
    void SetMessageAllocatorFor_GetStep(
        ::grpc::MessageAllocator< ::city::wargame::v1::GetStepRequest, ::city::wargame::v1::GetStepResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetStepRequest, ::city::wargame::v1::GetStepResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStep(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCasualties() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetCasualtiesRequest, ::city::wargame::v1::GetCasualtiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::wargame::v1::GetCasualtiesRequest* request, ::city::wargame::v1::GetCasualtiesResponse* response) { return this->GetCasualties(context, request, response); }));}
    void SetMessageAllocatorFor_GetCasualties(
        ::grpc::MessageAllocator< ::city::wargame::v1::GetCasualtiesRequest, ::city::wargame::v1::GetCasualtiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::wargame::v1::GetCasualtiesRequest, ::city::wargame::v1::GetCasualtiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCasualties(
      ::grpc::CallbackServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_PickPoints<WithCallbackMethod_GetPickPoints<WithCallbackMethod_GiveDefenseOrder<WithCallbackMethod_SetScoreWeight<WithCallbackMethod_GetHitHistory<WithCallbackMethod_GetRecoPoints<WithCallbackMethod_GetStep<WithCallbackMethod_GetCasualties<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PickPoints() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetStep() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCasualties() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PickPoints() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPickPoints(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPickPoints(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGiveDefenseOrder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetScoreWeight(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHitHistory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecoPoints(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetStep() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStep(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCasualties() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCasualties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PickPoints() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PickPoints(context, request, response); }));
    }
    ~WithRawCallbackMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PickPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPickPoints(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPickPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GiveDefenseOrder(context, request, response); }));
    }
    ~WithRawCallbackMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GiveDefenseOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetScoreWeight(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetScoreWeight(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetHitHistory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetHitHistory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecoPoints(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecoPoints(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetStep() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetStep(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStep(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCasualties() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCasualties(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCasualties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PickPoints() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::PickPointsRequest, ::city::wargame::v1::PickPointsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::PickPointsRequest, ::city::wargame::v1::PickPointsResponse>* streamer) {
                       return this->StreamedPickPoints(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::PickPointsRequest* /*request*/, ::city::wargame::v1::PickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPickPoints(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::PickPointsRequest,::city::wargame::v1::PickPointsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPickPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPickPoints() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GetPickPointsRequest, ::city::wargame::v1::GetPickPointsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GetPickPointsRequest, ::city::wargame::v1::GetPickPointsResponse>* streamer) {
                       return this->StreamedGetPickPoints(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPickPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPickPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetPickPointsRequest* /*request*/, ::city::wargame::v1::GetPickPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPickPoints(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GetPickPointsRequest,::city::wargame::v1::GetPickPointsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GiveDefenseOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GiveDefenseOrder() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GiveDefenseOrderRequest, ::city::wargame::v1::GiveDefenseOrderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GiveDefenseOrderRequest, ::city::wargame::v1::GiveDefenseOrderResponse>* streamer) {
                       return this->StreamedGiveDefenseOrder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GiveDefenseOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GiveDefenseOrder(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GiveDefenseOrderRequest* /*request*/, ::city::wargame::v1::GiveDefenseOrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGiveDefenseOrder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GiveDefenseOrderRequest,::city::wargame::v1::GiveDefenseOrderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetScoreWeight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetScoreWeight() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::SetScoreWeightRequest, ::city::wargame::v1::SetScoreWeightResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::SetScoreWeightRequest, ::city::wargame::v1::SetScoreWeightResponse>* streamer) {
                       return this->StreamedSetScoreWeight(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetScoreWeight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetScoreWeight(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::SetScoreWeightRequest* /*request*/, ::city::wargame::v1::SetScoreWeightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetScoreWeight(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::SetScoreWeightRequest,::city::wargame::v1::SetScoreWeightResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetHitHistory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetHitHistory() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GetHitHistoryRequest, ::city::wargame::v1::GetHitHistoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GetHitHistoryRequest, ::city::wargame::v1::GetHitHistoryResponse>* streamer) {
                       return this->StreamedGetHitHistory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetHitHistory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHitHistory(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetHitHistoryRequest* /*request*/, ::city::wargame::v1::GetHitHistoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetHitHistory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GetHitHistoryRequest,::city::wargame::v1::GetHitHistoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecoPoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecoPoints() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GetRecoPointsRequest, ::city::wargame::v1::GetRecoPointsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GetRecoPointsRequest, ::city::wargame::v1::GetRecoPointsResponse>* streamer) {
                       return this->StreamedGetRecoPoints(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecoPoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecoPoints(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetRecoPointsRequest* /*request*/, ::city::wargame::v1::GetRecoPointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecoPoints(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GetRecoPointsRequest,::city::wargame::v1::GetRecoPointsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStep : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetStep() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GetStepRequest, ::city::wargame::v1::GetStepResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GetStepRequest, ::city::wargame::v1::GetStepResponse>* streamer) {
                       return this->StreamedGetStep(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetStep() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStep(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetStepRequest* /*request*/, ::city::wargame::v1::GetStepResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStep(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GetStepRequest,::city::wargame::v1::GetStepResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCasualties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCasualties() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::wargame::v1::GetCasualtiesRequest, ::city::wargame::v1::GetCasualtiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::wargame::v1::GetCasualtiesRequest, ::city::wargame::v1::GetCasualtiesResponse>* streamer) {
                       return this->StreamedGetCasualties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCasualties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCasualties(::grpc::ServerContext* /*context*/, const ::city::wargame::v1::GetCasualtiesRequest* /*request*/, ::city::wargame::v1::GetCasualtiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCasualties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::wargame::v1::GetCasualtiesRequest,::city::wargame::v1::GetCasualtiesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PickPoints<WithStreamedUnaryMethod_GetPickPoints<WithStreamedUnaryMethod_GiveDefenseOrder<WithStreamedUnaryMethod_SetScoreWeight<WithStreamedUnaryMethod_GetHitHistory<WithStreamedUnaryMethod_GetRecoPoints<WithStreamedUnaryMethod_GetStep<WithStreamedUnaryMethod_GetCasualties<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_PickPoints<WithStreamedUnaryMethod_GetPickPoints<WithStreamedUnaryMethod_GiveDefenseOrder<WithStreamedUnaryMethod_SetScoreWeight<WithStreamedUnaryMethod_GetHitHistory<WithStreamedUnaryMethod_GetRecoPoints<WithStreamedUnaryMethod_GetStep<WithStreamedUnaryMethod_GetCasualties<Service > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace wargame
}  // namespace city


#endif  // GRPC_city_2fwargame_2fv1_2fwargame_5fservice_2eproto__INCLUDED

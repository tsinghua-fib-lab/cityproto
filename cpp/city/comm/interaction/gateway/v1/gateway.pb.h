// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/comm/interaction/gateway/v1/gateway.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto;
namespace city {
namespace comm {
namespace interaction {
namespace gateway {
namespace v1 {
class Station;
struct StationDefaultTypeInternal;
extern StationDefaultTypeInternal _Station_default_instance_;
}  // namespace v1
}  // namespace gateway
}  // namespace interaction
}  // namespace comm
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace comm {
namespace interaction {
namespace gateway {
namespace v1 {
enum Reason : int {
  REASON_UNSPECIFIED = 0,
  REASON_RUIN = 1,
  REASON_CASCADE = 2,
  Reason_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Reason_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Reason_IsValid(int value);
constexpr Reason Reason_MIN = static_cast<Reason>(0);
constexpr Reason Reason_MAX = static_cast<Reason>(2);
constexpr int Reason_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Reason_descriptor();
template <typename T>
const std::string& Reason_Name(T value) {
  static_assert(std::is_same<T, Reason>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Reason_Name().");
  return Reason_Name(static_cast<Reason>(value));
}
template <>
inline const std::string& Reason_Name(Reason value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Reason_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Reason_Parse(absl::string_view name, Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Reason>(
      Reason_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Station final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.Station) */ {
 public:
  inline Station() : Station(nullptr) {}
  ~Station() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Station(::google::protobuf::internal::ConstantInitialized);

  Station(const Station& from);
  Station(Station&& from) noexcept
    : Station() {
    *this = ::std::move(from);
  }

  inline Station& operator=(const Station& from) {
    CopyFrom(from);
    return *this;
  }
  inline Station& operator=(Station&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Station& default_instance() {
    return *internal_default_instance();
  }
  static inline const Station* internal_default_instance() {
    return reinterpret_cast<const Station*>(
               &_Station_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Station& a, Station& b) {
    a.Swap(&b);
  }
  inline void Swap(Station* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Station* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Station* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Station>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Station& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Station& from) {
    Station::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Station* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.Station";
  }
  protected:
  explicit Station(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
    kReasonFieldNumber = 3,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // .city.comm.interaction.gateway.v1.Reason reason = 3 [json_name = "reason"];
  void clear_reason() ;
  ::city::comm::interaction::gateway::v1::Reason reason() const;
  void set_reason(::city::comm::interaction::gateway::v1::Reason value);

  private:
  ::city::comm::interaction::gateway::v1::Reason _internal_reason() const;
  void _internal_set_reason(::city::comm::interaction::gateway::v1::Reason value);

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.Station)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    int reason_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Station

// int32 id = 1 [json_name = "id"];
inline void Station::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t Station::id() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.Station.id)
  return _internal_id();
}
inline void Station::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.Station.id)
}
inline ::int32_t Station::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Station::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void Station::clear_status() {
  _impl_.status_ = false;
}
inline bool Station::status() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.Station.status)
  return _internal_status();
}
inline void Station::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.Station.status)
}
inline bool Station::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void Station::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .city.comm.interaction.gateway.v1.Reason reason = 3 [json_name = "reason"];
inline void Station::clear_reason() {
  _impl_.reason_ = 0;
}
inline ::city::comm::interaction::gateway::v1::Reason Station::reason() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.Station.reason)
  return _internal_reason();
}
inline void Station::set_reason(::city::comm::interaction::gateway::v1::Reason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.Station.reason)
}
inline ::city::comm::interaction::gateway::v1::Reason Station::_internal_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::city::comm::interaction::gateway::v1::Reason>(_impl_.reason_);
}
inline void Station::_internal_set_reason(::city::comm::interaction::gateway::v1::Reason value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gateway
}  // namespace interaction
}  // namespace comm
}  // namespace city


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::city::comm::interaction::gateway::v1::Reason> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::city::comm::interaction::gateway::v1::Reason>() {
  return ::city::comm::interaction::gateway::v1::Reason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_2eproto_2epb_2eh

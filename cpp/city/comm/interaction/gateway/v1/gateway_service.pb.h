// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/comm/interaction/gateway/v1/gateway_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "city/comm/interaction/gateway/v1/gateway.pb.h"
#include "city/event/v1/event.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
namespace city {
namespace comm {
namespace interaction {
namespace gateway {
namespace v1 {
class GetAllStatusRequest;
struct GetAllStatusRequestDefaultTypeInternal;
extern GetAllStatusRequestDefaultTypeInternal _GetAllStatusRequest_default_instance_;
class GetAllStatusResponse;
struct GetAllStatusResponseDefaultTypeInternal;
extern GetAllStatusResponseDefaultTypeInternal _GetAllStatusResponse_default_instance_;
class GetEventsRequest;
struct GetEventsRequestDefaultTypeInternal;
extern GetEventsRequestDefaultTypeInternal _GetEventsRequest_default_instance_;
class GetEventsResponse;
struct GetEventsResponseDefaultTypeInternal;
extern GetEventsResponseDefaultTypeInternal _GetEventsResponse_default_instance_;
class GetRuinInfoRequest;
struct GetRuinInfoRequestDefaultTypeInternal;
extern GetRuinInfoRequestDefaultTypeInternal _GetRuinInfoRequest_default_instance_;
class GetRuinInfoResponse;
struct GetRuinInfoResponseDefaultTypeInternal;
extern GetRuinInfoResponseDefaultTypeInternal _GetRuinInfoResponse_default_instance_;
class RuinInfo;
struct RuinInfoDefaultTypeInternal;
extern RuinInfoDefaultTypeInternal _RuinInfo_default_instance_;
class SetGatewayPowerStatusRequest;
struct SetGatewayPowerStatusRequestDefaultTypeInternal;
extern SetGatewayPowerStatusRequestDefaultTypeInternal _SetGatewayPowerStatusRequest_default_instance_;
class SetGatewayPowerStatusResponse;
struct SetGatewayPowerStatusResponseDefaultTypeInternal;
extern SetGatewayPowerStatusResponseDefaultTypeInternal _SetGatewayPowerStatusResponse_default_instance_;
class SetGatewayRuinStatusRequest;
struct SetGatewayRuinStatusRequestDefaultTypeInternal;
extern SetGatewayRuinStatusRequestDefaultTypeInternal _SetGatewayRuinStatusRequest_default_instance_;
class SetGatewayRuinStatusResponse;
struct SetGatewayRuinStatusResponseDefaultTypeInternal;
extern SetGatewayRuinStatusResponseDefaultTypeInternal _SetGatewayRuinStatusResponse_default_instance_;
}  // namespace v1
}  // namespace gateway
}  // namespace interaction
}  // namespace comm
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace comm {
namespace interaction {
namespace gateway {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SetGatewayPowerStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest) */ {
 public:
  inline SetGatewayPowerStatusRequest() : SetGatewayPowerStatusRequest(nullptr) {}
  ~SetGatewayPowerStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGatewayPowerStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SetGatewayPowerStatusRequest(const SetGatewayPowerStatusRequest& from);
  SetGatewayPowerStatusRequest(SetGatewayPowerStatusRequest&& from) noexcept
    : SetGatewayPowerStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetGatewayPowerStatusRequest& operator=(const SetGatewayPowerStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGatewayPowerStatusRequest& operator=(SetGatewayPowerStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGatewayPowerStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGatewayPowerStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetGatewayPowerStatusRequest*>(
               &_SetGatewayPowerStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetGatewayPowerStatusRequest& a, SetGatewayPowerStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGatewayPowerStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGatewayPowerStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGatewayPowerStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGatewayPowerStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGatewayPowerStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetGatewayPowerStatusRequest& from) {
    SetGatewayPowerStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGatewayPowerStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest";
  }
  protected:
  explicit SetGatewayPowerStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetGatewayPowerStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.SetGatewayPowerStatusResponse) */ {
 public:
  inline SetGatewayPowerStatusResponse() : SetGatewayPowerStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGatewayPowerStatusResponse(::google::protobuf::internal::ConstantInitialized);

  SetGatewayPowerStatusResponse(const SetGatewayPowerStatusResponse& from);
  SetGatewayPowerStatusResponse(SetGatewayPowerStatusResponse&& from) noexcept
    : SetGatewayPowerStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetGatewayPowerStatusResponse& operator=(const SetGatewayPowerStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGatewayPowerStatusResponse& operator=(SetGatewayPowerStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGatewayPowerStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGatewayPowerStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetGatewayPowerStatusResponse*>(
               &_SetGatewayPowerStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetGatewayPowerStatusResponse& a, SetGatewayPowerStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGatewayPowerStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGatewayPowerStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGatewayPowerStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGatewayPowerStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetGatewayPowerStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetGatewayPowerStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.SetGatewayPowerStatusResponse";
  }
  protected:
  explicit SetGatewayPowerStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.SetGatewayPowerStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetGatewayRuinStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest) */ {
 public:
  inline SetGatewayRuinStatusRequest() : SetGatewayRuinStatusRequest(nullptr) {}
  ~SetGatewayRuinStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGatewayRuinStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SetGatewayRuinStatusRequest(const SetGatewayRuinStatusRequest& from);
  SetGatewayRuinStatusRequest(SetGatewayRuinStatusRequest&& from) noexcept
    : SetGatewayRuinStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetGatewayRuinStatusRequest& operator=(const SetGatewayRuinStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGatewayRuinStatusRequest& operator=(SetGatewayRuinStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGatewayRuinStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGatewayRuinStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetGatewayRuinStatusRequest*>(
               &_SetGatewayRuinStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetGatewayRuinStatusRequest& a, SetGatewayRuinStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGatewayRuinStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGatewayRuinStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGatewayRuinStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGatewayRuinStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGatewayRuinStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetGatewayRuinStatusRequest& from) {
    SetGatewayRuinStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetGatewayRuinStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest";
  }
  protected:
  explicit SetGatewayRuinStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetGatewayRuinStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.SetGatewayRuinStatusResponse) */ {
 public:
  inline SetGatewayRuinStatusResponse() : SetGatewayRuinStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGatewayRuinStatusResponse(::google::protobuf::internal::ConstantInitialized);

  SetGatewayRuinStatusResponse(const SetGatewayRuinStatusResponse& from);
  SetGatewayRuinStatusResponse(SetGatewayRuinStatusResponse&& from) noexcept
    : SetGatewayRuinStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetGatewayRuinStatusResponse& operator=(const SetGatewayRuinStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGatewayRuinStatusResponse& operator=(SetGatewayRuinStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGatewayRuinStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGatewayRuinStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetGatewayRuinStatusResponse*>(
               &_SetGatewayRuinStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetGatewayRuinStatusResponse& a, SetGatewayRuinStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGatewayRuinStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGatewayRuinStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGatewayRuinStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGatewayRuinStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetGatewayRuinStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetGatewayRuinStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.SetGatewayRuinStatusResponse";
  }
  protected:
  explicit SetGatewayRuinStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.SetGatewayRuinStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetAllStatusRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetAllStatusRequest) */ {
 public:
  inline GetAllStatusRequest() : GetAllStatusRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllStatusRequest(::google::protobuf::internal::ConstantInitialized);

  GetAllStatusRequest(const GetAllStatusRequest& from);
  GetAllStatusRequest(GetAllStatusRequest&& from) noexcept
    : GetAllStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetAllStatusRequest& operator=(const GetAllStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllStatusRequest& operator=(GetAllStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetAllStatusRequest*>(
               &_GetAllStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetAllStatusRequest& a, GetAllStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAllStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAllStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAllStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetAllStatusRequest";
  }
  protected:
  explicit GetAllStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetAllStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetAllStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetAllStatusResponse) */ {
 public:
  inline GetAllStatusResponse() : GetAllStatusResponse(nullptr) {}
  ~GetAllStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllStatusResponse(::google::protobuf::internal::ConstantInitialized);

  GetAllStatusResponse(const GetAllStatusResponse& from);
  GetAllStatusResponse(GetAllStatusResponse&& from) noexcept
    : GetAllStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetAllStatusResponse& operator=(const GetAllStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllStatusResponse& operator=(GetAllStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetAllStatusResponse*>(
               &_GetAllStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetAllStatusResponse& a, GetAllStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAllStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAllStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAllStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAllStatusResponse& from) {
    GetAllStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAllStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetAllStatusResponse";
  }
  protected:
  explicit GetAllStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStationsFieldNumber = 1,
  };
  // repeated .city.comm.interaction.gateway.v1.Station stations = 1 [json_name = "stations"];
  int stations_size() const;
  private:
  int _internal_stations_size() const;

  public:
  void clear_stations() ;
  ::city::comm::interaction::gateway::v1::Station* mutable_stations(int index);
  ::google::protobuf::RepeatedPtrField< ::city::comm::interaction::gateway::v1::Station >*
      mutable_stations();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::comm::interaction::gateway::v1::Station>& _internal_stations() const;
  ::google::protobuf::RepeatedPtrField<::city::comm::interaction::gateway::v1::Station>* _internal_mutable_stations();
  public:
  const ::city::comm::interaction::gateway::v1::Station& stations(int index) const;
  ::city::comm::interaction::gateway::v1::Station* add_stations();
  const ::google::protobuf::RepeatedPtrField< ::city::comm::interaction::gateway::v1::Station >&
      stations() const;
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetAllStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::comm::interaction::gateway::v1::Station > stations_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetRuinInfoRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetRuinInfoRequest) */ {
 public:
  inline GetRuinInfoRequest() : GetRuinInfoRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRuinInfoRequest(::google::protobuf::internal::ConstantInitialized);

  GetRuinInfoRequest(const GetRuinInfoRequest& from);
  GetRuinInfoRequest(GetRuinInfoRequest&& from) noexcept
    : GetRuinInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetRuinInfoRequest& operator=(const GetRuinInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRuinInfoRequest& operator=(GetRuinInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRuinInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRuinInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetRuinInfoRequest*>(
               &_GetRuinInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetRuinInfoRequest& a, GetRuinInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRuinInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRuinInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRuinInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRuinInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRuinInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRuinInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetRuinInfoRequest";
  }
  protected:
  explicit GetRuinInfoRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetRuinInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class RuinInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.RuinInfo) */ {
 public:
  inline RuinInfo() : RuinInfo(nullptr) {}
  ~RuinInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RuinInfo(::google::protobuf::internal::ConstantInitialized);

  RuinInfo(const RuinInfo& from);
  RuinInfo(RuinInfo&& from) noexcept
    : RuinInfo() {
    *this = ::std::move(from);
  }

  inline RuinInfo& operator=(const RuinInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuinInfo& operator=(RuinInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuinInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuinInfo* internal_default_instance() {
    return reinterpret_cast<const RuinInfo*>(
               &_RuinInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RuinInfo& a, RuinInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RuinInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuinInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuinInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RuinInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuinInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RuinInfo& from) {
    RuinInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RuinInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.RuinInfo";
  }
  protected:
  explicit RuinInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRatioFieldNumber = 2,
    kNumFieldNumber = 1,
  };
  // double ratio = 2 [json_name = "ratio"];
  void clear_ratio() ;
  double ratio() const;
  void set_ratio(double value);

  private:
  double _internal_ratio() const;
  void _internal_set_ratio(double value);

  public:
  // int32 num = 1 [json_name = "num"];
  void clear_num() ;
  ::int32_t num() const;
  void set_num(::int32_t value);

  private:
  ::int32_t _internal_num() const;
  void _internal_set_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.RuinInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double ratio_;
    ::int32_t num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetRuinInfoResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetRuinInfoResponse) */ {
 public:
  inline GetRuinInfoResponse() : GetRuinInfoResponse(nullptr) {}
  ~GetRuinInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRuinInfoResponse(::google::protobuf::internal::ConstantInitialized);

  GetRuinInfoResponse(const GetRuinInfoResponse& from);
  GetRuinInfoResponse(GetRuinInfoResponse&& from) noexcept
    : GetRuinInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetRuinInfoResponse& operator=(const GetRuinInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRuinInfoResponse& operator=(GetRuinInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRuinInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRuinInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetRuinInfoResponse*>(
               &_GetRuinInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetRuinInfoResponse& a, GetRuinInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRuinInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRuinInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRuinInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRuinInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRuinInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRuinInfoResponse& from) {
    GetRuinInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRuinInfoResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetRuinInfoResponse";
  }
  protected:
  explicit GetRuinInfoResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOneFieldNumber = 1,
    kTwoFieldNumber = 2,
    kThreeFieldNumber = 3,
  };
  // .city.comm.interaction.gateway.v1.RuinInfo one = 1 [json_name = "one"];
  bool has_one() const;
  void clear_one() ;
  const ::city::comm::interaction::gateway::v1::RuinInfo& one() const;
  PROTOBUF_NODISCARD ::city::comm::interaction::gateway::v1::RuinInfo* release_one();
  ::city::comm::interaction::gateway::v1::RuinInfo* mutable_one();
  void set_allocated_one(::city::comm::interaction::gateway::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_one(::city::comm::interaction::gateway::v1::RuinInfo* value);
  ::city::comm::interaction::gateway::v1::RuinInfo* unsafe_arena_release_one();

  private:
  const ::city::comm::interaction::gateway::v1::RuinInfo& _internal_one() const;
  ::city::comm::interaction::gateway::v1::RuinInfo* _internal_mutable_one();

  public:
  // .city.comm.interaction.gateway.v1.RuinInfo two = 2 [json_name = "two"];
  bool has_two() const;
  void clear_two() ;
  const ::city::comm::interaction::gateway::v1::RuinInfo& two() const;
  PROTOBUF_NODISCARD ::city::comm::interaction::gateway::v1::RuinInfo* release_two();
  ::city::comm::interaction::gateway::v1::RuinInfo* mutable_two();
  void set_allocated_two(::city::comm::interaction::gateway::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_two(::city::comm::interaction::gateway::v1::RuinInfo* value);
  ::city::comm::interaction::gateway::v1::RuinInfo* unsafe_arena_release_two();

  private:
  const ::city::comm::interaction::gateway::v1::RuinInfo& _internal_two() const;
  ::city::comm::interaction::gateway::v1::RuinInfo* _internal_mutable_two();

  public:
  // .city.comm.interaction.gateway.v1.RuinInfo three = 3 [json_name = "three"];
  bool has_three() const;
  void clear_three() ;
  const ::city::comm::interaction::gateway::v1::RuinInfo& three() const;
  PROTOBUF_NODISCARD ::city::comm::interaction::gateway::v1::RuinInfo* release_three();
  ::city::comm::interaction::gateway::v1::RuinInfo* mutable_three();
  void set_allocated_three(::city::comm::interaction::gateway::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_three(::city::comm::interaction::gateway::v1::RuinInfo* value);
  ::city::comm::interaction::gateway::v1::RuinInfo* unsafe_arena_release_three();

  private:
  const ::city::comm::interaction::gateway::v1::RuinInfo& _internal_three() const;
  ::city::comm::interaction::gateway::v1::RuinInfo* _internal_mutable_three();

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetRuinInfoResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::city::comm::interaction::gateway::v1::RuinInfo* one_;
    ::city::comm::interaction::gateway::v1::RuinInfo* two_;
    ::city::comm::interaction::gateway::v1::RuinInfo* three_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetEventsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetEventsRequest) */ {
 public:
  inline GetEventsRequest() : GetEventsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEventsRequest(::google::protobuf::internal::ConstantInitialized);

  GetEventsRequest(const GetEventsRequest& from);
  GetEventsRequest(GetEventsRequest&& from) noexcept
    : GetEventsRequest() {
    *this = ::std::move(from);
  }

  inline GetEventsRequest& operator=(const GetEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsRequest& operator=(GetEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsRequest* internal_default_instance() {
    return reinterpret_cast<const GetEventsRequest*>(
               &_GetEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetEventsRequest& a, GetEventsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetEventsRequest";
  }
  protected:
  explicit GetEventsRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetEventsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetEventsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.comm.interaction.gateway.v1.GetEventsResponse) */ {
 public:
  inline GetEventsResponse() : GetEventsResponse(nullptr) {}
  ~GetEventsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEventsResponse(::google::protobuf::internal::ConstantInitialized);

  GetEventsResponse(const GetEventsResponse& from);
  GetEventsResponse(GetEventsResponse&& from) noexcept
    : GetEventsResponse() {
    *this = ::std::move(from);
  }

  inline GetEventsResponse& operator=(const GetEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsResponse& operator=(GetEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsResponse* internal_default_instance() {
    return reinterpret_cast<const GetEventsResponse*>(
               &_GetEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetEventsResponse& a, GetEventsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEventsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetEventsResponse& from) {
    GetEventsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.comm.interaction.gateway.v1.GetEventsResponse";
  }
  protected:
  explicit GetEventsResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // .city.event.v1.Events events = 1 [json_name = "events"];
  bool has_events() const;
  void clear_events() ;
  const ::city::event::v1::Events& events() const;
  PROTOBUF_NODISCARD ::city::event::v1::Events* release_events();
  ::city::event::v1::Events* mutable_events();
  void set_allocated_events(::city::event::v1::Events* value);
  void unsafe_arena_set_allocated_events(::city::event::v1::Events* value);
  ::city::event::v1::Events* unsafe_arena_release_events();

  private:
  const ::city::event::v1::Events& _internal_events() const;
  ::city::event::v1::Events* _internal_mutable_events();

  public:
  // @@protoc_insertion_point(class_scope:city.comm.interaction.gateway.v1.GetEventsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::city::event::v1::Events* events_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetGatewayPowerStatusRequest

// int32 id = 1 [json_name = "id"];
inline void SetGatewayPowerStatusRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t SetGatewayPowerStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest.id)
  return _internal_id();
}
inline void SetGatewayPowerStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest.id)
}
inline ::int32_t SetGatewayPowerStatusRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SetGatewayPowerStatusRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void SetGatewayPowerStatusRequest::clear_status() {
  _impl_.status_ = false;
}
inline bool SetGatewayPowerStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest.status)
  return _internal_status();
}
inline void SetGatewayPowerStatusRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.SetGatewayPowerStatusRequest.status)
}
inline bool SetGatewayPowerStatusRequest::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void SetGatewayPowerStatusRequest::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SetGatewayPowerStatusResponse

// -------------------------------------------------------------------

// SetGatewayRuinStatusRequest

// int32 id = 1 [json_name = "id"];
inline void SetGatewayRuinStatusRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t SetGatewayRuinStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest.id)
  return _internal_id();
}
inline void SetGatewayRuinStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest.id)
}
inline ::int32_t SetGatewayRuinStatusRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SetGatewayRuinStatusRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void SetGatewayRuinStatusRequest::clear_status() {
  _impl_.status_ = false;
}
inline bool SetGatewayRuinStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest.status)
  return _internal_status();
}
inline void SetGatewayRuinStatusRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.SetGatewayRuinStatusRequest.status)
}
inline bool SetGatewayRuinStatusRequest::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void SetGatewayRuinStatusRequest::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SetGatewayRuinStatusResponse

// -------------------------------------------------------------------

// GetAllStatusRequest

// -------------------------------------------------------------------

// GetAllStatusResponse

// repeated .city.comm.interaction.gateway.v1.Station stations = 1 [json_name = "stations"];
inline int GetAllStatusResponse::_internal_stations_size() const {
  return _internal_stations().size();
}
inline int GetAllStatusResponse::stations_size() const {
  return _internal_stations_size();
}
inline ::city::comm::interaction::gateway::v1::Station* GetAllStatusResponse::mutable_stations(int index) {
  // @@protoc_insertion_point(field_mutable:city.comm.interaction.gateway.v1.GetAllStatusResponse.stations)
  return _internal_mutable_stations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::comm::interaction::gateway::v1::Station >*
GetAllStatusResponse::mutable_stations() {
  // @@protoc_insertion_point(field_mutable_list:city.comm.interaction.gateway.v1.GetAllStatusResponse.stations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stations();
}
inline const ::city::comm::interaction::gateway::v1::Station& GetAllStatusResponse::stations(int index) const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.GetAllStatusResponse.stations)
    return _internal_stations().Get(index);
}
inline ::city::comm::interaction::gateway::v1::Station* GetAllStatusResponse::add_stations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::comm::interaction::gateway::v1::Station* _add = _internal_mutable_stations()->Add();
  // @@protoc_insertion_point(field_add:city.comm.interaction.gateway.v1.GetAllStatusResponse.stations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::comm::interaction::gateway::v1::Station >&
GetAllStatusResponse::stations() const {
  // @@protoc_insertion_point(field_list:city.comm.interaction.gateway.v1.GetAllStatusResponse.stations)
  return _internal_stations();
}
inline const ::google::protobuf::RepeatedPtrField<::city::comm::interaction::gateway::v1::Station>&
GetAllStatusResponse::_internal_stations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stations_;
}
inline ::google::protobuf::RepeatedPtrField<::city::comm::interaction::gateway::v1::Station>*
GetAllStatusResponse::_internal_mutable_stations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stations_;
}

// -------------------------------------------------------------------

// GetRuinInfoRequest

// -------------------------------------------------------------------

// RuinInfo

// int32 num = 1 [json_name = "num"];
inline void RuinInfo::clear_num() {
  _impl_.num_ = 0;
}
inline ::int32_t RuinInfo::num() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.RuinInfo.num)
  return _internal_num();
}
inline void RuinInfo::set_num(::int32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.RuinInfo.num)
}
inline ::int32_t RuinInfo::_internal_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_;
}
inline void RuinInfo::_internal_set_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ = value;
}

// double ratio = 2 [json_name = "ratio"];
inline void RuinInfo::clear_ratio() {
  _impl_.ratio_ = 0;
}
inline double RuinInfo::ratio() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.RuinInfo.ratio)
  return _internal_ratio();
}
inline void RuinInfo::set_ratio(double value) {
  _internal_set_ratio(value);
  // @@protoc_insertion_point(field_set:city.comm.interaction.gateway.v1.RuinInfo.ratio)
}
inline double RuinInfo::_internal_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ratio_;
}
inline void RuinInfo::_internal_set_ratio(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ratio_ = value;
}

// -------------------------------------------------------------------

// GetRuinInfoResponse

// .city.comm.interaction.gateway.v1.RuinInfo one = 1 [json_name = "one"];
inline bool GetRuinInfoResponse::has_one() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.one_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_one() {
  if (_impl_.one_ != nullptr) _impl_.one_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::_internal_one() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::comm::interaction::gateway::v1::RuinInfo* p = _impl_.one_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::comm::interaction::gateway::v1::RuinInfo&>(::city::comm::interaction::gateway::v1::_RuinInfo_default_instance_);
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::one() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.GetRuinInfoResponse.one)
  return _internal_one();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_one(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.one_);
  }
  _impl_.one_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.one)
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::release_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::comm::interaction::gateway::v1::RuinInfo* released = _impl_.one_;
  _impl_.one_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.comm.interaction.gateway.v1.GetRuinInfoResponse.one)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::comm::interaction::gateway::v1::RuinInfo* temp = _impl_.one_;
  _impl_.one_ = nullptr;
  return temp;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.one_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::comm::interaction::gateway::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.one_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(p);
  }
  return _impl_.one_;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::mutable_one() {
  ::city::comm::interaction::gateway::v1::RuinInfo* _msg = _internal_mutable_one();
  // @@protoc_insertion_point(field_mutable:city.comm.interaction.gateway.v1.GetRuinInfoResponse.one)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_one(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(_impl_.one_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.one_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.one)
}

// .city.comm.interaction.gateway.v1.RuinInfo two = 2 [json_name = "two"];
inline bool GetRuinInfoResponse::has_two() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.two_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_two() {
  if (_impl_.two_ != nullptr) _impl_.two_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::_internal_two() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::comm::interaction::gateway::v1::RuinInfo* p = _impl_.two_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::comm::interaction::gateway::v1::RuinInfo&>(::city::comm::interaction::gateway::v1::_RuinInfo_default_instance_);
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::two() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.GetRuinInfoResponse.two)
  return _internal_two();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_two(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.two_);
  }
  _impl_.two_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.two)
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::release_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::city::comm::interaction::gateway::v1::RuinInfo* released = _impl_.two_;
  _impl_.two_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.comm.interaction.gateway.v1.GetRuinInfoResponse.two)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::city::comm::interaction::gateway::v1::RuinInfo* temp = _impl_.two_;
  _impl_.two_ = nullptr;
  return temp;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.two_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::comm::interaction::gateway::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.two_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(p);
  }
  return _impl_.two_;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::mutable_two() {
  ::city::comm::interaction::gateway::v1::RuinInfo* _msg = _internal_mutable_two();
  // @@protoc_insertion_point(field_mutable:city.comm.interaction.gateway.v1.GetRuinInfoResponse.two)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_two(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(_impl_.two_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.two_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.two)
}

// .city.comm.interaction.gateway.v1.RuinInfo three = 3 [json_name = "three"];
inline bool GetRuinInfoResponse::has_three() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.three_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_three() {
  if (_impl_.three_ != nullptr) _impl_.three_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::_internal_three() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::comm::interaction::gateway::v1::RuinInfo* p = _impl_.three_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::comm::interaction::gateway::v1::RuinInfo&>(::city::comm::interaction::gateway::v1::_RuinInfo_default_instance_);
}
inline const ::city::comm::interaction::gateway::v1::RuinInfo& GetRuinInfoResponse::three() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.GetRuinInfoResponse.three)
  return _internal_three();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_three(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.three_);
  }
  _impl_.three_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.three)
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::release_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::city::comm::interaction::gateway::v1::RuinInfo* released = _impl_.three_;
  _impl_.three_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.comm.interaction.gateway.v1.GetRuinInfoResponse.three)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::city::comm::interaction::gateway::v1::RuinInfo* temp = _impl_.three_;
  _impl_.three_ = nullptr;
  return temp;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.three_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::comm::interaction::gateway::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.three_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(p);
  }
  return _impl_.three_;
}
inline ::city::comm::interaction::gateway::v1::RuinInfo* GetRuinInfoResponse::mutable_three() {
  ::city::comm::interaction::gateway::v1::RuinInfo* _msg = _internal_mutable_three();
  // @@protoc_insertion_point(field_mutable:city.comm.interaction.gateway.v1.GetRuinInfoResponse.three)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_three(::city::comm::interaction::gateway::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(_impl_.three_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.three_ = reinterpret_cast<::city::comm::interaction::gateway::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.comm.interaction.gateway.v1.GetRuinInfoResponse.three)
}

// -------------------------------------------------------------------

// GetEventsRequest

// -------------------------------------------------------------------

// GetEventsResponse

// .city.event.v1.Events events = 1 [json_name = "events"];
inline bool GetEventsResponse::has_events() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.events_ != nullptr);
  return value;
}
inline const ::city::event::v1::Events& GetEventsResponse::_internal_events() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::event::v1::Events* p = _impl_.events_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::event::v1::Events&>(::city::event::v1::_Events_default_instance_);
}
inline const ::city::event::v1::Events& GetEventsResponse::events() const {
  // @@protoc_insertion_point(field_get:city.comm.interaction.gateway.v1.GetEventsResponse.events)
  return _internal_events();
}
inline void GetEventsResponse::unsafe_arena_set_allocated_events(::city::event::v1::Events* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.events_);
  }
  _impl_.events_ = reinterpret_cast<::city::event::v1::Events*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.comm.interaction.gateway.v1.GetEventsResponse.events)
}
inline ::city::event::v1::Events* GetEventsResponse::release_events() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::event::v1::Events* released = _impl_.events_;
  _impl_.events_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::event::v1::Events* GetEventsResponse::unsafe_arena_release_events() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.comm.interaction.gateway.v1.GetEventsResponse.events)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::event::v1::Events* temp = _impl_.events_;
  _impl_.events_ = nullptr;
  return temp;
}
inline ::city::event::v1::Events* GetEventsResponse::_internal_mutable_events() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.events_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::event::v1::Events>(GetArenaForAllocation());
    _impl_.events_ = reinterpret_cast<::city::event::v1::Events*>(p);
  }
  return _impl_.events_;
}
inline ::city::event::v1::Events* GetEventsResponse::mutable_events() {
  ::city::event::v1::Events* _msg = _internal_mutable_events();
  // @@protoc_insertion_point(field_mutable:city.comm.interaction.gateway.v1.GetEventsResponse.events)
  return _msg;
}
inline void GetEventsResponse::set_allocated_events(::city::event::v1::Events* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.events_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.events_ = reinterpret_cast<::city::event::v1::Events*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.comm.interaction.gateway.v1.GetEventsResponse.events)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gateway
}  // namespace interaction
}  // namespace comm
}  // namespace city


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fcomm_2finteraction_2fgateway_2fv1_2fgateway_5fservice_2eproto_2epb_2eh

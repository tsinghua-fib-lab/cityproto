// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/cognition/output/v1/output_service.proto

#include "city/cognition/output/v1/output_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace cognition {
namespace output {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR OutputRequest::OutputRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.nodes_)*/ {},
      /*decltype(_impl_.influences_)*/ {},
      /*decltype(_impl_.contents_)*/ {},
      /*decltype(_impl_.group_influences_)*/ {},
      /*decltype(_impl_.groups_)*/ {},
      /*decltype(_impl_.heatmap_)*/ nullptr,
      /*decltype(_impl_.stat_)*/ nullptr,
      /*decltype(_impl_.step_)*/ 0,
    } {}
struct OutputRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutputRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutputRequestDefaultTypeInternal() {}
  union {
    OutputRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutputRequestDefaultTypeInternal _OutputRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OutputResponse::OutputResponse(::_pbi::ConstantInitialized) {}
struct OutputResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutputResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutputResponseDefaultTypeInternal() {}
  union {
    OutputResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutputResponseDefaultTypeInternal _OutputResponse_default_instance_;
}  // namespace v1
}  // namespace output
}  // namespace cognition
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.step_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.nodes_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.influences_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.heatmap_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.stat_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.contents_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.group_influences_),
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputRequest, _impl_.groups_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::cognition::output::v1::OutputResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::city::cognition::output::v1::OutputRequest)},
        {24, -1, -1, sizeof(::city::cognition::output::v1::OutputResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::cognition::output::v1::_OutputRequest_default_instance_._instance,
    &::city::cognition::output::v1::_OutputResponse_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n-city/cognition/output/v1/output_servic"
    "e.proto\022\030city.cognition.output.v1\032%city/"
    "cognition/output/v1/output.proto\"\327\003\n\rOut"
    "putRequest\022\022\n\004step\030\001 \001(\005R\004step\0224\n\005nodes\030"
    "\002 \003(\0132\036.city.cognition.output.v1.NodeR\005n"
    "odes\022C\n\ninfluences\030\003 \003(\0132#.city.cognitio"
    "n.output.v1.InfluenceR\ninfluences\022;\n\007hea"
    "tmap\030\004 \001(\0132!.city.cognition.output.v1.He"
    "atmapR\007heatmap\0222\n\004stat\030\005 \001(\0132\036.city.cogn"
    "ition.output.v1.StatR\004stat\022=\n\010contents\030\006"
    " \003(\0132!.city.cognition.output.v1.ContentR"
    "\010contents\022N\n\020group_influences\030\007 \003(\0132#.ci"
    "ty.cognition.output.v1.InfluenceR\017groupI"
    "nfluences\0227\n\006groups\030\010 \003(\0132\037.city.cogniti"
    "on.output.v1.GroupR\006groups\"\020\n\016OutputResp"
    "onse2l\n\rOutputService\022[\n\006Output\022\'.city.c"
    "ognition.output.v1.OutputRequest\032(.city."
    "cognition.output.v1.OutputResponseB\365\001\n\034c"
    "om.city.cognition.output.v1B\022OutputServi"
    "ceProtoP\001Z>git.fiblab.net/sim/protos/go/"
    "city/cognition/output/v1;outputv1\242\002\003CCO\252"
    "\002\030City.Cognition.Output.V1\312\002\030City\\Cognit"
    "ion\\Output\\V1\342\002$City\\Cognition\\Output\\V1"
    "\\GPBMetadata\352\002\033City::Cognition::Output::"
    "V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_2eproto,
};
static ::absl::once_flag descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto = {
    false,
    false,
    970,
    descriptor_table_protodef_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto,
    "city/cognition/output/v1/output_service.proto",
    &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_once,
    descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto::offsets,
    file_level_metadata_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto,
    file_level_enum_descriptors_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto,
    file_level_service_descriptors_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto(&descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto);
namespace city {
namespace cognition {
namespace output {
namespace v1 {
// ===================================================================

class OutputRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<OutputRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_._has_bits_);
  static const ::city::cognition::output::v1::Heatmap& heatmap(const OutputRequest* msg);
  static void set_has_heatmap(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::city::cognition::output::v1::Stat& stat(const OutputRequest* msg);
  static void set_has_stat(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::city::cognition::output::v1::Heatmap& OutputRequest::_Internal::heatmap(const OutputRequest* msg) {
  return *msg->_impl_.heatmap_;
}
const ::city::cognition::output::v1::Stat& OutputRequest::_Internal::stat(const OutputRequest* msg) {
  return *msg->_impl_.stat_;
}
void OutputRequest::clear_nodes() {
  _internal_mutable_nodes()->Clear();
}
void OutputRequest::clear_influences() {
  _internal_mutable_influences()->Clear();
}
void OutputRequest::clear_heatmap() {
  if (_impl_.heatmap_ != nullptr) _impl_.heatmap_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OutputRequest::clear_stat() {
  if (_impl_.stat_ != nullptr) _impl_.stat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OutputRequest::clear_contents() {
  _internal_mutable_contents()->Clear();
}
void OutputRequest::clear_group_influences() {
  _internal_mutable_group_influences()->Clear();
}
void OutputRequest::clear_groups() {
  _internal_mutable_groups()->Clear();
}
OutputRequest::OutputRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.cognition.output.v1.OutputRequest)
}
OutputRequest::OutputRequest(const OutputRequest& from) : ::google::protobuf::Message() {
  OutputRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.nodes_){from._impl_.nodes_},
      decltype(_impl_.influences_){from._impl_.influences_},
      decltype(_impl_.contents_){from._impl_.contents_},
      decltype(_impl_.group_influences_){from._impl_.group_influences_},
      decltype(_impl_.groups_){from._impl_.groups_},
      decltype(_impl_.heatmap_){nullptr},
      decltype(_impl_.stat_){nullptr},
      decltype(_impl_.step_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.heatmap_ = new ::city::cognition::output::v1::Heatmap(*from._impl_.heatmap_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.stat_ = new ::city::cognition::output::v1::Stat(*from._impl_.stat_);
  }
  _this->_impl_.step_ = from._impl_.step_;

  // @@protoc_insertion_point(copy_constructor:city.cognition.output.v1.OutputRequest)
}
inline void OutputRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.nodes_){arena},
      decltype(_impl_.influences_){arena},
      decltype(_impl_.contents_){arena},
      decltype(_impl_.group_influences_){arena},
      decltype(_impl_.groups_){arena},
      decltype(_impl_.heatmap_){nullptr},
      decltype(_impl_.stat_){nullptr},
      decltype(_impl_.step_){0},
  };
}
OutputRequest::~OutputRequest() {
  // @@protoc_insertion_point(destructor:city.cognition.output.v1.OutputRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OutputRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodes_.~RepeatedPtrField();
  _impl_.influences_.~RepeatedPtrField();
  _impl_.contents_.~RepeatedPtrField();
  _impl_.group_influences_.~RepeatedPtrField();
  _impl_.groups_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.heatmap_;
  if (this != internal_default_instance()) delete _impl_.stat_;
}
void OutputRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OutputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.cognition.output.v1.OutputRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_nodes()->Clear();
  _internal_mutable_influences()->Clear();
  _internal_mutable_contents()->Clear();
  _internal_mutable_group_influences()->Clear();
  _internal_mutable_groups()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.heatmap_ != nullptr);
      _impl_.heatmap_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.stat_ != nullptr);
      _impl_.stat_->Clear();
    }
  }
  _impl_.step_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OutputRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 7, 0, 2> OutputRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OutputRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.cognition.output.v1.Group groups = 8 [json_name = "groups"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 6, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.groups_)}},
    // int32 step = 1 [json_name = "step"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OutputRequest, _impl_.step_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.step_)}},
    // repeated .city.cognition.output.v1.Node nodes = 2 [json_name = "nodes"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.nodes_)}},
    // repeated .city.cognition.output.v1.Influence influences = 3 [json_name = "influences"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.influences_)}},
    // .city.cognition.output.v1.Heatmap heatmap = 4 [json_name = "heatmap"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 2, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.heatmap_)}},
    // .city.cognition.output.v1.Stat stat = 5 [json_name = "stat"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 3, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.stat_)}},
    // repeated .city.cognition.output.v1.Content contents = 6 [json_name = "contents"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.contents_)}},
    // repeated .city.cognition.output.v1.Influence group_influences = 7 [json_name = "groupInfluences"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 5, PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.group_influences_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 step = 1 [json_name = "step"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.step_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .city.cognition.output.v1.Node nodes = 2 [json_name = "nodes"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.nodes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .city.cognition.output.v1.Influence influences = 3 [json_name = "influences"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.influences_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .city.cognition.output.v1.Heatmap heatmap = 4 [json_name = "heatmap"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.heatmap_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .city.cognition.output.v1.Stat stat = 5 [json_name = "stat"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.stat_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .city.cognition.output.v1.Content contents = 6 [json_name = "contents"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.contents_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .city.cognition.output.v1.Influence group_influences = 7 [json_name = "groupInfluences"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.group_influences_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .city.cognition.output.v1.Group groups = 8 [json_name = "groups"];
    {PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.groups_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Node>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Influence>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Heatmap>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Stat>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Content>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Influence>()},
    {::_pbi::TcParser::GetTable<::city::cognition::output::v1::Group>()},
  }}, {{
  }},
};

::uint8_t* OutputRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.cognition.output.v1.OutputRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 step = 1 [json_name = "step"];
  if (this->_internal_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_step(), target);
  }

  // repeated .city.cognition.output.v1.Node nodes = 2 [json_name = "nodes"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.cognition.output.v1.Influence influences = 3 [json_name = "influences"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_influences_size()); i < n; i++) {
    const auto& repfield = this->_internal_influences().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .city.cognition.output.v1.Heatmap heatmap = 4 [json_name = "heatmap"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::heatmap(this),
        _Internal::heatmap(this).GetCachedSize(), target, stream);
  }

  // .city.cognition.output.v1.Stat stat = 5 [json_name = "stat"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::stat(this),
        _Internal::stat(this).GetCachedSize(), target, stream);
  }

  // repeated .city.cognition.output.v1.Content contents = 6 [json_name = "contents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contents_size()); i < n; i++) {
    const auto& repfield = this->_internal_contents().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.cognition.output.v1.Influence group_influences = 7 [json_name = "groupInfluences"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_influences_size()); i < n; i++) {
    const auto& repfield = this->_internal_group_influences().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.cognition.output.v1.Group groups = 8 [json_name = "groups"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_groups_size()); i < n; i++) {
    const auto& repfield = this->_internal_groups().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.cognition.output.v1.OutputRequest)
  return target;
}

::size_t OutputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.cognition.output.v1.OutputRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.cognition.output.v1.Node nodes = 2 [json_name = "nodes"];
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->_internal_nodes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .city.cognition.output.v1.Influence influences = 3 [json_name = "influences"];
  total_size += 1UL * this->_internal_influences_size();
  for (const auto& msg : this->_internal_influences()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .city.cognition.output.v1.Content contents = 6 [json_name = "contents"];
  total_size += 1UL * this->_internal_contents_size();
  for (const auto& msg : this->_internal_contents()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .city.cognition.output.v1.Influence group_influences = 7 [json_name = "groupInfluences"];
  total_size += 1UL * this->_internal_group_influences_size();
  for (const auto& msg : this->_internal_group_influences()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .city.cognition.output.v1.Group groups = 8 [json_name = "groups"];
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->_internal_groups()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .city.cognition.output.v1.Heatmap heatmap = 4 [json_name = "heatmap"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.heatmap_);
    }

    // .city.cognition.output.v1.Stat stat = 5 [json_name = "stat"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.stat_);
    }

  }
  // int32 step = 1 [json_name = "step"];
  if (this->_internal_step() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_step());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OutputRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OutputRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*OutputRequest::GetClassData() const { return &_class_data_; }


void OutputRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OutputRequest*>(&to_msg);
  auto& from = static_cast<const OutputRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.cognition.output.v1.OutputRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(from._internal_nodes());
  _this->_internal_mutable_influences()->MergeFrom(from._internal_influences());
  _this->_internal_mutable_contents()->MergeFrom(from._internal_contents());
  _this->_internal_mutable_group_influences()->MergeFrom(from._internal_group_influences());
  _this->_internal_mutable_groups()->MergeFrom(from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_heatmap()->::city::cognition::output::v1::Heatmap::MergeFrom(
          from._internal_heatmap());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_stat()->::city::cognition::output::v1::Stat::MergeFrom(
          from._internal_stat());
    }
  }
  if (from._internal_step() != 0) {
    _this->_internal_set_step(from._internal_step());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutputRequest::CopyFrom(const OutputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.cognition.output.v1.OutputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OutputRequest::IsInitialized() const {
  return true;
}

void OutputRequest::InternalSwap(OutputRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.influences_.InternalSwap(&other->_impl_.influences_);
  _impl_.contents_.InternalSwap(&other->_impl_.contents_);
  _impl_.group_influences_.InternalSwap(&other->_impl_.group_influences_);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.step_)
      + sizeof(OutputRequest::_impl_.step_)
      - PROTOBUF_FIELD_OFFSET(OutputRequest, _impl_.heatmap_)>(
          reinterpret_cast<char*>(&_impl_.heatmap_),
          reinterpret_cast<char*>(&other->_impl_.heatmap_));
}

::google::protobuf::Metadata OutputRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_getter, &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_once,
      file_level_metadata_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto[0]);
}
// ===================================================================

class OutputResponse::_Internal {
 public:
};

OutputResponse::OutputResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.cognition.output.v1.OutputResponse)
}
OutputResponse::OutputResponse(const OutputResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  OutputResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.cognition.output.v1.OutputResponse)
}




const ::google::protobuf::Message::ClassData OutputResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*OutputResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata OutputResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_getter, &descriptor_table_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto_once,
      file_level_metadata_city_2fcognition_2foutput_2fv1_2foutput_5fservice_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace output
}  // namespace cognition
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

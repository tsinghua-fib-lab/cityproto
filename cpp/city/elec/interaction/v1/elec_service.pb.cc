// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/elec/interaction/v1/elec_service.proto

#include "city/elec/interaction/v1/elec_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace elec {
namespace interaction {
namespace v1 {
PROTOBUF_CONSTEXPR SetStatusRequest::SetStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetStatusRequestDefaultTypeInternal() {}
  union {
    SetStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetStatusRequestDefaultTypeInternal _SetStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR SetStatusResponse::SetStatusResponse(
    ::_pbi::ConstantInitialized) {}
struct SetStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetStatusResponseDefaultTypeInternal() {}
  union {
    SetStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetStatusResponseDefaultTypeInternal _SetStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPowerRequest::GetPowerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPowerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerRequestDefaultTypeInternal() {}
  union {
    GetPowerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerRequestDefaultTypeInternal _GetPowerRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPowerResponse::GetPowerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.power_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPowerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerResponseDefaultTypeInternal() {}
  union {
    GetPowerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerResponseDefaultTypeInternal _GetPowerResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPowerStatusRequest::GetPowerStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPowerStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerStatusRequestDefaultTypeInternal() {}
  union {
    GetPowerStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerStatusRequestDefaultTypeInternal _GetPowerStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPowerStatusResponse_PowerStatusEntry_DoNotUse::GetPowerStatusResponse_PowerStatusEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetPowerStatusResponse_PowerStatusEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerStatusResponse_PowerStatusEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerStatusResponse_PowerStatusEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetPowerStatusResponse_PowerStatusEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerStatusResponse_PowerStatusEntry_DoNotUseDefaultTypeInternal _GetPowerStatusResponse_PowerStatusEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetPowerStatusResponse::GetPowerStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.power_status_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPowerStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerStatusResponseDefaultTypeInternal() {}
  union {
    GetPowerStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerStatusResponseDefaultTypeInternal _GetPowerStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR GetNoPowerAOIRequest::GetNoPowerAOIRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flag_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNoPowerAOIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNoPowerAOIRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNoPowerAOIRequestDefaultTypeInternal() {}
  union {
    GetNoPowerAOIRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNoPowerAOIRequestDefaultTypeInternal _GetNoPowerAOIRequest_default_instance_;
PROTOBUF_CONSTEXPR GetNoPowerAOIResponse::GetNoPowerAOIResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.aoi_)*/{}
  , /*decltype(_impl_._aoi_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNoPowerAOIResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNoPowerAOIResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNoPowerAOIResponseDefaultTypeInternal() {}
  union {
    GetNoPowerAOIResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNoPowerAOIResponseDefaultTypeInternal _GetNoPowerAOIResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRuinInfoRequest::GetRuinInfoRequest(
    ::_pbi::ConstantInitialized) {}
struct GetRuinInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRuinInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRuinInfoRequestDefaultTypeInternal() {}
  union {
    GetRuinInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRuinInfoRequestDefaultTypeInternal _GetRuinInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR RuinInfo::RuinInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ratio_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuinInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuinInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuinInfoDefaultTypeInternal() {}
  union {
    RuinInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuinInfoDefaultTypeInternal _RuinInfo_default_instance_;
PROTOBUF_CONSTEXPR GetRuinInfoResponse::GetRuinInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.one_)*/nullptr
  , /*decltype(_impl_.two_)*/nullptr
  , /*decltype(_impl_.three_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRuinInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRuinInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRuinInfoResponseDefaultTypeInternal() {}
  union {
    GetRuinInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRuinInfoResponseDefaultTypeInternal _GetRuinInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetEdgeStatusRequest::GetEdgeStatusRequest(
    ::_pbi::ConstantInitialized) {}
struct GetEdgeStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEdgeStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEdgeStatusRequestDefaultTypeInternal() {}
  union {
    GetEdgeStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEdgeStatusRequestDefaultTypeInternal _GetEdgeStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR GetEdgeStatusResponse::GetEdgeStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reason1_)*/{}
  , /*decltype(_impl_.reason2_)*/{}
  , /*decltype(_impl_.reason3_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEdgeStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEdgeStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEdgeStatusResponseDefaultTypeInternal() {}
  union {
    GetEdgeStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEdgeStatusResponseDefaultTypeInternal _GetEdgeStatusResponse_default_instance_;
}  // namespace v1
}  // namespace interaction
}  // namespace elec
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::SetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::SetStatusRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::SetStatusRequest, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::SetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerResponse, _impl_.power_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusRequest, _impl_.flag_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetPowerStatusResponse, _impl_.power_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetNoPowerAOIRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetNoPowerAOIRequest, _impl_.flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetNoPowerAOIResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetNoPowerAOIResponse, _impl_.aoi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetRuinInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::RuinInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::RuinInfo, _impl_.num_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::RuinInfo, _impl_.ratio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetRuinInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetRuinInfoResponse, _impl_.one_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetRuinInfoResponse, _impl_.two_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetRuinInfoResponse, _impl_.three_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetEdgeStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetEdgeStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetEdgeStatusResponse, _impl_.reason1_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetEdgeStatusResponse, _impl_.reason2_),
  PROTOBUF_FIELD_OFFSET(::city::elec::interaction::v1::GetEdgeStatusResponse, _impl_.reason3_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::elec::interaction::v1::SetStatusRequest)},
  { 8, -1, -1, sizeof(::city::elec::interaction::v1::SetStatusResponse)},
  { 14, -1, -1, sizeof(::city::elec::interaction::v1::GetPowerRequest)},
  { 21, -1, -1, sizeof(::city::elec::interaction::v1::GetPowerResponse)},
  { 28, -1, -1, sizeof(::city::elec::interaction::v1::GetPowerStatusRequest)},
  { 35, 43, -1, sizeof(::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse)},
  { 45, -1, -1, sizeof(::city::elec::interaction::v1::GetPowerStatusResponse)},
  { 52, -1, -1, sizeof(::city::elec::interaction::v1::GetNoPowerAOIRequest)},
  { 59, -1, -1, sizeof(::city::elec::interaction::v1::GetNoPowerAOIResponse)},
  { 66, -1, -1, sizeof(::city::elec::interaction::v1::GetRuinInfoRequest)},
  { 72, -1, -1, sizeof(::city::elec::interaction::v1::RuinInfo)},
  { 80, -1, -1, sizeof(::city::elec::interaction::v1::GetRuinInfoResponse)},
  { 89, -1, -1, sizeof(::city::elec::interaction::v1::GetEdgeStatusRequest)},
  { 95, -1, -1, sizeof(::city::elec::interaction::v1::GetEdgeStatusResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::elec::interaction::v1::_SetStatusRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_SetStatusResponse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetPowerRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_GetPowerResponse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetPowerStatusRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_GetPowerStatusResponse_PowerStatusEntry_DoNotUse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetPowerStatusResponse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetNoPowerAOIRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_GetNoPowerAOIResponse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetRuinInfoRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_RuinInfo_default_instance_._instance,
  &::city::elec::interaction::v1::_GetRuinInfoResponse_default_instance_._instance,
  &::city::elec::interaction::v1::_GetEdgeStatusRequest_default_instance_._instance,
  &::city::elec::interaction::v1::_GetEdgeStatusResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+city/elec/interaction/v1/elec_service."
  "proto\022\030city.elec.interaction.v1\":\n\020SetSt"
  "atusRequest\022\016\n\002id\030\001 \001(\005R\002id\022\026\n\006status\030\002 "
  "\001(\010R\006status\"\023\n\021SetStatusResponse\"!\n\017GetP"
  "owerRequest\022\016\n\002id\030\001 \001(\005R\002id\"(\n\020GetPowerR"
  "esponse\022\024\n\005power\030\001 \001(\001R\005power\"+\n\025GetPowe"
  "rStatusRequest\022\022\n\004flag\030\001 \001(\005R\004flag\"\276\001\n\026G"
  "etPowerStatusResponse\022d\n\014power_status\030\001 "
  "\003(\0132A.city.elec.interaction.v1.GetPowerS"
  "tatusResponse.PowerStatusEntryR\013powerSta"
  "tus\032>\n\020PowerStatusEntry\022\020\n\003key\030\001 \001(\005R\003ke"
  "y\022\024\n\005value\030\002 \001(\001R\005value:\0028\001\"*\n\024GetNoPowe"
  "rAOIRequest\022\022\n\004flag\030\001 \001(\005R\004flag\")\n\025GetNo"
  "PowerAOIResponse\022\020\n\003aoi\030\001 \003(\005R\003aoi\"\024\n\022Ge"
  "tRuinInfoRequest\"2\n\010RuinInfo\022\020\n\003num\030\001 \001("
  "\005R\003num\022\024\n\005ratio\030\002 \001(\001R\005ratio\"\273\001\n\023GetRuin"
  "InfoResponse\0224\n\003one\030\001 \001(\0132\".city.elec.in"
  "teraction.v1.RuinInfoR\003one\0224\n\003two\030\002 \001(\0132"
  "\".city.elec.interaction.v1.RuinInfoR\003two"
  "\0228\n\005three\030\003 \001(\0132\".city.elec.interaction."
  "v1.RuinInfoR\005three\"\026\n\024GetEdgeStatusReque"
  "st\"e\n\025GetEdgeStatusResponse\022\030\n\007reason1\030\001"
  " \003(\tR\007reason1\022\030\n\007reason2\030\002 \003(\tR\007reason2\022"
  "\030\n\007reason3\030\003 \003(\tR\007reason32\233\005\n\013ElecServic"
  "e\022d\n\tSetStatus\022*.city.elec.interaction.v"
  "1.SetStatusRequest\032+.city.elec.interacti"
  "on.v1.SetStatusResponse\022a\n\010GetPower\022).ci"
  "ty.elec.interaction.v1.GetPowerRequest\032*"
  ".city.elec.interaction.v1.GetPowerRespon"
  "se\022s\n\016GetPowerStatus\022/.city.elec.interac"
  "tion.v1.GetPowerStatusRequest\0320.city.ele"
  "c.interaction.v1.GetPowerStatusResponse\022"
  "p\n\rGetNoPowerAOI\022..city.elec.interaction"
  ".v1.GetNoPowerAOIRequest\032/.city.elec.int"
  "eraction.v1.GetNoPowerAOIResponse\022j\n\013Get"
  "RuinInfo\022,.city.elec.interaction.v1.GetR"
  "uinInfoRequest\032-.city.elec.interaction.v"
  "1.GetRuinInfoResponse\022p\n\rGetEdgeStatus\022."
  ".city.elec.interaction.v1.GetEdgeStatusR"
  "equest\032/.city.elec.interaction.v1.GetEdg"
  "eStatusResponseB\373\001\n\034com.city.elec.intera"
  "ction.v1B\020ElecServiceProtoP\001ZFgit.fiblab"
  ".net/sim/protos/go/v2/city/elec/interact"
  "ion/v1;interactionv1\242\002\003CEI\252\002\030City.Elec.I"
  "nteraction.V1\312\002\030City\\Elec\\Interaction\\V1"
  "\342\002$City\\Elec\\Interaction\\V1\\GPBMetadata\352"
  "\002\033City::Elec::Interaction::V1b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto = {
    false, false, 1877, descriptor_table_protodef_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto,
    "city/elec/interaction/v1/elec_service.proto",
    &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once, nullptr, 0, 14,
    schemas, file_default_instances, TableStruct_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto::offsets,
    file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto, file_level_enum_descriptors_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto,
    file_level_service_descriptors_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter() {
  return &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto(&descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto);
namespace city {
namespace elec {
namespace interaction {
namespace v1 {

// ===================================================================

class SetStatusRequest::_Internal {
 public:
};

SetStatusRequest::SetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.SetStatusRequest)
}
SetStatusRequest::SetStatusRequest(const SetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.status_));
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.SetStatusRequest)
}

inline void SetStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetStatusRequest::~SetStatusRequest() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.SetStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.SetStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.SetStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.SetStatusRequest)
  return target;
}

size_t SetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.SetStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetStatusRequest::GetClassData() const { return &_class_data_; }


void SetStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.SetStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetStatusRequest::CopyFrom(const SetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.SetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStatusRequest::IsInitialized() const {
  return true;
}

void SetStatusRequest::InternalSwap(SetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetStatusRequest, _impl_.status_)
      + sizeof(SetStatusRequest::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SetStatusRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[0]);
}

// ===================================================================

class SetStatusResponse::_Internal {
 public:
};

SetStatusResponse::SetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.SetStatusResponse)
}
SetStatusResponse::SetStatusResponse(const SetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetStatusResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.SetStatusResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetStatusResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[1]);
}

// ===================================================================

class GetPowerRequest::_Internal {
 public:
};

GetPowerRequest::GetPowerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetPowerRequest)
}
GetPowerRequest::GetPowerRequest(const GetPowerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPowerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetPowerRequest)
}

inline void GetPowerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPowerRequest::~GetPowerRequest() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetPowerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPowerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPowerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPowerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetPowerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetPowerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetPowerRequest)
  return target;
}

size_t GetPowerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetPowerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPowerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerRequest::GetClassData() const { return &_class_data_; }


void GetPowerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPowerRequest*>(&to_msg);
  auto& from = static_cast<const GetPowerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetPowerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerRequest::CopyFrom(const GetPowerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetPowerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerRequest::IsInitialized() const {
  return true;
}

void GetPowerRequest::InternalSwap(GetPowerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[2]);
}

// ===================================================================

class GetPowerResponse::_Internal {
 public:
};

GetPowerResponse::GetPowerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetPowerResponse)
}
GetPowerResponse::GetPowerResponse(const GetPowerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPowerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.power_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.power_ = from._impl_.power_;
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetPowerResponse)
}

inline void GetPowerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.power_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPowerResponse::~GetPowerResponse() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetPowerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPowerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPowerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPowerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetPowerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.power_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double power = 1 [json_name = "power"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _impl_.power_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetPowerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double power = 1 [json_name = "power"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power = this->_internal_power();
  uint64_t raw_power;
  memcpy(&raw_power, &tmp_power, sizeof(tmp_power));
  if (raw_power != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_power(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetPowerResponse)
  return target;
}

size_t GetPowerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetPowerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double power = 1 [json_name = "power"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power = this->_internal_power();
  uint64_t raw_power;
  memcpy(&raw_power, &tmp_power, sizeof(tmp_power));
  if (raw_power != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPowerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerResponse::GetClassData() const { return &_class_data_; }


void GetPowerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPowerResponse*>(&to_msg);
  auto& from = static_cast<const GetPowerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetPowerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power = from._internal_power();
  uint64_t raw_power;
  memcpy(&raw_power, &tmp_power, sizeof(tmp_power));
  if (raw_power != 0) {
    _this->_internal_set_power(from._internal_power());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerResponse::CopyFrom(const GetPowerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetPowerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerResponse::IsInitialized() const {
  return true;
}

void GetPowerResponse::InternalSwap(GetPowerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.power_, other->_impl_.power_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[3]);
}

// ===================================================================

class GetPowerStatusRequest::_Internal {
 public:
};

GetPowerStatusRequest::GetPowerStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetPowerStatusRequest)
}
GetPowerStatusRequest::GetPowerStatusRequest(const GetPowerStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPowerStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.flag_ = from._impl_.flag_;
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetPowerStatusRequest)
}

inline void GetPowerStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPowerStatusRequest::~GetPowerStatusRequest() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetPowerStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPowerStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPowerStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPowerStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetPowerStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 flag = 1 [json_name = "flag"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetPowerStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetPowerStatusRequest)
  return target;
}

size_t GetPowerStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetPowerStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPowerStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerStatusRequest::GetClassData() const { return &_class_data_; }


void GetPowerStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPowerStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetPowerStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetPowerStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerStatusRequest::CopyFrom(const GetPowerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetPowerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerStatusRequest::IsInitialized() const {
  return true;
}

void GetPowerStatusRequest::InternalSwap(GetPowerStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[4]);
}

// ===================================================================

GetPowerStatusResponse_PowerStatusEntry_DoNotUse::GetPowerStatusResponse_PowerStatusEntry_DoNotUse() {}
GetPowerStatusResponse_PowerStatusEntry_DoNotUse::GetPowerStatusResponse_PowerStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetPowerStatusResponse_PowerStatusEntry_DoNotUse::MergeFrom(const GetPowerStatusResponse_PowerStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetPowerStatusResponse_PowerStatusEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[5]);
}

// ===================================================================

class GetPowerStatusResponse::_Internal {
 public:
};

GetPowerStatusResponse::GetPowerStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetPowerStatusResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetPowerStatusResponse)
}
GetPowerStatusResponse::GetPowerStatusResponse(const GetPowerStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPowerStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.power_status_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.power_status_.MergeFrom(from._impl_.power_status_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetPowerStatusResponse)
}

inline void GetPowerStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.power_status_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPowerStatusResponse::~GetPowerStatusResponse() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetPowerStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetPowerStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.power_status_.Destruct();
  _impl_.power_status_.~MapField();
}

void GetPowerStatusResponse::ArenaDtor(void* object) {
  GetPowerStatusResponse* _this = reinterpret_cast< GetPowerStatusResponse* >(object);
  _this->_impl_.power_status_.Destruct();
}
void GetPowerStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPowerStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetPowerStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.power_status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, double> power_status = 1 [json_name = "powerStatus"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.power_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetPowerStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, double> power_status = 1 [json_name = "powerStatus"];
  if (!this->_internal_power_status().empty()) {
    using MapType = ::_pb::Map<int32_t, double>;
    using WireHelper = GetPowerStatusResponse_PowerStatusEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_power_status();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetPowerStatusResponse)
  return target;
}

size_t GetPowerStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetPowerStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, double> power_status = 1 [json_name = "powerStatus"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_power_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, double >::const_iterator
      it = this->_internal_power_status().begin();
      it != this->_internal_power_status().end(); ++it) {
    total_size += GetPowerStatusResponse_PowerStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPowerStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerStatusResponse::GetClassData() const { return &_class_data_; }


void GetPowerStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPowerStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetPowerStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetPowerStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.power_status_.MergeFrom(from._impl_.power_status_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerStatusResponse::CopyFrom(const GetPowerStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetPowerStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerStatusResponse::IsInitialized() const {
  return true;
}

void GetPowerStatusResponse::InternalSwap(GetPowerStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.power_status_.InternalSwap(&other->_impl_.power_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[6]);
}

// ===================================================================

class GetNoPowerAOIRequest::_Internal {
 public:
};

GetNoPowerAOIRequest::GetNoPowerAOIRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetNoPowerAOIRequest)
}
GetNoPowerAOIRequest::GetNoPowerAOIRequest(const GetNoPowerAOIRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNoPowerAOIRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.flag_ = from._impl_.flag_;
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetNoPowerAOIRequest)
}

inline void GetNoPowerAOIRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNoPowerAOIRequest::~GetNoPowerAOIRequest() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetNoPowerAOIRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNoPowerAOIRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetNoPowerAOIRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNoPowerAOIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetNoPowerAOIRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNoPowerAOIRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 flag = 1 [json_name = "flag"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNoPowerAOIRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetNoPowerAOIRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetNoPowerAOIRequest)
  return target;
}

size_t GetNoPowerAOIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetNoPowerAOIRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNoPowerAOIRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNoPowerAOIRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNoPowerAOIRequest::GetClassData() const { return &_class_data_; }


void GetNoPowerAOIRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNoPowerAOIRequest*>(&to_msg);
  auto& from = static_cast<const GetNoPowerAOIRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetNoPowerAOIRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNoPowerAOIRequest::CopyFrom(const GetNoPowerAOIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetNoPowerAOIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNoPowerAOIRequest::IsInitialized() const {
  return true;
}

void GetNoPowerAOIRequest::InternalSwap(GetNoPowerAOIRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flag_, other->_impl_.flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNoPowerAOIRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[7]);
}

// ===================================================================

class GetNoPowerAOIResponse::_Internal {
 public:
};

GetNoPowerAOIResponse::GetNoPowerAOIResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetNoPowerAOIResponse)
}
GetNoPowerAOIResponse::GetNoPowerAOIResponse(const GetNoPowerAOIResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNoPowerAOIResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_){from._impl_.aoi_}
    , /*decltype(_impl_._aoi_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetNoPowerAOIResponse)
}

inline void GetNoPowerAOIResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_){arena}
    , /*decltype(_impl_._aoi_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNoPowerAOIResponse::~GetNoPowerAOIResponse() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetNoPowerAOIResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNoPowerAOIResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.aoi_.~RepeatedField();
}

void GetNoPowerAOIResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNoPowerAOIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetNoPowerAOIResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.aoi_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNoPowerAOIResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 aoi = 1 [json_name = "aoi"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_aoi(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_aoi(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNoPowerAOIResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetNoPowerAOIResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 aoi = 1 [json_name = "aoi"];
  {
    int byte_size = _impl_._aoi_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_aoi(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetNoPowerAOIResponse)
  return target;
}

size_t GetNoPowerAOIResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetNoPowerAOIResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 aoi = 1 [json_name = "aoi"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.aoi_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._aoi_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNoPowerAOIResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNoPowerAOIResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNoPowerAOIResponse::GetClassData() const { return &_class_data_; }


void GetNoPowerAOIResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNoPowerAOIResponse*>(&to_msg);
  auto& from = static_cast<const GetNoPowerAOIResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetNoPowerAOIResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.aoi_.MergeFrom(from._impl_.aoi_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNoPowerAOIResponse::CopyFrom(const GetNoPowerAOIResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetNoPowerAOIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNoPowerAOIResponse::IsInitialized() const {
  return true;
}

void GetNoPowerAOIResponse::InternalSwap(GetNoPowerAOIResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.aoi_.InternalSwap(&other->_impl_.aoi_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNoPowerAOIResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[8]);
}

// ===================================================================

class GetRuinInfoRequest::_Internal {
 public:
};

GetRuinInfoRequest::GetRuinInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetRuinInfoRequest)
}
GetRuinInfoRequest::GetRuinInfoRequest(const GetRuinInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRuinInfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetRuinInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRuinInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRuinInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRuinInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[9]);
}

// ===================================================================

class RuinInfo::_Internal {
 public:
};

RuinInfo::RuinInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.RuinInfo)
}
RuinInfo::RuinInfo(const RuinInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuinInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ratio_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.ratio_, &from._impl_.ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.ratio_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.RuinInfo)
}

inline void RuinInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ratio_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RuinInfo::~RuinInfo() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.RuinInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuinInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RuinInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuinInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.RuinInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.ratio_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuinInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num = 1 [json_name = "num"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double ratio = 2 [json_name = "ratio"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuinInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.RuinInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1 [json_name = "num"];
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  // double ratio = 2 [json_name = "ratio"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ratio = this->_internal_ratio();
  uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_ratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.RuinInfo)
  return target;
}

size_t RuinInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.RuinInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double ratio = 2 [json_name = "ratio"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ratio = this->_internal_ratio();
  uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    total_size += 1 + 8;
  }

  // int32 num = 1 [json_name = "num"];
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuinInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuinInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuinInfo::GetClassData() const { return &_class_data_; }


void RuinInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuinInfo*>(&to_msg);
  auto& from = static_cast<const RuinInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.RuinInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_ratio = from._internal_ratio();
  uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    _this->_internal_set_ratio(from._internal_ratio());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuinInfo::CopyFrom(const RuinInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.RuinInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuinInfo::IsInitialized() const {
  return true;
}

void RuinInfo::InternalSwap(RuinInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.num_)
      + sizeof(RuinInfo::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.ratio_)>(
          reinterpret_cast<char*>(&_impl_.ratio_),
          reinterpret_cast<char*>(&other->_impl_.ratio_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RuinInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[10]);
}

// ===================================================================

class GetRuinInfoResponse::_Internal {
 public:
  static const ::city::elec::interaction::v1::RuinInfo& one(const GetRuinInfoResponse* msg);
  static const ::city::elec::interaction::v1::RuinInfo& two(const GetRuinInfoResponse* msg);
  static const ::city::elec::interaction::v1::RuinInfo& three(const GetRuinInfoResponse* msg);
};

const ::city::elec::interaction::v1::RuinInfo&
GetRuinInfoResponse::_Internal::one(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.one_;
}
const ::city::elec::interaction::v1::RuinInfo&
GetRuinInfoResponse::_Internal::two(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.two_;
}
const ::city::elec::interaction::v1::RuinInfo&
GetRuinInfoResponse::_Internal::three(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.three_;
}
GetRuinInfoResponse::GetRuinInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetRuinInfoResponse)
}
GetRuinInfoResponse::GetRuinInfoResponse(const GetRuinInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRuinInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.one_){nullptr}
    , decltype(_impl_.two_){nullptr}
    , decltype(_impl_.three_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_one()) {
    _this->_impl_.one_ = new ::city::elec::interaction::v1::RuinInfo(*from._impl_.one_);
  }
  if (from._internal_has_two()) {
    _this->_impl_.two_ = new ::city::elec::interaction::v1::RuinInfo(*from._impl_.two_);
  }
  if (from._internal_has_three()) {
    _this->_impl_.three_ = new ::city::elec::interaction::v1::RuinInfo(*from._impl_.three_);
  }
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetRuinInfoResponse)
}

inline void GetRuinInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.one_){nullptr}
    , decltype(_impl_.two_){nullptr}
    , decltype(_impl_.three_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRuinInfoResponse::~GetRuinInfoResponse() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetRuinInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRuinInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.one_;
  if (this != internal_default_instance()) delete _impl_.two_;
  if (this != internal_default_instance()) delete _impl_.three_;
}

void GetRuinInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRuinInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetRuinInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.one_ != nullptr) {
    delete _impl_.one_;
  }
  _impl_.one_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.two_ != nullptr) {
    delete _impl_.two_;
  }
  _impl_.two_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.three_ != nullptr) {
    delete _impl_.three_;
  }
  _impl_.three_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRuinInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.elec.interaction.v1.RuinInfo one = 1 [json_name = "one"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_one(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .city.elec.interaction.v1.RuinInfo two = 2 [json_name = "two"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_two(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .city.elec.interaction.v1.RuinInfo three = 3 [json_name = "three"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_three(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRuinInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetRuinInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.elec.interaction.v1.RuinInfo one = 1 [json_name = "one"];
  if (this->_internal_has_one()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::one(this),
        _Internal::one(this).GetCachedSize(), target, stream);
  }

  // .city.elec.interaction.v1.RuinInfo two = 2 [json_name = "two"];
  if (this->_internal_has_two()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::two(this),
        _Internal::two(this).GetCachedSize(), target, stream);
  }

  // .city.elec.interaction.v1.RuinInfo three = 3 [json_name = "three"];
  if (this->_internal_has_three()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::three(this),
        _Internal::three(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetRuinInfoResponse)
  return target;
}

size_t GetRuinInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetRuinInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.elec.interaction.v1.RuinInfo one = 1 [json_name = "one"];
  if (this->_internal_has_one()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.one_);
  }

  // .city.elec.interaction.v1.RuinInfo two = 2 [json_name = "two"];
  if (this->_internal_has_two()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.two_);
  }

  // .city.elec.interaction.v1.RuinInfo three = 3 [json_name = "three"];
  if (this->_internal_has_three()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.three_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRuinInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRuinInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRuinInfoResponse::GetClassData() const { return &_class_data_; }


void GetRuinInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRuinInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetRuinInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetRuinInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_one()) {
    _this->_internal_mutable_one()->::city::elec::interaction::v1::RuinInfo::MergeFrom(
        from._internal_one());
  }
  if (from._internal_has_two()) {
    _this->_internal_mutable_two()->::city::elec::interaction::v1::RuinInfo::MergeFrom(
        from._internal_two());
  }
  if (from._internal_has_three()) {
    _this->_internal_mutable_three()->::city::elec::interaction::v1::RuinInfo::MergeFrom(
        from._internal_three());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRuinInfoResponse::CopyFrom(const GetRuinInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetRuinInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRuinInfoResponse::IsInitialized() const {
  return true;
}

void GetRuinInfoResponse::InternalSwap(GetRuinInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.three_)
      + sizeof(GetRuinInfoResponse::_impl_.three_)
      - PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.one_)>(
          reinterpret_cast<char*>(&_impl_.one_),
          reinterpret_cast<char*>(&other->_impl_.one_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRuinInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[11]);
}

// ===================================================================

class GetEdgeStatusRequest::_Internal {
 public:
};

GetEdgeStatusRequest::GetEdgeStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetEdgeStatusRequest)
}
GetEdgeStatusRequest::GetEdgeStatusRequest(const GetEdgeStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetEdgeStatusRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetEdgeStatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEdgeStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEdgeStatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetEdgeStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[12]);
}

// ===================================================================

class GetEdgeStatusResponse::_Internal {
 public:
};

GetEdgeStatusResponse::GetEdgeStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.elec.interaction.v1.GetEdgeStatusResponse)
}
GetEdgeStatusResponse::GetEdgeStatusResponse(const GetEdgeStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEdgeStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reason1_){from._impl_.reason1_}
    , decltype(_impl_.reason2_){from._impl_.reason2_}
    , decltype(_impl_.reason3_){from._impl_.reason3_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.elec.interaction.v1.GetEdgeStatusResponse)
}

inline void GetEdgeStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reason1_){arena}
    , decltype(_impl_.reason2_){arena}
    , decltype(_impl_.reason3_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEdgeStatusResponse::~GetEdgeStatusResponse() {
  // @@protoc_insertion_point(destructor:city.elec.interaction.v1.GetEdgeStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEdgeStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason1_.~RepeatedPtrField();
  _impl_.reason2_.~RepeatedPtrField();
  _impl_.reason3_.~RepeatedPtrField();
}

void GetEdgeStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEdgeStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.elec.interaction.v1.GetEdgeStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason1_.Clear();
  _impl_.reason2_.Clear();
  _impl_.reason3_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEdgeStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string reason1 = 1 [json_name = "reason1"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reason1();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "city.elec.interaction.v1.GetEdgeStatusResponse.reason1"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string reason2 = 2 [json_name = "reason2"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reason2();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "city.elec.interaction.v1.GetEdgeStatusResponse.reason2"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string reason3 = 3 [json_name = "reason3"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reason3();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "city.elec.interaction.v1.GetEdgeStatusResponse.reason3"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEdgeStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.elec.interaction.v1.GetEdgeStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string reason1 = 1 [json_name = "reason1"];
  for (int i = 0, n = this->_internal_reason1_size(); i < n; i++) {
    const auto& s = this->_internal_reason1(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.elec.interaction.v1.GetEdgeStatusResponse.reason1");
    target = stream->WriteString(1, s, target);
  }

  // repeated string reason2 = 2 [json_name = "reason2"];
  for (int i = 0, n = this->_internal_reason2_size(); i < n; i++) {
    const auto& s = this->_internal_reason2(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.elec.interaction.v1.GetEdgeStatusResponse.reason2");
    target = stream->WriteString(2, s, target);
  }

  // repeated string reason3 = 3 [json_name = "reason3"];
  for (int i = 0, n = this->_internal_reason3_size(); i < n; i++) {
    const auto& s = this->_internal_reason3(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.elec.interaction.v1.GetEdgeStatusResponse.reason3");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.elec.interaction.v1.GetEdgeStatusResponse)
  return target;
}

size_t GetEdgeStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.elec.interaction.v1.GetEdgeStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string reason1 = 1 [json_name = "reason1"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.reason1_.size());
  for (int i = 0, n = _impl_.reason1_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.reason1_.Get(i));
  }

  // repeated string reason2 = 2 [json_name = "reason2"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.reason2_.size());
  for (int i = 0, n = _impl_.reason2_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.reason2_.Get(i));
  }

  // repeated string reason3 = 3 [json_name = "reason3"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.reason3_.size());
  for (int i = 0, n = _impl_.reason3_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.reason3_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEdgeStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEdgeStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEdgeStatusResponse::GetClassData() const { return &_class_data_; }


void GetEdgeStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEdgeStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetEdgeStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.elec.interaction.v1.GetEdgeStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.reason1_.MergeFrom(from._impl_.reason1_);
  _this->_impl_.reason2_.MergeFrom(from._impl_.reason2_);
  _this->_impl_.reason3_.MergeFrom(from._impl_.reason3_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEdgeStatusResponse::CopyFrom(const GetEdgeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.elec.interaction.v1.GetEdgeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEdgeStatusResponse::IsInitialized() const {
  return true;
}

void GetEdgeStatusResponse::InternalSwap(GetEdgeStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reason1_.InternalSwap(&other->_impl_.reason1_);
  _impl_.reason2_.InternalSwap(&other->_impl_.reason2_);
  _impl_.reason3_.InternalSwap(&other->_impl_.reason3_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEdgeStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_getter, &descriptor_table_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto_once,
      file_level_metadata_city_2felec_2finteraction_2fv1_2felec_5fservice_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace interaction
}  // namespace elec
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::SetStatusRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::SetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::SetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::SetStatusResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::SetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::SetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetPowerRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetPowerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetPowerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetPowerResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetPowerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetPowerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetPowerStatusRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetPowerStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetPowerStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetPowerStatusResponse_PowerStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetPowerStatusResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetPowerStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetPowerStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetNoPowerAOIRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetNoPowerAOIRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetNoPowerAOIRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetNoPowerAOIResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetNoPowerAOIResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetNoPowerAOIResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetRuinInfoRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetRuinInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetRuinInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::RuinInfo*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::RuinInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::RuinInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetRuinInfoResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetRuinInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetRuinInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetEdgeStatusRequest*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetEdgeStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetEdgeStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::elec::interaction::v1::GetEdgeStatusResponse*
Arena::CreateMaybeMessage< ::city::elec::interaction::v1::GetEdgeStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::elec::interaction::v1::GetEdgeStatusResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

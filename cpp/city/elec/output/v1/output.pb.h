// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/elec/output/v1/output.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2felec_2foutput_2fv1_2foutput_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2felec_2foutput_2fv1_2foutput_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2felec_2foutput_2fv1_2foutput_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2felec_2foutput_2fv1_2foutput_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2felec_2foutput_2fv1_2foutput_2eproto;
namespace city {
namespace elec {
namespace output {
namespace v1 {
class Aoi;
struct AoiDefaultTypeInternal;
extern AoiDefaultTypeInternal _Aoi_default_instance_;
class AveragePower;
struct AveragePowerDefaultTypeInternal;
extern AveragePowerDefaultTypeInternal _AveragePower_default_instance_;
}  // namespace v1
}  // namespace output
}  // namespace elec
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace elec {
namespace output {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Aoi final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.elec.output.v1.Aoi) */ {
 public:
  inline Aoi() : Aoi(nullptr) {}
  ~Aoi() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Aoi(::google::protobuf::internal::ConstantInitialized);

  Aoi(const Aoi& from);
  Aoi(Aoi&& from) noexcept
    : Aoi() {
    *this = ::std::move(from);
  }

  inline Aoi& operator=(const Aoi& from) {
    CopyFrom(from);
    return *this;
  }
  inline Aoi& operator=(Aoi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Aoi& default_instance() {
    return *internal_default_instance();
  }
  static inline const Aoi* internal_default_instance() {
    return reinterpret_cast<const Aoi*>(
               &_Aoi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Aoi& a, Aoi& b) {
    a.Swap(&b);
  }
  inline void Swap(Aoi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Aoi* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Aoi* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Aoi>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Aoi& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Aoi& from) {
    Aoi::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Aoi* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.elec.output.v1.Aoi";
  }
  protected:
  explicit Aoi(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnsatisfiedDemandRatioFieldNumber = 2,
    kIdFieldNumber = 1,
    kUnsatisfiedDemandNumFieldNumber = 3,
    kDemandFieldNumber = 4,
    kSupplyFieldNumber = 5,
  };
  // double unsatisfied_demand_ratio = 2 [json_name = "unsatisfiedDemandRatio"];
  void clear_unsatisfied_demand_ratio() ;
  double unsatisfied_demand_ratio() const;
  void set_unsatisfied_demand_ratio(double value);

  private:
  double _internal_unsatisfied_demand_ratio() const;
  void _internal_set_unsatisfied_demand_ratio(double value);

  public:
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 unsatisfied_demand_num = 3 [json_name = "unsatisfiedDemandNum"];
  void clear_unsatisfied_demand_num() ;
  ::int32_t unsatisfied_demand_num() const;
  void set_unsatisfied_demand_num(::int32_t value);

  private:
  ::int32_t _internal_unsatisfied_demand_num() const;
  void _internal_set_unsatisfied_demand_num(::int32_t value);

  public:
  // double demand = 4 [json_name = "demand"];
  void clear_demand() ;
  double demand() const;
  void set_demand(double value);

  private:
  double _internal_demand() const;
  void _internal_set_demand(double value);

  public:
  // double supply = 5 [json_name = "supply"];
  void clear_supply() ;
  double supply() const;
  void set_supply(double value);

  private:
  double _internal_supply() const;
  void _internal_set_supply(double value);

  public:
  // @@protoc_insertion_point(class_scope:city.elec.output.v1.Aoi)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double unsatisfied_demand_ratio_;
    ::int32_t id_;
    ::int32_t unsatisfied_demand_num_;
    double demand_;
    double supply_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2felec_2foutput_2fv1_2foutput_2eproto;
};// -------------------------------------------------------------------

class AveragePower final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.elec.output.v1.AveragePower) */ {
 public:
  inline AveragePower() : AveragePower(nullptr) {}
  ~AveragePower() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AveragePower(::google::protobuf::internal::ConstantInitialized);

  AveragePower(const AveragePower& from);
  AveragePower(AveragePower&& from) noexcept
    : AveragePower() {
    *this = ::std::move(from);
  }

  inline AveragePower& operator=(const AveragePower& from) {
    CopyFrom(from);
    return *this;
  }
  inline AveragePower& operator=(AveragePower&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AveragePower& default_instance() {
    return *internal_default_instance();
  }
  static inline const AveragePower* internal_default_instance() {
    return reinterpret_cast<const AveragePower*>(
               &_AveragePower_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AveragePower& a, AveragePower& b) {
    a.Swap(&b);
  }
  inline void Swap(AveragePower* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AveragePower* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AveragePower* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AveragePower>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AveragePower& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AveragePower& from) {
    AveragePower::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AveragePower* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.elec.output.v1.AveragePower";
  }
  protected:
  explicit AveragePower(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransformer500FieldNumber = 1,
    kTransformer220FieldNumber = 2,
    kTransformer110FieldNumber = 3,
    kTransformer10FieldNumber = 4,
  };
  // double transformer_500 = 1 [json_name = "transformer500"];
  void clear_transformer_500() ;
  double transformer_500() const;
  void set_transformer_500(double value);

  private:
  double _internal_transformer_500() const;
  void _internal_set_transformer_500(double value);

  public:
  // double transformer_220 = 2 [json_name = "transformer220"];
  void clear_transformer_220() ;
  double transformer_220() const;
  void set_transformer_220(double value);

  private:
  double _internal_transformer_220() const;
  void _internal_set_transformer_220(double value);

  public:
  // double transformer_110 = 3 [json_name = "transformer110"];
  void clear_transformer_110() ;
  double transformer_110() const;
  void set_transformer_110(double value);

  private:
  double _internal_transformer_110() const;
  void _internal_set_transformer_110(double value);

  public:
  // double transformer_10 = 4 [json_name = "transformer10"];
  void clear_transformer_10() ;
  double transformer_10() const;
  void set_transformer_10(double value);

  private:
  double _internal_transformer_10() const;
  void _internal_set_transformer_10(double value);

  public:
  // @@protoc_insertion_point(class_scope:city.elec.output.v1.AveragePower)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double transformer_500_;
    double transformer_220_;
    double transformer_110_;
    double transformer_10_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2felec_2foutput_2fv1_2foutput_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Aoi

// int32 id = 1 [json_name = "id"];
inline void Aoi::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t Aoi::id() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.Aoi.id)
  return _internal_id();
}
inline void Aoi::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.Aoi.id)
}
inline ::int32_t Aoi::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Aoi::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// double unsatisfied_demand_ratio = 2 [json_name = "unsatisfiedDemandRatio"];
inline void Aoi::clear_unsatisfied_demand_ratio() {
  _impl_.unsatisfied_demand_ratio_ = 0;
}
inline double Aoi::unsatisfied_demand_ratio() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.Aoi.unsatisfied_demand_ratio)
  return _internal_unsatisfied_demand_ratio();
}
inline void Aoi::set_unsatisfied_demand_ratio(double value) {
  _internal_set_unsatisfied_demand_ratio(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.Aoi.unsatisfied_demand_ratio)
}
inline double Aoi::_internal_unsatisfied_demand_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.unsatisfied_demand_ratio_;
}
inline void Aoi::_internal_set_unsatisfied_demand_ratio(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unsatisfied_demand_ratio_ = value;
}

// int32 unsatisfied_demand_num = 3 [json_name = "unsatisfiedDemandNum"];
inline void Aoi::clear_unsatisfied_demand_num() {
  _impl_.unsatisfied_demand_num_ = 0;
}
inline ::int32_t Aoi::unsatisfied_demand_num() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.Aoi.unsatisfied_demand_num)
  return _internal_unsatisfied_demand_num();
}
inline void Aoi::set_unsatisfied_demand_num(::int32_t value) {
  _internal_set_unsatisfied_demand_num(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.Aoi.unsatisfied_demand_num)
}
inline ::int32_t Aoi::_internal_unsatisfied_demand_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.unsatisfied_demand_num_;
}
inline void Aoi::_internal_set_unsatisfied_demand_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unsatisfied_demand_num_ = value;
}

// double demand = 4 [json_name = "demand"];
inline void Aoi::clear_demand() {
  _impl_.demand_ = 0;
}
inline double Aoi::demand() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.Aoi.demand)
  return _internal_demand();
}
inline void Aoi::set_demand(double value) {
  _internal_set_demand(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.Aoi.demand)
}
inline double Aoi::_internal_demand() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.demand_;
}
inline void Aoi::_internal_set_demand(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.demand_ = value;
}

// double supply = 5 [json_name = "supply"];
inline void Aoi::clear_supply() {
  _impl_.supply_ = 0;
}
inline double Aoi::supply() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.Aoi.supply)
  return _internal_supply();
}
inline void Aoi::set_supply(double value) {
  _internal_set_supply(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.Aoi.supply)
}
inline double Aoi::_internal_supply() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.supply_;
}
inline void Aoi::_internal_set_supply(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.supply_ = value;
}

// -------------------------------------------------------------------

// AveragePower

// double transformer_500 = 1 [json_name = "transformer500"];
inline void AveragePower::clear_transformer_500() {
  _impl_.transformer_500_ = 0;
}
inline double AveragePower::transformer_500() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.AveragePower.transformer_500)
  return _internal_transformer_500();
}
inline void AveragePower::set_transformer_500(double value) {
  _internal_set_transformer_500(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.AveragePower.transformer_500)
}
inline double AveragePower::_internal_transformer_500() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transformer_500_;
}
inline void AveragePower::_internal_set_transformer_500(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transformer_500_ = value;
}

// double transformer_220 = 2 [json_name = "transformer220"];
inline void AveragePower::clear_transformer_220() {
  _impl_.transformer_220_ = 0;
}
inline double AveragePower::transformer_220() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.AveragePower.transformer_220)
  return _internal_transformer_220();
}
inline void AveragePower::set_transformer_220(double value) {
  _internal_set_transformer_220(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.AveragePower.transformer_220)
}
inline double AveragePower::_internal_transformer_220() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transformer_220_;
}
inline void AveragePower::_internal_set_transformer_220(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transformer_220_ = value;
}

// double transformer_110 = 3 [json_name = "transformer110"];
inline void AveragePower::clear_transformer_110() {
  _impl_.transformer_110_ = 0;
}
inline double AveragePower::transformer_110() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.AveragePower.transformer_110)
  return _internal_transformer_110();
}
inline void AveragePower::set_transformer_110(double value) {
  _internal_set_transformer_110(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.AveragePower.transformer_110)
}
inline double AveragePower::_internal_transformer_110() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transformer_110_;
}
inline void AveragePower::_internal_set_transformer_110(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transformer_110_ = value;
}

// double transformer_10 = 4 [json_name = "transformer10"];
inline void AveragePower::clear_transformer_10() {
  _impl_.transformer_10_ = 0;
}
inline double AveragePower::transformer_10() const {
  // @@protoc_insertion_point(field_get:city.elec.output.v1.AveragePower.transformer_10)
  return _internal_transformer_10();
}
inline void AveragePower::set_transformer_10(double value) {
  _internal_set_transformer_10(value);
  // @@protoc_insertion_point(field_set:city.elec.output.v1.AveragePower.transformer_10)
}
inline double AveragePower::_internal_transformer_10() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transformer_10_;
}
inline void AveragePower::_internal_set_transformer_10(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transformer_10_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace output
}  // namespace elec
}  // namespace city


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2felec_2foutput_2fv1_2foutput_2eproto_2epb_2eh

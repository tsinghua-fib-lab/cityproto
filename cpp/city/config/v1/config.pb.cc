// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/config/v1/config.proto

#include "city/config/v1/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace config {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR MongoPath::MongoPath(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.db_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.col_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MongoPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MongoPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MongoPathDefaultTypeInternal() {}
  union {
    MongoPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MongoPathDefaultTypeInternal _MongoPath_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OutputTarget::OutputTarget(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.sql_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OutputTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutputTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutputTargetDefaultTypeInternal() {}
  union {
    OutputTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutputTargetDefaultTypeInternal _OutputTarget_default_instance_;
}  // namespace v1
}  // namespace config
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fconfig_2fv1_2fconfig_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fconfig_2fv1_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fconfig_2fv1_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fconfig_2fv1_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::config::v1::MongoPath, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::config::v1::MongoPath, _impl_.db_),
    PROTOBUF_FIELD_OFFSET(::city::config::v1::MongoPath, _impl_.col_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::config::v1::OutputTarget, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::config::v1::OutputTarget, _impl_.sql_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::config::v1::MongoPath)},
        {10, -1, -1, sizeof(::city::config::v1::OutputTarget)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::config::v1::_MongoPath_default_instance_._instance,
    &::city::config::v1::_OutputTarget_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fconfig_2fv1_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033city/config/v1/config.proto\022\016city.conf"
    "ig.v1\"-\n\tMongoPath\022\016\n\002db\030\001 \001(\tR\002db\022\020\n\003co"
    "l\030\002 \001(\tR\003col\" \n\014OutputTarget\022\020\n\003sql\030\001 \001("
    "\tR\003sqlB\261\001\n\022com.city.config.v1B\013ConfigPro"
    "toP\001Z4git.fiblab.net/sim/protos/go/city/"
    "config/v1;configv1\242\002\003CCX\252\002\016City.Config.V"
    "1\312\002\016City\\Config\\V1\342\002\032City\\Config\\V1\\GPBM"
    "etadata\352\002\020City::Config::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto = {
    false,
    false,
    314,
    descriptor_table_protodef_city_2fconfig_2fv1_2fconfig_2eproto,
    "city/config/v1/config.proto",
    &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_city_2fconfig_2fv1_2fconfig_2eproto::offsets,
    file_level_metadata_city_2fconfig_2fv1_2fconfig_2eproto,
    file_level_enum_descriptors_city_2fconfig_2fv1_2fconfig_2eproto,
    file_level_service_descriptors_city_2fconfig_2fv1_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_getter() {
  return &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fconfig_2fv1_2fconfig_2eproto(&descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto);
namespace city {
namespace config {
namespace v1 {
// ===================================================================

class MongoPath::_Internal {
 public:
};

MongoPath::MongoPath(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.config.v1.MongoPath)
}
MongoPath::MongoPath(const MongoPath& from) : ::google::protobuf::Message() {
  MongoPath* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.db_){},
      decltype(_impl_.col_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.db_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.db_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_db().empty()) {
    _this->_impl_.db_.Set(from._internal_db(), _this->GetArenaForAllocation());
  }
  _impl_.col_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.col_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_col().empty()) {
    _this->_impl_.col_.Set(from._internal_col(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:city.config.v1.MongoPath)
}
inline void MongoPath::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.db_){},
      decltype(_impl_.col_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.db_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.db_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.col_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.col_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
MongoPath::~MongoPath() {
  // @@protoc_insertion_point(destructor:city.config.v1.MongoPath)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MongoPath::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.db_.Destroy();
  _impl_.col_.Destroy();
}
void MongoPath::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MongoPath::Clear() {
// @@protoc_insertion_point(message_clear_start:city.config.v1.MongoPath)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_.ClearToEmpty();
  _impl_.col_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MongoPath::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> MongoPath::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MongoPath_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string col = 2 [json_name = "col"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MongoPath, _impl_.col_)}},
    // string db = 1 [json_name = "db"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MongoPath, _impl_.db_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string db = 1 [json_name = "db"];
    {PROTOBUF_FIELD_OFFSET(MongoPath, _impl_.db_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string col = 2 [json_name = "col"];
    {PROTOBUF_FIELD_OFFSET(MongoPath, _impl_.col_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\2\3\0\0\0\0\0"
    "city.config.v1.MongoPath"
    "db"
    "col"
  }},
};

::uint8_t* MongoPath::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.config.v1.MongoPath)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string db = 1 [json_name = "db"];
  if (!this->_internal_db().empty()) {
    const std::string& _s = this->_internal_db();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "city.config.v1.MongoPath.db");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string col = 2 [json_name = "col"];
  if (!this->_internal_col().empty()) {
    const std::string& _s = this->_internal_col();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "city.config.v1.MongoPath.col");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.config.v1.MongoPath)
  return target;
}

::size_t MongoPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.config.v1.MongoPath)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db = 1 [json_name = "db"];
  if (!this->_internal_db().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_db());
  }

  // string col = 2 [json_name = "col"];
  if (!this->_internal_col().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_col());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MongoPath::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MongoPath::MergeImpl
};
const ::google::protobuf::Message::ClassData*MongoPath::GetClassData() const { return &_class_data_; }


void MongoPath::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MongoPath*>(&to_msg);
  auto& from = static_cast<const MongoPath&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.config.v1.MongoPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db().empty()) {
    _this->_internal_set_db(from._internal_db());
  }
  if (!from._internal_col().empty()) {
    _this->_internal_set_col(from._internal_col());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MongoPath::CopyFrom(const MongoPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.config.v1.MongoPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MongoPath::IsInitialized() const {
  return true;
}

void MongoPath::InternalSwap(MongoPath* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.db_, lhs_arena,
                                       &other->_impl_.db_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.col_, lhs_arena,
                                       &other->_impl_.col_, rhs_arena);
}

::google::protobuf::Metadata MongoPath::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_getter, &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_once,
      file_level_metadata_city_2fconfig_2fv1_2fconfig_2eproto[0]);
}
// ===================================================================

class OutputTarget::_Internal {
 public:
};

OutputTarget::OutputTarget(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.config.v1.OutputTarget)
}
OutputTarget::OutputTarget(const OutputTarget& from) : ::google::protobuf::Message() {
  OutputTarget* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sql_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.sql_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sql_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sql().empty()) {
    _this->_impl_.sql_.Set(from._internal_sql(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:city.config.v1.OutputTarget)
}
inline void OutputTarget::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sql_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.sql_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.sql_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OutputTarget::~OutputTarget() {
  // @@protoc_insertion_point(destructor:city.config.v1.OutputTarget)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OutputTarget::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sql_.Destroy();
}
void OutputTarget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OutputTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:city.config.v1.OutputTarget)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sql_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OutputTarget::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 39, 2> OutputTarget::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OutputTarget_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string sql = 1 [json_name = "sql"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OutputTarget, _impl_.sql_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sql = 1 [json_name = "sql"];
    {PROTOBUF_FIELD_OFFSET(OutputTarget, _impl_.sql_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\3\0\0\0\0\0\0"
    "city.config.v1.OutputTarget"
    "sql"
  }},
};

::uint8_t* OutputTarget::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.config.v1.OutputTarget)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sql = 1 [json_name = "sql"];
  if (!this->_internal_sql().empty()) {
    const std::string& _s = this->_internal_sql();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "city.config.v1.OutputTarget.sql");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.config.v1.OutputTarget)
  return target;
}

::size_t OutputTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.config.v1.OutputTarget)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sql = 1 [json_name = "sql"];
  if (!this->_internal_sql().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sql());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OutputTarget::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OutputTarget::MergeImpl
};
const ::google::protobuf::Message::ClassData*OutputTarget::GetClassData() const { return &_class_data_; }


void OutputTarget::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OutputTarget*>(&to_msg);
  auto& from = static_cast<const OutputTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.config.v1.OutputTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sql().empty()) {
    _this->_internal_set_sql(from._internal_sql());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutputTarget::CopyFrom(const OutputTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.config.v1.OutputTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OutputTarget::IsInitialized() const {
  return true;
}

void OutputTarget::InternalSwap(OutputTarget* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_, lhs_arena,
                                       &other->_impl_.sql_, rhs_arena);
}

::google::protobuf::Metadata OutputTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_getter, &descriptor_table_city_2fconfig_2fv1_2fconfig_2eproto_once,
      file_level_metadata_city_2fconfig_2fv1_2fconfig_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace config
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

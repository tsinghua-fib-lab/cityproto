// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/agent/v2/agent_service.proto

#include "city/agent/v2/agent_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace agent {
namespace v2 {
PROTOBUF_CONSTEXPR GetAgentRequest::GetAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentRequestDefaultTypeInternal() {}
  union {
    GetAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAgentResponse::GetAgentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.motion_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentResponseDefaultTypeInternal() {}
  union {
    GetAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentResponseDefaultTypeInternal _GetAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR AddAgentRequest::AddAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentRequestDefaultTypeInternal() {}
  union {
    AddAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentRequestDefaultTypeInternal _AddAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR AddAgentResponse::AddAgentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentResponseDefaultTypeInternal() {}
  union {
    AddAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentResponseDefaultTypeInternal _AddAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR SetScheduleRequest::SetScheduleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.schedules_)*/{}
  , /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetScheduleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetScheduleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetScheduleRequestDefaultTypeInternal() {}
  union {
    SetScheduleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetScheduleRequestDefaultTypeInternal _SetScheduleRequest_default_instance_;
PROTOBUF_CONSTEXPR SetScheduleResponse::SetScheduleResponse(
    ::_pbi::ConstantInitialized) {}
struct SetScheduleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetScheduleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetScheduleResponseDefaultTypeInternal() {}
  union {
    SetScheduleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetScheduleResponseDefaultTypeInternal _SetScheduleResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAgentsByLongLatAreaRequest::GetAgentsByLongLatAreaRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.area_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentsByLongLatAreaRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentsByLongLatAreaRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentsByLongLatAreaRequestDefaultTypeInternal() {}
  union {
    GetAgentsByLongLatAreaRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentsByLongLatAreaRequestDefaultTypeInternal _GetAgentsByLongLatAreaRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAgentsByLongLatAreaResponse::GetAgentsByLongLatAreaResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.motions_)*/{}
  , /*decltype(_impl_.step_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentsByLongLatAreaResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentsByLongLatAreaResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentsByLongLatAreaResponseDefaultTypeInternal() {}
  union {
    GetAgentsByLongLatAreaResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentsByLongLatAreaResponseDefaultTypeInternal _GetAgentsByLongLatAreaResponse_default_instance_;
}  // namespace v2
}  // namespace agent
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2fagent_2fv2_2fagent_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2fagent_2fv2_2fagent_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2fagent_2fv2_2fagent_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentRequest, _impl_.agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentResponse, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentResponse, _impl_.motion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::AddAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::AddAgentRequest, _impl_.agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::AddAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::AddAgentResponse, _impl_.agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::SetScheduleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::SetScheduleRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::SetScheduleRequest, _impl_.schedules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::SetScheduleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentsByLongLatAreaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentsByLongLatAreaRequest, _impl_.area_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentsByLongLatAreaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentsByLongLatAreaResponse, _impl_.step_),
  PROTOBUF_FIELD_OFFSET(::city::agent::v2::GetAgentsByLongLatAreaResponse, _impl_.motions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::agent::v2::GetAgentRequest)},
  { 7, -1, -1, sizeof(::city::agent::v2::GetAgentResponse)},
  { 15, -1, -1, sizeof(::city::agent::v2::AddAgentRequest)},
  { 22, -1, -1, sizeof(::city::agent::v2::AddAgentResponse)},
  { 29, -1, -1, sizeof(::city::agent::v2::SetScheduleRequest)},
  { 37, -1, -1, sizeof(::city::agent::v2::SetScheduleResponse)},
  { 43, -1, -1, sizeof(::city::agent::v2::GetAgentsByLongLatAreaRequest)},
  { 50, -1, -1, sizeof(::city::agent::v2::GetAgentsByLongLatAreaResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::agent::v2::_GetAgentRequest_default_instance_._instance,
  &::city::agent::v2::_GetAgentResponse_default_instance_._instance,
  &::city::agent::v2::_AddAgentRequest_default_instance_._instance,
  &::city::agent::v2::_AddAgentResponse_default_instance_._instance,
  &::city::agent::v2::_SetScheduleRequest_default_instance_._instance,
  &::city::agent::v2::_SetScheduleResponse_default_instance_._instance,
  &::city::agent::v2::_GetAgentsByLongLatAreaRequest_default_instance_._instance,
  &::city::agent::v2::_GetAgentsByLongLatAreaResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2fagent_2fv2_2fagent_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!city/agent/v2/agent_service.proto\022\rcit"
  "y.agent.v2\032\031city/agent/v2/agent.proto\032\032c"
  "ity/agent/v2/motion.proto\032\025city/geo/v2/g"
  "eo.proto\032\027city/trip/v2/trip.proto\",\n\017Get"
  "AgentRequest\022\031\n\010agent_id\030\001 \001(\005R\007agentId\""
  "p\n\020GetAgentResponse\022(\n\004base\030\001 \001(\0132\024.city"
  ".agent.v2.AgentR\004base\0222\n\006motion\030\002 \001(\0132\032."
  "city.agent.v2.AgentMotionR\006motion\"=\n\017Add"
  "AgentRequest\022*\n\005agent\030\001 \001(\0132\024.city.agent"
  ".v2.AgentR\005agent\"-\n\020AddAgentResponse\022\031\n\010"
  "agent_id\030\001 \001(\005R\007agentId\"e\n\022SetScheduleRe"
  "quest\022\031\n\010agent_id\030\001 \001(\005R\007agentId\0224\n\tsche"
  "dules\030\002 \003(\0132\026.city.trip.v2.ScheduleR\tsch"
  "edules\"\025\n\023SetScheduleResponse\"M\n\035GetAgen"
  "tsByLongLatAreaRequest\022,\n\004area\030\001 \001(\0132\030.c"
  "ity.geo.v2.LongLatBBoxR\004area\"j\n\036GetAgent"
  "sByLongLatAreaResponse\022\022\n\004step\030\001 \001(\005R\004st"
  "ep\0224\n\007motions\030\002 \003(\0132\032.city.agent.v2.Agen"
  "tMotionR\007motions2\211\003\n\014AgentService\022P\n\010Get"
  "Agent\022\036.city.agent.v2.GetAgentRequest\032\037."
  "city.agent.v2.GetAgentResponse\"\003\210\002\001\022P\n\010A"
  "ddAgent\022\036.city.agent.v2.AddAgentRequest\032"
  "\037.city.agent.v2.AddAgentResponse\"\003\210\002\001\022Y\n"
  "\013SetSchedule\022!.city.agent.v2.SetSchedule"
  "Request\032\".city.agent.v2.SetScheduleRespo"
  "nse\"\003\210\002\001\022z\n\026GetAgentsByLongLatArea\022,.cit"
  "y.agent.v2.GetAgentsByLongLatAreaRequest"
  "\032-.city.agent.v2.GetAgentsByLongLatAreaR"
  "esponse\"\003\210\002\001B\260\001\n\021com.city.agent.v2B\021Agen"
  "tServiceProtoP\001Z2git.fiblab.net/sim/prot"
  "os/go/city/agent/v2;agentv2\242\002\003CAX\252\002\rCity"
  ".Agent.V2\312\002\rCity\\Agent\\V2\342\002\031City\\Agent\\V"
  "2\\GPBMetadata\352\002\017City::Agent::V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_deps[4] = {
  &::descriptor_table_city_2fagent_2fv2_2fagent_2eproto,
  &::descriptor_table_city_2fagent_2fv2_2fmotion_2eproto,
  &::descriptor_table_city_2fgeo_2fv2_2fgeo_2eproto,
  &::descriptor_table_city_2ftrip_2fv2_2ftrip_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto = {
    false, false, 1319, descriptor_table_protodef_city_2fagent_2fv2_2fagent_5fservice_2eproto,
    "city/agent/v2/agent_service.proto",
    &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once, descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_deps, 4, 8,
    schemas, file_default_instances, TableStruct_city_2fagent_2fv2_2fagent_5fservice_2eproto::offsets,
    file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto, file_level_enum_descriptors_city_2fagent_2fv2_2fagent_5fservice_2eproto,
    file_level_service_descriptors_city_2fagent_2fv2_2fagent_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fagent_2fv2_2fagent_5fservice_2eproto(&descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto);
namespace city {
namespace agent {
namespace v2 {

// ===================================================================

class GetAgentRequest::_Internal {
 public:
};

GetAgentRequest::GetAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.GetAgentRequest)
}
GetAgentRequest::GetAgentRequest(const GetAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.GetAgentRequest)
}

inline void GetAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentRequest::~GetAgentRequest() {
  // @@protoc_insertion_point(destructor:city.agent.v2.GetAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.GetAgentRequest)
  return target;
}

size_t GetAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.GetAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentRequest::GetClassData() const { return &_class_data_; }


void GetAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentRequest*>(&to_msg);
  auto& from = static_cast<const GetAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.GetAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentRequest::CopyFrom(const GetAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.GetAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentRequest::IsInitialized() const {
  return true;
}

void GetAgentRequest::InternalSwap(GetAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[0]);
}

// ===================================================================

class GetAgentResponse::_Internal {
 public:
  static const ::city::agent::v2::Agent& base(const GetAgentResponse* msg);
  static const ::city::agent::v2::AgentMotion& motion(const GetAgentResponse* msg);
};

const ::city::agent::v2::Agent&
GetAgentResponse::_Internal::base(const GetAgentResponse* msg) {
  return *msg->_impl_.base_;
}
const ::city::agent::v2::AgentMotion&
GetAgentResponse::_Internal::motion(const GetAgentResponse* msg) {
  return *msg->_impl_.motion_;
}
void GetAgentResponse::clear_base() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
}
void GetAgentResponse::clear_motion() {
  if (GetArenaForAllocation() == nullptr && _impl_.motion_ != nullptr) {
    delete _impl_.motion_;
  }
  _impl_.motion_ = nullptr;
}
GetAgentResponse::GetAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.GetAgentResponse)
}
GetAgentResponse::GetAgentResponse(const GetAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.motion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::city::agent::v2::Agent(*from._impl_.base_);
  }
  if (from._internal_has_motion()) {
    _this->_impl_.motion_ = new ::city::agent::v2::AgentMotion(*from._impl_.motion_);
  }
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.GetAgentResponse)
}

inline void GetAgentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.motion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentResponse::~GetAgentResponse() {
  // @@protoc_insertion_point(destructor:city.agent.v2.GetAgentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.motion_;
}

void GetAgentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.motion_ != nullptr) {
    delete _impl_.motion_;
  }
  _impl_.motion_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.agent.v2.Agent base = 1 [json_name = "base"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .city.agent.v2.AgentMotion motion = 2 [json_name = "motion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_motion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.agent.v2.Agent base = 1 [json_name = "base"];
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .city.agent.v2.AgentMotion motion = 2 [json_name = "motion"];
  if (this->_internal_has_motion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::motion(this),
        _Internal::motion(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.GetAgentResponse)
  return target;
}

size_t GetAgentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.GetAgentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.agent.v2.Agent base = 1 [json_name = "base"];
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .city.agent.v2.AgentMotion motion = 2 [json_name = "motion"];
  if (this->_internal_has_motion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.motion_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentResponse::GetClassData() const { return &_class_data_; }


void GetAgentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentResponse*>(&to_msg);
  auto& from = static_cast<const GetAgentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.GetAgentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::city::agent::v2::Agent::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_motion()) {
    _this->_internal_mutable_motion()->::city::agent::v2::AgentMotion::MergeFrom(
        from._internal_motion());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentResponse::CopyFrom(const GetAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.GetAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentResponse::IsInitialized() const {
  return true;
}

void GetAgentResponse::InternalSwap(GetAgentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_.motion_)
      + sizeof(GetAgentResponse::_impl_.motion_)
      - PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[1]);
}

// ===================================================================

class AddAgentRequest::_Internal {
 public:
  static const ::city::agent::v2::Agent& agent(const AddAgentRequest* msg);
};

const ::city::agent::v2::Agent&
AddAgentRequest::_Internal::agent(const AddAgentRequest* msg) {
  return *msg->_impl_.agent_;
}
void AddAgentRequest::clear_agent() {
  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
}
AddAgentRequest::AddAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.AddAgentRequest)
}
AddAgentRequest::AddAgentRequest(const AddAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_agent()) {
    _this->_impl_.agent_ = new ::city::agent::v2::Agent(*from._impl_.agent_);
  }
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.AddAgentRequest)
}

inline void AddAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentRequest::~AddAgentRequest() {
  // @@protoc_insertion_point(destructor:city.agent.v2.AddAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.agent_;
}

void AddAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.agent.v2.Agent agent = 1 [json_name = "agent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.agent.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::agent(this),
        _Internal::agent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.AddAgentRequest)
  return target;
}

size_t AddAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.AddAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.agent.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.agent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentRequest::GetClassData() const { return &_class_data_; }


void AddAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentRequest*>(&to_msg);
  auto& from = static_cast<const AddAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.AddAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_agent()) {
    _this->_internal_mutable_agent()->::city::agent::v2::Agent::MergeFrom(
        from._internal_agent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentRequest::CopyFrom(const AddAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.AddAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentRequest::IsInitialized() const {
  return true;
}

void AddAgentRequest::InternalSwap(AddAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[2]);
}

// ===================================================================

class AddAgentResponse::_Internal {
 public:
};

AddAgentResponse::AddAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.AddAgentResponse)
}
AddAgentResponse::AddAgentResponse(const AddAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.AddAgentResponse)
}

inline void AddAgentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentResponse::~AddAgentResponse() {
  // @@protoc_insertion_point(destructor:city.agent.v2.AddAgentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AddAgentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.AddAgentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.AddAgentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.AddAgentResponse)
  return target;
}

size_t AddAgentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.AddAgentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentResponse::GetClassData() const { return &_class_data_; }


void AddAgentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentResponse*>(&to_msg);
  auto& from = static_cast<const AddAgentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.AddAgentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentResponse::CopyFrom(const AddAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.AddAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentResponse::IsInitialized() const {
  return true;
}

void AddAgentResponse::InternalSwap(AddAgentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[3]);
}

// ===================================================================

class SetScheduleRequest::_Internal {
 public:
};

void SetScheduleRequest::clear_schedules() {
  _impl_.schedules_.Clear();
}
SetScheduleRequest::SetScheduleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.SetScheduleRequest)
}
SetScheduleRequest::SetScheduleRequest(const SetScheduleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetScheduleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){from._impl_.schedules_}
    , decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.SetScheduleRequest)
}

inline void SetScheduleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){arena}
    , decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetScheduleRequest::~SetScheduleRequest() {
  // @@protoc_insertion_point(destructor:city.agent.v2.SetScheduleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetScheduleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.schedules_.~RepeatedPtrField();
}

void SetScheduleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetScheduleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.SetScheduleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schedules_.Clear();
  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetScheduleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_schedules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetScheduleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.SetScheduleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_schedules_size()); i < n; i++) {
    const auto& repfield = this->_internal_schedules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.SetScheduleRequest)
  return target;
}

size_t SetScheduleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.SetScheduleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
  total_size += 1UL * this->_internal_schedules_size();
  for (const auto& msg : this->_impl_.schedules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetScheduleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetScheduleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetScheduleRequest::GetClassData() const { return &_class_data_; }


void SetScheduleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetScheduleRequest*>(&to_msg);
  auto& from = static_cast<const SetScheduleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.SetScheduleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.schedules_.MergeFrom(from._impl_.schedules_);
  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetScheduleRequest::CopyFrom(const SetScheduleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.SetScheduleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetScheduleRequest::IsInitialized() const {
  return true;
}

void SetScheduleRequest::InternalSwap(SetScheduleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.schedules_.InternalSwap(&other->_impl_.schedules_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetScheduleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[4]);
}

// ===================================================================

class SetScheduleResponse::_Internal {
 public:
};

SetScheduleResponse::SetScheduleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.SetScheduleResponse)
}
SetScheduleResponse::SetScheduleResponse(const SetScheduleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetScheduleResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.SetScheduleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetScheduleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetScheduleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetScheduleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[5]);
}

// ===================================================================

class GetAgentsByLongLatAreaRequest::_Internal {
 public:
  static const ::city::geo::v2::LongLatBBox& area(const GetAgentsByLongLatAreaRequest* msg);
};

const ::city::geo::v2::LongLatBBox&
GetAgentsByLongLatAreaRequest::_Internal::area(const GetAgentsByLongLatAreaRequest* msg) {
  return *msg->_impl_.area_;
}
void GetAgentsByLongLatAreaRequest::clear_area() {
  if (GetArenaForAllocation() == nullptr && _impl_.area_ != nullptr) {
    delete _impl_.area_;
  }
  _impl_.area_ = nullptr;
}
GetAgentsByLongLatAreaRequest::GetAgentsByLongLatAreaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.GetAgentsByLongLatAreaRequest)
}
GetAgentsByLongLatAreaRequest::GetAgentsByLongLatAreaRequest(const GetAgentsByLongLatAreaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentsByLongLatAreaRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.area_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_area()) {
    _this->_impl_.area_ = new ::city::geo::v2::LongLatBBox(*from._impl_.area_);
  }
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.GetAgentsByLongLatAreaRequest)
}

inline void GetAgentsByLongLatAreaRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.area_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentsByLongLatAreaRequest::~GetAgentsByLongLatAreaRequest() {
  // @@protoc_insertion_point(destructor:city.agent.v2.GetAgentsByLongLatAreaRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentsByLongLatAreaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.area_;
}

void GetAgentsByLongLatAreaRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentsByLongLatAreaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.GetAgentsByLongLatAreaRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.area_ != nullptr) {
    delete _impl_.area_;
  }
  _impl_.area_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentsByLongLatAreaRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.geo.v2.LongLatBBox area = 1 [json_name = "area"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_area(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentsByLongLatAreaRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.GetAgentsByLongLatAreaRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.geo.v2.LongLatBBox area = 1 [json_name = "area"];
  if (this->_internal_has_area()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::area(this),
        _Internal::area(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.GetAgentsByLongLatAreaRequest)
  return target;
}

size_t GetAgentsByLongLatAreaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.GetAgentsByLongLatAreaRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.geo.v2.LongLatBBox area = 1 [json_name = "area"];
  if (this->_internal_has_area()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.area_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentsByLongLatAreaRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentsByLongLatAreaRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentsByLongLatAreaRequest::GetClassData() const { return &_class_data_; }


void GetAgentsByLongLatAreaRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentsByLongLatAreaRequest*>(&to_msg);
  auto& from = static_cast<const GetAgentsByLongLatAreaRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.GetAgentsByLongLatAreaRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_area()) {
    _this->_internal_mutable_area()->::city::geo::v2::LongLatBBox::MergeFrom(
        from._internal_area());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentsByLongLatAreaRequest::CopyFrom(const GetAgentsByLongLatAreaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.GetAgentsByLongLatAreaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentsByLongLatAreaRequest::IsInitialized() const {
  return true;
}

void GetAgentsByLongLatAreaRequest::InternalSwap(GetAgentsByLongLatAreaRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.area_, other->_impl_.area_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentsByLongLatAreaRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[6]);
}

// ===================================================================

class GetAgentsByLongLatAreaResponse::_Internal {
 public:
};

void GetAgentsByLongLatAreaResponse::clear_motions() {
  _impl_.motions_.Clear();
}
GetAgentsByLongLatAreaResponse::GetAgentsByLongLatAreaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.agent.v2.GetAgentsByLongLatAreaResponse)
}
GetAgentsByLongLatAreaResponse::GetAgentsByLongLatAreaResponse(const GetAgentsByLongLatAreaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentsByLongLatAreaResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.motions_){from._impl_.motions_}
    , decltype(_impl_.step_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.step_ = from._impl_.step_;
  // @@protoc_insertion_point(copy_constructor:city.agent.v2.GetAgentsByLongLatAreaResponse)
}

inline void GetAgentsByLongLatAreaResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.motions_){arena}
    , decltype(_impl_.step_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentsByLongLatAreaResponse::~GetAgentsByLongLatAreaResponse() {
  // @@protoc_insertion_point(destructor:city.agent.v2.GetAgentsByLongLatAreaResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentsByLongLatAreaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.motions_.~RepeatedPtrField();
}

void GetAgentsByLongLatAreaResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentsByLongLatAreaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.agent.v2.GetAgentsByLongLatAreaResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.motions_.Clear();
  _impl_.step_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentsByLongLatAreaResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 step = 1 [json_name = "step"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.step_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .city.agent.v2.AgentMotion motions = 2 [json_name = "motions"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_motions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentsByLongLatAreaResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.agent.v2.GetAgentsByLongLatAreaResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 step = 1 [json_name = "step"];
  if (this->_internal_step() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_step(), target);
  }

  // repeated .city.agent.v2.AgentMotion motions = 2 [json_name = "motions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_motions_size()); i < n; i++) {
    const auto& repfield = this->_internal_motions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.agent.v2.GetAgentsByLongLatAreaResponse)
  return target;
}

size_t GetAgentsByLongLatAreaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.agent.v2.GetAgentsByLongLatAreaResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.agent.v2.AgentMotion motions = 2 [json_name = "motions"];
  total_size += 1UL * this->_internal_motions_size();
  for (const auto& msg : this->_impl_.motions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 step = 1 [json_name = "step"];
  if (this->_internal_step() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_step());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentsByLongLatAreaResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentsByLongLatAreaResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentsByLongLatAreaResponse::GetClassData() const { return &_class_data_; }


void GetAgentsByLongLatAreaResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentsByLongLatAreaResponse*>(&to_msg);
  auto& from = static_cast<const GetAgentsByLongLatAreaResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.agent.v2.GetAgentsByLongLatAreaResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.motions_.MergeFrom(from._impl_.motions_);
  if (from._internal_step() != 0) {
    _this->_internal_set_step(from._internal_step());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentsByLongLatAreaResponse::CopyFrom(const GetAgentsByLongLatAreaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.agent.v2.GetAgentsByLongLatAreaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentsByLongLatAreaResponse::IsInitialized() const {
  return true;
}

void GetAgentsByLongLatAreaResponse::InternalSwap(GetAgentsByLongLatAreaResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.motions_.InternalSwap(&other->_impl_.motions_);
  swap(_impl_.step_, other->_impl_.step_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentsByLongLatAreaResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_getter, &descriptor_table_city_2fagent_2fv2_2fagent_5fservice_2eproto_once,
      file_level_metadata_city_2fagent_2fv2_2fagent_5fservice_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace agent
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::agent::v2::GetAgentRequest*
Arena::CreateMaybeMessage< ::city::agent::v2::GetAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::GetAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::GetAgentResponse*
Arena::CreateMaybeMessage< ::city::agent::v2::GetAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::GetAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::AddAgentRequest*
Arena::CreateMaybeMessage< ::city::agent::v2::AddAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::AddAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::AddAgentResponse*
Arena::CreateMaybeMessage< ::city::agent::v2::AddAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::AddAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::SetScheduleRequest*
Arena::CreateMaybeMessage< ::city::agent::v2::SetScheduleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::SetScheduleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::SetScheduleResponse*
Arena::CreateMaybeMessage< ::city::agent::v2::SetScheduleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::SetScheduleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::GetAgentsByLongLatAreaRequest*
Arena::CreateMaybeMessage< ::city::agent::v2::GetAgentsByLongLatAreaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::GetAgentsByLongLatAreaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::agent::v2::GetAgentsByLongLatAreaResponse*
Arena::CreateMaybeMessage< ::city::agent::v2::GetAgentsByLongLatAreaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::agent::v2::GetAgentsByLongLatAreaResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/streetview/v1/streetview.proto

#include "city/streetview/v1/streetview.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace streetview {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR StreetViewImage::StreetViewImage(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.object_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.heading_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StreetViewImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreetViewImageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreetViewImageDefaultTypeInternal() {}
  union {
    StreetViewImage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreetViewImageDefaultTypeInternal _StreetViewImage_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StreetView::StreetView(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.images_)*/ {},
      /*decltype(_impl_.lnglat_)*/ nullptr,
    } {}
struct StreetViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreetViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreetViewDefaultTypeInternal() {}
  union {
    StreetView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreetViewDefaultTypeInternal _StreetView_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StreetViews::StreetViews(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.street_views_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StreetViewsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreetViewsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreetViewsDefaultTypeInternal() {}
  union {
    StreetViews _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreetViewsDefaultTypeInternal _StreetViews_default_instance_;
}  // namespace v1
}  // namespace streetview
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fstreetview_2fv1_2fstreetview_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fstreetview_2fv1_2fstreetview_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fstreetview_2fv1_2fstreetview_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fstreetview_2fv1_2fstreetview_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetViewImage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetViewImage, _impl_.heading_),
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetViewImage, _impl_.object_),
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetView, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetView, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetView, _impl_.lnglat_),
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetView, _impl_.images_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetViews, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::streetview::v1::StreetViews, _impl_.street_views_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::streetview::v1::StreetViewImage)},
        {10, 20, -1, sizeof(::city::streetview::v1::StreetView)},
        {22, -1, -1, sizeof(::city::streetview::v1::StreetViews)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::streetview::v1::_StreetViewImage_default_instance_._instance,
    &::city::streetview::v1::_StreetView_default_instance_._instance,
    &::city::streetview::v1::_StreetViews_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fstreetview_2fv1_2fstreetview_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n#city/streetview/v1/streetview.proto\022\022c"
    "ity.streetview.v1\032\025city/geo/v2/geo.proto"
    "\"C\n\017StreetViewImage\022\030\n\007heading\030\001 \001(\001R\007he"
    "ading\022\026\n\006object\030\002 \001(\tR\006object\"\177\n\nStreetV"
    "iew\0224\n\006lnglat\030\001 \001(\0132\034.city.geo.v2.LongLa"
    "tPositionR\006lnglat\022;\n\006images\030\002 \003(\0132#.city"
    ".streetview.v1.StreetViewImageR\006images\"P"
    "\n\013StreetViews\022A\n\014street_views\030\001 \003(\0132\036.ci"
    "ty.streetview.v1.StreetViewR\013streetViews"
    "B\321\001\n\026com.city.streetview.v1B\017StreetviewP"
    "rotoP\001Z<git.fiblab.net/sim/protos/go/cit"
    "y/streetview/v1;streetviewv1\242\002\003CSX\252\002\022Cit"
    "y.Streetview.V1\312\002\022City\\Streetview\\V1\342\002\036C"
    "ity\\Streetview\\V1\\GPBMetadata\352\002\024City::St"
    "reetview::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_deps[1] =
    {
        &::descriptor_table_city_2fgeo_2fv2_2fgeo_2eproto,
};
static ::absl::once_flag descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto = {
    false,
    false,
    580,
    descriptor_table_protodef_city_2fstreetview_2fv1_2fstreetview_2eproto,
    "city/streetview/v1/streetview.proto",
    &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_once,
    descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_city_2fstreetview_2fv1_2fstreetview_2eproto::offsets,
    file_level_metadata_city_2fstreetview_2fv1_2fstreetview_2eproto,
    file_level_enum_descriptors_city_2fstreetview_2fv1_2fstreetview_2eproto,
    file_level_service_descriptors_city_2fstreetview_2fv1_2fstreetview_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_getter() {
  return &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fstreetview_2fv1_2fstreetview_2eproto(&descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto);
namespace city {
namespace streetview {
namespace v1 {
// ===================================================================

class StreetViewImage::_Internal {
 public:
};

StreetViewImage::StreetViewImage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.streetview.v1.StreetViewImage)
}
StreetViewImage::StreetViewImage(const StreetViewImage& from) : ::google::protobuf::Message() {
  StreetViewImage* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_){},
      decltype(_impl_.heading_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.object_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.object_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_object().empty()) {
    _this->_impl_.object_.Set(from._internal_object(), _this->GetArenaForAllocation());
  }
  _this->_impl_.heading_ = from._impl_.heading_;

  // @@protoc_insertion_point(copy_constructor:city.streetview.v1.StreetViewImage)
}
inline void StreetViewImage::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.object_){},
      decltype(_impl_.heading_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.object_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.object_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
StreetViewImage::~StreetViewImage() {
  // @@protoc_insertion_point(destructor:city.streetview.v1.StreetViewImage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreetViewImage::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.object_.Destroy();
}
void StreetViewImage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StreetViewImage::Clear() {
// @@protoc_insertion_point(message_clear_start:city.streetview.v1.StreetViewImage)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_.ClearToEmpty();
  _impl_.heading_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StreetViewImage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> StreetViewImage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StreetViewImage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string object = 2 [json_name = "object"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreetViewImage, _impl_.object_)}},
    // double heading = 1 [json_name = "heading"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(StreetViewImage, _impl_.heading_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double heading = 1 [json_name = "heading"];
    {PROTOBUF_FIELD_OFFSET(StreetViewImage, _impl_.heading_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string object = 2 [json_name = "object"];
    {PROTOBUF_FIELD_OFFSET(StreetViewImage, _impl_.object_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\6\0\0\0\0\0"
    "city.streetview.v1.StreetViewImage"
    "object"
  }},
};

::uint8_t* StreetViewImage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.streetview.v1.StreetViewImage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double heading = 1 [json_name = "heading"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_heading = this->_internal_heading();
  ::uint64_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_heading(), target);
  }

  // string object = 2 [json_name = "object"];
  if (!this->_internal_object().empty()) {
    const std::string& _s = this->_internal_object();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "city.streetview.v1.StreetViewImage.object");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.streetview.v1.StreetViewImage)
  return target;
}

::size_t StreetViewImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.streetview.v1.StreetViewImage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string object = 2 [json_name = "object"];
  if (!this->_internal_object().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_object());
  }

  // double heading = 1 [json_name = "heading"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_heading = this->_internal_heading();
  ::uint64_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StreetViewImage::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StreetViewImage::MergeImpl
};
const ::google::protobuf::Message::ClassData*StreetViewImage::GetClassData() const { return &_class_data_; }


void StreetViewImage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StreetViewImage*>(&to_msg);
  auto& from = static_cast<const StreetViewImage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.streetview.v1.StreetViewImage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_object().empty()) {
    _this->_internal_set_object(from._internal_object());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_heading = from._internal_heading();
  ::uint64_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    _this->_internal_set_heading(from._internal_heading());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreetViewImage::CopyFrom(const StreetViewImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.streetview.v1.StreetViewImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StreetViewImage::IsInitialized() const {
  return true;
}

void StreetViewImage::InternalSwap(StreetViewImage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.object_, lhs_arena,
                                       &other->_impl_.object_, rhs_arena);
        swap(_impl_.heading_, other->_impl_.heading_);
}

::google::protobuf::Metadata StreetViewImage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_getter, &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_once,
      file_level_metadata_city_2fstreetview_2fv1_2fstreetview_2eproto[0]);
}
// ===================================================================

class StreetView::_Internal {
 public:
  using HasBits = decltype(std::declval<StreetView>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StreetView, _impl_._has_bits_);
  static const ::city::geo::v2::LongLatPosition& lnglat(const StreetView* msg);
  static void set_has_lnglat(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::city::geo::v2::LongLatPosition& StreetView::_Internal::lnglat(const StreetView* msg) {
  return *msg->_impl_.lnglat_;
}
void StreetView::clear_lnglat() {
  if (_impl_.lnglat_ != nullptr) _impl_.lnglat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StreetView::StreetView(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.streetview.v1.StreetView)
}
StreetView::StreetView(const StreetView& from) : ::google::protobuf::Message() {
  StreetView* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.images_){from._impl_.images_},
      decltype(_impl_.lnglat_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.lnglat_ = new ::city::geo::v2::LongLatPosition(*from._impl_.lnglat_);
  }

  // @@protoc_insertion_point(copy_constructor:city.streetview.v1.StreetView)
}
inline void StreetView::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.images_){arena},
      decltype(_impl_.lnglat_){nullptr},
  };
}
StreetView::~StreetView() {
  // @@protoc_insertion_point(destructor:city.streetview.v1.StreetView)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreetView::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.lnglat_;
}
void StreetView::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StreetView::Clear() {
// @@protoc_insertion_point(message_clear_start:city.streetview.v1.StreetView)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_images()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lnglat_ != nullptr);
    _impl_.lnglat_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StreetView::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> StreetView::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreetView, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StreetView_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.streetview.v1.StreetViewImage images = 2 [json_name = "images"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(StreetView, _impl_.images_)}},
    // .city.geo.v2.LongLatPosition lnglat = 1 [json_name = "lnglat"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreetView, _impl_.lnglat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .city.geo.v2.LongLatPosition lnglat = 1 [json_name = "lnglat"];
    {PROTOBUF_FIELD_OFFSET(StreetView, _impl_.lnglat_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .city.streetview.v1.StreetViewImage images = 2 [json_name = "images"];
    {PROTOBUF_FIELD_OFFSET(StreetView, _impl_.images_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::geo::v2::LongLatPosition>()},
    {::_pbi::TcParser::GetTable<::city::streetview::v1::StreetViewImage>()},
  }}, {{
  }},
};

::uint8_t* StreetView::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.streetview.v1.StreetView)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .city.geo.v2.LongLatPosition lnglat = 1 [json_name = "lnglat"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::lnglat(this),
        _Internal::lnglat(this).GetCachedSize(), target, stream);
  }

  // repeated .city.streetview.v1.StreetViewImage images = 2 [json_name = "images"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.streetview.v1.StreetView)
  return target;
}

::size_t StreetView::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.streetview.v1.StreetView)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.streetview.v1.StreetViewImage images = 2 [json_name = "images"];
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_internal_images()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .city.geo.v2.LongLatPosition lnglat = 1 [json_name = "lnglat"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.lnglat_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StreetView::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StreetView::MergeImpl
};
const ::google::protobuf::Message::ClassData*StreetView::GetClassData() const { return &_class_data_; }


void StreetView::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StreetView*>(&to_msg);
  auto& from = static_cast<const StreetView&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.streetview.v1.StreetView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_images()->MergeFrom(from._internal_images());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lnglat()->::city::geo::v2::LongLatPosition::MergeFrom(
        from._internal_lnglat());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreetView::CopyFrom(const StreetView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.streetview.v1.StreetView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StreetView::IsInitialized() const {
  return true;
}

void StreetView::InternalSwap(StreetView* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  swap(_impl_.lnglat_, other->_impl_.lnglat_);
}

::google::protobuf::Metadata StreetView::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_getter, &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_once,
      file_level_metadata_city_2fstreetview_2fv1_2fstreetview_2eproto[1]);
}
// ===================================================================

class StreetViews::_Internal {
 public:
};

StreetViews::StreetViews(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.streetview.v1.StreetViews)
}
StreetViews::StreetViews(const StreetViews& from) : ::google::protobuf::Message() {
  StreetViews* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.street_views_){from._impl_.street_views_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.streetview.v1.StreetViews)
}
inline void StreetViews::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.street_views_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
StreetViews::~StreetViews() {
  // @@protoc_insertion_point(destructor:city.streetview.v1.StreetViews)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreetViews::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.street_views_.~RepeatedPtrField();
}
void StreetViews::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StreetViews::Clear() {
// @@protoc_insertion_point(message_clear_start:city.streetview.v1.StreetViews)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_street_views()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StreetViews::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StreetViews::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StreetViews_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.streetview.v1.StreetView street_views = 1 [json_name = "streetViews"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StreetViews, _impl_.street_views_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.streetview.v1.StreetView street_views = 1 [json_name = "streetViews"];
    {PROTOBUF_FIELD_OFFSET(StreetViews, _impl_.street_views_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::streetview::v1::StreetView>()},
  }}, {{
  }},
};

::uint8_t* StreetViews::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.streetview.v1.StreetViews)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.streetview.v1.StreetView street_views = 1 [json_name = "streetViews"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_street_views_size()); i < n; i++) {
    const auto& repfield = this->_internal_street_views().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.streetview.v1.StreetViews)
  return target;
}

::size_t StreetViews::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.streetview.v1.StreetViews)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.streetview.v1.StreetView street_views = 1 [json_name = "streetViews"];
  total_size += 1UL * this->_internal_street_views_size();
  for (const auto& msg : this->_internal_street_views()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StreetViews::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StreetViews::MergeImpl
};
const ::google::protobuf::Message::ClassData*StreetViews::GetClassData() const { return &_class_data_; }


void StreetViews::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StreetViews*>(&to_msg);
  auto& from = static_cast<const StreetViews&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.streetview.v1.StreetViews)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_street_views()->MergeFrom(from._internal_street_views());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreetViews::CopyFrom(const StreetViews& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.streetview.v1.StreetViews)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StreetViews::IsInitialized() const {
  return true;
}

void StreetViews::InternalSwap(StreetViews* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.street_views_.InternalSwap(&other->_impl_.street_views_);
}

::google::protobuf::Metadata StreetViews::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_getter, &descriptor_table_city_2fstreetview_2fv1_2fstreetview_2eproto_once,
      file_level_metadata_city_2fstreetview_2fv1_2fstreetview_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace streetview
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/pause/v1/pause_service.proto

#include "city/pause/v1/pause_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace pause {
namespace v1 {
PROTOBUF_CONSTEXPR PauseRequest::PauseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct PauseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseRequestDefaultTypeInternal() {}
  union {
    PauseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseRequestDefaultTypeInternal _PauseRequest_default_instance_;
PROTOBUF_CONSTEXPR PauseResponse::PauseResponse(
    ::_pbi::ConstantInitialized) {}
struct PauseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseResponseDefaultTypeInternal() {}
  union {
    PauseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseResponseDefaultTypeInternal _PauseResponse_default_instance_;
PROTOBUF_CONSTEXPR ResumeRequest::ResumeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct ResumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResumeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResumeRequestDefaultTypeInternal() {}
  union {
    ResumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResumeRequestDefaultTypeInternal _ResumeRequest_default_instance_;
PROTOBUF_CONSTEXPR ResumeResponse::ResumeResponse(
    ::_pbi::ConstantInitialized) {}
struct ResumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResumeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResumeResponseDefaultTypeInternal() {}
  union {
    ResumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResumeResponseDefaultTypeInternal _ResumeResponse_default_instance_;
}  // namespace v1
}  // namespace pause
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2fpause_2fv1_2fpause_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2fpause_2fv1_2fpause_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2fpause_2fv1_2fpause_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::PauseRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::PauseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::PauseRequest, _impl_.name_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::PauseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::ResumeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::ResumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::ResumeRequest, _impl_.name_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::pause::v1::ResumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::city::pause::v1::PauseRequest)},
  { 8, -1, -1, sizeof(::city::pause::v1::PauseResponse)},
  { 14, 21, -1, sizeof(::city::pause::v1::ResumeRequest)},
  { 22, -1, -1, sizeof(::city::pause::v1::ResumeResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::pause::v1::_PauseRequest_default_instance_._instance,
  &::city::pause::v1::_PauseResponse_default_instance_._instance,
  &::city::pause::v1::_ResumeRequest_default_instance_._instance,
  &::city::pause::v1::_ResumeResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2fpause_2fv1_2fpause_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!city/pause/v1/pause_service.proto\022\rcit"
  "y.pause.v1\"0\n\014PauseRequest\022\027\n\004name\030\001 \001(\t"
  "H\000R\004name\210\001\001B\007\n\005_name\"\017\n\rPauseResponse\"1\n"
  "\rResumeRequest\022\027\n\004name\030\001 \001(\tH\000R\004name\210\001\001B"
  "\007\n\005_name\"\020\n\016ResumeResponse2\231\001\n\014PauseServ"
  "ice\022B\n\005Pause\022\033.city.pause.v1.PauseReques"
  "t\032\034.city.pause.v1.PauseResponse\022E\n\006Resum"
  "e\022\034.city.pause.v1.ResumeRequest\032\035.city.p"
  "ause.v1.ResumeResponseB\263\001\n\021com.city.paus"
  "e.v1B\021PauseServiceProtoP\001Z5git.fiblab.ne"
  "t/sim/protos/v2/go/city/pause/v1;pausev1"
  "\242\002\003CPX\252\002\rCity.Pause.V1\312\002\rCity\\Pause\\V1\342\002"
  "\031City\\Pause\\V1\\GPBMetadata\352\002\017City::Pause"
  "::V1b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto = {
    false, false, 532, descriptor_table_protodef_city_2fpause_2fv1_2fpause_5fservice_2eproto,
    "city/pause/v1/pause_service.proto",
    &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_city_2fpause_2fv1_2fpause_5fservice_2eproto::offsets,
    file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto, file_level_enum_descriptors_city_2fpause_2fv1_2fpause_5fservice_2eproto,
    file_level_service_descriptors_city_2fpause_2fv1_2fpause_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fpause_2fv1_2fpause_5fservice_2eproto(&descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto);
namespace city {
namespace pause {
namespace v1 {

// ===================================================================

class PauseRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PauseRequest>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PauseRequest::PauseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.pause.v1.PauseRequest)
}
PauseRequest::PauseRequest(const PauseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PauseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.pause.v1.PauseRequest)
}

inline void PauseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PauseRequest::~PauseRequest() {
  // @@protoc_insertion_point(destructor:city.pause.v1.PauseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PauseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void PauseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PauseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.pause.v1.PauseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.pause.v1.PauseRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PauseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.pause.v1.PauseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.pause.v1.PauseRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.pause.v1.PauseRequest)
  return target;
}

size_t PauseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.pause.v1.PauseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1 [json_name = "name"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PauseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PauseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PauseRequest::GetClassData() const { return &_class_data_; }


void PauseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PauseRequest*>(&to_msg);
  auto& from = static_cast<const PauseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.pause.v1.PauseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PauseRequest::CopyFrom(const PauseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.pause.v1.PauseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseRequest::IsInitialized() const {
  return true;
}

void PauseRequest::InternalSwap(PauseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_getter, &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once,
      file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto[0]);
}

// ===================================================================

class PauseResponse::_Internal {
 public:
};

PauseResponse::PauseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.pause.v1.PauseResponse)
}
PauseResponse::PauseResponse(const PauseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PauseResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.pause.v1.PauseResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PauseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PauseResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PauseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_getter, &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once,
      file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto[1]);
}

// ===================================================================

class ResumeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ResumeRequest>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ResumeRequest::ResumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.pause.v1.ResumeRequest)
}
ResumeRequest::ResumeRequest(const ResumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResumeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.pause.v1.ResumeRequest)
}

inline void ResumeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResumeRequest::~ResumeRequest() {
  // @@protoc_insertion_point(destructor:city.pause.v1.ResumeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ResumeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.pause.v1.ResumeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResumeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.pause.v1.ResumeRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResumeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.pause.v1.ResumeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.pause.v1.ResumeRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.pause.v1.ResumeRequest)
  return target;
}

size_t ResumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.pause.v1.ResumeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1 [json_name = "name"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResumeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResumeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResumeRequest::GetClassData() const { return &_class_data_; }


void ResumeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResumeRequest*>(&to_msg);
  auto& from = static_cast<const ResumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.pause.v1.ResumeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResumeRequest::CopyFrom(const ResumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.pause.v1.ResumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeRequest::IsInitialized() const {
  return true;
}

void ResumeRequest::InternalSwap(ResumeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_getter, &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once,
      file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto[2]);
}

// ===================================================================

class ResumeResponse::_Internal {
 public:
};

ResumeResponse::ResumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.pause.v1.ResumeResponse)
}
ResumeResponse::ResumeResponse(const ResumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ResumeResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.pause.v1.ResumeResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResumeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResumeResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_getter, &descriptor_table_city_2fpause_2fv1_2fpause_5fservice_2eproto_once,
      file_level_metadata_city_2fpause_2fv1_2fpause_5fservice_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace pause
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::pause::v1::PauseRequest*
Arena::CreateMaybeMessage< ::city::pause::v1::PauseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::pause::v1::PauseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::pause::v1::PauseResponse*
Arena::CreateMaybeMessage< ::city::pause::v1::PauseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::pause::v1::PauseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::pause::v1::ResumeRequest*
Arena::CreateMaybeMessage< ::city::pause::v1::ResumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::pause::v1::ResumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::pause::v1::ResumeResponse*
Arena::CreateMaybeMessage< ::city::pause::v1::ResumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::pause::v1::ResumeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

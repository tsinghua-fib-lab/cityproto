// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/map/v2/aoi_service.proto

#include "city/map/v2/aoi_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace map {
namespace v2 {
        template <typename>
PROTOBUF_CONSTEXPR AoiState::AoiState(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.persons_)*/ {},
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AoiStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AoiStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AoiStateDefaultTypeInternal() {}
  union {
    AoiState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AoiStateDefaultTypeInternal _AoiState_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetAoiRequest::GetAoiRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.aoi_ids_)*/ {},
      /* _impl_._aoi_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetAoiRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAoiRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAoiRequestDefaultTypeInternal() {}
  union {
    GetAoiRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAoiRequestDefaultTypeInternal _GetAoiRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetAoiResponse::GetAoiResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.states_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetAoiResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAoiResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAoiResponseDefaultTypeInternal() {}
  union {
    GetAoiResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAoiResponseDefaultTypeInternal _GetAoiResponse_default_instance_;
}  // namespace v2
}  // namespace map
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fmap_2fv2_2faoi_5fservice_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fmap_2fv2_2faoi_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fmap_2fv2_2faoi_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::AoiState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::AoiState, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::AoiState, _impl_.persons_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetAoiRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetAoiRequest, _impl_.aoi_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetAoiResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetAoiResponse, _impl_.states_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::map::v2::AoiState)},
        {10, -1, -1, sizeof(::city::map::v2::GetAoiRequest)},
        {19, -1, -1, sizeof(::city::map::v2::GetAoiResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::map::v2::_AoiState_default_instance_._instance,
    &::city::map::v2::_GetAoiRequest_default_instance_._instance,
    &::city::map::v2::_GetAoiResponse_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fmap_2fv2_2faoi_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035city/map/v2/aoi_service.proto\022\013city.ma"
    "p.v2\032\033city/person/v1/motion.proto\"R\n\010Aoi"
    "State\022\016\n\002id\030\001 \001(\005R\002id\0226\n\007persons\030\002 \003(\0132\034"
    ".city.person.v1.PersonMotionR\007persons\"(\n"
    "\rGetAoiRequest\022\027\n\007aoi_ids\030\001 \003(\005R\006aoiIds\""
    "\?\n\016GetAoiResponse\022-\n\006states\030\001 \003(\0132\025.city"
    ".map.v2.AoiStateR\006states2O\n\nAoiService\022A"
    "\n\006GetAoi\022\032.city.map.v2.GetAoiRequest\032\033.c"
    "ity.map.v2.GetAoiResponseB\240\001\n\017com.city.m"
    "ap.v2B\017AoiServiceProtoP\001Z.git.fiblab.net"
    "/sim/protos/go/city/map/v2;mapv2\242\002\003CMX\252\002"
    "\013City.Map.V2\312\002\013City\\Map\\V2\342\002\027City\\Map\\V2"
    "\\GPBMetadata\352\002\rCity::Map::V2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_city_2fperson_2fv1_2fmotion_2eproto,
};
static ::absl::once_flag descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto = {
    false,
    false,
    516,
    descriptor_table_protodef_city_2fmap_2fv2_2faoi_5fservice_2eproto,
    "city/map/v2/aoi_service.proto",
    &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_once,
    descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto::offsets,
    file_level_metadata_city_2fmap_2fv2_2faoi_5fservice_2eproto,
    file_level_enum_descriptors_city_2fmap_2fv2_2faoi_5fservice_2eproto,
    file_level_service_descriptors_city_2fmap_2fv2_2faoi_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fmap_2fv2_2faoi_5fservice_2eproto(&descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto);
namespace city {
namespace map {
namespace v2 {
// ===================================================================

class AoiState::_Internal {
 public:
};

void AoiState::clear_persons() {
  _internal_mutable_persons()->Clear();
}
AoiState::AoiState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.AoiState)
}
AoiState::AoiState(const AoiState& from) : ::google::protobuf::Message() {
  AoiState* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.persons_){from._impl_.persons_},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:city.map.v2.AoiState)
}
inline void AoiState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.persons_){arena},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AoiState::~AoiState() {
  // @@protoc_insertion_point(destructor:city.map.v2.AoiState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AoiState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.persons_.~RepeatedPtrField();
}
void AoiState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AoiState::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.AoiState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_persons()->Clear();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AoiState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AoiState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AoiState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AoiState, _impl_.persons_)}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AoiState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AoiState, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(AoiState, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
    {PROTOBUF_FIELD_OFFSET(AoiState, _impl_.persons_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::person::v1::PersonMotion>()},
  }}, {{
  }},
};

::uint8_t* AoiState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.AoiState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_persons_size()); i < n; i++) {
    const auto& repfield = this->_internal_persons().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.AoiState)
  return target;
}

::size_t AoiState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.AoiState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  total_size += 1UL * this->_internal_persons_size();
  for (const auto& msg : this->_internal_persons()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AoiState::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AoiState::MergeImpl
};
const ::google::protobuf::Message::ClassData*AoiState::GetClassData() const { return &_class_data_; }


void AoiState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AoiState*>(&to_msg);
  auto& from = static_cast<const AoiState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.AoiState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_persons()->MergeFrom(from._internal_persons());
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AoiState::CopyFrom(const AoiState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.AoiState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AoiState::IsInitialized() const {
  return true;
}

void AoiState::InternalSwap(AoiState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.persons_.InternalSwap(&other->_impl_.persons_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata AoiState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2faoi_5fservice_2eproto[0]);
}
// ===================================================================

class GetAoiRequest::_Internal {
 public:
};

GetAoiRequest::GetAoiRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetAoiRequest)
}
GetAoiRequest::GetAoiRequest(const GetAoiRequest& from) : ::google::protobuf::Message() {
  GetAoiRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_ids_){from._impl_.aoi_ids_},
      /* _impl_._aoi_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetAoiRequest)
}
inline void GetAoiRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_ids_){arena},
      /* _impl_._aoi_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetAoiRequest::~GetAoiRequest() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetAoiRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetAoiRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.aoi_ids_.~RepeatedField();
}
void GetAoiRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetAoiRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetAoiRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_aoi_ids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetAoiRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetAoiRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetAoiRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAoiRequest, _impl_.aoi_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
    {PROTOBUF_FIELD_OFFSET(GetAoiRequest, _impl_.aoi_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetAoiRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetAoiRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
  {
    int byte_size = _impl_._aoi_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1, _internal_aoi_ids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetAoiRequest)
  return target;
}

::size_t GetAoiRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetAoiRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_aoi_ids())
    ;
    _impl_._aoi_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetAoiRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetAoiRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetAoiRequest::GetClassData() const { return &_class_data_; }


void GetAoiRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetAoiRequest*>(&to_msg);
  auto& from = static_cast<const GetAoiRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetAoiRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_aoi_ids()->MergeFrom(from._internal_aoi_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAoiRequest::CopyFrom(const GetAoiRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetAoiRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetAoiRequest::IsInitialized() const {
  return true;
}

void GetAoiRequest::InternalSwap(GetAoiRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.aoi_ids_.InternalSwap(&other->_impl_.aoi_ids_);
}

::google::protobuf::Metadata GetAoiRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2faoi_5fservice_2eproto[1]);
}
// ===================================================================

class GetAoiResponse::_Internal {
 public:
};

GetAoiResponse::GetAoiResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetAoiResponse)
}
GetAoiResponse::GetAoiResponse(const GetAoiResponse& from) : ::google::protobuf::Message() {
  GetAoiResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){from._impl_.states_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetAoiResponse)
}
inline void GetAoiResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetAoiResponse::~GetAoiResponse() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetAoiResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetAoiResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.states_.~RepeatedPtrField();
}
void GetAoiResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetAoiResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetAoiResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_states()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetAoiResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetAoiResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetAoiResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAoiResponse, _impl_.states_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
    {PROTOBUF_FIELD_OFFSET(GetAoiResponse, _impl_.states_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::map::v2::AoiState>()},
  }}, {{
  }},
};

::uint8_t* GetAoiResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetAoiResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_states_size()); i < n; i++) {
    const auto& repfield = this->_internal_states().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetAoiResponse)
  return target;
}

::size_t GetAoiResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetAoiResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->_internal_states()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetAoiResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetAoiResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetAoiResponse::GetClassData() const { return &_class_data_; }


void GetAoiResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetAoiResponse*>(&to_msg);
  auto& from = static_cast<const GetAoiResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetAoiResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_states()->MergeFrom(from._internal_states());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAoiResponse::CopyFrom(const GetAoiResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetAoiResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetAoiResponse::IsInitialized() const {
  return true;
}

void GetAoiResponse::InternalSwap(GetAoiResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.states_.InternalSwap(&other->_impl_.states_);
}

::google::protobuf::Metadata GetAoiResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2faoi_5fservice_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace map
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

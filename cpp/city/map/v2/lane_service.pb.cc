// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/map/v2/lane_service.proto

#include "city/map/v2/lane_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace map {
namespace v2 {
        template <typename>
PROTOBUF_CONSTEXPR SetLaneMaxVRequest::SetLaneMaxVRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.max_v_)*/ 0,
      /*decltype(_impl_.lane_id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SetLaneMaxVRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLaneMaxVRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLaneMaxVRequestDefaultTypeInternal() {}
  union {
    SetLaneMaxVRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLaneMaxVRequestDefaultTypeInternal _SetLaneMaxVRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SetLaneMaxVResponse::SetLaneMaxVResponse(::_pbi::ConstantInitialized) {}
struct SetLaneMaxVResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLaneMaxVResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLaneMaxVResponseDefaultTypeInternal() {}
  union {
    SetLaneMaxVResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLaneMaxVResponseDefaultTypeInternal _SetLaneMaxVResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetLaneRequest::GetLaneRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lane_ids_)*/ {},
      /* _impl_._lane_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_.exclude_person_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetLaneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneRequestDefaultTypeInternal() {}
  union {
    GetLaneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneRequestDefaultTypeInternal _GetLaneRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetLaneResponse::GetLaneResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.states_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetLaneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneResponseDefaultTypeInternal() {}
  union {
    GetLaneResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneResponseDefaultTypeInternal _GetLaneResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxRequest::GetLaneByLongLatBBoxRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.bbox_)*/ nullptr,
      /*decltype(_impl_.exclude_person_)*/ false,
    } {}
struct GetLaneByLongLatBBoxRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneByLongLatBBoxRequestDefaultTypeInternal() {}
  union {
    GetLaneByLongLatBBoxRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneByLongLatBBoxRequestDefaultTypeInternal _GetLaneByLongLatBBoxRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxResponse::GetLaneByLongLatBBoxResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.states_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetLaneByLongLatBBoxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLaneByLongLatBBoxResponseDefaultTypeInternal() {}
  union {
    GetLaneByLongLatBBoxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLaneByLongLatBBoxResponseDefaultTypeInternal _GetLaneByLongLatBBoxResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LaneState::LaneState(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.persons_)*/ {},
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.restriction_)*/ false,
      /*decltype(_impl_.avg_v_)*/ 0,
      /*decltype(_impl_.light_state_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LaneStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneStateDefaultTypeInternal() {}
  union {
    LaneState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneStateDefaultTypeInternal _LaneState_default_instance_;
}  // namespace v2
}  // namespace map
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fmap_2fv2_2flane_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fmap_2fv2_2flane_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::SetLaneMaxVRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::SetLaneMaxVRequest, _impl_.lane_id_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::SetLaneMaxVRequest, _impl_.max_v_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::SetLaneMaxVResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneRequest, _impl_.lane_ids_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneRequest, _impl_.exclude_person_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneResponse, _impl_.states_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxRequest, _impl_.bbox_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxRequest, _impl_.exclude_person_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::GetLaneByLongLatBBoxResponse, _impl_.states_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _impl_.persons_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _impl_.avg_v_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _impl_.restriction_),
    PROTOBUF_FIELD_OFFSET(::city::map::v2::LaneState, _impl_.light_state_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::map::v2::SetLaneMaxVRequest)},
        {10, -1, -1, sizeof(::city::map::v2::SetLaneMaxVResponse)},
        {18, -1, -1, sizeof(::city::map::v2::GetLaneRequest)},
        {28, -1, -1, sizeof(::city::map::v2::GetLaneResponse)},
        {37, 47, -1, sizeof(::city::map::v2::GetLaneByLongLatBBoxRequest)},
        {49, -1, -1, sizeof(::city::map::v2::GetLaneByLongLatBBoxResponse)},
        {58, -1, -1, sizeof(::city::map::v2::LaneState)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::map::v2::_SetLaneMaxVRequest_default_instance_._instance,
    &::city::map::v2::_SetLaneMaxVResponse_default_instance_._instance,
    &::city::map::v2::_GetLaneRequest_default_instance_._instance,
    &::city::map::v2::_GetLaneResponse_default_instance_._instance,
    &::city::map::v2::_GetLaneByLongLatBBoxRequest_default_instance_._instance,
    &::city::map::v2::_GetLaneByLongLatBBoxResponse_default_instance_._instance,
    &::city::map::v2::_LaneState_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fmap_2fv2_2flane_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036city/map/v2/lane_service.proto\022\013city.m"
    "ap.v2\032\025city/geo/v2/geo.proto\032\027city/map/v"
    "2/light.proto\032\033city/person/v1/motion.pro"
    "to\"B\n\022SetLaneMaxVRequest\022\027\n\007lane_id\030\001 \001("
    "\005R\006laneId\022\023\n\005max_v\030\002 \001(\001R\004maxV\"\025\n\023SetLan"
    "eMaxVResponse\"R\n\016GetLaneRequest\022\031\n\010lane_"
    "ids\030\001 \003(\005R\007laneIds\022%\n\016exclude_person\030\002 \001"
    "(\010R\rexcludePerson\"A\n\017GetLaneResponse\022.\n\006"
    "states\030\001 \003(\0132\026.city.map.v2.LaneStateR\006st"
    "ates\"r\n\033GetLaneByLongLatBBoxRequest\022,\n\004b"
    "box\030\001 \001(\0132\030.city.geo.v2.LongLatBBoxR\004bbo"
    "x\022%\n\016exclude_person\030\002 \001(\010R\rexcludePerson"
    "\"N\n\034GetLaneByLongLatBBoxResponse\022.\n\006stat"
    "es\030\001 \003(\0132\026.city.map.v2.LaneStateR\006states"
    "\"\304\001\n\tLaneState\022\016\n\002id\030\001 \001(\005R\002id\0226\n\007person"
    "s\030\002 \003(\0132\034.city.person.v1.PersonMotionR\007p"
    "ersons\022\023\n\005avg_v\030\003 \001(\001R\004avgV\022 \n\013restricti"
    "on\030\004 \001(\010R\013restriction\0228\n\013light_state\030\005 \001"
    "(\0162\027.city.map.v2.LightStateR\nlightState2"
    "\222\002\n\013LaneService\022P\n\013SetLaneMaxV\022\037.city.ma"
    "p.v2.SetLaneMaxVRequest\032 .city.map.v2.Se"
    "tLaneMaxVResponse\022D\n\007GetLane\022\033.city.map."
    "v2.GetLaneRequest\032\034.city.map.v2.GetLaneR"
    "esponse\022k\n\024GetLaneByLongLatBBox\022(.city.m"
    "ap.v2.GetLaneByLongLatBBoxRequest\032).city"
    ".map.v2.GetLaneByLongLatBBoxResponseB\241\001\n"
    "\017com.city.map.v2B\020LaneServiceProtoP\001Z.gi"
    "t.fiblab.net/sim/protos/go/city/map/v2;m"
    "apv2\242\002\003CMX\252\002\013City.Map.V2\312\002\013City\\Map\\V2\342\002"
    "\027City\\Map\\V2\\GPBMetadata\352\002\rCity::Map::V2"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_deps[3] =
    {
        &::descriptor_table_city_2fgeo_2fv2_2fgeo_2eproto,
        &::descriptor_table_city_2fmap_2fv2_2flight_2eproto,
        &::descriptor_table_city_2fperson_2fv1_2fmotion_2eproto,
};
static ::absl::once_flag descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto = {
    false,
    false,
    1208,
    descriptor_table_protodef_city_2fmap_2fv2_2flane_5fservice_2eproto,
    "city/map/v2/lane_service.proto",
    &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
    descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_deps,
    3,
    7,
    schemas,
    file_default_instances,
    TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto::offsets,
    file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto,
    file_level_enum_descriptors_city_2fmap_2fv2_2flane_5fservice_2eproto,
    file_level_service_descriptors_city_2fmap_2fv2_2flane_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fmap_2fv2_2flane_5fservice_2eproto(&descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto);
namespace city {
namespace map {
namespace v2 {
// ===================================================================

class SetLaneMaxVRequest::_Internal {
 public:
};

SetLaneMaxVRequest::SetLaneMaxVRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.SetLaneMaxVRequest)
}
SetLaneMaxVRequest::SetLaneMaxVRequest(const SetLaneMaxVRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.map.v2.SetLaneMaxVRequest)
}
inline void SetLaneMaxVRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.max_v_){0},
      decltype(_impl_.lane_id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SetLaneMaxVRequest::~SetLaneMaxVRequest() {
  // @@protoc_insertion_point(destructor:city.map.v2.SetLaneMaxVRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLaneMaxVRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SetLaneMaxVRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SetLaneMaxVRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.SetLaneMaxVRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.max_v_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lane_id_) -
      reinterpret_cast<char*>(&_impl_.max_v_)) + sizeof(_impl_.lane_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLaneMaxVRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetLaneMaxVRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetLaneMaxVRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double max_v = 2 [json_name = "maxV"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.max_v_)}},
    // int32 lane_id = 1 [json_name = "laneId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetLaneMaxVRequest, _impl_.lane_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.lane_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 lane_id = 1 [json_name = "laneId"];
    {PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.lane_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double max_v = 2 [json_name = "maxV"];
    {PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.max_v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetLaneMaxVRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.SetLaneMaxVRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 lane_id = 1 [json_name = "laneId"];
  if (this->_internal_lane_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_lane_id(), target);
  }

  // double max_v = 2 [json_name = "maxV"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_v = this->_internal_max_v();
  ::uint64_t raw_max_v;
  memcpy(&raw_max_v, &tmp_max_v, sizeof(tmp_max_v));
  if (raw_max_v != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_max_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.SetLaneMaxVRequest)
  return target;
}

::size_t SetLaneMaxVRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.SetLaneMaxVRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double max_v = 2 [json_name = "maxV"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_v = this->_internal_max_v();
  ::uint64_t raw_max_v;
  memcpy(&raw_max_v, &tmp_max_v, sizeof(tmp_max_v));
  if (raw_max_v != 0) {
    total_size += 9;
  }

  // int32 lane_id = 1 [json_name = "laneId"];
  if (this->_internal_lane_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lane_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLaneMaxVRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SetLaneMaxVRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SetLaneMaxVRequest::GetClassData() const { return &_class_data_; }


void SetLaneMaxVRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLaneMaxVRequest*>(&to_msg);
  auto& from = static_cast<const SetLaneMaxVRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.SetLaneMaxVRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_v = from._internal_max_v();
  ::uint64_t raw_max_v;
  memcpy(&raw_max_v, &tmp_max_v, sizeof(tmp_max_v));
  if (raw_max_v != 0) {
    _this->_internal_set_max_v(from._internal_max_v());
  }
  if (from._internal_lane_id() != 0) {
    _this->_internal_set_lane_id(from._internal_lane_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLaneMaxVRequest::CopyFrom(const SetLaneMaxVRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.SetLaneMaxVRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLaneMaxVRequest::IsInitialized() const {
  return true;
}

void SetLaneMaxVRequest::InternalSwap(SetLaneMaxVRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.lane_id_)
      + sizeof(SetLaneMaxVRequest::_impl_.lane_id_)
      - PROTOBUF_FIELD_OFFSET(SetLaneMaxVRequest, _impl_.max_v_)>(
          reinterpret_cast<char*>(&_impl_.max_v_),
          reinterpret_cast<char*>(&other->_impl_.max_v_));
}

::google::protobuf::Metadata SetLaneMaxVRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[0]);
}
// ===================================================================

class SetLaneMaxVResponse::_Internal {
 public:
};

SetLaneMaxVResponse::SetLaneMaxVResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.map.v2.SetLaneMaxVResponse)
}
SetLaneMaxVResponse::SetLaneMaxVResponse(const SetLaneMaxVResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SetLaneMaxVResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.map.v2.SetLaneMaxVResponse)
}




const ::google::protobuf::Message::ClassData SetLaneMaxVResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SetLaneMaxVResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SetLaneMaxVResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[1]);
}
// ===================================================================

class GetLaneRequest::_Internal {
 public:
};

GetLaneRequest::GetLaneRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetLaneRequest)
}
GetLaneRequest::GetLaneRequest(const GetLaneRequest& from) : ::google::protobuf::Message() {
  GetLaneRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lane_ids_){from._impl_.lane_ids_},
      /* _impl_._lane_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.exclude_person_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.exclude_person_ = from._impl_.exclude_person_;

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetLaneRequest)
}
inline void GetLaneRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lane_ids_){arena},
      /* _impl_._lane_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.exclude_person_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetLaneRequest::~GetLaneRequest() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetLaneRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLaneRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lane_ids_.~RepeatedField();
}
void GetLaneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetLaneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetLaneRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_lane_ids()->Clear();
  _impl_.exclude_person_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetLaneRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GetLaneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetLaneRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool exclude_person = 2 [json_name = "excludePerson"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetLaneRequest, _impl_.exclude_person_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetLaneRequest, _impl_.exclude_person_)}},
    // repeated int32 lane_ids = 1 [json_name = "laneIds"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLaneRequest, _impl_.lane_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 lane_ids = 1 [json_name = "laneIds"];
    {PROTOBUF_FIELD_OFFSET(GetLaneRequest, _impl_.lane_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // bool exclude_person = 2 [json_name = "excludePerson"];
    {PROTOBUF_FIELD_OFFSET(GetLaneRequest, _impl_.exclude_person_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetLaneRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetLaneRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 lane_ids = 1 [json_name = "laneIds"];
  {
    int byte_size = _impl_._lane_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1, _internal_lane_ids(),
                                                 byte_size, target);
    }
  }

  // bool exclude_person = 2 [json_name = "excludePerson"];
  if (this->_internal_exclude_person() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_exclude_person(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetLaneRequest)
  return target;
}

::size_t GetLaneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetLaneRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 lane_ids = 1 [json_name = "laneIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_lane_ids())
    ;
    _impl_._lane_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // bool exclude_person = 2 [json_name = "excludePerson"];
  if (this->_internal_exclude_person() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetLaneRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetLaneRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetLaneRequest::GetClassData() const { return &_class_data_; }


void GetLaneRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetLaneRequest*>(&to_msg);
  auto& from = static_cast<const GetLaneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetLaneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lane_ids()->MergeFrom(from._internal_lane_ids());
  if (from._internal_exclude_person() != 0) {
    _this->_internal_set_exclude_person(from._internal_exclude_person());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneRequest::CopyFrom(const GetLaneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetLaneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetLaneRequest::IsInitialized() const {
  return true;
}

void GetLaneRequest::InternalSwap(GetLaneRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lane_ids_.InternalSwap(&other->_impl_.lane_ids_);
        swap(_impl_.exclude_person_, other->_impl_.exclude_person_);
}

::google::protobuf::Metadata GetLaneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[2]);
}
// ===================================================================

class GetLaneResponse::_Internal {
 public:
};

GetLaneResponse::GetLaneResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetLaneResponse)
}
GetLaneResponse::GetLaneResponse(const GetLaneResponse& from) : ::google::protobuf::Message() {
  GetLaneResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){from._impl_.states_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetLaneResponse)
}
inline void GetLaneResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetLaneResponse::~GetLaneResponse() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetLaneResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLaneResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.states_.~RepeatedPtrField();
}
void GetLaneResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetLaneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetLaneResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_states()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetLaneResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetLaneResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetLaneResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLaneResponse, _impl_.states_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
    {PROTOBUF_FIELD_OFFSET(GetLaneResponse, _impl_.states_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::map::v2::LaneState>()},
  }}, {{
  }},
};

::uint8_t* GetLaneResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetLaneResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_states_size()); i < n; i++) {
    const auto& repfield = this->_internal_states().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetLaneResponse)
  return target;
}

::size_t GetLaneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetLaneResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->_internal_states()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetLaneResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetLaneResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetLaneResponse::GetClassData() const { return &_class_data_; }


void GetLaneResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetLaneResponse*>(&to_msg);
  auto& from = static_cast<const GetLaneResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetLaneResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_states()->MergeFrom(from._internal_states());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneResponse::CopyFrom(const GetLaneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetLaneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetLaneResponse::IsInitialized() const {
  return true;
}

void GetLaneResponse::InternalSwap(GetLaneResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.states_.InternalSwap(&other->_impl_.states_);
}

::google::protobuf::Metadata GetLaneResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[3]);
}
// ===================================================================

class GetLaneByLongLatBBoxRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLaneByLongLatBBoxRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_._has_bits_);
  static const ::city::geo::v2::LongLatBBox& bbox(const GetLaneByLongLatBBoxRequest* msg);
  static void set_has_bbox(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::city::geo::v2::LongLatBBox& GetLaneByLongLatBBoxRequest::_Internal::bbox(const GetLaneByLongLatBBoxRequest* msg) {
  return *msg->_impl_.bbox_;
}
void GetLaneByLongLatBBoxRequest::clear_bbox() {
  if (_impl_.bbox_ != nullptr) _impl_.bbox_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetLaneByLongLatBBoxRequest::GetLaneByLongLatBBoxRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetLaneByLongLatBBoxRequest)
}
GetLaneByLongLatBBoxRequest::GetLaneByLongLatBBoxRequest(const GetLaneByLongLatBBoxRequest& from) : ::google::protobuf::Message() {
  GetLaneByLongLatBBoxRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bbox_){nullptr},
      decltype(_impl_.exclude_person_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.bbox_ = new ::city::geo::v2::LongLatBBox(*from._impl_.bbox_);
  }
  _this->_impl_.exclude_person_ = from._impl_.exclude_person_;

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetLaneByLongLatBBoxRequest)
}
inline void GetLaneByLongLatBBoxRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.bbox_){nullptr},
      decltype(_impl_.exclude_person_){false},
  };
}
GetLaneByLongLatBBoxRequest::~GetLaneByLongLatBBoxRequest() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetLaneByLongLatBBoxRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLaneByLongLatBBoxRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bbox_;
}
void GetLaneByLongLatBBoxRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetLaneByLongLatBBoxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetLaneByLongLatBBoxRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bbox_ != nullptr);
    _impl_.bbox_->Clear();
  }
  _impl_.exclude_person_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetLaneByLongLatBBoxRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GetLaneByLongLatBBoxRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetLaneByLongLatBBoxRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool exclude_person = 2 [json_name = "excludePerson"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetLaneByLongLatBBoxRequest, _impl_.exclude_person_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.exclude_person_)}},
    // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.bbox_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
    {PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.bbox_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool exclude_person = 2 [json_name = "excludePerson"];
    {PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.exclude_person_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::geo::v2::LongLatBBox>()},
  }}, {{
  }},
};

::uint8_t* GetLaneByLongLatBBoxRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetLaneByLongLatBBoxRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bbox(this),
        _Internal::bbox(this).GetCachedSize(), target, stream);
  }

  // bool exclude_person = 2 [json_name = "excludePerson"];
  if (this->_internal_exclude_person() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_exclude_person(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetLaneByLongLatBBoxRequest)
  return target;
}

::size_t GetLaneByLongLatBBoxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetLaneByLongLatBBoxRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.bbox_);
  }

  // bool exclude_person = 2 [json_name = "excludePerson"];
  if (this->_internal_exclude_person() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetLaneByLongLatBBoxRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetLaneByLongLatBBoxRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetLaneByLongLatBBoxRequest::GetClassData() const { return &_class_data_; }


void GetLaneByLongLatBBoxRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetLaneByLongLatBBoxRequest*>(&to_msg);
  auto& from = static_cast<const GetLaneByLongLatBBoxRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetLaneByLongLatBBoxRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bbox()->::city::geo::v2::LongLatBBox::MergeFrom(
        from._internal_bbox());
  }
  if (from._internal_exclude_person() != 0) {
    _this->_internal_set_exclude_person(from._internal_exclude_person());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneByLongLatBBoxRequest::CopyFrom(const GetLaneByLongLatBBoxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetLaneByLongLatBBoxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetLaneByLongLatBBoxRequest::IsInitialized() const {
  return true;
}

void GetLaneByLongLatBBoxRequest::InternalSwap(GetLaneByLongLatBBoxRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.exclude_person_)
      + sizeof(GetLaneByLongLatBBoxRequest::_impl_.exclude_person_)
      - PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxRequest, _impl_.bbox_)>(
          reinterpret_cast<char*>(&_impl_.bbox_),
          reinterpret_cast<char*>(&other->_impl_.bbox_));
}

::google::protobuf::Metadata GetLaneByLongLatBBoxRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[4]);
}
// ===================================================================

class GetLaneByLongLatBBoxResponse::_Internal {
 public:
};

GetLaneByLongLatBBoxResponse::GetLaneByLongLatBBoxResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.GetLaneByLongLatBBoxResponse)
}
GetLaneByLongLatBBoxResponse::GetLaneByLongLatBBoxResponse(const GetLaneByLongLatBBoxResponse& from) : ::google::protobuf::Message() {
  GetLaneByLongLatBBoxResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){from._impl_.states_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.map.v2.GetLaneByLongLatBBoxResponse)
}
inline void GetLaneByLongLatBBoxResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.states_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetLaneByLongLatBBoxResponse::~GetLaneByLongLatBBoxResponse() {
  // @@protoc_insertion_point(destructor:city.map.v2.GetLaneByLongLatBBoxResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLaneByLongLatBBoxResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.states_.~RepeatedPtrField();
}
void GetLaneByLongLatBBoxResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetLaneByLongLatBBoxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.GetLaneByLongLatBBoxResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_states()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetLaneByLongLatBBoxResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetLaneByLongLatBBoxResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetLaneByLongLatBBoxResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxResponse, _impl_.states_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
    {PROTOBUF_FIELD_OFFSET(GetLaneByLongLatBBoxResponse, _impl_.states_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::map::v2::LaneState>()},
  }}, {{
  }},
};

::uint8_t* GetLaneByLongLatBBoxResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.GetLaneByLongLatBBoxResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_states_size()); i < n; i++) {
    const auto& repfield = this->_internal_states().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.GetLaneByLongLatBBoxResponse)
  return target;
}

::size_t GetLaneByLongLatBBoxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.GetLaneByLongLatBBoxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  total_size += 1UL * this->_internal_states_size();
  for (const auto& msg : this->_internal_states()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetLaneByLongLatBBoxResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetLaneByLongLatBBoxResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetLaneByLongLatBBoxResponse::GetClassData() const { return &_class_data_; }


void GetLaneByLongLatBBoxResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetLaneByLongLatBBoxResponse*>(&to_msg);
  auto& from = static_cast<const GetLaneByLongLatBBoxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.GetLaneByLongLatBBoxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_states()->MergeFrom(from._internal_states());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLaneByLongLatBBoxResponse::CopyFrom(const GetLaneByLongLatBBoxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.GetLaneByLongLatBBoxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetLaneByLongLatBBoxResponse::IsInitialized() const {
  return true;
}

void GetLaneByLongLatBBoxResponse::InternalSwap(GetLaneByLongLatBBoxResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.states_.InternalSwap(&other->_impl_.states_);
}

::google::protobuf::Metadata GetLaneByLongLatBBoxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[5]);
}
// ===================================================================

class LaneState::_Internal {
 public:
};

void LaneState::clear_persons() {
  _internal_mutable_persons()->Clear();
}
LaneState::LaneState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.map.v2.LaneState)
}
LaneState::LaneState(const LaneState& from) : ::google::protobuf::Message() {
  LaneState* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.persons_){from._impl_.persons_},
      decltype(_impl_.id_){},
      decltype(_impl_.restriction_){},
      decltype(_impl_.avg_v_){},
      decltype(_impl_.light_state_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.light_state_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.light_state_));

  // @@protoc_insertion_point(copy_constructor:city.map.v2.LaneState)
}
inline void LaneState::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.persons_){arena},
      decltype(_impl_.id_){0},
      decltype(_impl_.restriction_){false},
      decltype(_impl_.avg_v_){0},
      decltype(_impl_.light_state_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
LaneState::~LaneState() {
  // @@protoc_insertion_point(destructor:city.map.v2.LaneState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneState::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.persons_.~RepeatedPtrField();
}
void LaneState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LaneState::Clear() {
// @@protoc_insertion_point(message_clear_start:city.map.v2.LaneState)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_persons()->Clear();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.light_state_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.light_state_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LaneState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> LaneState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LaneState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneState, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LaneState, _impl_.id_)}},
    // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LaneState, _impl_.persons_)}},
    // double avg_v = 3 [json_name = "avgV"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(LaneState, _impl_.avg_v_)}},
    // bool restriction = 4 [json_name = "restriction"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LaneState, _impl_.restriction_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(LaneState, _impl_.restriction_)}},
    // .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneState, _impl_.light_state_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(LaneState, _impl_.light_state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(LaneState, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
    {PROTOBUF_FIELD_OFFSET(LaneState, _impl_.persons_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double avg_v = 3 [json_name = "avgV"];
    {PROTOBUF_FIELD_OFFSET(LaneState, _impl_.avg_v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool restriction = 4 [json_name = "restriction"];
    {PROTOBUF_FIELD_OFFSET(LaneState, _impl_.restriction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
    {PROTOBUF_FIELD_OFFSET(LaneState, _impl_.light_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::person::v1::PersonMotion>()},
  }}, {{
  }},
};

::uint8_t* LaneState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.map.v2.LaneState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_persons_size()); i < n; i++) {
    const auto& repfield = this->_internal_persons().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // double avg_v = 3 [json_name = "avgV"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_avg_v = this->_internal_avg_v();
  ::uint64_t raw_avg_v;
  memcpy(&raw_avg_v, &tmp_avg_v, sizeof(tmp_avg_v));
  if (raw_avg_v != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_avg_v(), target);
  }

  // bool restriction = 4 [json_name = "restriction"];
  if (this->_internal_restriction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_restriction(), target);
  }

  // .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
  if (this->_internal_light_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_light_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.map.v2.LaneState)
  return target;
}

::size_t LaneState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.map.v2.LaneState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  total_size += 1UL * this->_internal_persons_size();
  for (const auto& msg : this->_internal_persons()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // bool restriction = 4 [json_name = "restriction"];
  if (this->_internal_restriction() != 0) {
    total_size += 2;
  }

  // double avg_v = 3 [json_name = "avgV"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_avg_v = this->_internal_avg_v();
  ::uint64_t raw_avg_v;
  memcpy(&raw_avg_v, &tmp_avg_v, sizeof(tmp_avg_v));
  if (raw_avg_v != 0) {
    total_size += 9;
  }

  // .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
  if (this->_internal_light_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_light_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LaneState::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LaneState::MergeImpl
};
const ::google::protobuf::Message::ClassData*LaneState::GetClassData() const { return &_class_data_; }


void LaneState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LaneState*>(&to_msg);
  auto& from = static_cast<const LaneState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.map.v2.LaneState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_persons()->MergeFrom(from._internal_persons());
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_restriction() != 0) {
    _this->_internal_set_restriction(from._internal_restriction());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_avg_v = from._internal_avg_v();
  ::uint64_t raw_avg_v;
  memcpy(&raw_avg_v, &tmp_avg_v, sizeof(tmp_avg_v));
  if (raw_avg_v != 0) {
    _this->_internal_set_avg_v(from._internal_avg_v());
  }
  if (from._internal_light_state() != 0) {
    _this->_internal_set_light_state(from._internal_light_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LaneState::CopyFrom(const LaneState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.map.v2.LaneState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneState::IsInitialized() const {
  return true;
}

void LaneState::InternalSwap(LaneState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.persons_.InternalSwap(&other->_impl_.persons_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaneState, _impl_.light_state_)
      + sizeof(LaneState::_impl_.light_state_)
      - PROTOBUF_FIELD_OFFSET(LaneState, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata LaneState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_getter, &descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto_once,
      file_level_metadata_city_2fmap_2fv2_2flane_5fservice_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace map
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

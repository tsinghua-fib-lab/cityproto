// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/map/v2/aoi_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2faoi_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2faoi_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "city/person/v1/motion.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fmap_2fv2_2faoi_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fmap_2fv2_2faoi_5fservice_2eproto;
namespace city {
namespace map {
namespace v2 {
class AoiState;
struct AoiStateDefaultTypeInternal;
extern AoiStateDefaultTypeInternal _AoiState_default_instance_;
class GetAoiRequest;
struct GetAoiRequestDefaultTypeInternal;
extern GetAoiRequestDefaultTypeInternal _GetAoiRequest_default_instance_;
class GetAoiResponse;
struct GetAoiResponseDefaultTypeInternal;
extern GetAoiResponseDefaultTypeInternal _GetAoiResponse_default_instance_;
}  // namespace v2
}  // namespace map
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace map {
namespace v2 {

// ===================================================================


// -------------------------------------------------------------------

class AoiState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.AoiState) */ {
 public:
  inline AoiState() : AoiState(nullptr) {}
  ~AoiState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AoiState(::google::protobuf::internal::ConstantInitialized);

  AoiState(const AoiState& from);
  AoiState(AoiState&& from) noexcept
    : AoiState() {
    *this = ::std::move(from);
  }

  inline AoiState& operator=(const AoiState& from) {
    CopyFrom(from);
    return *this;
  }
  inline AoiState& operator=(AoiState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AoiState& default_instance() {
    return *internal_default_instance();
  }
  static inline const AoiState* internal_default_instance() {
    return reinterpret_cast<const AoiState*>(
               &_AoiState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AoiState& a, AoiState& b) {
    a.Swap(&b);
  }
  inline void Swap(AoiState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AoiState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AoiState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AoiState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AoiState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AoiState& from) {
    AoiState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AoiState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.AoiState";
  }
  protected:
  explicit AoiState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  int persons_size() const;
  private:
  int _internal_persons_size() const;

  public:
  void clear_persons() ;
  ::city::person::v1::PersonMotion* mutable_persons(int index);
  ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >*
      mutable_persons();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>& _internal_persons() const;
  ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>* _internal_mutable_persons();
  public:
  const ::city::person::v1::PersonMotion& persons(int index) const;
  ::city::person::v1::PersonMotion* add_persons();
  const ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >&
      persons() const;
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.AoiState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion > persons_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetAoiRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetAoiRequest) */ {
 public:
  inline GetAoiRequest() : GetAoiRequest(nullptr) {}
  ~GetAoiRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAoiRequest(::google::protobuf::internal::ConstantInitialized);

  GetAoiRequest(const GetAoiRequest& from);
  GetAoiRequest(GetAoiRequest&& from) noexcept
    : GetAoiRequest() {
    *this = ::std::move(from);
  }

  inline GetAoiRequest& operator=(const GetAoiRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAoiRequest& operator=(GetAoiRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAoiRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAoiRequest* internal_default_instance() {
    return reinterpret_cast<const GetAoiRequest*>(
               &_GetAoiRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetAoiRequest& a, GetAoiRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAoiRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAoiRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAoiRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAoiRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAoiRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAoiRequest& from) {
    GetAoiRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAoiRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetAoiRequest";
  }
  protected:
  explicit GetAoiRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAoiIdsFieldNumber = 1,
  };
  // repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
  int aoi_ids_size() const;
  private:
  int _internal_aoi_ids_size() const;

  public:
  void clear_aoi_ids() ;
  ::int32_t aoi_ids(int index) const;
  void set_aoi_ids(int index, ::int32_t value);
  void add_aoi_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& aoi_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_aoi_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_aoi_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_aoi_ids();

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.GetAoiRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> aoi_ids_;
    mutable ::google::protobuf::internal::CachedSize _aoi_ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetAoiResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetAoiResponse) */ {
 public:
  inline GetAoiResponse() : GetAoiResponse(nullptr) {}
  ~GetAoiResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAoiResponse(::google::protobuf::internal::ConstantInitialized);

  GetAoiResponse(const GetAoiResponse& from);
  GetAoiResponse(GetAoiResponse&& from) noexcept
    : GetAoiResponse() {
    *this = ::std::move(from);
  }

  inline GetAoiResponse& operator=(const GetAoiResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAoiResponse& operator=(GetAoiResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAoiResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAoiResponse* internal_default_instance() {
    return reinterpret_cast<const GetAoiResponse*>(
               &_GetAoiResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetAoiResponse& a, GetAoiResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAoiResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAoiResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAoiResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAoiResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAoiResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAoiResponse& from) {
    GetAoiResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAoiResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetAoiResponse";
  }
  protected:
  explicit GetAoiResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 1,
  };
  // repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  ::city::map::v2::AoiState* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::city::map::v2::AoiState >*
      mutable_states();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::map::v2::AoiState>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<::city::map::v2::AoiState>* _internal_mutable_states();
  public:
  const ::city::map::v2::AoiState& states(int index) const;
  ::city::map::v2::AoiState* add_states();
  const ::google::protobuf::RepeatedPtrField< ::city::map::v2::AoiState >&
      states() const;
  // @@protoc_insertion_point(class_scope:city.map.v2.GetAoiResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::map::v2::AoiState > states_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2faoi_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AoiState

// int32 id = 1 [json_name = "id"];
inline void AoiState::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t AoiState::id() const {
  // @@protoc_insertion_point(field_get:city.map.v2.AoiState.id)
  return _internal_id();
}
inline void AoiState::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.map.v2.AoiState.id)
}
inline ::int32_t AoiState::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AoiState::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
inline int AoiState::_internal_persons_size() const {
  return _internal_persons().size();
}
inline int AoiState::persons_size() const {
  return _internal_persons_size();
}
inline ::city::person::v1::PersonMotion* AoiState::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:city.map.v2.AoiState.persons)
  return _internal_mutable_persons()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >*
AoiState::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.AoiState.persons)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_persons();
}
inline const ::city::person::v1::PersonMotion& AoiState::persons(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.AoiState.persons)
    return _internal_persons().Get(index);
}
inline ::city::person::v1::PersonMotion* AoiState::add_persons() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::person::v1::PersonMotion* _add = _internal_mutable_persons()->Add();
  // @@protoc_insertion_point(field_add:city.map.v2.AoiState.persons)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >&
AoiState::persons() const {
  // @@protoc_insertion_point(field_list:city.map.v2.AoiState.persons)
  return _internal_persons();
}
inline const ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>&
AoiState::_internal_persons() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.persons_;
}
inline ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>*
AoiState::_internal_mutable_persons() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.persons_;
}

// -------------------------------------------------------------------

// GetAoiRequest

// repeated int32 aoi_ids = 1 [json_name = "aoiIds"];
inline int GetAoiRequest::_internal_aoi_ids_size() const {
  return _internal_aoi_ids().size();
}
inline int GetAoiRequest::aoi_ids_size() const {
  return _internal_aoi_ids_size();
}
inline void GetAoiRequest::clear_aoi_ids() {
  _internal_mutable_aoi_ids()->Clear();
}
inline ::int32_t GetAoiRequest::aoi_ids(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetAoiRequest.aoi_ids)
  return _internal_aoi_ids().Get(index);
}
inline void GetAoiRequest::set_aoi_ids(int index, ::int32_t value) {
  _internal_mutable_aoi_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:city.map.v2.GetAoiRequest.aoi_ids)
}
inline void GetAoiRequest::add_aoi_ids(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_aoi_ids()->Add(value);
  // @@protoc_insertion_point(field_add:city.map.v2.GetAoiRequest.aoi_ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetAoiRequest::aoi_ids() const {
  // @@protoc_insertion_point(field_list:city.map.v2.GetAoiRequest.aoi_ids)
  return _internal_aoi_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetAoiRequest::mutable_aoi_ids() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.GetAoiRequest.aoi_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_aoi_ids();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetAoiRequest::_internal_aoi_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.aoi_ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetAoiRequest::_internal_mutable_aoi_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.aoi_ids_;
}

// -------------------------------------------------------------------

// GetAoiResponse

// repeated .city.map.v2.AoiState states = 1 [json_name = "states"];
inline int GetAoiResponse::_internal_states_size() const {
  return _internal_states().size();
}
inline int GetAoiResponse::states_size() const {
  return _internal_states_size();
}
inline void GetAoiResponse::clear_states() {
  _internal_mutable_states()->Clear();
}
inline ::city::map::v2::AoiState* GetAoiResponse::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:city.map.v2.GetAoiResponse.states)
  return _internal_mutable_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::map::v2::AoiState >*
GetAoiResponse::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.GetAoiResponse.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::city::map::v2::AoiState& GetAoiResponse::states(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetAoiResponse.states)
    return _internal_states().Get(index);
}
inline ::city::map::v2::AoiState* GetAoiResponse::add_states() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::map::v2::AoiState* _add = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add:city.map.v2.GetAoiResponse.states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::map::v2::AoiState >&
GetAoiResponse::states() const {
  // @@protoc_insertion_point(field_list:city.map.v2.GetAoiResponse.states)
  return _internal_states();
}
inline const ::google::protobuf::RepeatedPtrField<::city::map::v2::AoiState>&
GetAoiResponse::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<::city::map::v2::AoiState>*
GetAoiResponse::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace map
}  // namespace city


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2faoi_5fservice_2eproto_2epb_2eh

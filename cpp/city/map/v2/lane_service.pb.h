// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/map/v2/lane_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2flane_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2flane_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "city/geo/v2/geo.pb.h"
#include "city/map/v2/light.pb.h"
#include "city/person/v1/motion.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fmap_2fv2_2flane_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fmap_2fv2_2flane_5fservice_2eproto;
namespace city {
namespace map {
namespace v2 {
class GetLaneByLongLatBBoxRequest;
struct GetLaneByLongLatBBoxRequestDefaultTypeInternal;
extern GetLaneByLongLatBBoxRequestDefaultTypeInternal _GetLaneByLongLatBBoxRequest_default_instance_;
class GetLaneByLongLatBBoxResponse;
struct GetLaneByLongLatBBoxResponseDefaultTypeInternal;
extern GetLaneByLongLatBBoxResponseDefaultTypeInternal _GetLaneByLongLatBBoxResponse_default_instance_;
class GetLaneRequest;
struct GetLaneRequestDefaultTypeInternal;
extern GetLaneRequestDefaultTypeInternal _GetLaneRequest_default_instance_;
class GetLaneResponse;
struct GetLaneResponseDefaultTypeInternal;
extern GetLaneResponseDefaultTypeInternal _GetLaneResponse_default_instance_;
class LaneState;
struct LaneStateDefaultTypeInternal;
extern LaneStateDefaultTypeInternal _LaneState_default_instance_;
class SetLaneMaxVRequest;
struct SetLaneMaxVRequestDefaultTypeInternal;
extern SetLaneMaxVRequestDefaultTypeInternal _SetLaneMaxVRequest_default_instance_;
class SetLaneMaxVResponse;
struct SetLaneMaxVResponseDefaultTypeInternal;
extern SetLaneMaxVResponseDefaultTypeInternal _SetLaneMaxVResponse_default_instance_;
}  // namespace v2
}  // namespace map
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace map {
namespace v2 {

// ===================================================================


// -------------------------------------------------------------------

class SetLaneMaxVRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.SetLaneMaxVRequest) */ {
 public:
  inline SetLaneMaxVRequest() : SetLaneMaxVRequest(nullptr) {}
  ~SetLaneMaxVRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetLaneMaxVRequest(::google::protobuf::internal::ConstantInitialized);

  SetLaneMaxVRequest(const SetLaneMaxVRequest& from);
  SetLaneMaxVRequest(SetLaneMaxVRequest&& from) noexcept
    : SetLaneMaxVRequest() {
    *this = ::std::move(from);
  }

  inline SetLaneMaxVRequest& operator=(const SetLaneMaxVRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetLaneMaxVRequest& operator=(SetLaneMaxVRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetLaneMaxVRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetLaneMaxVRequest* internal_default_instance() {
    return reinterpret_cast<const SetLaneMaxVRequest*>(
               &_SetLaneMaxVRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetLaneMaxVRequest& a, SetLaneMaxVRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetLaneMaxVRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetLaneMaxVRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetLaneMaxVRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetLaneMaxVRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetLaneMaxVRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetLaneMaxVRequest& from) {
    SetLaneMaxVRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetLaneMaxVRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.SetLaneMaxVRequest";
  }
  protected:
  explicit SetLaneMaxVRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxVFieldNumber = 2,
    kLaneIdFieldNumber = 1,
  };
  // double max_v = 2 [json_name = "maxV"];
  void clear_max_v() ;
  double max_v() const;
  void set_max_v(double value);

  private:
  double _internal_max_v() const;
  void _internal_set_max_v(double value);

  public:
  // int32 lane_id = 1 [json_name = "laneId"];
  void clear_lane_id() ;
  ::int32_t lane_id() const;
  void set_lane_id(::int32_t value);

  private:
  ::int32_t _internal_lane_id() const;
  void _internal_set_lane_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.SetLaneMaxVRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double max_v_;
    ::int32_t lane_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetLaneMaxVResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.map.v2.SetLaneMaxVResponse) */ {
 public:
  inline SetLaneMaxVResponse() : SetLaneMaxVResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetLaneMaxVResponse(::google::protobuf::internal::ConstantInitialized);

  SetLaneMaxVResponse(const SetLaneMaxVResponse& from);
  SetLaneMaxVResponse(SetLaneMaxVResponse&& from) noexcept
    : SetLaneMaxVResponse() {
    *this = ::std::move(from);
  }

  inline SetLaneMaxVResponse& operator=(const SetLaneMaxVResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetLaneMaxVResponse& operator=(SetLaneMaxVResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetLaneMaxVResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetLaneMaxVResponse* internal_default_instance() {
    return reinterpret_cast<const SetLaneMaxVResponse*>(
               &_SetLaneMaxVResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetLaneMaxVResponse& a, SetLaneMaxVResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetLaneMaxVResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetLaneMaxVResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetLaneMaxVResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetLaneMaxVResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetLaneMaxVResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetLaneMaxVResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.SetLaneMaxVResponse";
  }
  protected:
  explicit SetLaneMaxVResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.map.v2.SetLaneMaxVResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetLaneRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetLaneRequest) */ {
 public:
  inline GetLaneRequest() : GetLaneRequest(nullptr) {}
  ~GetLaneRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLaneRequest(::google::protobuf::internal::ConstantInitialized);

  GetLaneRequest(const GetLaneRequest& from);
  GetLaneRequest(GetLaneRequest&& from) noexcept
    : GetLaneRequest() {
    *this = ::std::move(from);
  }

  inline GetLaneRequest& operator=(const GetLaneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLaneRequest& operator=(GetLaneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLaneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLaneRequest* internal_default_instance() {
    return reinterpret_cast<const GetLaneRequest*>(
               &_GetLaneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetLaneRequest& a, GetLaneRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLaneRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLaneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLaneRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLaneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLaneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLaneRequest& from) {
    GetLaneRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLaneRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetLaneRequest";
  }
  protected:
  explicit GetLaneRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLaneIdsFieldNumber = 1,
    kExcludePersonFieldNumber = 2,
  };
  // repeated int32 lane_ids = 1 [json_name = "laneIds"];
  int lane_ids_size() const;
  private:
  int _internal_lane_ids_size() const;

  public:
  void clear_lane_ids() ;
  ::int32_t lane_ids(int index) const;
  void set_lane_ids(int index, ::int32_t value);
  void add_lane_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& lane_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_lane_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_lane_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_lane_ids();

  public:
  // bool exclude_person = 2 [json_name = "excludePerson"];
  void clear_exclude_person() ;
  bool exclude_person() const;
  void set_exclude_person(bool value);

  private:
  bool _internal_exclude_person() const;
  void _internal_set_exclude_person(bool value);

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.GetLaneRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> lane_ids_;
    mutable ::google::protobuf::internal::CachedSize _lane_ids_cached_byte_size_;
    bool exclude_person_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetLaneResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetLaneResponse) */ {
 public:
  inline GetLaneResponse() : GetLaneResponse(nullptr) {}
  ~GetLaneResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLaneResponse(::google::protobuf::internal::ConstantInitialized);

  GetLaneResponse(const GetLaneResponse& from);
  GetLaneResponse(GetLaneResponse&& from) noexcept
    : GetLaneResponse() {
    *this = ::std::move(from);
  }

  inline GetLaneResponse& operator=(const GetLaneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLaneResponse& operator=(GetLaneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLaneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLaneResponse* internal_default_instance() {
    return reinterpret_cast<const GetLaneResponse*>(
               &_GetLaneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetLaneResponse& a, GetLaneResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLaneResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLaneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLaneResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLaneResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLaneResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLaneResponse& from) {
    GetLaneResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLaneResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetLaneResponse";
  }
  protected:
  explicit GetLaneResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 1,
  };
  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  ::city::map::v2::LaneState* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >*
      mutable_states();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>* _internal_mutable_states();
  public:
  const ::city::map::v2::LaneState& states(int index) const;
  ::city::map::v2::LaneState* add_states();
  const ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >&
      states() const;
  // @@protoc_insertion_point(class_scope:city.map.v2.GetLaneResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState > states_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetLaneByLongLatBBoxRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetLaneByLongLatBBoxRequest) */ {
 public:
  inline GetLaneByLongLatBBoxRequest() : GetLaneByLongLatBBoxRequest(nullptr) {}
  ~GetLaneByLongLatBBoxRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxRequest(::google::protobuf::internal::ConstantInitialized);

  GetLaneByLongLatBBoxRequest(const GetLaneByLongLatBBoxRequest& from);
  GetLaneByLongLatBBoxRequest(GetLaneByLongLatBBoxRequest&& from) noexcept
    : GetLaneByLongLatBBoxRequest() {
    *this = ::std::move(from);
  }

  inline GetLaneByLongLatBBoxRequest& operator=(const GetLaneByLongLatBBoxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLaneByLongLatBBoxRequest& operator=(GetLaneByLongLatBBoxRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLaneByLongLatBBoxRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLaneByLongLatBBoxRequest* internal_default_instance() {
    return reinterpret_cast<const GetLaneByLongLatBBoxRequest*>(
               &_GetLaneByLongLatBBoxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetLaneByLongLatBBoxRequest& a, GetLaneByLongLatBBoxRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLaneByLongLatBBoxRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLaneByLongLatBBoxRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLaneByLongLatBBoxRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLaneByLongLatBBoxRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLaneByLongLatBBoxRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLaneByLongLatBBoxRequest& from) {
    GetLaneByLongLatBBoxRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLaneByLongLatBBoxRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetLaneByLongLatBBoxRequest";
  }
  protected:
  explicit GetLaneByLongLatBBoxRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBboxFieldNumber = 1,
    kExcludePersonFieldNumber = 2,
  };
  // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
  bool has_bbox() const;
  void clear_bbox() ;
  const ::city::geo::v2::LongLatBBox& bbox() const;
  PROTOBUF_NODISCARD ::city::geo::v2::LongLatBBox* release_bbox();
  ::city::geo::v2::LongLatBBox* mutable_bbox();
  void set_allocated_bbox(::city::geo::v2::LongLatBBox* value);
  void unsafe_arena_set_allocated_bbox(::city::geo::v2::LongLatBBox* value);
  ::city::geo::v2::LongLatBBox* unsafe_arena_release_bbox();

  private:
  const ::city::geo::v2::LongLatBBox& _internal_bbox() const;
  ::city::geo::v2::LongLatBBox* _internal_mutable_bbox();

  public:
  // bool exclude_person = 2 [json_name = "excludePerson"];
  void clear_exclude_person() ;
  bool exclude_person() const;
  void set_exclude_person(bool value);

  private:
  bool _internal_exclude_person() const;
  void _internal_set_exclude_person(bool value);

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.GetLaneByLongLatBBoxRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::city::geo::v2::LongLatBBox* bbox_;
    bool exclude_person_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetLaneByLongLatBBoxResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.GetLaneByLongLatBBoxResponse) */ {
 public:
  inline GetLaneByLongLatBBoxResponse() : GetLaneByLongLatBBoxResponse(nullptr) {}
  ~GetLaneByLongLatBBoxResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLaneByLongLatBBoxResponse(::google::protobuf::internal::ConstantInitialized);

  GetLaneByLongLatBBoxResponse(const GetLaneByLongLatBBoxResponse& from);
  GetLaneByLongLatBBoxResponse(GetLaneByLongLatBBoxResponse&& from) noexcept
    : GetLaneByLongLatBBoxResponse() {
    *this = ::std::move(from);
  }

  inline GetLaneByLongLatBBoxResponse& operator=(const GetLaneByLongLatBBoxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLaneByLongLatBBoxResponse& operator=(GetLaneByLongLatBBoxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLaneByLongLatBBoxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLaneByLongLatBBoxResponse* internal_default_instance() {
    return reinterpret_cast<const GetLaneByLongLatBBoxResponse*>(
               &_GetLaneByLongLatBBoxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetLaneByLongLatBBoxResponse& a, GetLaneByLongLatBBoxResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLaneByLongLatBBoxResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLaneByLongLatBBoxResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLaneByLongLatBBoxResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLaneByLongLatBBoxResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLaneByLongLatBBoxResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLaneByLongLatBBoxResponse& from) {
    GetLaneByLongLatBBoxResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLaneByLongLatBBoxResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.GetLaneByLongLatBBoxResponse";
  }
  protected:
  explicit GetLaneByLongLatBBoxResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 1,
  };
  // repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
  int states_size() const;
  private:
  int _internal_states_size() const;

  public:
  void clear_states() ;
  ::city::map::v2::LaneState* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >*
      mutable_states();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>& _internal_states() const;
  ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>* _internal_mutable_states();
  public:
  const ::city::map::v2::LaneState& states(int index) const;
  ::city::map::v2::LaneState* add_states();
  const ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >&
      states() const;
  // @@protoc_insertion_point(class_scope:city.map.v2.GetLaneByLongLatBBoxResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState > states_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};// -------------------------------------------------------------------

class LaneState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.map.v2.LaneState) */ {
 public:
  inline LaneState() : LaneState(nullptr) {}
  ~LaneState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LaneState(::google::protobuf::internal::ConstantInitialized);

  LaneState(const LaneState& from);
  LaneState(LaneState&& from) noexcept
    : LaneState() {
    *this = ::std::move(from);
  }

  inline LaneState& operator=(const LaneState& from) {
    CopyFrom(from);
    return *this;
  }
  inline LaneState& operator=(LaneState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LaneState& default_instance() {
    return *internal_default_instance();
  }
  static inline const LaneState* internal_default_instance() {
    return reinterpret_cast<const LaneState*>(
               &_LaneState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(LaneState& a, LaneState& b) {
    a.Swap(&b);
  }
  inline void Swap(LaneState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LaneState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LaneState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LaneState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LaneState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LaneState& from) {
    LaneState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaneState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.map.v2.LaneState";
  }
  protected:
  explicit LaneState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonsFieldNumber = 2,
    kIdFieldNumber = 1,
    kRestrictionFieldNumber = 4,
    kAvgVFieldNumber = 3,
    kLightStateFieldNumber = 5,
  };
  // repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
  int persons_size() const;
  private:
  int _internal_persons_size() const;

  public:
  void clear_persons() ;
  ::city::person::v1::PersonMotion* mutable_persons(int index);
  ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >*
      mutable_persons();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>& _internal_persons() const;
  ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>* _internal_mutable_persons();
  public:
  const ::city::person::v1::PersonMotion& persons(int index) const;
  ::city::person::v1::PersonMotion* add_persons();
  const ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >&
      persons() const;
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool restriction = 4 [json_name = "restriction"];
  void clear_restriction() ;
  bool restriction() const;
  void set_restriction(bool value);

  private:
  bool _internal_restriction() const;
  void _internal_set_restriction(bool value);

  public:
  // double avg_v = 3 [json_name = "avgV"];
  void clear_avg_v() ;
  double avg_v() const;
  void set_avg_v(double value);

  private:
  double _internal_avg_v() const;
  void _internal_set_avg_v(double value);

  public:
  // .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
  void clear_light_state() ;
  ::city::map::v2::LightState light_state() const;
  void set_light_state(::city::map::v2::LightState value);

  private:
  ::city::map::v2::LightState _internal_light_state() const;
  void _internal_set_light_state(::city::map::v2::LightState value);

  public:
  // @@protoc_insertion_point(class_scope:city.map.v2.LaneState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion > persons_;
    ::int32_t id_;
    bool restriction_;
    double avg_v_;
    int light_state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fmap_2fv2_2flane_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetLaneMaxVRequest

// int32 lane_id = 1 [json_name = "laneId"];
inline void SetLaneMaxVRequest::clear_lane_id() {
  _impl_.lane_id_ = 0;
}
inline ::int32_t SetLaneMaxVRequest::lane_id() const {
  // @@protoc_insertion_point(field_get:city.map.v2.SetLaneMaxVRequest.lane_id)
  return _internal_lane_id();
}
inline void SetLaneMaxVRequest::set_lane_id(::int32_t value) {
  _internal_set_lane_id(value);
  // @@protoc_insertion_point(field_set:city.map.v2.SetLaneMaxVRequest.lane_id)
}
inline ::int32_t SetLaneMaxVRequest::_internal_lane_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lane_id_;
}
inline void SetLaneMaxVRequest::_internal_set_lane_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lane_id_ = value;
}

// double max_v = 2 [json_name = "maxV"];
inline void SetLaneMaxVRequest::clear_max_v() {
  _impl_.max_v_ = 0;
}
inline double SetLaneMaxVRequest::max_v() const {
  // @@protoc_insertion_point(field_get:city.map.v2.SetLaneMaxVRequest.max_v)
  return _internal_max_v();
}
inline void SetLaneMaxVRequest::set_max_v(double value) {
  _internal_set_max_v(value);
  // @@protoc_insertion_point(field_set:city.map.v2.SetLaneMaxVRequest.max_v)
}
inline double SetLaneMaxVRequest::_internal_max_v() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_v_;
}
inline void SetLaneMaxVRequest::_internal_set_max_v(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_v_ = value;
}

// -------------------------------------------------------------------

// SetLaneMaxVResponse

// -------------------------------------------------------------------

// GetLaneRequest

// repeated int32 lane_ids = 1 [json_name = "laneIds"];
inline int GetLaneRequest::_internal_lane_ids_size() const {
  return _internal_lane_ids().size();
}
inline int GetLaneRequest::lane_ids_size() const {
  return _internal_lane_ids_size();
}
inline void GetLaneRequest::clear_lane_ids() {
  _internal_mutable_lane_ids()->Clear();
}
inline ::int32_t GetLaneRequest::lane_ids(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneRequest.lane_ids)
  return _internal_lane_ids().Get(index);
}
inline void GetLaneRequest::set_lane_ids(int index, ::int32_t value) {
  _internal_mutable_lane_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:city.map.v2.GetLaneRequest.lane_ids)
}
inline void GetLaneRequest::add_lane_ids(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_lane_ids()->Add(value);
  // @@protoc_insertion_point(field_add:city.map.v2.GetLaneRequest.lane_ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetLaneRequest::lane_ids() const {
  // @@protoc_insertion_point(field_list:city.map.v2.GetLaneRequest.lane_ids)
  return _internal_lane_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetLaneRequest::mutable_lane_ids() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.GetLaneRequest.lane_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_lane_ids();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetLaneRequest::_internal_lane_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lane_ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetLaneRequest::_internal_mutable_lane_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.lane_ids_;
}

// bool exclude_person = 2 [json_name = "excludePerson"];
inline void GetLaneRequest::clear_exclude_person() {
  _impl_.exclude_person_ = false;
}
inline bool GetLaneRequest::exclude_person() const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneRequest.exclude_person)
  return _internal_exclude_person();
}
inline void GetLaneRequest::set_exclude_person(bool value) {
  _internal_set_exclude_person(value);
  // @@protoc_insertion_point(field_set:city.map.v2.GetLaneRequest.exclude_person)
}
inline bool GetLaneRequest::_internal_exclude_person() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exclude_person_;
}
inline void GetLaneRequest::_internal_set_exclude_person(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exclude_person_ = value;
}

// -------------------------------------------------------------------

// GetLaneResponse

// repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
inline int GetLaneResponse::_internal_states_size() const {
  return _internal_states().size();
}
inline int GetLaneResponse::states_size() const {
  return _internal_states_size();
}
inline void GetLaneResponse::clear_states() {
  _internal_mutable_states()->Clear();
}
inline ::city::map::v2::LaneState* GetLaneResponse::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:city.map.v2.GetLaneResponse.states)
  return _internal_mutable_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >*
GetLaneResponse::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.GetLaneResponse.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::city::map::v2::LaneState& GetLaneResponse::states(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneResponse.states)
    return _internal_states().Get(index);
}
inline ::city::map::v2::LaneState* GetLaneResponse::add_states() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::map::v2::LaneState* _add = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add:city.map.v2.GetLaneResponse.states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >&
GetLaneResponse::states() const {
  // @@protoc_insertion_point(field_list:city.map.v2.GetLaneResponse.states)
  return _internal_states();
}
inline const ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>&
GetLaneResponse::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>*
GetLaneResponse::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// GetLaneByLongLatBBoxRequest

// .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
inline bool GetLaneByLongLatBBoxRequest::has_bbox() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bbox_ != nullptr);
  return value;
}
inline const ::city::geo::v2::LongLatBBox& GetLaneByLongLatBBoxRequest::_internal_bbox() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::geo::v2::LongLatBBox* p = _impl_.bbox_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::geo::v2::LongLatBBox&>(::city::geo::v2::_LongLatBBox_default_instance_);
}
inline const ::city::geo::v2::LongLatBBox& GetLaneByLongLatBBoxRequest::bbox() const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneByLongLatBBoxRequest.bbox)
  return _internal_bbox();
}
inline void GetLaneByLongLatBBoxRequest::unsafe_arena_set_allocated_bbox(::city::geo::v2::LongLatBBox* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bbox_);
  }
  _impl_.bbox_ = reinterpret_cast<::city::geo::v2::LongLatBBox*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.map.v2.GetLaneByLongLatBBoxRequest.bbox)
}
inline ::city::geo::v2::LongLatBBox* GetLaneByLongLatBBoxRequest::release_bbox() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::geo::v2::LongLatBBox* released = _impl_.bbox_;
  _impl_.bbox_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::geo::v2::LongLatBBox* GetLaneByLongLatBBoxRequest::unsafe_arena_release_bbox() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.map.v2.GetLaneByLongLatBBoxRequest.bbox)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::geo::v2::LongLatBBox* temp = _impl_.bbox_;
  _impl_.bbox_ = nullptr;
  return temp;
}
inline ::city::geo::v2::LongLatBBox* GetLaneByLongLatBBoxRequest::_internal_mutable_bbox() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bbox_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::geo::v2::LongLatBBox>(GetArenaForAllocation());
    _impl_.bbox_ = reinterpret_cast<::city::geo::v2::LongLatBBox*>(p);
  }
  return _impl_.bbox_;
}
inline ::city::geo::v2::LongLatBBox* GetLaneByLongLatBBoxRequest::mutable_bbox() {
  ::city::geo::v2::LongLatBBox* _msg = _internal_mutable_bbox();
  // @@protoc_insertion_point(field_mutable:city.map.v2.GetLaneByLongLatBBoxRequest.bbox)
  return _msg;
}
inline void GetLaneByLongLatBBoxRequest::set_allocated_bbox(::city::geo::v2::LongLatBBox* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bbox_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bbox_ = reinterpret_cast<::city::geo::v2::LongLatBBox*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.map.v2.GetLaneByLongLatBBoxRequest.bbox)
}

// bool exclude_person = 2 [json_name = "excludePerson"];
inline void GetLaneByLongLatBBoxRequest::clear_exclude_person() {
  _impl_.exclude_person_ = false;
}
inline bool GetLaneByLongLatBBoxRequest::exclude_person() const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneByLongLatBBoxRequest.exclude_person)
  return _internal_exclude_person();
}
inline void GetLaneByLongLatBBoxRequest::set_exclude_person(bool value) {
  _internal_set_exclude_person(value);
  // @@protoc_insertion_point(field_set:city.map.v2.GetLaneByLongLatBBoxRequest.exclude_person)
}
inline bool GetLaneByLongLatBBoxRequest::_internal_exclude_person() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exclude_person_;
}
inline void GetLaneByLongLatBBoxRequest::_internal_set_exclude_person(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exclude_person_ = value;
}

// -------------------------------------------------------------------

// GetLaneByLongLatBBoxResponse

// repeated .city.map.v2.LaneState states = 1 [json_name = "states"];
inline int GetLaneByLongLatBBoxResponse::_internal_states_size() const {
  return _internal_states().size();
}
inline int GetLaneByLongLatBBoxResponse::states_size() const {
  return _internal_states_size();
}
inline void GetLaneByLongLatBBoxResponse::clear_states() {
  _internal_mutable_states()->Clear();
}
inline ::city::map::v2::LaneState* GetLaneByLongLatBBoxResponse::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:city.map.v2.GetLaneByLongLatBBoxResponse.states)
  return _internal_mutable_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >*
GetLaneByLongLatBBoxResponse::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.GetLaneByLongLatBBoxResponse.states)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_states();
}
inline const ::city::map::v2::LaneState& GetLaneByLongLatBBoxResponse::states(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.GetLaneByLongLatBBoxResponse.states)
    return _internal_states().Get(index);
}
inline ::city::map::v2::LaneState* GetLaneByLongLatBBoxResponse::add_states() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::map::v2::LaneState* _add = _internal_mutable_states()->Add();
  // @@protoc_insertion_point(field_add:city.map.v2.GetLaneByLongLatBBoxResponse.states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::map::v2::LaneState >&
GetLaneByLongLatBBoxResponse::states() const {
  // @@protoc_insertion_point(field_list:city.map.v2.GetLaneByLongLatBBoxResponse.states)
  return _internal_states();
}
inline const ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>&
GetLaneByLongLatBBoxResponse::_internal_states() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.states_;
}
inline ::google::protobuf::RepeatedPtrField<::city::map::v2::LaneState>*
GetLaneByLongLatBBoxResponse::_internal_mutable_states() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.states_;
}

// -------------------------------------------------------------------

// LaneState

// int32 id = 1 [json_name = "id"];
inline void LaneState::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t LaneState::id() const {
  // @@protoc_insertion_point(field_get:city.map.v2.LaneState.id)
  return _internal_id();
}
inline void LaneState::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.map.v2.LaneState.id)
}
inline ::int32_t LaneState::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void LaneState::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// repeated .city.person.v1.PersonMotion persons = 2 [json_name = "persons"];
inline int LaneState::_internal_persons_size() const {
  return _internal_persons().size();
}
inline int LaneState::persons_size() const {
  return _internal_persons_size();
}
inline ::city::person::v1::PersonMotion* LaneState::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:city.map.v2.LaneState.persons)
  return _internal_mutable_persons()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >*
LaneState::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:city.map.v2.LaneState.persons)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_persons();
}
inline const ::city::person::v1::PersonMotion& LaneState::persons(int index) const {
  // @@protoc_insertion_point(field_get:city.map.v2.LaneState.persons)
    return _internal_persons().Get(index);
}
inline ::city::person::v1::PersonMotion* LaneState::add_persons() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::person::v1::PersonMotion* _add = _internal_mutable_persons()->Add();
  // @@protoc_insertion_point(field_add:city.map.v2.LaneState.persons)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::person::v1::PersonMotion >&
LaneState::persons() const {
  // @@protoc_insertion_point(field_list:city.map.v2.LaneState.persons)
  return _internal_persons();
}
inline const ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>&
LaneState::_internal_persons() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.persons_;
}
inline ::google::protobuf::RepeatedPtrField<::city::person::v1::PersonMotion>*
LaneState::_internal_mutable_persons() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.persons_;
}

// double avg_v = 3 [json_name = "avgV"];
inline void LaneState::clear_avg_v() {
  _impl_.avg_v_ = 0;
}
inline double LaneState::avg_v() const {
  // @@protoc_insertion_point(field_get:city.map.v2.LaneState.avg_v)
  return _internal_avg_v();
}
inline void LaneState::set_avg_v(double value) {
  _internal_set_avg_v(value);
  // @@protoc_insertion_point(field_set:city.map.v2.LaneState.avg_v)
}
inline double LaneState::_internal_avg_v() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avg_v_;
}
inline void LaneState::_internal_set_avg_v(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avg_v_ = value;
}

// bool restriction = 4 [json_name = "restriction"];
inline void LaneState::clear_restriction() {
  _impl_.restriction_ = false;
}
inline bool LaneState::restriction() const {
  // @@protoc_insertion_point(field_get:city.map.v2.LaneState.restriction)
  return _internal_restriction();
}
inline void LaneState::set_restriction(bool value) {
  _internal_set_restriction(value);
  // @@protoc_insertion_point(field_set:city.map.v2.LaneState.restriction)
}
inline bool LaneState::_internal_restriction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.restriction_;
}
inline void LaneState::_internal_set_restriction(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.restriction_ = value;
}

// .city.map.v2.LightState light_state = 5 [json_name = "lightState"];
inline void LaneState::clear_light_state() {
  _impl_.light_state_ = 0;
}
inline ::city::map::v2::LightState LaneState::light_state() const {
  // @@protoc_insertion_point(field_get:city.map.v2.LaneState.light_state)
  return _internal_light_state();
}
inline void LaneState::set_light_state(::city::map::v2::LightState value) {
  _internal_set_light_state(value);
  // @@protoc_insertion_point(field_set:city.map.v2.LaneState.light_state)
}
inline ::city::map::v2::LightState LaneState::_internal_light_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::city::map::v2::LightState>(_impl_.light_state_);
}
inline void LaneState::_internal_set_light_state(::city::map::v2::LightState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.light_state_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace map
}  // namespace city


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fmap_2fv2_2flane_5fservice_2eproto_2epb_2eh

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: city/person/v2/person_service.proto
#ifndef GRPC_city_2fperson_2fv2_2fperson_5fservice_2eproto__INCLUDED
#define GRPC_city_2fperson_2fv2_2fperson_5fservice_2eproto__INCLUDED

#include "city/person/v2/person_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace city {
namespace person {
namespace v2 {

class PersonService final {
 public:
  static constexpr char const* service_full_name() {
    return "city.person.v2.PersonService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 获取person信息
    // Get person information
    virtual ::grpc::Status GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::city::person::v2::GetPersonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>> AsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>>(AsyncGetPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>> PrepareAsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>>(PrepareAsyncGetPersonRaw(context, request, cq));
    }
    // 新增person 传入person初始位置、目的地表、属性 返回personid
    // Add a new person. Input person's initial location, destination table, and
    // attributes, return personid
    virtual ::grpc::Status AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::city::person::v2::AddPersonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>> AsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>>(AsyncAddPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>> PrepareAsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>>(PrepareAsyncAddPersonRaw(context, request, cq));
    }
    // 修改person的schedule 传入personid、目的地表
    // Set person's schedule. Input personid and destination table
    virtual ::grpc::Status SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::city::person::v2::SetScheduleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>> AsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>>(AsyncSetScheduleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>> PrepareAsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>>(PrepareAsyncSetScheduleRaw(context, request, cq));
    }
    // 获取多个person信息
    // Get information of multiple persons
    virtual ::grpc::Status GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::city::person::v2::GetPersonsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>> AsyncGetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>>(AsyncGetPersonsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>> PrepareAsyncGetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>>(PrepareAsyncGetPersonsRaw(context, request, cq));
    }
    // 获取特定区域内的person
    // Get persons in a specific region
    virtual ::grpc::Status GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>> AsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>>(AsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>> PrepareAsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>>(PrepareAsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    // 获取所有车辆
    // Get all vehicles
    virtual ::grpc::Status GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::city::person::v2::GetAllVehiclesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>> AsyncGetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>>(AsyncGetAllVehiclesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>> PrepareAsyncGetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>>(PrepareAsyncGetAllVehiclesRaw(context, request, cq));
    }
    // 获取所有行人
    // Get all pedestrians
    virtual ::grpc::Status GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::city::person::v2::GetAllPedestriansResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>> AsyncGetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>>(AsyncGetAllPedestriansRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>> PrepareAsyncGetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>>(PrepareAsyncGetAllPedestriansRaw(context, request, cq));
    }
    // 重置人的位置（将停止当前正在进行的出行，转为sleep状态）
    // Reset person's position (stop the current trip and switch to sleep status)
    virtual ::grpc::Status ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::city::person::v2::ResetPersonPositionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>> AsyncResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>>(AsyncResetPersonPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>> PrepareAsyncResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>>(PrepareAsyncResetPersonPositionRaw(context, request, cq));
    }
    // RL接口
    // RL interface
    //
    // 设置由外部控制行为的vehicle
    // Set vehicle controlled by external behavior
    virtual ::grpc::Status SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::city::person::v2::SetControlledVehicleIDsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>> AsyncSetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>>(AsyncSetControlledVehicleIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>> PrepareAsyncSetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>>(PrepareAsyncSetControlledVehicleIDsRaw(context, request, cq));
    }
    // 获取由外部控制行为的vehicle信息
    // Get information of vehicle controlled by external behavior
    virtual ::grpc::Status FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>> AsyncFetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>>(AsyncFetchControlledVehicleEnvsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>> PrepareAsyncFetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>>(PrepareAsyncFetchControlledVehicleEnvsRaw(context, request, cq));
    }
    // 设置由外部控制行为的vehicle的行为
    // Set behavior of vehicle controlled by external behavior
    virtual ::grpc::Status SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::city::person::v2::SetControlledVehicleActionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>> AsyncSetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>>(AsyncSetControlledVehicleActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>> PrepareAsyncSetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>>(PrepareAsyncSetControlledVehicleActionsRaw(context, request, cq));
    }
    // 设置由外部控制的taxi
    // Set taxi controlled by external behavior
    virtual ::grpc::Status SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::city::person::v2::SetControlledTaxiIDsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>> AsyncSetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>>(AsyncSetControlledTaxiIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>> PrepareAsyncSetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>>(PrepareAsyncSetControlledTaxiIDsRaw(context, request, cq));
    }
    // 获取所有订单信息
    // Get information of all orders
    virtual ::grpc::Status GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::city::person::v2::GetAllOrdersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>> AsyncGetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>>(AsyncGetAllOrdersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>> PrepareAsyncGetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>>(PrepareAsyncGetAllOrdersRaw(context, request, cq));
    }
    // 设置所有外部控制的出租车接指定的单
    // Set all externally controlled taxis to specified orders
    virtual ::grpc::Status SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>> AsyncSetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>>(AsyncSetControlledTaxiToOrdersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>> PrepareAsyncSetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>>(PrepareAsyncSetControlledTaxiToOrdersRaw(context, request, cq));
    }
    // 设置由外部控制的行人
    // Set pedestrian controlled by external behavior
    virtual ::grpc::Status SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::city::person::v2::SetControlledPedestriansResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>> AsyncSetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>>(AsyncSetControlledPedestriansRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>> PrepareAsyncSetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>>(PrepareAsyncSetControlledPedestriansRaw(context, request, cq));
    }
    // 获取由外部控制的行人信息
    // Get information of pedestrian controlled by external behavior
    virtual ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>> AsyncFetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>>(AsyncFetchControlledPedestriansEnvsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>> PrepareAsyncFetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>>(PrepareAsyncFetchControlledPedestriansEnvsRaw(context, request, cq));
    }
    // 设置由外部控制的行人行为
    // Set behavior of pedestrian controlled by external behavior
    virtual ::grpc::Status SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::city::person::v2::SetControlledPedestriansActionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>> AsyncSetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>>(AsyncSetControlledPedestriansActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>> PrepareAsyncSetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>>(PrepareAsyncSetControlledPedestriansActionsRaw(context, request, cq));
    }
    // 获取当前所有受控出租车的订单分配方案
    // Get current order allocation plan for all controlled taxis
    virtual ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>> AsyncGetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>>(AsyncGetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>> PrepareAsyncGetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>>(PrepareAsyncGetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    // 设置当前所有受控出租车的订单分配方案
    // Set current order allocation plan for all controlled taxis
    virtual ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>> AsyncSetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>>(AsyncSetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>> PrepareAsyncSetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>>(PrepareAsyncSetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 获取person信息
      // Get person information
      virtual void GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 新增person 传入person初始位置、目的地表、属性 返回personid
      // Add a new person. Input person's initial location, destination table, and
      // attributes, return personid
      virtual void AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 修改person的schedule 传入personid、目的地表
      // Set person's schedule. Input personid and destination table
      virtual void SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取多个person信息
      // Get information of multiple persons
      virtual void GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取特定区域内的person
      // Get persons in a specific region
      virtual void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取所有车辆
      // Get all vehicles
      virtual void GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取所有行人
      // Get all pedestrians
      virtual void GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 重置人的位置（将停止当前正在进行的出行，转为sleep状态）
      // Reset person's position (stop the current trip and switch to sleep status)
      virtual void ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // RL接口
      // RL interface
      //
      // 设置由外部控制行为的vehicle
      // Set vehicle controlled by external behavior
      virtual void SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取由外部控制行为的vehicle信息
      // Get information of vehicle controlled by external behavior
      virtual void FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置由外部控制行为的vehicle的行为
      // Set behavior of vehicle controlled by external behavior
      virtual void SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置由外部控制的taxi
      // Set taxi controlled by external behavior
      virtual void SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取所有订单信息
      // Get information of all orders
      virtual void GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置所有外部控制的出租车接指定的单
      // Set all externally controlled taxis to specified orders
      virtual void SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置由外部控制的行人
      // Set pedestrian controlled by external behavior
      virtual void SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取由外部控制的行人信息
      // Get information of pedestrian controlled by external behavior
      virtual void FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置由外部控制的行人行为
      // Set behavior of pedestrian controlled by external behavior
      virtual void SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取当前所有受控出租车的订单分配方案
      // Get current order allocation plan for all controlled taxis
      virtual void GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置当前所有受控出租车的订单分配方案
      // Set current order allocation plan for all controlled taxis
      virtual void SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>* AsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonResponse>* PrepareAsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>* AsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::AddPersonResponse>* PrepareAsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>* AsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetScheduleResponse>* PrepareAsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>* AsyncGetPersonsRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonsResponse>* PrepareAsyncGetPersonsRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>* AsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetPersonByLongLatBBoxResponse>* PrepareAsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>* AsyncGetAllVehiclesRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllVehiclesResponse>* PrepareAsyncGetAllVehiclesRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>* AsyncGetAllPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllPedestriansResponse>* PrepareAsyncGetAllPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>* AsyncResetPersonPositionRaw(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::ResetPersonPositionResponse>* PrepareAsyncResetPersonPositionRaw(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>* AsyncSetControlledVehicleIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleIDsResponse>* PrepareAsyncSetControlledVehicleIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>* AsyncFetchControlledVehicleEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledVehicleEnvsResponse>* PrepareAsyncFetchControlledVehicleEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>* AsyncSetControlledVehicleActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledVehicleActionsResponse>* PrepareAsyncSetControlledVehicleActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>* AsyncSetControlledTaxiIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiIDsResponse>* PrepareAsyncSetControlledTaxiIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>* AsyncGetAllOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetAllOrdersResponse>* PrepareAsyncGetAllOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>* AsyncSetControlledTaxiToOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiToOrdersResponse>* PrepareAsyncSetControlledTaxiToOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>* AsyncSetControlledPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansResponse>* PrepareAsyncSetControlledPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>* AsyncFetchControlledPedestriansEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::FetchControlledPedestriansEnvsResponse>* PrepareAsyncFetchControlledPedestriansEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>* AsyncSetControlledPedestriansActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledPedestriansActionsResponse>* PrepareAsyncSetControlledPedestriansActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* AsyncGetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* PrepareAsyncGetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* AsyncSetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* PrepareAsyncSetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::city::person::v2::GetPersonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>> AsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>>(AsyncGetPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>> PrepareAsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>>(PrepareAsyncGetPersonRaw(context, request, cq));
    }
    ::grpc::Status AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::city::person::v2::AddPersonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>> AsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>>(AsyncAddPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>> PrepareAsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>>(PrepareAsyncAddPersonRaw(context, request, cq));
    }
    ::grpc::Status SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::city::person::v2::SetScheduleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>> AsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>>(AsyncSetScheduleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>> PrepareAsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>>(PrepareAsyncSetScheduleRaw(context, request, cq));
    }
    ::grpc::Status GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::city::person::v2::GetPersonsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>> AsyncGetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>>(AsyncGetPersonsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>> PrepareAsyncGetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>>(PrepareAsyncGetPersonsRaw(context, request, cq));
    }
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>> AsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>>(AsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>> PrepareAsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>>(PrepareAsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    ::grpc::Status GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::city::person::v2::GetAllVehiclesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>> AsyncGetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>>(AsyncGetAllVehiclesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>> PrepareAsyncGetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>>(PrepareAsyncGetAllVehiclesRaw(context, request, cq));
    }
    ::grpc::Status GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::city::person::v2::GetAllPedestriansResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>> AsyncGetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>>(AsyncGetAllPedestriansRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>> PrepareAsyncGetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>>(PrepareAsyncGetAllPedestriansRaw(context, request, cq));
    }
    ::grpc::Status ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::city::person::v2::ResetPersonPositionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>> AsyncResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>>(AsyncResetPersonPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>> PrepareAsyncResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>>(PrepareAsyncResetPersonPositionRaw(context, request, cq));
    }
    ::grpc::Status SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::city::person::v2::SetControlledVehicleIDsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>> AsyncSetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>>(AsyncSetControlledVehicleIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>> PrepareAsyncSetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>>(PrepareAsyncSetControlledVehicleIDsRaw(context, request, cq));
    }
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>> AsyncFetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>>(AsyncFetchControlledVehicleEnvsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>> PrepareAsyncFetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>>(PrepareAsyncFetchControlledVehicleEnvsRaw(context, request, cq));
    }
    ::grpc::Status SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::city::person::v2::SetControlledVehicleActionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>> AsyncSetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>>(AsyncSetControlledVehicleActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>> PrepareAsyncSetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>>(PrepareAsyncSetControlledVehicleActionsRaw(context, request, cq));
    }
    ::grpc::Status SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::city::person::v2::SetControlledTaxiIDsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>> AsyncSetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>>(AsyncSetControlledTaxiIDsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>> PrepareAsyncSetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>>(PrepareAsyncSetControlledTaxiIDsRaw(context, request, cq));
    }
    ::grpc::Status GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::city::person::v2::GetAllOrdersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>> AsyncGetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>>(AsyncGetAllOrdersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>> PrepareAsyncGetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>>(PrepareAsyncGetAllOrdersRaw(context, request, cq));
    }
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>> AsyncSetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>>(AsyncSetControlledTaxiToOrdersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>> PrepareAsyncSetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>>(PrepareAsyncSetControlledTaxiToOrdersRaw(context, request, cq));
    }
    ::grpc::Status SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::city::person::v2::SetControlledPedestriansResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>> AsyncSetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>>(AsyncSetControlledPedestriansRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>> PrepareAsyncSetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>>(PrepareAsyncSetControlledPedestriansRaw(context, request, cq));
    }
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>> AsyncFetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>>(AsyncFetchControlledPedestriansEnvsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>> PrepareAsyncFetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>>(PrepareAsyncFetchControlledPedestriansEnvsRaw(context, request, cq));
    }
    ::grpc::Status SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::city::person::v2::SetControlledPedestriansActionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>> AsyncSetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>>(AsyncSetControlledPedestriansActionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>> PrepareAsyncSetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>>(PrepareAsyncSetControlledPedestriansActionsRaw(context, request, cq));
    }
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>> AsyncGetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>>(AsyncGetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>> PrepareAsyncGetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>>(PrepareAsyncGetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>> AsyncSetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>>(AsyncSetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>> PrepareAsyncSetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>>(PrepareAsyncSetControlledTaxiOrderAllocationPlanRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPerson(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response, std::function<void(::grpc::Status)>) override;
      void AddPerson(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response, std::function<void(::grpc::Status)>) override;
      void SetSchedule(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPersons(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllVehicles(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllPedestrians(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response, std::function<void(::grpc::Status)>) override;
      void ResetPersonPosition(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledVehicleIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response, std::function<void(::grpc::Status)>) override;
      void FetchControlledVehicleEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledVehicleActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledTaxiIDs(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllOrders(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledTaxiToOrders(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledPedestrians(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response, std::function<void(::grpc::Status)>) override;
      void FetchControlledPedestriansEnvs(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledPedestriansActions(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response, std::function<void(::grpc::Status)>) override;
      void GetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response, std::function<void(::grpc::Status)>) override;
      void SetControlledTaxiOrderAllocationPlan(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>* AsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonResponse>* PrepareAsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>* AsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::AddPersonResponse>* PrepareAsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v2::AddPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>* AsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetScheduleResponse>* PrepareAsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v2::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>* AsyncGetPersonsRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonsResponse>* PrepareAsyncGetPersonsRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>* AsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetPersonByLongLatBBoxResponse>* PrepareAsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>* AsyncGetAllVehiclesRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllVehiclesResponse>* PrepareAsyncGetAllVehiclesRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllVehiclesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>* AsyncGetAllPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllPedestriansResponse>* PrepareAsyncGetAllPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllPedestriansRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>* AsyncResetPersonPositionRaw(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::ResetPersonPositionResponse>* PrepareAsyncResetPersonPositionRaw(::grpc::ClientContext* context, const ::city::person::v2::ResetPersonPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>* AsyncSetControlledVehicleIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleIDsResponse>* PrepareAsyncSetControlledVehicleIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>* AsyncFetchControlledVehicleEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledVehicleEnvsResponse>* PrepareAsyncFetchControlledVehicleEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>* AsyncSetControlledVehicleActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledVehicleActionsResponse>* PrepareAsyncSetControlledVehicleActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>* AsyncSetControlledTaxiIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiIDsResponse>* PrepareAsyncSetControlledTaxiIDsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>* AsyncGetAllOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetAllOrdersResponse>* PrepareAsyncGetAllOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::GetAllOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>* AsyncSetControlledTaxiToOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiToOrdersResponse>* PrepareAsyncSetControlledTaxiToOrdersRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>* AsyncSetControlledPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansResponse>* PrepareAsyncSetControlledPedestriansRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>* AsyncFetchControlledPedestriansEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::FetchControlledPedestriansEnvsResponse>* PrepareAsyncFetchControlledPedestriansEnvsRaw(::grpc::ClientContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>* AsyncSetControlledPedestriansActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledPedestriansActionsResponse>* PrepareAsyncSetControlledPedestriansActionsRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* AsyncGetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* PrepareAsyncGetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* AsyncSetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* PrepareAsyncSetControlledTaxiOrderAllocationPlanRaw(::grpc::ClientContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetPerson_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPerson_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSchedule_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPersons_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPersonByLongLatBBox_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllVehicles_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllPedestrians_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetPersonPosition_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledVehicleIDs_;
    const ::grpc::internal::RpcMethod rpcmethod_FetchControlledVehicleEnvs_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledVehicleActions_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledTaxiIDs_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllOrders_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledTaxiToOrders_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledPedestrians_;
    const ::grpc::internal::RpcMethod rpcmethod_FetchControlledPedestriansEnvs_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledPedestriansActions_;
    const ::grpc::internal::RpcMethod rpcmethod_GetControlledTaxiOrderAllocationPlan_;
    const ::grpc::internal::RpcMethod rpcmethod_SetControlledTaxiOrderAllocationPlan_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 获取person信息
    // Get person information
    virtual ::grpc::Status GetPerson(::grpc::ServerContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response);
    // 新增person 传入person初始位置、目的地表、属性 返回personid
    // Add a new person. Input person's initial location, destination table, and
    // attributes, return personid
    virtual ::grpc::Status AddPerson(::grpc::ServerContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response);
    // 修改person的schedule 传入personid、目的地表
    // Set person's schedule. Input personid and destination table
    virtual ::grpc::Status SetSchedule(::grpc::ServerContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response);
    // 获取多个person信息
    // Get information of multiple persons
    virtual ::grpc::Status GetPersons(::grpc::ServerContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response);
    // 获取特定区域内的person
    // Get persons in a specific region
    virtual ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response);
    // 获取所有车辆
    // Get all vehicles
    virtual ::grpc::Status GetAllVehicles(::grpc::ServerContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response);
    // 获取所有行人
    // Get all pedestrians
    virtual ::grpc::Status GetAllPedestrians(::grpc::ServerContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response);
    // 重置人的位置（将停止当前正在进行的出行，转为sleep状态）
    // Reset person's position (stop the current trip and switch to sleep status)
    virtual ::grpc::Status ResetPersonPosition(::grpc::ServerContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response);
    // RL接口
    // RL interface
    //
    // 设置由外部控制行为的vehicle
    // Set vehicle controlled by external behavior
    virtual ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response);
    // 获取由外部控制行为的vehicle信息
    // Get information of vehicle controlled by external behavior
    virtual ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response);
    // 设置由外部控制行为的vehicle的行为
    // Set behavior of vehicle controlled by external behavior
    virtual ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response);
    // 设置由外部控制的taxi
    // Set taxi controlled by external behavior
    virtual ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response);
    // 获取所有订单信息
    // Get information of all orders
    virtual ::grpc::Status GetAllOrders(::grpc::ServerContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response);
    // 设置所有外部控制的出租车接指定的单
    // Set all externally controlled taxis to specified orders
    virtual ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response);
    // 设置由外部控制的行人
    // Set pedestrian controlled by external behavior
    virtual ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response);
    // 获取由外部控制的行人信息
    // Get information of pedestrian controlled by external behavior
    virtual ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response);
    // 设置由外部控制的行人行为
    // Set behavior of pedestrian controlled by external behavior
    virtual ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response);
    // 获取当前所有受控出租车的订单分配方案
    // Get current order allocation plan for all controlled taxis
    virtual ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response);
    // 设置当前所有受控出租车的订单分配方案
    // Set current order allocation plan for all controlled taxis
    virtual ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPerson() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPerson(::grpc::ServerContext* context, ::city::person::v2::GetPersonRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetPersonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddPerson() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPerson(::grpc::ServerContext* context, ::city::person::v2::AddPersonRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::AddPersonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSchedule() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSchedule(::grpc::ServerContext* context, ::city::person::v2::SetScheduleRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetScheduleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPersons() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersons(::grpc::ServerContext* context, ::city::person::v2::GetPersonsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetPersonsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersonByLongLatBBox(::grpc::ServerContext* context, ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetPersonByLongLatBBoxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllVehicles(::grpc::ServerContext* context, ::city::person::v2::GetAllVehiclesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetAllVehiclesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPedestrians(::grpc::ServerContext* context, ::city::person::v2::GetAllPedestriansRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetAllPedestriansResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPersonPosition(::grpc::ServerContext* context, ::city::person::v2::ResetPersonPositionRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::ResetPersonPositionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledVehicleIDs(::grpc::ServerContext* context, ::city::person::v2::SetControlledVehicleIDsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledVehicleIDsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchControlledVehicleEnvs(::grpc::ServerContext* context, ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::FetchControlledVehicleEnvsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledVehicleActions(::grpc::ServerContext* context, ::city::person::v2::SetControlledVehicleActionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledVehicleActionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiIDs(::grpc::ServerContext* context, ::city::person::v2::SetControlledTaxiIDsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledTaxiIDsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllOrders(::grpc::ServerContext* context, ::city::person::v2::GetAllOrdersRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetAllOrdersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiToOrders(::grpc::ServerContext* context, ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledTaxiToOrdersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledPedestrians(::grpc::ServerContext* context, ::city::person::v2::SetControlledPedestriansRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledPedestriansResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchControlledPedestriansEnvs(::grpc::ServerContext* context, ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::FetchControlledPedestriansEnvsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledPedestriansActions(::grpc::ServerContext* context, ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledPedestriansActionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetPerson<WithAsyncMethod_AddPerson<WithAsyncMethod_SetSchedule<WithAsyncMethod_GetPersons<WithAsyncMethod_GetPersonByLongLatBBox<WithAsyncMethod_GetAllVehicles<WithAsyncMethod_GetAllPedestrians<WithAsyncMethod_ResetPersonPosition<WithAsyncMethod_SetControlledVehicleIDs<WithAsyncMethod_FetchControlledVehicleEnvs<WithAsyncMethod_SetControlledVehicleActions<WithAsyncMethod_SetControlledTaxiIDs<WithAsyncMethod_GetAllOrders<WithAsyncMethod_SetControlledTaxiToOrders<WithAsyncMethod_SetControlledPedestrians<WithAsyncMethod_FetchControlledPedestriansEnvs<WithAsyncMethod_SetControlledPedestriansActions<WithAsyncMethod_GetControlledTaxiOrderAllocationPlan<WithAsyncMethod_SetControlledTaxiOrderAllocationPlan<Service > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPerson() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonRequest, ::city::person::v2::GetPersonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetPersonRequest* request, ::city::person::v2::GetPersonResponse* response) { return this->GetPerson(context, request, response); }));}
    void SetMessageAllocatorFor_GetPerson(
        ::grpc::MessageAllocator< ::city::person::v2::GetPersonRequest, ::city::person::v2::GetPersonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonRequest, ::city::person::v2::GetPersonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddPerson() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::AddPersonRequest, ::city::person::v2::AddPersonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::AddPersonRequest* request, ::city::person::v2::AddPersonResponse* response) { return this->AddPerson(context, request, response); }));}
    void SetMessageAllocatorFor_AddPerson(
        ::grpc::MessageAllocator< ::city::person::v2::AddPersonRequest, ::city::person::v2::AddPersonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::AddPersonRequest, ::city::person::v2::AddPersonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSchedule() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetScheduleRequest, ::city::person::v2::SetScheduleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetScheduleRequest* request, ::city::person::v2::SetScheduleResponse* response) { return this->SetSchedule(context, request, response); }));}
    void SetMessageAllocatorFor_SetSchedule(
        ::grpc::MessageAllocator< ::city::person::v2::SetScheduleRequest, ::city::person::v2::SetScheduleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetScheduleRequest, ::city::person::v2::SetScheduleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSchedule(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPersons() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonsRequest, ::city::person::v2::GetPersonsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetPersonsRequest* request, ::city::person::v2::GetPersonsResponse* response) { return this->GetPersons(context, request, response); }));}
    void SetMessageAllocatorFor_GetPersons(
        ::grpc::MessageAllocator< ::city::person::v2::GetPersonsRequest, ::city::person::v2::GetPersonsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonsRequest, ::city::person::v2::GetPersonsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersons(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonByLongLatBBoxRequest, ::city::person::v2::GetPersonByLongLatBBoxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetPersonByLongLatBBoxRequest* request, ::city::person::v2::GetPersonByLongLatBBoxResponse* response) { return this->GetPersonByLongLatBBox(context, request, response); }));}
    void SetMessageAllocatorFor_GetPersonByLongLatBBox(
        ::grpc::MessageAllocator< ::city::person::v2::GetPersonByLongLatBBoxRequest, ::city::person::v2::GetPersonByLongLatBBoxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetPersonByLongLatBBoxRequest, ::city::person::v2::GetPersonByLongLatBBoxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersonByLongLatBBox(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllVehiclesRequest, ::city::person::v2::GetAllVehiclesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetAllVehiclesRequest* request, ::city::person::v2::GetAllVehiclesResponse* response) { return this->GetAllVehicles(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllVehicles(
        ::grpc::MessageAllocator< ::city::person::v2::GetAllVehiclesRequest, ::city::person::v2::GetAllVehiclesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllVehiclesRequest, ::city::person::v2::GetAllVehiclesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllVehicles(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllPedestriansRequest, ::city::person::v2::GetAllPedestriansResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetAllPedestriansRequest* request, ::city::person::v2::GetAllPedestriansResponse* response) { return this->GetAllPedestrians(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllPedestrians(
        ::grpc::MessageAllocator< ::city::person::v2::GetAllPedestriansRequest, ::city::person::v2::GetAllPedestriansResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllPedestriansRequest, ::city::person::v2::GetAllPedestriansResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPedestrians(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::ResetPersonPositionRequest, ::city::person::v2::ResetPersonPositionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::ResetPersonPositionRequest* request, ::city::person::v2::ResetPersonPositionResponse* response) { return this->ResetPersonPosition(context, request, response); }));}
    void SetMessageAllocatorFor_ResetPersonPosition(
        ::grpc::MessageAllocator< ::city::person::v2::ResetPersonPositionRequest, ::city::person::v2::ResetPersonPositionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::ResetPersonPositionRequest, ::city::person::v2::ResetPersonPositionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPersonPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledVehicleIDsRequest, ::city::person::v2::SetControlledVehicleIDsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledVehicleIDsRequest* request, ::city::person::v2::SetControlledVehicleIDsResponse* response) { return this->SetControlledVehicleIDs(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledVehicleIDs(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledVehicleIDsRequest, ::city::person::v2::SetControlledVehicleIDsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledVehicleIDsRequest, ::city::person::v2::SetControlledVehicleIDsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledVehicleIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::FetchControlledVehicleEnvsRequest, ::city::person::v2::FetchControlledVehicleEnvsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::FetchControlledVehicleEnvsRequest* request, ::city::person::v2::FetchControlledVehicleEnvsResponse* response) { return this->FetchControlledVehicleEnvs(context, request, response); }));}
    void SetMessageAllocatorFor_FetchControlledVehicleEnvs(
        ::grpc::MessageAllocator< ::city::person::v2::FetchControlledVehicleEnvsRequest, ::city::person::v2::FetchControlledVehicleEnvsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::FetchControlledVehicleEnvsRequest, ::city::person::v2::FetchControlledVehicleEnvsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchControlledVehicleEnvs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledVehicleActionsRequest, ::city::person::v2::SetControlledVehicleActionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledVehicleActionsRequest* request, ::city::person::v2::SetControlledVehicleActionsResponse* response) { return this->SetControlledVehicleActions(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledVehicleActions(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledVehicleActionsRequest, ::city::person::v2::SetControlledVehicleActionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledVehicleActionsRequest, ::city::person::v2::SetControlledVehicleActionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledVehicleActions(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiIDsRequest, ::city::person::v2::SetControlledTaxiIDsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledTaxiIDsRequest* request, ::city::person::v2::SetControlledTaxiIDsResponse* response) { return this->SetControlledTaxiIDs(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledTaxiIDs(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledTaxiIDsRequest, ::city::person::v2::SetControlledTaxiIDsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiIDsRequest, ::city::person::v2::SetControlledTaxiIDsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllOrdersRequest, ::city::person::v2::GetAllOrdersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetAllOrdersRequest* request, ::city::person::v2::GetAllOrdersResponse* response) { return this->GetAllOrders(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllOrders(
        ::grpc::MessageAllocator< ::city::person::v2::GetAllOrdersRequest, ::city::person::v2::GetAllOrdersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetAllOrdersRequest, ::city::person::v2::GetAllOrdersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllOrders(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiToOrdersRequest, ::city::person::v2::SetControlledTaxiToOrdersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledTaxiToOrdersRequest* request, ::city::person::v2::SetControlledTaxiToOrdersResponse* response) { return this->SetControlledTaxiToOrders(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledTaxiToOrders(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledTaxiToOrdersRequest, ::city::person::v2::SetControlledTaxiToOrdersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiToOrdersRequest, ::city::person::v2::SetControlledTaxiToOrdersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiToOrders(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledPedestriansRequest, ::city::person::v2::SetControlledPedestriansResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledPedestriansRequest* request, ::city::person::v2::SetControlledPedestriansResponse* response) { return this->SetControlledPedestrians(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledPedestrians(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledPedestriansRequest, ::city::person::v2::SetControlledPedestriansResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledPedestriansRequest, ::city::person::v2::SetControlledPedestriansResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledPedestrians(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::FetchControlledPedestriansEnvsRequest, ::city::person::v2::FetchControlledPedestriansEnvsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* request, ::city::person::v2::FetchControlledPedestriansEnvsResponse* response) { return this->FetchControlledPedestriansEnvs(context, request, response); }));}
    void SetMessageAllocatorFor_FetchControlledPedestriansEnvs(
        ::grpc::MessageAllocator< ::city::person::v2::FetchControlledPedestriansEnvsRequest, ::city::person::v2::FetchControlledPedestriansEnvsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::FetchControlledPedestriansEnvsRequest, ::city::person::v2::FetchControlledPedestriansEnvsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchControlledPedestriansEnvs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledPedestriansActionsRequest, ::city::person::v2::SetControlledPedestriansActionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledPedestriansActionsRequest* request, ::city::person::v2::SetControlledPedestriansActionsResponse* response) { return this->SetControlledPedestriansActions(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledPedestriansActions(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledPedestriansActionsRequest, ::city::person::v2::SetControlledPedestriansActionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledPedestriansActionsRequest, ::city::person::v2::SetControlledPedestriansActionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledPedestriansActions(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* response) { return this->GetControlledTaxiOrderAllocationPlan(context, request, response); }));}
    void SetMessageAllocatorFor_GetControlledTaxiOrderAllocationPlan(
        ::grpc::MessageAllocator< ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetControlledTaxiOrderAllocationPlan(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* request, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* response) { return this->SetControlledTaxiOrderAllocationPlan(context, request, response); }));}
    void SetMessageAllocatorFor_SetControlledTaxiOrderAllocationPlan(
        ::grpc::MessageAllocator< ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiOrderAllocationPlan(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetPerson<WithCallbackMethod_AddPerson<WithCallbackMethod_SetSchedule<WithCallbackMethod_GetPersons<WithCallbackMethod_GetPersonByLongLatBBox<WithCallbackMethod_GetAllVehicles<WithCallbackMethod_GetAllPedestrians<WithCallbackMethod_ResetPersonPosition<WithCallbackMethod_SetControlledVehicleIDs<WithCallbackMethod_FetchControlledVehicleEnvs<WithCallbackMethod_SetControlledVehicleActions<WithCallbackMethod_SetControlledTaxiIDs<WithCallbackMethod_GetAllOrders<WithCallbackMethod_SetControlledTaxiToOrders<WithCallbackMethod_SetControlledPedestrians<WithCallbackMethod_FetchControlledPedestriansEnvs<WithCallbackMethod_SetControlledPedestriansActions<WithCallbackMethod_GetControlledTaxiOrderAllocationPlan<WithCallbackMethod_SetControlledTaxiOrderAllocationPlan<Service > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPerson() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddPerson() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSchedule() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPersons() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPerson() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPerson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddPerson() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPerson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSchedule() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSchedule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPersons() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersons(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersonByLongLatBBox(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllVehicles(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPedestrians(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPersonPosition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledVehicleIDs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchControlledVehicleEnvs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledVehicleActions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiIDs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllOrders(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiToOrders(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledPedestrians(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetchControlledPedestriansEnvs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledPedestriansActions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPerson() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPerson(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddPerson() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddPerson(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSchedule() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSchedule(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSchedule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPersons() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPersons(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersons(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPersonByLongLatBBox(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersonByLongLatBBox(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllVehicles(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllVehicles(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllPedestrians(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPedestrians(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetPersonPosition(context, request, response); }));
    }
    ~WithRawCallbackMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPersonPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledVehicleIDs(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledVehicleIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FetchControlledVehicleEnvs(context, request, response); }));
    }
    ~WithRawCallbackMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchControlledVehicleEnvs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledVehicleActions(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledVehicleActions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledTaxiIDs(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiIDs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllOrders(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllOrders(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledTaxiToOrders(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiToOrders(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledPedestrians(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledPedestrians(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FetchControlledPedestriansEnvs(context, request, response); }));
    }
    ~WithRawCallbackMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FetchControlledPedestriansEnvs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledPedestriansActions(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledPedestriansActions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetControlledTaxiOrderAllocationPlan(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetControlledTaxiOrderAllocationPlan(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetControlledTaxiOrderAllocationPlan(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetControlledTaxiOrderAllocationPlan(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPerson() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetPersonRequest, ::city::person::v2::GetPersonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetPersonRequest, ::city::person::v2::GetPersonResponse>* streamer) {
                       return this->StreamedGetPerson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonRequest* /*request*/, ::city::person::v2::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPerson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetPersonRequest,::city::person::v2::GetPersonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddPerson() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::AddPersonRequest, ::city::person::v2::AddPersonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::AddPersonRequest, ::city::person::v2::AddPersonResponse>* streamer) {
                       return this->StreamedAddPerson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v2::AddPersonRequest* /*request*/, ::city::person::v2::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPerson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::AddPersonRequest,::city::person::v2::AddPersonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSchedule() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetScheduleRequest, ::city::person::v2::SetScheduleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetScheduleRequest, ::city::person::v2::SetScheduleResponse>* streamer) {
                       return this->StreamedSetSchedule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetScheduleRequest* /*request*/, ::city::person::v2::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSchedule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetScheduleRequest,::city::person::v2::SetScheduleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPersons : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPersons() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetPersonsRequest, ::city::person::v2::GetPersonsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetPersonsRequest, ::city::person::v2::GetPersonsResponse>* streamer) {
                       return this->StreamedGetPersons(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPersons() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPersons(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonsRequest* /*request*/, ::city::person::v2::GetPersonsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPersons(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetPersonsRequest,::city::person::v2::GetPersonsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetPersonByLongLatBBoxRequest, ::city::person::v2::GetPersonByLongLatBBoxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetPersonByLongLatBBoxRequest, ::city::person::v2::GetPersonByLongLatBBoxResponse>* streamer) {
                       return this->StreamedGetPersonByLongLatBBox(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v2::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPersonByLongLatBBox(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetPersonByLongLatBBoxRequest,::city::person::v2::GetPersonByLongLatBBoxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllVehicles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllVehicles() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetAllVehiclesRequest, ::city::person::v2::GetAllVehiclesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetAllVehiclesRequest, ::city::person::v2::GetAllVehiclesResponse>* streamer) {
                       return this->StreamedGetAllVehicles(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllVehicles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllVehicles(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllVehiclesRequest* /*request*/, ::city::person::v2::GetAllVehiclesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllVehicles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetAllVehiclesRequest,::city::person::v2::GetAllVehiclesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllPedestrians() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetAllPedestriansRequest, ::city::person::v2::GetAllPedestriansResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetAllPedestriansRequest, ::city::person::v2::GetAllPedestriansResponse>* streamer) {
                       return this->StreamedGetAllPedestrians(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllPedestriansRequest* /*request*/, ::city::person::v2::GetAllPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllPedestrians(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetAllPedestriansRequest,::city::person::v2::GetAllPedestriansResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetPersonPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetPersonPosition() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::ResetPersonPositionRequest, ::city::person::v2::ResetPersonPositionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::ResetPersonPositionRequest, ::city::person::v2::ResetPersonPositionResponse>* streamer) {
                       return this->StreamedResetPersonPosition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetPersonPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetPersonPosition(::grpc::ServerContext* /*context*/, const ::city::person::v2::ResetPersonPositionRequest* /*request*/, ::city::person::v2::ResetPersonPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetPersonPosition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::ResetPersonPositionRequest,::city::person::v2::ResetPersonPositionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledVehicleIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledVehicleIDs() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledVehicleIDsRequest, ::city::person::v2::SetControlledVehicleIDsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledVehicleIDsRequest, ::city::person::v2::SetControlledVehicleIDsResponse>* streamer) {
                       return this->StreamedSetControlledVehicleIDs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledVehicleIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledVehicleIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleIDsRequest* /*request*/, ::city::person::v2::SetControlledVehicleIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledVehicleIDs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledVehicleIDsRequest,::city::person::v2::SetControlledVehicleIDsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FetchControlledVehicleEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FetchControlledVehicleEnvs() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::FetchControlledVehicleEnvsRequest, ::city::person::v2::FetchControlledVehicleEnvsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::FetchControlledVehicleEnvsRequest, ::city::person::v2::FetchControlledVehicleEnvsResponse>* streamer) {
                       return this->StreamedFetchControlledVehicleEnvs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FetchControlledVehicleEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FetchControlledVehicleEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledVehicleEnvsRequest* /*request*/, ::city::person::v2::FetchControlledVehicleEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFetchControlledVehicleEnvs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::FetchControlledVehicleEnvsRequest,::city::person::v2::FetchControlledVehicleEnvsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledVehicleActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledVehicleActions() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledVehicleActionsRequest, ::city::person::v2::SetControlledVehicleActionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledVehicleActionsRequest, ::city::person::v2::SetControlledVehicleActionsResponse>* streamer) {
                       return this->StreamedSetControlledVehicleActions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledVehicleActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledVehicleActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledVehicleActionsRequest* /*request*/, ::city::person::v2::SetControlledVehicleActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledVehicleActions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledVehicleActionsRequest,::city::person::v2::SetControlledVehicleActionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledTaxiIDs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledTaxiIDs() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledTaxiIDsRequest, ::city::person::v2::SetControlledTaxiIDsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledTaxiIDsRequest, ::city::person::v2::SetControlledTaxiIDsResponse>* streamer) {
                       return this->StreamedSetControlledTaxiIDs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledTaxiIDs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledTaxiIDs(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiIDsRequest* /*request*/, ::city::person::v2::SetControlledTaxiIDsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledTaxiIDs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledTaxiIDsRequest,::city::person::v2::SetControlledTaxiIDsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllOrders() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetAllOrdersRequest, ::city::person::v2::GetAllOrdersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetAllOrdersRequest, ::city::person::v2::GetAllOrdersResponse>* streamer) {
                       return this->StreamedGetAllOrders(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetAllOrdersRequest* /*request*/, ::city::person::v2::GetAllOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllOrders(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetAllOrdersRequest,::city::person::v2::GetAllOrdersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledTaxiToOrders : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledTaxiToOrders() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledTaxiToOrdersRequest, ::city::person::v2::SetControlledTaxiToOrdersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledTaxiToOrdersRequest, ::city::person::v2::SetControlledTaxiToOrdersResponse>* streamer) {
                       return this->StreamedSetControlledTaxiToOrders(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledTaxiToOrders() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledTaxiToOrders(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiToOrdersRequest* /*request*/, ::city::person::v2::SetControlledTaxiToOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledTaxiToOrders(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledTaxiToOrdersRequest,::city::person::v2::SetControlledTaxiToOrdersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledPedestrians : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledPedestrians() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledPedestriansRequest, ::city::person::v2::SetControlledPedestriansResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledPedestriansRequest, ::city::person::v2::SetControlledPedestriansResponse>* streamer) {
                       return this->StreamedSetControlledPedestrians(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledPedestrians() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledPedestrians(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansRequest* /*request*/, ::city::person::v2::SetControlledPedestriansResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledPedestrians(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledPedestriansRequest,::city::person::v2::SetControlledPedestriansResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FetchControlledPedestriansEnvs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FetchControlledPedestriansEnvs() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::FetchControlledPedestriansEnvsRequest, ::city::person::v2::FetchControlledPedestriansEnvsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::FetchControlledPedestriansEnvsRequest, ::city::person::v2::FetchControlledPedestriansEnvsResponse>* streamer) {
                       return this->StreamedFetchControlledPedestriansEnvs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FetchControlledPedestriansEnvs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FetchControlledPedestriansEnvs(::grpc::ServerContext* /*context*/, const ::city::person::v2::FetchControlledPedestriansEnvsRequest* /*request*/, ::city::person::v2::FetchControlledPedestriansEnvsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFetchControlledPedestriansEnvs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::FetchControlledPedestriansEnvsRequest,::city::person::v2::FetchControlledPedestriansEnvsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledPedestriansActions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledPedestriansActions() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledPedestriansActionsRequest, ::city::person::v2::SetControlledPedestriansActionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledPedestriansActionsRequest, ::city::person::v2::SetControlledPedestriansActionsResponse>* streamer) {
                       return this->StreamedSetControlledPedestriansActions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledPedestriansActions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledPedestriansActions(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledPedestriansActionsRequest* /*request*/, ::city::person::v2::SetControlledPedestriansActionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledPedestriansActions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledPedestriansActionsRequest,::city::person::v2::SetControlledPedestriansActionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* streamer) {
                       return this->StreamedGetControlledTaxiOrderAllocationPlan(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::GetControlledTaxiOrderAllocationPlanRequest,::city::person::v2::GetControlledTaxiOrderAllocationPlanResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetControlledTaxiOrderAllocationPlan : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetControlledTaxiOrderAllocationPlan() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* streamer) {
                       return this->StreamedSetControlledTaxiOrderAllocationPlan(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetControlledTaxiOrderAllocationPlan() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* /*context*/, const ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest* /*request*/, ::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetControlledTaxiOrderAllocationPlan(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v2::SetControlledTaxiOrderAllocationPlanRequest,::city::person::v2::SetControlledTaxiOrderAllocationPlanResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetPerson<WithStreamedUnaryMethod_AddPerson<WithStreamedUnaryMethod_SetSchedule<WithStreamedUnaryMethod_GetPersons<WithStreamedUnaryMethod_GetPersonByLongLatBBox<WithStreamedUnaryMethod_GetAllVehicles<WithStreamedUnaryMethod_GetAllPedestrians<WithStreamedUnaryMethod_ResetPersonPosition<WithStreamedUnaryMethod_SetControlledVehicleIDs<WithStreamedUnaryMethod_FetchControlledVehicleEnvs<WithStreamedUnaryMethod_SetControlledVehicleActions<WithStreamedUnaryMethod_SetControlledTaxiIDs<WithStreamedUnaryMethod_GetAllOrders<WithStreamedUnaryMethod_SetControlledTaxiToOrders<WithStreamedUnaryMethod_SetControlledPedestrians<WithStreamedUnaryMethod_FetchControlledPedestriansEnvs<WithStreamedUnaryMethod_SetControlledPedestriansActions<WithStreamedUnaryMethod_GetControlledTaxiOrderAllocationPlan<WithStreamedUnaryMethod_SetControlledTaxiOrderAllocationPlan<Service > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetPerson<WithStreamedUnaryMethod_AddPerson<WithStreamedUnaryMethod_SetSchedule<WithStreamedUnaryMethod_GetPersons<WithStreamedUnaryMethod_GetPersonByLongLatBBox<WithStreamedUnaryMethod_GetAllVehicles<WithStreamedUnaryMethod_GetAllPedestrians<WithStreamedUnaryMethod_ResetPersonPosition<WithStreamedUnaryMethod_SetControlledVehicleIDs<WithStreamedUnaryMethod_FetchControlledVehicleEnvs<WithStreamedUnaryMethod_SetControlledVehicleActions<WithStreamedUnaryMethod_SetControlledTaxiIDs<WithStreamedUnaryMethod_GetAllOrders<WithStreamedUnaryMethod_SetControlledTaxiToOrders<WithStreamedUnaryMethod_SetControlledPedestrians<WithStreamedUnaryMethod_FetchControlledPedestriansEnvs<WithStreamedUnaryMethod_SetControlledPedestriansActions<WithStreamedUnaryMethod_GetControlledTaxiOrderAllocationPlan<WithStreamedUnaryMethod_SetControlledTaxiOrderAllocationPlan<Service > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace person
}  // namespace city


#endif  // GRPC_city_2fperson_2fv2_2fperson_5fservice_2eproto__INCLUDED

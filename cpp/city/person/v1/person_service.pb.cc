// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/person/v1/person_service.proto

#include "city/person/v1/person_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace person {
namespace v1 {
PROTOBUF_CONSTEXPR GetPersonRequest::GetPersonRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.person_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPersonRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPersonRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPersonRequestDefaultTypeInternal() {}
  union {
    GetPersonRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPersonRequestDefaultTypeInternal _GetPersonRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPersonResponse::GetPersonResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.motion_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPersonResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPersonResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPersonResponseDefaultTypeInternal() {}
  union {
    GetPersonResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPersonResponseDefaultTypeInternal _GetPersonResponse_default_instance_;
PROTOBUF_CONSTEXPR AddPersonRequest::AddPersonRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.person_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddPersonRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddPersonRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddPersonRequestDefaultTypeInternal() {}
  union {
    AddPersonRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddPersonRequestDefaultTypeInternal _AddPersonRequest_default_instance_;
PROTOBUF_CONSTEXPR AddPersonResponse::AddPersonResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.person_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddPersonResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddPersonResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddPersonResponseDefaultTypeInternal() {}
  union {
    AddPersonResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddPersonResponseDefaultTypeInternal _AddPersonResponse_default_instance_;
PROTOBUF_CONSTEXPR SetScheduleRequest::SetScheduleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.schedules_)*/{}
  , /*decltype(_impl_.person_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetScheduleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetScheduleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetScheduleRequestDefaultTypeInternal() {}
  union {
    SetScheduleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetScheduleRequestDefaultTypeInternal _SetScheduleRequest_default_instance_;
PROTOBUF_CONSTEXPR SetScheduleResponse::SetScheduleResponse(
    ::_pbi::ConstantInitialized) {}
struct SetScheduleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetScheduleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetScheduleResponseDefaultTypeInternal() {}
  union {
    SetScheduleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetScheduleResponseDefaultTypeInternal _SetScheduleResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPersonByLongLatBBoxRequest::GetPersonByLongLatBBoxRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.exclude_statuses_)*/{}
  , /*decltype(_impl_._exclude_statuses_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bbox_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPersonByLongLatBBoxRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPersonByLongLatBBoxRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPersonByLongLatBBoxRequestDefaultTypeInternal() {}
  union {
    GetPersonByLongLatBBoxRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPersonByLongLatBBoxRequestDefaultTypeInternal _GetPersonByLongLatBBoxRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPersonByLongLatBBoxResponse::GetPersonByLongLatBBoxResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.motions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPersonByLongLatBBoxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPersonByLongLatBBoxResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPersonByLongLatBBoxResponseDefaultTypeInternal() {}
  union {
    GetPersonByLongLatBBoxResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPersonByLongLatBBoxResponseDefaultTypeInternal _GetPersonByLongLatBBoxResponse_default_instance_;
}  // namespace v1
}  // namespace person
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2fperson_2fv1_2fperson_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2fperson_2fv1_2fperson_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2fperson_2fv1_2fperson_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonRequest, _impl_.person_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonResponse, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonResponse, _impl_.motion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::AddPersonRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::AddPersonRequest, _impl_.person_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::AddPersonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::AddPersonResponse, _impl_.person_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::SetScheduleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::SetScheduleRequest, _impl_.person_id_),
  PROTOBUF_FIELD_OFFSET(::city::person::v1::SetScheduleRequest, _impl_.schedules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::SetScheduleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonByLongLatBBoxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonByLongLatBBoxRequest, _impl_.bbox_),
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonByLongLatBBoxRequest, _impl_.exclude_statuses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonByLongLatBBoxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::person::v1::GetPersonByLongLatBBoxResponse, _impl_.motions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::person::v1::GetPersonRequest)},
  { 7, -1, -1, sizeof(::city::person::v1::GetPersonResponse)},
  { 15, -1, -1, sizeof(::city::person::v1::AddPersonRequest)},
  { 22, -1, -1, sizeof(::city::person::v1::AddPersonResponse)},
  { 29, -1, -1, sizeof(::city::person::v1::SetScheduleRequest)},
  { 37, -1, -1, sizeof(::city::person::v1::SetScheduleResponse)},
  { 43, -1, -1, sizeof(::city::person::v1::GetPersonByLongLatBBoxRequest)},
  { 51, -1, -1, sizeof(::city::person::v1::GetPersonByLongLatBBoxResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::person::v1::_GetPersonRequest_default_instance_._instance,
  &::city::person::v1::_GetPersonResponse_default_instance_._instance,
  &::city::person::v1::_AddPersonRequest_default_instance_._instance,
  &::city::person::v1::_AddPersonResponse_default_instance_._instance,
  &::city::person::v1::_SetScheduleRequest_default_instance_._instance,
  &::city::person::v1::_SetScheduleResponse_default_instance_._instance,
  &::city::person::v1::_GetPersonByLongLatBBoxRequest_default_instance_._instance,
  &::city::person::v1::_GetPersonByLongLatBBoxResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2fperson_2fv1_2fperson_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#city/person/v1/person_service.proto\022\016c"
  "ity.person.v1\032\025city/geo/v2/geo.proto\032\033ci"
  "ty/person/v1/motion.proto\032\033city/person/v"
  "1/person.proto\032\027city/trip/v2/trip.proto\""
  "/\n\020GetPersonRequest\022\033\n\tperson_id\030\001 \001(\005R\010"
  "personId\"u\n\021GetPersonResponse\022*\n\004base\030\001 "
  "\001(\0132\026.city.person.v1.PersonR\004base\0224\n\006mot"
  "ion\030\002 \001(\0132\034.city.person.v1.PersonMotionR"
  "\006motion\"B\n\020AddPersonRequest\022.\n\006person\030\001 "
  "\001(\0132\026.city.person.v1.PersonR\006person\"0\n\021A"
  "ddPersonResponse\022\033\n\tperson_id\030\001 \001(\005R\010per"
  "sonId\"g\n\022SetScheduleRequest\022\033\n\tperson_id"
  "\030\001 \001(\005R\010personId\0224\n\tschedules\030\002 \003(\0132\026.ci"
  "ty.trip.v2.ScheduleR\tschedules\"\025\n\023SetSch"
  "eduleResponse\"\220\001\n\035GetPersonByLongLatBBox"
  "Request\022,\n\004bbox\030\001 \001(\0132\030.city.geo.v2.Long"
  "LatBBoxR\004bbox\022A\n\020exclude_statuses\030\002 \003(\0162"
  "\026.city.person.v1.StatusR\017excludeStatuses"
  "\"X\n\036GetPersonByLongLatBBoxResponse\0226\n\007mo"
  "tions\030\001 \003(\0132\034.city.person.v1.PersonMotio"
  "nR\007motions2\204\003\n\rPersonService\022P\n\tGetPerso"
  "n\022 .city.person.v1.GetPersonRequest\032!.ci"
  "ty.person.v1.GetPersonResponse\022P\n\tAddPer"
  "son\022 .city.person.v1.AddPersonRequest\032!."
  "city.person.v1.AddPersonResponse\022V\n\013SetS"
  "chedule\022\".city.person.v1.SetScheduleRequ"
  "est\032#.city.person.v1.SetScheduleResponse"
  "\022w\n\026GetPersonByLongLatBBox\022-.city.person"
  ".v1.GetPersonByLongLatBBoxRequest\032..city"
  ".person.v1.GetPersonByLongLatBBoxRespons"
  "eB\270\001\n\022com.city.person.v1B\022PersonServiceP"
  "rotoP\001Z4git.fiblab.net/sim/protos/go/cit"
  "y/person/v1;personv1\242\002\003CPX\252\002\016City.Person"
  ".V1\312\002\016City\\Person\\V1\342\002\032City\\Person\\V1\\GP"
  "BMetadata\352\002\020City::Person::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_deps[4] = {
  &::descriptor_table_city_2fgeo_2fv2_2fgeo_2eproto,
  &::descriptor_table_city_2fperson_2fv1_2fmotion_2eproto,
  &::descriptor_table_city_2fperson_2fv1_2fperson_2eproto,
  &::descriptor_table_city_2ftrip_2fv2_2ftrip_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto = {
    false, false, 1396, descriptor_table_protodef_city_2fperson_2fv1_2fperson_5fservice_2eproto,
    "city/person/v1/person_service.proto",
    &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once, descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_deps, 4, 8,
    schemas, file_default_instances, TableStruct_city_2fperson_2fv1_2fperson_5fservice_2eproto::offsets,
    file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto, file_level_enum_descriptors_city_2fperson_2fv1_2fperson_5fservice_2eproto,
    file_level_service_descriptors_city_2fperson_2fv1_2fperson_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fperson_2fv1_2fperson_5fservice_2eproto(&descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto);
namespace city {
namespace person {
namespace v1 {

// ===================================================================

class GetPersonRequest::_Internal {
 public:
};

GetPersonRequest::GetPersonRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.GetPersonRequest)
}
GetPersonRequest::GetPersonRequest(const GetPersonRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPersonRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.person_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.person_id_ = from._impl_.person_id_;
  // @@protoc_insertion_point(copy_constructor:city.person.v1.GetPersonRequest)
}

inline void GetPersonRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.person_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPersonRequest::~GetPersonRequest() {
  // @@protoc_insertion_point(destructor:city.person.v1.GetPersonRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPersonRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPersonRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPersonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.GetPersonRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.person_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersonRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 person_id = 1 [json_name = "personId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.person_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPersonRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.GetPersonRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_person_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.GetPersonRequest)
  return target;
}

size_t GetPersonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.GetPersonRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_person_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPersonRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPersonRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPersonRequest::GetClassData() const { return &_class_data_; }


void GetPersonRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPersonRequest*>(&to_msg);
  auto& from = static_cast<const GetPersonRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.GetPersonRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_person_id() != 0) {
    _this->_internal_set_person_id(from._internal_person_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPersonRequest::CopyFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonRequest::IsInitialized() const {
  return true;
}

void GetPersonRequest::InternalSwap(GetPersonRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.person_id_, other->_impl_.person_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersonRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[0]);
}

// ===================================================================

class GetPersonResponse::_Internal {
 public:
  static const ::city::person::v1::Person& base(const GetPersonResponse* msg);
  static const ::city::person::v1::PersonMotion& motion(const GetPersonResponse* msg);
};

const ::city::person::v1::Person&
GetPersonResponse::_Internal::base(const GetPersonResponse* msg) {
  return *msg->_impl_.base_;
}
const ::city::person::v1::PersonMotion&
GetPersonResponse::_Internal::motion(const GetPersonResponse* msg) {
  return *msg->_impl_.motion_;
}
void GetPersonResponse::clear_base() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
}
void GetPersonResponse::clear_motion() {
  if (GetArenaForAllocation() == nullptr && _impl_.motion_ != nullptr) {
    delete _impl_.motion_;
  }
  _impl_.motion_ = nullptr;
}
GetPersonResponse::GetPersonResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.GetPersonResponse)
}
GetPersonResponse::GetPersonResponse(const GetPersonResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPersonResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.motion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::city::person::v1::Person(*from._impl_.base_);
  }
  if (from._internal_has_motion()) {
    _this->_impl_.motion_ = new ::city::person::v1::PersonMotion(*from._impl_.motion_);
  }
  // @@protoc_insertion_point(copy_constructor:city.person.v1.GetPersonResponse)
}

inline void GetPersonResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.motion_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPersonResponse::~GetPersonResponse() {
  // @@protoc_insertion_point(destructor:city.person.v1.GetPersonResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPersonResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.motion_;
}

void GetPersonResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPersonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.GetPersonResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.motion_ != nullptr) {
    delete _impl_.motion_;
  }
  _impl_.motion_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersonResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.person.v1.Person base = 1 [json_name = "base"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .city.person.v1.PersonMotion motion = 2 [json_name = "motion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_motion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPersonResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.GetPersonResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.person.v1.Person base = 1 [json_name = "base"];
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .city.person.v1.PersonMotion motion = 2 [json_name = "motion"];
  if (this->_internal_has_motion()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::motion(this),
        _Internal::motion(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.GetPersonResponse)
  return target;
}

size_t GetPersonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.GetPersonResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.person.v1.Person base = 1 [json_name = "base"];
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .city.person.v1.PersonMotion motion = 2 [json_name = "motion"];
  if (this->_internal_has_motion()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.motion_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPersonResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPersonResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPersonResponse::GetClassData() const { return &_class_data_; }


void GetPersonResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPersonResponse*>(&to_msg);
  auto& from = static_cast<const GetPersonResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.GetPersonResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::city::person::v1::Person::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_motion()) {
    _this->_internal_mutable_motion()->::city::person::v1::PersonMotion::MergeFrom(
        from._internal_motion());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPersonResponse::CopyFrom(const GetPersonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.GetPersonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonResponse::IsInitialized() const {
  return true;
}

void GetPersonResponse::InternalSwap(GetPersonResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPersonResponse, _impl_.motion_)
      + sizeof(GetPersonResponse::_impl_.motion_)
      - PROTOBUF_FIELD_OFFSET(GetPersonResponse, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersonResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[1]);
}

// ===================================================================

class AddPersonRequest::_Internal {
 public:
  static const ::city::person::v1::Person& person(const AddPersonRequest* msg);
};

const ::city::person::v1::Person&
AddPersonRequest::_Internal::person(const AddPersonRequest* msg) {
  return *msg->_impl_.person_;
}
void AddPersonRequest::clear_person() {
  if (GetArenaForAllocation() == nullptr && _impl_.person_ != nullptr) {
    delete _impl_.person_;
  }
  _impl_.person_ = nullptr;
}
AddPersonRequest::AddPersonRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.AddPersonRequest)
}
AddPersonRequest::AddPersonRequest(const AddPersonRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddPersonRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.person_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_person()) {
    _this->_impl_.person_ = new ::city::person::v1::Person(*from._impl_.person_);
  }
  // @@protoc_insertion_point(copy_constructor:city.person.v1.AddPersonRequest)
}

inline void AddPersonRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.person_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddPersonRequest::~AddPersonRequest() {
  // @@protoc_insertion_point(destructor:city.person.v1.AddPersonRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddPersonRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.person_;
}

void AddPersonRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddPersonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.AddPersonRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.person_ != nullptr) {
    delete _impl_.person_;
  }
  _impl_.person_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPersonRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.person.v1.Person person = 1 [json_name = "person"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_person(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddPersonRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.AddPersonRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.person.v1.Person person = 1 [json_name = "person"];
  if (this->_internal_has_person()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::person(this),
        _Internal::person(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.AddPersonRequest)
  return target;
}

size_t AddPersonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.AddPersonRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.person.v1.Person person = 1 [json_name = "person"];
  if (this->_internal_has_person()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.person_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddPersonRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddPersonRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddPersonRequest::GetClassData() const { return &_class_data_; }


void AddPersonRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddPersonRequest*>(&to_msg);
  auto& from = static_cast<const AddPersonRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.AddPersonRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_person()) {
    _this->_internal_mutable_person()->::city::person::v1::Person::MergeFrom(
        from._internal_person());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddPersonRequest::CopyFrom(const AddPersonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.AddPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPersonRequest::IsInitialized() const {
  return true;
}

void AddPersonRequest::InternalSwap(AddPersonRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.person_, other->_impl_.person_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPersonRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[2]);
}

// ===================================================================

class AddPersonResponse::_Internal {
 public:
};

AddPersonResponse::AddPersonResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.AddPersonResponse)
}
AddPersonResponse::AddPersonResponse(const AddPersonResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddPersonResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.person_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.person_id_ = from._impl_.person_id_;
  // @@protoc_insertion_point(copy_constructor:city.person.v1.AddPersonResponse)
}

inline void AddPersonResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.person_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddPersonResponse::~AddPersonResponse() {
  // @@protoc_insertion_point(destructor:city.person.v1.AddPersonResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddPersonResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AddPersonResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddPersonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.AddPersonResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.person_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPersonResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 person_id = 1 [json_name = "personId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.person_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddPersonResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.AddPersonResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_person_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.AddPersonResponse)
  return target;
}

size_t AddPersonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.AddPersonResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_person_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddPersonResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddPersonResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddPersonResponse::GetClassData() const { return &_class_data_; }


void AddPersonResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddPersonResponse*>(&to_msg);
  auto& from = static_cast<const AddPersonResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.AddPersonResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_person_id() != 0) {
    _this->_internal_set_person_id(from._internal_person_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddPersonResponse::CopyFrom(const AddPersonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.AddPersonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPersonResponse::IsInitialized() const {
  return true;
}

void AddPersonResponse::InternalSwap(AddPersonResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.person_id_, other->_impl_.person_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPersonResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[3]);
}

// ===================================================================

class SetScheduleRequest::_Internal {
 public:
};

void SetScheduleRequest::clear_schedules() {
  _impl_.schedules_.Clear();
}
SetScheduleRequest::SetScheduleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.SetScheduleRequest)
}
SetScheduleRequest::SetScheduleRequest(const SetScheduleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetScheduleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){from._impl_.schedules_}
    , decltype(_impl_.person_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.person_id_ = from._impl_.person_id_;
  // @@protoc_insertion_point(copy_constructor:city.person.v1.SetScheduleRequest)
}

inline void SetScheduleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.schedules_){arena}
    , decltype(_impl_.person_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetScheduleRequest::~SetScheduleRequest() {
  // @@protoc_insertion_point(destructor:city.person.v1.SetScheduleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetScheduleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.schedules_.~RepeatedPtrField();
}

void SetScheduleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetScheduleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.SetScheduleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schedules_.Clear();
  _impl_.person_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetScheduleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 person_id = 1 [json_name = "personId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.person_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_schedules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetScheduleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.SetScheduleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_person_id(), target);
  }

  // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_schedules_size()); i < n; i++) {
    const auto& repfield = this->_internal_schedules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.SetScheduleRequest)
  return target;
}

size_t SetScheduleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.SetScheduleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.trip.v2.Schedule schedules = 2 [json_name = "schedules"];
  total_size += 1UL * this->_internal_schedules_size();
  for (const auto& msg : this->_impl_.schedules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 person_id = 1 [json_name = "personId"];
  if (this->_internal_person_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_person_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetScheduleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetScheduleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetScheduleRequest::GetClassData() const { return &_class_data_; }


void SetScheduleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetScheduleRequest*>(&to_msg);
  auto& from = static_cast<const SetScheduleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.SetScheduleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.schedules_.MergeFrom(from._impl_.schedules_);
  if (from._internal_person_id() != 0) {
    _this->_internal_set_person_id(from._internal_person_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetScheduleRequest::CopyFrom(const SetScheduleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.SetScheduleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetScheduleRequest::IsInitialized() const {
  return true;
}

void SetScheduleRequest::InternalSwap(SetScheduleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.schedules_.InternalSwap(&other->_impl_.schedules_);
  swap(_impl_.person_id_, other->_impl_.person_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetScheduleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[4]);
}

// ===================================================================

class SetScheduleResponse::_Internal {
 public:
};

SetScheduleResponse::SetScheduleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.person.v1.SetScheduleResponse)
}
SetScheduleResponse::SetScheduleResponse(const SetScheduleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetScheduleResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.person.v1.SetScheduleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetScheduleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetScheduleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetScheduleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[5]);
}

// ===================================================================

class GetPersonByLongLatBBoxRequest::_Internal {
 public:
  static const ::city::geo::v2::LongLatBBox& bbox(const GetPersonByLongLatBBoxRequest* msg);
};

const ::city::geo::v2::LongLatBBox&
GetPersonByLongLatBBoxRequest::_Internal::bbox(const GetPersonByLongLatBBoxRequest* msg) {
  return *msg->_impl_.bbox_;
}
void GetPersonByLongLatBBoxRequest::clear_bbox() {
  if (GetArenaForAllocation() == nullptr && _impl_.bbox_ != nullptr) {
    delete _impl_.bbox_;
  }
  _impl_.bbox_ = nullptr;
}
GetPersonByLongLatBBoxRequest::GetPersonByLongLatBBoxRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.GetPersonByLongLatBBoxRequest)
}
GetPersonByLongLatBBoxRequest::GetPersonByLongLatBBoxRequest(const GetPersonByLongLatBBoxRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPersonByLongLatBBoxRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.exclude_statuses_){from._impl_.exclude_statuses_}
    , /*decltype(_impl_._exclude_statuses_cached_byte_size_)*/{0}
    , decltype(_impl_.bbox_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bbox()) {
    _this->_impl_.bbox_ = new ::city::geo::v2::LongLatBBox(*from._impl_.bbox_);
  }
  // @@protoc_insertion_point(copy_constructor:city.person.v1.GetPersonByLongLatBBoxRequest)
}

inline void GetPersonByLongLatBBoxRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.exclude_statuses_){arena}
    , /*decltype(_impl_._exclude_statuses_cached_byte_size_)*/{0}
    , decltype(_impl_.bbox_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPersonByLongLatBBoxRequest::~GetPersonByLongLatBBoxRequest() {
  // @@protoc_insertion_point(destructor:city.person.v1.GetPersonByLongLatBBoxRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPersonByLongLatBBoxRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.exclude_statuses_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.bbox_;
}

void GetPersonByLongLatBBoxRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPersonByLongLatBBoxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.GetPersonByLongLatBBoxRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.exclude_statuses_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.bbox_ != nullptr) {
    delete _impl_.bbox_;
  }
  _impl_.bbox_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersonByLongLatBBoxRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bbox(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .city.person.v1.Status exclude_statuses = 2 [json_name = "excludeStatuses"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_exclude_statuses(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_exclude_statuses(static_cast<::city::person::v1::Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPersonByLongLatBBoxRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.GetPersonByLongLatBBoxRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
  if (this->_internal_has_bbox()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bbox(this),
        _Internal::bbox(this).GetCachedSize(), target, stream);
  }

  // repeated .city.person.v1.Status exclude_statuses = 2 [json_name = "excludeStatuses"];
  {
    int byte_size = _impl_._exclude_statuses_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, _impl_.exclude_statuses_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.GetPersonByLongLatBBoxRequest)
  return target;
}

size_t GetPersonByLongLatBBoxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.GetPersonByLongLatBBoxRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.person.v1.Status exclude_statuses = 2 [json_name = "excludeStatuses"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_exclude_statuses_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_exclude_statuses(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._exclude_statuses_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .city.geo.v2.LongLatBBox bbox = 1 [json_name = "bbox"];
  if (this->_internal_has_bbox()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bbox_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPersonByLongLatBBoxRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPersonByLongLatBBoxRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPersonByLongLatBBoxRequest::GetClassData() const { return &_class_data_; }


void GetPersonByLongLatBBoxRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPersonByLongLatBBoxRequest*>(&to_msg);
  auto& from = static_cast<const GetPersonByLongLatBBoxRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.GetPersonByLongLatBBoxRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.exclude_statuses_.MergeFrom(from._impl_.exclude_statuses_);
  if (from._internal_has_bbox()) {
    _this->_internal_mutable_bbox()->::city::geo::v2::LongLatBBox::MergeFrom(
        from._internal_bbox());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPersonByLongLatBBoxRequest::CopyFrom(const GetPersonByLongLatBBoxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.GetPersonByLongLatBBoxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonByLongLatBBoxRequest::IsInitialized() const {
  return true;
}

void GetPersonByLongLatBBoxRequest::InternalSwap(GetPersonByLongLatBBoxRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.exclude_statuses_.InternalSwap(&other->_impl_.exclude_statuses_);
  swap(_impl_.bbox_, other->_impl_.bbox_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersonByLongLatBBoxRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[6]);
}

// ===================================================================

class GetPersonByLongLatBBoxResponse::_Internal {
 public:
};

void GetPersonByLongLatBBoxResponse::clear_motions() {
  _impl_.motions_.Clear();
}
GetPersonByLongLatBBoxResponse::GetPersonByLongLatBBoxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.person.v1.GetPersonByLongLatBBoxResponse)
}
GetPersonByLongLatBBoxResponse::GetPersonByLongLatBBoxResponse(const GetPersonByLongLatBBoxResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPersonByLongLatBBoxResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.motions_){from._impl_.motions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.person.v1.GetPersonByLongLatBBoxResponse)
}

inline void GetPersonByLongLatBBoxResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.motions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPersonByLongLatBBoxResponse::~GetPersonByLongLatBBoxResponse() {
  // @@protoc_insertion_point(destructor:city.person.v1.GetPersonByLongLatBBoxResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPersonByLongLatBBoxResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.motions_.~RepeatedPtrField();
}

void GetPersonByLongLatBBoxResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPersonByLongLatBBoxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.person.v1.GetPersonByLongLatBBoxResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.motions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPersonByLongLatBBoxResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.person.v1.PersonMotion motions = 1 [json_name = "motions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_motions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPersonByLongLatBBoxResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.person.v1.GetPersonByLongLatBBoxResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.person.v1.PersonMotion motions = 1 [json_name = "motions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_motions_size()); i < n; i++) {
    const auto& repfield = this->_internal_motions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.person.v1.GetPersonByLongLatBBoxResponse)
  return target;
}

size_t GetPersonByLongLatBBoxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.person.v1.GetPersonByLongLatBBoxResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.person.v1.PersonMotion motions = 1 [json_name = "motions"];
  total_size += 1UL * this->_internal_motions_size();
  for (const auto& msg : this->_impl_.motions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPersonByLongLatBBoxResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPersonByLongLatBBoxResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPersonByLongLatBBoxResponse::GetClassData() const { return &_class_data_; }


void GetPersonByLongLatBBoxResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPersonByLongLatBBoxResponse*>(&to_msg);
  auto& from = static_cast<const GetPersonByLongLatBBoxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.person.v1.GetPersonByLongLatBBoxResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.motions_.MergeFrom(from._impl_.motions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPersonByLongLatBBoxResponse::CopyFrom(const GetPersonByLongLatBBoxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.person.v1.GetPersonByLongLatBBoxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonByLongLatBBoxResponse::IsInitialized() const {
  return true;
}

void GetPersonByLongLatBBoxResponse::InternalSwap(GetPersonByLongLatBBoxResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.motions_.InternalSwap(&other->_impl_.motions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPersonByLongLatBBoxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_getter, &descriptor_table_city_2fperson_2fv1_2fperson_5fservice_2eproto_once,
      file_level_metadata_city_2fperson_2fv1_2fperson_5fservice_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace person
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::person::v1::GetPersonRequest*
Arena::CreateMaybeMessage< ::city::person::v1::GetPersonRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::GetPersonRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::GetPersonResponse*
Arena::CreateMaybeMessage< ::city::person::v1::GetPersonResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::GetPersonResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::AddPersonRequest*
Arena::CreateMaybeMessage< ::city::person::v1::AddPersonRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::AddPersonRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::AddPersonResponse*
Arena::CreateMaybeMessage< ::city::person::v1::AddPersonResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::AddPersonResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::SetScheduleRequest*
Arena::CreateMaybeMessage< ::city::person::v1::SetScheduleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::SetScheduleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::SetScheduleResponse*
Arena::CreateMaybeMessage< ::city::person::v1::SetScheduleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::SetScheduleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::GetPersonByLongLatBBoxRequest*
Arena::CreateMaybeMessage< ::city::person::v1::GetPersonByLongLatBBoxRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::GetPersonByLongLatBBoxRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::person::v1::GetPersonByLongLatBBoxResponse*
Arena::CreateMaybeMessage< ::city::person::v1::GetPersonByLongLatBBoxResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::person::v1::GetPersonByLongLatBBoxResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

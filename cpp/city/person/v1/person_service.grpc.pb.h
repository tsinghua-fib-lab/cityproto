// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: city/person/v1/person_service.proto
#ifndef GRPC_city_2fperson_2fv1_2fperson_5fservice_2eproto__INCLUDED
#define GRPC_city_2fperson_2fv1_2fperson_5fservice_2eproto__INCLUDED

#include "city/person/v1/person_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace city {
namespace person {
namespace v1 {

class PersonService final {
 public:
  static constexpr char const* service_full_name() {
    return "city.person.v1.PersonService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 获取person信息
    // Get person information
    virtual ::grpc::Status GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::city::person::v1::GetPersonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>> AsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>>(AsyncGetPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>> PrepareAsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>>(PrepareAsyncGetPersonRaw(context, request, cq));
    }
    // 新增person 传入person初始位置、目的地表、属性 返回personid
    // Add a new person. Input person's initial location, destination table, and attributes, return personid
    virtual ::grpc::Status AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::city::person::v1::AddPersonResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>> AsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>>(AsyncAddPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>> PrepareAsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>>(PrepareAsyncAddPersonRaw(context, request, cq));
    }
    // 修改person的schedule 传入personid、目的地表
    // Set person's schedule. Input personid and destination table
    virtual ::grpc::Status SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::city::person::v1::SetScheduleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>> AsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>>(AsyncSetScheduleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>> PrepareAsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>>(PrepareAsyncSetScheduleRaw(context, request, cq));
    }
    // 获取特定区域内的person
    // Get persons in a specific region
    virtual ::grpc::Status GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>> AsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>>(AsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>> PrepareAsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>>(PrepareAsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 获取person信息
      // Get person information
      virtual void GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 新增person 传入person初始位置、目的地表、属性 返回personid
      // Add a new person. Input person's initial location, destination table, and attributes, return personid
      virtual void AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 修改person的schedule 传入personid、目的地表
      // Set person's schedule. Input personid and destination table
      virtual void SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取特定区域内的person
      // Get persons in a specific region
      virtual void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>* AsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonResponse>* PrepareAsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>* AsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::AddPersonResponse>* PrepareAsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>* AsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::SetScheduleResponse>* PrepareAsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>* AsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::person::v1::GetPersonByLongLatBBoxResponse>* PrepareAsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::city::person::v1::GetPersonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>> AsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>>(AsyncGetPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>> PrepareAsyncGetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>>(PrepareAsyncGetPersonRaw(context, request, cq));
    }
    ::grpc::Status AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::city::person::v1::AddPersonResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>> AsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>>(AsyncAddPersonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>> PrepareAsyncAddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>>(PrepareAsyncAddPersonRaw(context, request, cq));
    }
    ::grpc::Status SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::city::person::v1::SetScheduleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>> AsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>>(AsyncSetScheduleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>> PrepareAsyncSetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>>(PrepareAsyncSetScheduleRaw(context, request, cq));
    }
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>> AsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>>(AsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>> PrepareAsyncGetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>>(PrepareAsyncGetPersonByLongLatBBoxRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPerson(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response, std::function<void(::grpc::Status)>) override;
      void AddPerson(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response, std::function<void(::grpc::Status)>) override;
      void SetSchedule(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPersonByLongLatBBox(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>* AsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonResponse>* PrepareAsyncGetPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>* AsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::AddPersonResponse>* PrepareAsyncAddPersonRaw(::grpc::ClientContext* context, const ::city::person::v1::AddPersonRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>* AsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::SetScheduleResponse>* PrepareAsyncSetScheduleRaw(::grpc::ClientContext* context, const ::city::person::v1::SetScheduleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>* AsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::person::v1::GetPersonByLongLatBBoxResponse>* PrepareAsyncGetPersonByLongLatBBoxRaw(::grpc::ClientContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetPerson_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPerson_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSchedule_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPersonByLongLatBBox_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 获取person信息
    // Get person information
    virtual ::grpc::Status GetPerson(::grpc::ServerContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response);
    // 新增person 传入person初始位置、目的地表、属性 返回personid
    // Add a new person. Input person's initial location, destination table, and attributes, return personid
    virtual ::grpc::Status AddPerson(::grpc::ServerContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response);
    // 修改person的schedule 传入personid、目的地表
    // Set person's schedule. Input personid and destination table
    virtual ::grpc::Status SetSchedule(::grpc::ServerContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response);
    // 获取特定区域内的person
    // Get persons in a specific region
    virtual ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPerson() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPerson(::grpc::ServerContext* context, ::city::person::v1::GetPersonRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v1::GetPersonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddPerson() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPerson(::grpc::ServerContext* context, ::city::person::v1::AddPersonRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v1::AddPersonResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSchedule() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSchedule(::grpc::ServerContext* context, ::city::person::v1::SetScheduleRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v1::SetScheduleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersonByLongLatBBox(::grpc::ServerContext* context, ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::person::v1::GetPersonByLongLatBBoxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetPerson<WithAsyncMethod_AddPerson<WithAsyncMethod_SetSchedule<WithAsyncMethod_GetPersonByLongLatBBox<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPerson() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v1::GetPersonRequest, ::city::person::v1::GetPersonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v1::GetPersonRequest* request, ::city::person::v1::GetPersonResponse* response) { return this->GetPerson(context, request, response); }));}
    void SetMessageAllocatorFor_GetPerson(
        ::grpc::MessageAllocator< ::city::person::v1::GetPersonRequest, ::city::person::v1::GetPersonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v1::GetPersonRequest, ::city::person::v1::GetPersonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddPerson() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v1::AddPersonRequest, ::city::person::v1::AddPersonResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v1::AddPersonRequest* request, ::city::person::v1::AddPersonResponse* response) { return this->AddPerson(context, request, response); }));}
    void SetMessageAllocatorFor_AddPerson(
        ::grpc::MessageAllocator< ::city::person::v1::AddPersonRequest, ::city::person::v1::AddPersonResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v1::AddPersonRequest, ::city::person::v1::AddPersonResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSchedule() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v1::SetScheduleRequest, ::city::person::v1::SetScheduleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v1::SetScheduleRequest* request, ::city::person::v1::SetScheduleResponse* response) { return this->SetSchedule(context, request, response); }));}
    void SetMessageAllocatorFor_SetSchedule(
        ::grpc::MessageAllocator< ::city::person::v1::SetScheduleRequest, ::city::person::v1::SetScheduleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v1::SetScheduleRequest, ::city::person::v1::SetScheduleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSchedule(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::city::person::v1::GetPersonByLongLatBBoxRequest, ::city::person::v1::GetPersonByLongLatBBoxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::person::v1::GetPersonByLongLatBBoxRequest* request, ::city::person::v1::GetPersonByLongLatBBoxResponse* response) { return this->GetPersonByLongLatBBox(context, request, response); }));}
    void SetMessageAllocatorFor_GetPersonByLongLatBBox(
        ::grpc::MessageAllocator< ::city::person::v1::GetPersonByLongLatBBoxRequest, ::city::person::v1::GetPersonByLongLatBBoxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::person::v1::GetPersonByLongLatBBoxRequest, ::city::person::v1::GetPersonByLongLatBBoxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersonByLongLatBBox(
      ::grpc::CallbackServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetPerson<WithCallbackMethod_AddPerson<WithCallbackMethod_SetSchedule<WithCallbackMethod_GetPersonByLongLatBBox<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPerson() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddPerson() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSchedule() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPerson() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPerson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddPerson() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPerson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSchedule() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSchedule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPersonByLongLatBBox(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPerson() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPerson(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddPerson() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddPerson(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddPerson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSchedule() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSchedule(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSchedule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPersonByLongLatBBox(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPersonByLongLatBBox(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPerson() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v1::GetPersonRequest, ::city::person::v1::GetPersonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v1::GetPersonRequest, ::city::person::v1::GetPersonResponse>* streamer) {
                       return this->StreamedGetPerson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonRequest* /*request*/, ::city::person::v1::GetPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPerson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v1::GetPersonRequest,::city::person::v1::GetPersonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPerson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddPerson() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v1::AddPersonRequest, ::city::person::v1::AddPersonResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v1::AddPersonRequest, ::city::person::v1::AddPersonResponse>* streamer) {
                       return this->StreamedAddPerson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddPerson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPerson(::grpc::ServerContext* /*context*/, const ::city::person::v1::AddPersonRequest* /*request*/, ::city::person::v1::AddPersonResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPerson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v1::AddPersonRequest,::city::person::v1::AddPersonResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSchedule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSchedule() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v1::SetScheduleRequest, ::city::person::v1::SetScheduleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v1::SetScheduleRequest, ::city::person::v1::SetScheduleResponse>* streamer) {
                       return this->StreamedSetSchedule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSchedule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSchedule(::grpc::ServerContext* /*context*/, const ::city::person::v1::SetScheduleRequest* /*request*/, ::city::person::v1::SetScheduleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSchedule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v1::SetScheduleRequest,::city::person::v1::SetScheduleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPersonByLongLatBBox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPersonByLongLatBBox() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::person::v1::GetPersonByLongLatBBoxRequest, ::city::person::v1::GetPersonByLongLatBBoxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::person::v1::GetPersonByLongLatBBoxRequest, ::city::person::v1::GetPersonByLongLatBBoxResponse>* streamer) {
                       return this->StreamedGetPersonByLongLatBBox(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPersonByLongLatBBox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPersonByLongLatBBox(::grpc::ServerContext* /*context*/, const ::city::person::v1::GetPersonByLongLatBBoxRequest* /*request*/, ::city::person::v1::GetPersonByLongLatBBoxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPersonByLongLatBBox(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::person::v1::GetPersonByLongLatBBoxRequest,::city::person::v1::GetPersonByLongLatBBoxResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetPerson<WithStreamedUnaryMethod_AddPerson<WithStreamedUnaryMethod_SetSchedule<WithStreamedUnaryMethod_GetPersonByLongLatBBox<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetPerson<WithStreamedUnaryMethod_AddPerson<WithStreamedUnaryMethod_SetSchedule<WithStreamedUnaryMethod_GetPersonByLongLatBBox<Service > > > > StreamedService;
};

}  // namespace v1
}  // namespace person
}  // namespace city


#endif  // GRPC_city_2fperson_2fv1_2fperson_5fservice_2eproto__INCLUDED

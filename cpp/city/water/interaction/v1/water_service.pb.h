// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/water/interaction/v1/water_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
namespace city {
namespace water {
namespace interaction {
namespace v1 {
class GetNoWaterAOIRequest;
struct GetNoWaterAOIRequestDefaultTypeInternal;
extern GetNoWaterAOIRequestDefaultTypeInternal _GetNoWaterAOIRequest_default_instance_;
class GetNoWaterAOIResponse;
struct GetNoWaterAOIResponseDefaultTypeInternal;
extern GetNoWaterAOIResponseDefaultTypeInternal _GetNoWaterAOIResponse_default_instance_;
class GetPumpStatusRequest;
struct GetPumpStatusRequestDefaultTypeInternal;
extern GetPumpStatusRequestDefaultTypeInternal _GetPumpStatusRequest_default_instance_;
class GetPumpStatusResponse;
struct GetPumpStatusResponseDefaultTypeInternal;
extern GetPumpStatusResponseDefaultTypeInternal _GetPumpStatusResponse_default_instance_;
class GetPumpStatusResponse_PumpStatusEntry_DoNotUse;
struct GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal;
extern GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal _GetPumpStatusResponse_PumpStatusEntry_DoNotUse_default_instance_;
class GetRuinInfoRequest;
struct GetRuinInfoRequestDefaultTypeInternal;
extern GetRuinInfoRequestDefaultTypeInternal _GetRuinInfoRequest_default_instance_;
class GetRuinInfoResponse;
struct GetRuinInfoResponseDefaultTypeInternal;
extern GetRuinInfoResponseDefaultTypeInternal _GetRuinInfoResponse_default_instance_;
class RuinInfo;
struct RuinInfoDefaultTypeInternal;
extern RuinInfoDefaultTypeInternal _RuinInfo_default_instance_;
class SetPumpNetworkStatusRequest;
struct SetPumpNetworkStatusRequestDefaultTypeInternal;
extern SetPumpNetworkStatusRequestDefaultTypeInternal _SetPumpNetworkStatusRequest_default_instance_;
class SetPumpNetworkStatusResponse;
struct SetPumpNetworkStatusResponseDefaultTypeInternal;
extern SetPumpNetworkStatusResponseDefaultTypeInternal _SetPumpNetworkStatusResponse_default_instance_;
class SetPumpPowerStatusRequest;
struct SetPumpPowerStatusRequestDefaultTypeInternal;
extern SetPumpPowerStatusRequestDefaultTypeInternal _SetPumpPowerStatusRequest_default_instance_;
class SetPumpPowerStatusResponse;
struct SetPumpPowerStatusResponseDefaultTypeInternal;
extern SetPumpPowerStatusResponseDefaultTypeInternal _SetPumpPowerStatusResponse_default_instance_;
class SetPumpStatusRequest;
struct SetPumpStatusRequestDefaultTypeInternal;
extern SetPumpStatusRequestDefaultTypeInternal _SetPumpStatusRequest_default_instance_;
class SetPumpStatusResponse;
struct SetPumpStatusResponseDefaultTypeInternal;
extern SetPumpStatusResponseDefaultTypeInternal _SetPumpStatusResponse_default_instance_;
}  // namespace v1
}  // namespace interaction
}  // namespace water
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace water {
namespace interaction {
namespace v1 {
enum WaterFacilityType : int {
  WATER_FACILITY_TYPE_UNSPECIFIED = 0,
  WATER_FACILITY_TYPE_SUPPLY = 1,
  WATER_FACILITY_TYPE_DRAINAGE = 2,
  WaterFacilityType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WaterFacilityType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WaterFacilityType_IsValid(int value);
constexpr WaterFacilityType WaterFacilityType_MIN = static_cast<WaterFacilityType>(0);
constexpr WaterFacilityType WaterFacilityType_MAX = static_cast<WaterFacilityType>(2);
constexpr int WaterFacilityType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
WaterFacilityType_descriptor();
template <typename T>
const std::string& WaterFacilityType_Name(T value) {
  static_assert(std::is_same<T, WaterFacilityType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WaterFacilityType_Name().");
  return WaterFacilityType_Name(static_cast<WaterFacilityType>(value));
}
template <>
inline const std::string& WaterFacilityType_Name(WaterFacilityType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WaterFacilityType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool WaterFacilityType_Parse(absl::string_view name, WaterFacilityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WaterFacilityType>(
      WaterFacilityType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetPumpPowerStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpPowerStatusRequest) */ {
 public:
  inline SetPumpPowerStatusRequest() : SetPumpPowerStatusRequest(nullptr) {}
  ~SetPumpPowerStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpPowerStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SetPumpPowerStatusRequest(const SetPumpPowerStatusRequest& from);
  SetPumpPowerStatusRequest(SetPumpPowerStatusRequest&& from) noexcept
    : SetPumpPowerStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetPumpPowerStatusRequest& operator=(const SetPumpPowerStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpPowerStatusRequest& operator=(SetPumpPowerStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpPowerStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpPowerStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetPumpPowerStatusRequest*>(
               &_SetPumpPowerStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetPumpPowerStatusRequest& a, SetPumpPowerStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpPowerStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpPowerStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpPowerStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpPowerStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPumpPowerStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPumpPowerStatusRequest& from) {
    SetPumpPowerStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPumpPowerStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpPowerStatusRequest";
  }
  protected:
  explicit SetPumpPowerStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  void clear_type() ;
  ::city::water::interaction::v1::WaterFacilityType type() const;
  void set_type(::city::water::interaction::v1::WaterFacilityType value);

  private:
  ::city::water::interaction::v1::WaterFacilityType _internal_type() const;
  void _internal_set_type(::city::water::interaction::v1::WaterFacilityType value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpPowerStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetPumpPowerStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpPowerStatusResponse) */ {
 public:
  inline SetPumpPowerStatusResponse() : SetPumpPowerStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpPowerStatusResponse(::google::protobuf::internal::ConstantInitialized);

  SetPumpPowerStatusResponse(const SetPumpPowerStatusResponse& from);
  SetPumpPowerStatusResponse(SetPumpPowerStatusResponse&& from) noexcept
    : SetPumpPowerStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetPumpPowerStatusResponse& operator=(const SetPumpPowerStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpPowerStatusResponse& operator=(SetPumpPowerStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpPowerStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpPowerStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetPumpPowerStatusResponse*>(
               &_SetPumpPowerStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetPumpPowerStatusResponse& a, SetPumpPowerStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpPowerStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpPowerStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpPowerStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpPowerStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPumpPowerStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPumpPowerStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpPowerStatusResponse";
  }
  protected:
  explicit SetPumpPowerStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpPowerStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetPumpNetworkStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpNetworkStatusRequest) */ {
 public:
  inline SetPumpNetworkStatusRequest() : SetPumpNetworkStatusRequest(nullptr) {}
  ~SetPumpNetworkStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpNetworkStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SetPumpNetworkStatusRequest(const SetPumpNetworkStatusRequest& from);
  SetPumpNetworkStatusRequest(SetPumpNetworkStatusRequest&& from) noexcept
    : SetPumpNetworkStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetPumpNetworkStatusRequest& operator=(const SetPumpNetworkStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpNetworkStatusRequest& operator=(SetPumpNetworkStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpNetworkStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpNetworkStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetPumpNetworkStatusRequest*>(
               &_SetPumpNetworkStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetPumpNetworkStatusRequest& a, SetPumpNetworkStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpNetworkStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpNetworkStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpNetworkStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpNetworkStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPumpNetworkStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPumpNetworkStatusRequest& from) {
    SetPumpNetworkStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPumpNetworkStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpNetworkStatusRequest";
  }
  protected:
  explicit SetPumpNetworkStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  void clear_type() ;
  ::city::water::interaction::v1::WaterFacilityType type() const;
  void set_type(::city::water::interaction::v1::WaterFacilityType value);

  private:
  ::city::water::interaction::v1::WaterFacilityType _internal_type() const;
  void _internal_set_type(::city::water::interaction::v1::WaterFacilityType value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpNetworkStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetPumpNetworkStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpNetworkStatusResponse) */ {
 public:
  inline SetPumpNetworkStatusResponse() : SetPumpNetworkStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpNetworkStatusResponse(::google::protobuf::internal::ConstantInitialized);

  SetPumpNetworkStatusResponse(const SetPumpNetworkStatusResponse& from);
  SetPumpNetworkStatusResponse(SetPumpNetworkStatusResponse&& from) noexcept
    : SetPumpNetworkStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetPumpNetworkStatusResponse& operator=(const SetPumpNetworkStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpNetworkStatusResponse& operator=(SetPumpNetworkStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpNetworkStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpNetworkStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetPumpNetworkStatusResponse*>(
               &_SetPumpNetworkStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetPumpNetworkStatusResponse& a, SetPumpNetworkStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpNetworkStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpNetworkStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpNetworkStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpNetworkStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPumpNetworkStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPumpNetworkStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpNetworkStatusResponse";
  }
  protected:
  explicit SetPumpNetworkStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpNetworkStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetPumpStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpStatusRequest) */ {
 public:
  inline SetPumpStatusRequest() : SetPumpStatusRequest(nullptr) {}
  ~SetPumpStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SetPumpStatusRequest(const SetPumpStatusRequest& from);
  SetPumpStatusRequest(SetPumpStatusRequest&& from) noexcept
    : SetPumpStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetPumpStatusRequest& operator=(const SetPumpStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpStatusRequest& operator=(SetPumpStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetPumpStatusRequest*>(
               &_SetPumpStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetPumpStatusRequest& a, SetPumpStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPumpStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPumpStatusRequest& from) {
    SetPumpStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPumpStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpStatusRequest";
  }
  protected:
  explicit SetPumpStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // bool status = 2 [json_name = "status"];
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  void clear_type() ;
  ::city::water::interaction::v1::WaterFacilityType type() const;
  void set_type(::city::water::interaction::v1::WaterFacilityType value);

  private:
  ::city::water::interaction::v1::WaterFacilityType _internal_type() const;
  void _internal_set_type(::city::water::interaction::v1::WaterFacilityType value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    bool status_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class SetPumpStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.SetPumpStatusResponse) */ {
 public:
  inline SetPumpStatusResponse() : SetPumpStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPumpStatusResponse(::google::protobuf::internal::ConstantInitialized);

  SetPumpStatusResponse(const SetPumpStatusResponse& from);
  SetPumpStatusResponse(SetPumpStatusResponse&& from) noexcept
    : SetPumpStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetPumpStatusResponse& operator=(const SetPumpStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPumpStatusResponse& operator=(SetPumpStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPumpStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPumpStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetPumpStatusResponse*>(
               &_SetPumpStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SetPumpStatusResponse& a, SetPumpStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPumpStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPumpStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPumpStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPumpStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPumpStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPumpStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.SetPumpStatusResponse";
  }
  protected:
  explicit SetPumpStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.SetPumpStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetPumpStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetPumpStatusRequest) */ {
 public:
  inline GetPumpStatusRequest() : GetPumpStatusRequest(nullptr) {}
  ~GetPumpStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPumpStatusRequest(::google::protobuf::internal::ConstantInitialized);

  GetPumpStatusRequest(const GetPumpStatusRequest& from);
  GetPumpStatusRequest(GetPumpStatusRequest&& from) noexcept
    : GetPumpStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetPumpStatusRequest& operator=(const GetPumpStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPumpStatusRequest& operator=(GetPumpStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPumpStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPumpStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetPumpStatusRequest*>(
               &_GetPumpStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetPumpStatusRequest& a, GetPumpStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPumpStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPumpStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPumpStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPumpStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPumpStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPumpStatusRequest& from) {
    GetPumpStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPumpStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetPumpStatusRequest";
  }
  protected:
  explicit GetPumpStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagFieldNumber = 1,
  };
  // int32 flag = 1 [json_name = "flag"];
  void clear_flag() ;
  ::int32_t flag() const;
  void set_flag(::int32_t value);

  private:
  ::int32_t _internal_flag() const;
  void _internal_set_flag(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetPumpStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t flag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetPumpStatusResponse_PumpStatusEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<GetPumpStatusResponse_PumpStatusEntry_DoNotUse, 
    ::int32_t, ::int32_t,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::google::protobuf::internal::MapEntry<GetPumpStatusResponse_PumpStatusEntry_DoNotUse, 
    ::int32_t, ::int32_t,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32> SuperType;
  GetPumpStatusResponse_PumpStatusEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPumpStatusResponse_PumpStatusEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetPumpStatusResponse_PumpStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetPumpStatusResponse_PumpStatusEntry_DoNotUse& other);
  static const GetPumpStatusResponse_PumpStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetPumpStatusResponse_PumpStatusEntry_DoNotUse*>(&_GetPumpStatusResponse_PumpStatusEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetPumpStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetPumpStatusResponse) */ {
 public:
  inline GetPumpStatusResponse() : GetPumpStatusResponse(nullptr) {}
  ~GetPumpStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPumpStatusResponse(::google::protobuf::internal::ConstantInitialized);

  GetPumpStatusResponse(const GetPumpStatusResponse& from);
  GetPumpStatusResponse(GetPumpStatusResponse&& from) noexcept
    : GetPumpStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetPumpStatusResponse& operator=(const GetPumpStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPumpStatusResponse& operator=(GetPumpStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPumpStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPumpStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetPumpStatusResponse*>(
               &_GetPumpStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetPumpStatusResponse& a, GetPumpStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPumpStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPumpStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPumpStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPumpStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPumpStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPumpStatusResponse& from) {
    GetPumpStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPumpStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetPumpStatusResponse";
  }
  protected:
  explicit GetPumpStatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPumpStatusFieldNumber = 1,
  };
  // map<int32, int32> pump_status = 1 [json_name = "pumpStatus"];
  int pump_status_size() const;
  private:
  int _internal_pump_status_size() const;

  public:
  void clear_pump_status() ;
  const ::google::protobuf::Map<::int32_t, ::int32_t>& pump_status() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* mutable_pump_status();

  private:
  const ::google::protobuf::Map<::int32_t, ::int32_t>& _internal_pump_status() const;
  ::google::protobuf::Map<::int32_t, ::int32_t>* _internal_mutable_pump_status();

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetPumpStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<GetPumpStatusResponse_PumpStatusEntry_DoNotUse, ::int32_t, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        pump_status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetNoWaterAOIRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetNoWaterAOIRequest) */ {
 public:
  inline GetNoWaterAOIRequest() : GetNoWaterAOIRequest(nullptr) {}
  ~GetNoWaterAOIRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetNoWaterAOIRequest(::google::protobuf::internal::ConstantInitialized);

  GetNoWaterAOIRequest(const GetNoWaterAOIRequest& from);
  GetNoWaterAOIRequest(GetNoWaterAOIRequest&& from) noexcept
    : GetNoWaterAOIRequest() {
    *this = ::std::move(from);
  }

  inline GetNoWaterAOIRequest& operator=(const GetNoWaterAOIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNoWaterAOIRequest& operator=(GetNoWaterAOIRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNoWaterAOIRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNoWaterAOIRequest* internal_default_instance() {
    return reinterpret_cast<const GetNoWaterAOIRequest*>(
               &_GetNoWaterAOIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetNoWaterAOIRequest& a, GetNoWaterAOIRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNoWaterAOIRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNoWaterAOIRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNoWaterAOIRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNoWaterAOIRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNoWaterAOIRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetNoWaterAOIRequest& from) {
    GetNoWaterAOIRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNoWaterAOIRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetNoWaterAOIRequest";
  }
  protected:
  explicit GetNoWaterAOIRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagFieldNumber = 1,
  };
  // int32 flag = 1 [json_name = "flag"];
  void clear_flag() ;
  ::int32_t flag() const;
  void set_flag(::int32_t value);

  private:
  ::int32_t _internal_flag() const;
  void _internal_set_flag(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetNoWaterAOIRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t flag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetNoWaterAOIResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetNoWaterAOIResponse) */ {
 public:
  inline GetNoWaterAOIResponse() : GetNoWaterAOIResponse(nullptr) {}
  ~GetNoWaterAOIResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetNoWaterAOIResponse(::google::protobuf::internal::ConstantInitialized);

  GetNoWaterAOIResponse(const GetNoWaterAOIResponse& from);
  GetNoWaterAOIResponse(GetNoWaterAOIResponse&& from) noexcept
    : GetNoWaterAOIResponse() {
    *this = ::std::move(from);
  }

  inline GetNoWaterAOIResponse& operator=(const GetNoWaterAOIResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNoWaterAOIResponse& operator=(GetNoWaterAOIResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNoWaterAOIResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNoWaterAOIResponse* internal_default_instance() {
    return reinterpret_cast<const GetNoWaterAOIResponse*>(
               &_GetNoWaterAOIResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetNoWaterAOIResponse& a, GetNoWaterAOIResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNoWaterAOIResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNoWaterAOIResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNoWaterAOIResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNoWaterAOIResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNoWaterAOIResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetNoWaterAOIResponse& from) {
    GetNoWaterAOIResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNoWaterAOIResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetNoWaterAOIResponse";
  }
  protected:
  explicit GetNoWaterAOIResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAoiFieldNumber = 1,
  };
  // repeated int32 aoi = 1 [json_name = "aoi"];
  int aoi_size() const;
  private:
  int _internal_aoi_size() const;

  public:
  void clear_aoi() ;
  ::int32_t aoi(int index) const;
  void set_aoi(int index, ::int32_t value);
  void add_aoi(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& aoi() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_aoi();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_aoi() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_aoi();

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetNoWaterAOIResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> aoi_;
    mutable ::google::protobuf::internal::CachedSize _aoi_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetRuinInfoRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetRuinInfoRequest) */ {
 public:
  inline GetRuinInfoRequest() : GetRuinInfoRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRuinInfoRequest(::google::protobuf::internal::ConstantInitialized);

  GetRuinInfoRequest(const GetRuinInfoRequest& from);
  GetRuinInfoRequest(GetRuinInfoRequest&& from) noexcept
    : GetRuinInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetRuinInfoRequest& operator=(const GetRuinInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRuinInfoRequest& operator=(GetRuinInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRuinInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRuinInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetRuinInfoRequest*>(
               &_GetRuinInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetRuinInfoRequest& a, GetRuinInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRuinInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRuinInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRuinInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRuinInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRuinInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRuinInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetRuinInfoRequest";
  }
  protected:
  explicit GetRuinInfoRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetRuinInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class RuinInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.RuinInfo) */ {
 public:
  inline RuinInfo() : RuinInfo(nullptr) {}
  ~RuinInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RuinInfo(::google::protobuf::internal::ConstantInitialized);

  RuinInfo(const RuinInfo& from);
  RuinInfo(RuinInfo&& from) noexcept
    : RuinInfo() {
    *this = ::std::move(from);
  }

  inline RuinInfo& operator=(const RuinInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuinInfo& operator=(RuinInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuinInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuinInfo* internal_default_instance() {
    return reinterpret_cast<const RuinInfo*>(
               &_RuinInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RuinInfo& a, RuinInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RuinInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuinInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuinInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RuinInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuinInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RuinInfo& from) {
    RuinInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RuinInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.RuinInfo";
  }
  protected:
  explicit RuinInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRatioFieldNumber = 2,
    kNumFieldNumber = 1,
  };
  // double ratio = 2 [json_name = "ratio"];
  void clear_ratio() ;
  double ratio() const;
  void set_ratio(double value);

  private:
  double _internal_ratio() const;
  void _internal_set_ratio(double value);

  public:
  // int32 num = 1 [json_name = "num"];
  void clear_num() ;
  ::int32_t num() const;
  void set_num(::int32_t value);

  private:
  ::int32_t _internal_num() const;
  void _internal_set_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.RuinInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double ratio_;
    ::int32_t num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};// -------------------------------------------------------------------

class GetRuinInfoResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.water.interaction.v1.GetRuinInfoResponse) */ {
 public:
  inline GetRuinInfoResponse() : GetRuinInfoResponse(nullptr) {}
  ~GetRuinInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRuinInfoResponse(::google::protobuf::internal::ConstantInitialized);

  GetRuinInfoResponse(const GetRuinInfoResponse& from);
  GetRuinInfoResponse(GetRuinInfoResponse&& from) noexcept
    : GetRuinInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetRuinInfoResponse& operator=(const GetRuinInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRuinInfoResponse& operator=(GetRuinInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRuinInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRuinInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetRuinInfoResponse*>(
               &_GetRuinInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetRuinInfoResponse& a, GetRuinInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRuinInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRuinInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRuinInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRuinInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRuinInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRuinInfoResponse& from) {
    GetRuinInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRuinInfoResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.water.interaction.v1.GetRuinInfoResponse";
  }
  protected:
  explicit GetRuinInfoResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOneFieldNumber = 1,
    kTwoFieldNumber = 2,
    kThreeFieldNumber = 3,
  };
  // .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
  bool has_one() const;
  void clear_one() ;
  const ::city::water::interaction::v1::RuinInfo& one() const;
  PROTOBUF_NODISCARD ::city::water::interaction::v1::RuinInfo* release_one();
  ::city::water::interaction::v1::RuinInfo* mutable_one();
  void set_allocated_one(::city::water::interaction::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_one(::city::water::interaction::v1::RuinInfo* value);
  ::city::water::interaction::v1::RuinInfo* unsafe_arena_release_one();

  private:
  const ::city::water::interaction::v1::RuinInfo& _internal_one() const;
  ::city::water::interaction::v1::RuinInfo* _internal_mutable_one();

  public:
  // .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
  bool has_two() const;
  void clear_two() ;
  const ::city::water::interaction::v1::RuinInfo& two() const;
  PROTOBUF_NODISCARD ::city::water::interaction::v1::RuinInfo* release_two();
  ::city::water::interaction::v1::RuinInfo* mutable_two();
  void set_allocated_two(::city::water::interaction::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_two(::city::water::interaction::v1::RuinInfo* value);
  ::city::water::interaction::v1::RuinInfo* unsafe_arena_release_two();

  private:
  const ::city::water::interaction::v1::RuinInfo& _internal_two() const;
  ::city::water::interaction::v1::RuinInfo* _internal_mutable_two();

  public:
  // .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
  bool has_three() const;
  void clear_three() ;
  const ::city::water::interaction::v1::RuinInfo& three() const;
  PROTOBUF_NODISCARD ::city::water::interaction::v1::RuinInfo* release_three();
  ::city::water::interaction::v1::RuinInfo* mutable_three();
  void set_allocated_three(::city::water::interaction::v1::RuinInfo* value);
  void unsafe_arena_set_allocated_three(::city::water::interaction::v1::RuinInfo* value);
  ::city::water::interaction::v1::RuinInfo* unsafe_arena_release_three();

  private:
  const ::city::water::interaction::v1::RuinInfo& _internal_three() const;
  ::city::water::interaction::v1::RuinInfo* _internal_mutable_three();

  public:
  // @@protoc_insertion_point(class_scope:city.water.interaction.v1.GetRuinInfoResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::city::water::interaction::v1::RuinInfo* one_;
    ::city::water::interaction::v1::RuinInfo* two_;
    ::city::water::interaction::v1::RuinInfo* three_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetPumpPowerStatusRequest

// int32 id = 1 [json_name = "id"];
inline void SetPumpPowerStatusRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t SetPumpPowerStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpPowerStatusRequest.id)
  return _internal_id();
}
inline void SetPumpPowerStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpPowerStatusRequest.id)
}
inline ::int32_t SetPumpPowerStatusRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SetPumpPowerStatusRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void SetPumpPowerStatusRequest::clear_status() {
  _impl_.status_ = false;
}
inline bool SetPumpPowerStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpPowerStatusRequest.status)
  return _internal_status();
}
inline void SetPumpPowerStatusRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpPowerStatusRequest.status)
}
inline bool SetPumpPowerStatusRequest::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void SetPumpPowerStatusRequest::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
inline void SetPumpPowerStatusRequest::clear_type() {
  _impl_.type_ = 0;
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpPowerStatusRequest::type() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpPowerStatusRequest.type)
  return _internal_type();
}
inline void SetPumpPowerStatusRequest::set_type(::city::water::interaction::v1::WaterFacilityType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpPowerStatusRequest.type)
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpPowerStatusRequest::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::city::water::interaction::v1::WaterFacilityType>(_impl_.type_);
}
inline void SetPumpPowerStatusRequest::_internal_set_type(::city::water::interaction::v1::WaterFacilityType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SetPumpPowerStatusResponse

// -------------------------------------------------------------------

// SetPumpNetworkStatusRequest

// int32 id = 1 [json_name = "id"];
inline void SetPumpNetworkStatusRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t SetPumpNetworkStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpNetworkStatusRequest.id)
  return _internal_id();
}
inline void SetPumpNetworkStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpNetworkStatusRequest.id)
}
inline ::int32_t SetPumpNetworkStatusRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SetPumpNetworkStatusRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void SetPumpNetworkStatusRequest::clear_status() {
  _impl_.status_ = false;
}
inline bool SetPumpNetworkStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpNetworkStatusRequest.status)
  return _internal_status();
}
inline void SetPumpNetworkStatusRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpNetworkStatusRequest.status)
}
inline bool SetPumpNetworkStatusRequest::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void SetPumpNetworkStatusRequest::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
inline void SetPumpNetworkStatusRequest::clear_type() {
  _impl_.type_ = 0;
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpNetworkStatusRequest::type() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpNetworkStatusRequest.type)
  return _internal_type();
}
inline void SetPumpNetworkStatusRequest::set_type(::city::water::interaction::v1::WaterFacilityType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpNetworkStatusRequest.type)
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpNetworkStatusRequest::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::city::water::interaction::v1::WaterFacilityType>(_impl_.type_);
}
inline void SetPumpNetworkStatusRequest::_internal_set_type(::city::water::interaction::v1::WaterFacilityType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SetPumpNetworkStatusResponse

// -------------------------------------------------------------------

// SetPumpStatusRequest

// int32 id = 1 [json_name = "id"];
inline void SetPumpStatusRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t SetPumpStatusRequest::id() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpStatusRequest.id)
  return _internal_id();
}
inline void SetPumpStatusRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpStatusRequest.id)
}
inline ::int32_t SetPumpStatusRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SetPumpStatusRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// bool status = 2 [json_name = "status"];
inline void SetPumpStatusRequest::clear_status() {
  _impl_.status_ = false;
}
inline bool SetPumpStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpStatusRequest.status)
  return _internal_status();
}
inline void SetPumpStatusRequest::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpStatusRequest.status)
}
inline bool SetPumpStatusRequest::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void SetPumpStatusRequest::_internal_set_status(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
inline void SetPumpStatusRequest::clear_type() {
  _impl_.type_ = 0;
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpStatusRequest::type() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.SetPumpStatusRequest.type)
  return _internal_type();
}
inline void SetPumpStatusRequest::set_type(::city::water::interaction::v1::WaterFacilityType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.SetPumpStatusRequest.type)
}
inline ::city::water::interaction::v1::WaterFacilityType SetPumpStatusRequest::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::city::water::interaction::v1::WaterFacilityType>(_impl_.type_);
}
inline void SetPumpStatusRequest::_internal_set_type(::city::water::interaction::v1::WaterFacilityType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SetPumpStatusResponse

// -------------------------------------------------------------------

// GetPumpStatusRequest

// int32 flag = 1 [json_name = "flag"];
inline void GetPumpStatusRequest::clear_flag() {
  _impl_.flag_ = 0;
}
inline ::int32_t GetPumpStatusRequest::flag() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetPumpStatusRequest.flag)
  return _internal_flag();
}
inline void GetPumpStatusRequest::set_flag(::int32_t value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.GetPumpStatusRequest.flag)
}
inline ::int32_t GetPumpStatusRequest::_internal_flag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flag_;
}
inline void GetPumpStatusRequest::_internal_set_flag(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flag_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetPumpStatusResponse

// map<int32, int32> pump_status = 1 [json_name = "pumpStatus"];
inline int GetPumpStatusResponse::_internal_pump_status_size() const {
  return _internal_pump_status().size();
}
inline int GetPumpStatusResponse::pump_status_size() const {
  return _internal_pump_status_size();
}
inline void GetPumpStatusResponse::clear_pump_status() {
  _impl_.pump_status_.Clear();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& GetPumpStatusResponse::_internal_pump_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pump_status_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::int32_t>& GetPumpStatusResponse::pump_status() const {
  // @@protoc_insertion_point(field_map:city.water.interaction.v1.GetPumpStatusResponse.pump_status)
  return _internal_pump_status();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* GetPumpStatusResponse::_internal_mutable_pump_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.pump_status_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::int32_t>* GetPumpStatusResponse::mutable_pump_status() {
  // @@protoc_insertion_point(field_mutable_map:city.water.interaction.v1.GetPumpStatusResponse.pump_status)
  return _internal_mutable_pump_status();
}

// -------------------------------------------------------------------

// GetNoWaterAOIRequest

// int32 flag = 1 [json_name = "flag"];
inline void GetNoWaterAOIRequest::clear_flag() {
  _impl_.flag_ = 0;
}
inline ::int32_t GetNoWaterAOIRequest::flag() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetNoWaterAOIRequest.flag)
  return _internal_flag();
}
inline void GetNoWaterAOIRequest::set_flag(::int32_t value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.GetNoWaterAOIRequest.flag)
}
inline ::int32_t GetNoWaterAOIRequest::_internal_flag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flag_;
}
inline void GetNoWaterAOIRequest::_internal_set_flag(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flag_ = value;
}

// -------------------------------------------------------------------

// GetNoWaterAOIResponse

// repeated int32 aoi = 1 [json_name = "aoi"];
inline int GetNoWaterAOIResponse::_internal_aoi_size() const {
  return _internal_aoi().size();
}
inline int GetNoWaterAOIResponse::aoi_size() const {
  return _internal_aoi_size();
}
inline void GetNoWaterAOIResponse::clear_aoi() {
  _internal_mutable_aoi()->Clear();
}
inline ::int32_t GetNoWaterAOIResponse::aoi(int index) const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetNoWaterAOIResponse.aoi)
  return _internal_aoi().Get(index);
}
inline void GetNoWaterAOIResponse::set_aoi(int index, ::int32_t value) {
  _internal_mutable_aoi()->Set(index, value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.GetNoWaterAOIResponse.aoi)
}
inline void GetNoWaterAOIResponse::add_aoi(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_aoi()->Add(value);
  // @@protoc_insertion_point(field_add:city.water.interaction.v1.GetNoWaterAOIResponse.aoi)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& GetNoWaterAOIResponse::aoi() const {
  // @@protoc_insertion_point(field_list:city.water.interaction.v1.GetNoWaterAOIResponse.aoi)
  return _internal_aoi();
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetNoWaterAOIResponse::mutable_aoi() {
  // @@protoc_insertion_point(field_mutable_list:city.water.interaction.v1.GetNoWaterAOIResponse.aoi)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_aoi();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& GetNoWaterAOIResponse::_internal_aoi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.aoi_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* GetNoWaterAOIResponse::_internal_mutable_aoi() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.aoi_;
}

// -------------------------------------------------------------------

// GetRuinInfoRequest

// -------------------------------------------------------------------

// RuinInfo

// int32 num = 1 [json_name = "num"];
inline void RuinInfo::clear_num() {
  _impl_.num_ = 0;
}
inline ::int32_t RuinInfo::num() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.RuinInfo.num)
  return _internal_num();
}
inline void RuinInfo::set_num(::int32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.RuinInfo.num)
}
inline ::int32_t RuinInfo::_internal_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_;
}
inline void RuinInfo::_internal_set_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ = value;
}

// double ratio = 2 [json_name = "ratio"];
inline void RuinInfo::clear_ratio() {
  _impl_.ratio_ = 0;
}
inline double RuinInfo::ratio() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.RuinInfo.ratio)
  return _internal_ratio();
}
inline void RuinInfo::set_ratio(double value) {
  _internal_set_ratio(value);
  // @@protoc_insertion_point(field_set:city.water.interaction.v1.RuinInfo.ratio)
}
inline double RuinInfo::_internal_ratio() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ratio_;
}
inline void RuinInfo::_internal_set_ratio(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ratio_ = value;
}

// -------------------------------------------------------------------

// GetRuinInfoResponse

// .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
inline bool GetRuinInfoResponse::has_one() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.one_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_one() {
  if (_impl_.one_ != nullptr) _impl_.one_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_internal_one() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::water::interaction::v1::RuinInfo* p = _impl_.one_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::water::interaction::v1::RuinInfo&>(::city::water::interaction::v1::_RuinInfo_default_instance_);
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::one() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetRuinInfoResponse.one)
  return _internal_one();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_one(::city::water::interaction::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.one_);
  }
  _impl_.one_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.one)
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::release_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::water::interaction::v1::RuinInfo* released = _impl_.one_;
  _impl_.one_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.water.interaction.v1.GetRuinInfoResponse.one)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::water::interaction::v1::RuinInfo* temp = _impl_.one_;
  _impl_.one_ = nullptr;
  return temp;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_one() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.one_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::water::interaction::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.one_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(p);
  }
  return _impl_.one_;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::mutable_one() {
  ::city::water::interaction::v1::RuinInfo* _msg = _internal_mutable_one();
  // @@protoc_insertion_point(field_mutable:city.water.interaction.v1.GetRuinInfoResponse.one)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_one(::city::water::interaction::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(_impl_.one_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.one_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.one)
}

// .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
inline bool GetRuinInfoResponse::has_two() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.two_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_two() {
  if (_impl_.two_ != nullptr) _impl_.two_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_internal_two() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::water::interaction::v1::RuinInfo* p = _impl_.two_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::water::interaction::v1::RuinInfo&>(::city::water::interaction::v1::_RuinInfo_default_instance_);
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::two() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetRuinInfoResponse.two)
  return _internal_two();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_two(::city::water::interaction::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.two_);
  }
  _impl_.two_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.two)
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::release_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::city::water::interaction::v1::RuinInfo* released = _impl_.two_;
  _impl_.two_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.water.interaction.v1.GetRuinInfoResponse.two)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::city::water::interaction::v1::RuinInfo* temp = _impl_.two_;
  _impl_.two_ = nullptr;
  return temp;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_two() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.two_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::water::interaction::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.two_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(p);
  }
  return _impl_.two_;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::mutable_two() {
  ::city::water::interaction::v1::RuinInfo* _msg = _internal_mutable_two();
  // @@protoc_insertion_point(field_mutable:city.water.interaction.v1.GetRuinInfoResponse.two)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_two(::city::water::interaction::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(_impl_.two_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.two_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.two)
}

// .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
inline bool GetRuinInfoResponse::has_three() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.three_ != nullptr);
  return value;
}
inline void GetRuinInfoResponse::clear_three() {
  if (_impl_.three_ != nullptr) _impl_.three_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_internal_three() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::water::interaction::v1::RuinInfo* p = _impl_.three_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::water::interaction::v1::RuinInfo&>(::city::water::interaction::v1::_RuinInfo_default_instance_);
}
inline const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::three() const {
  // @@protoc_insertion_point(field_get:city.water.interaction.v1.GetRuinInfoResponse.three)
  return _internal_three();
}
inline void GetRuinInfoResponse::unsafe_arena_set_allocated_three(::city::water::interaction::v1::RuinInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.three_);
  }
  _impl_.three_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.three)
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::release_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::city::water::interaction::v1::RuinInfo* released = _impl_.three_;
  _impl_.three_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::unsafe_arena_release_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:city.water.interaction.v1.GetRuinInfoResponse.three)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::city::water::interaction::v1::RuinInfo* temp = _impl_.three_;
  _impl_.three_ = nullptr;
  return temp;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::_internal_mutable_three() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.three_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::water::interaction::v1::RuinInfo>(GetArenaForAllocation());
    _impl_.three_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(p);
  }
  return _impl_.three_;
}
inline ::city::water::interaction::v1::RuinInfo* GetRuinInfoResponse::mutable_three() {
  ::city::water::interaction::v1::RuinInfo* _msg = _internal_mutable_three();
  // @@protoc_insertion_point(field_mutable:city.water.interaction.v1.GetRuinInfoResponse.three)
  return _msg;
}
inline void GetRuinInfoResponse::set_allocated_three(::city::water::interaction::v1::RuinInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(_impl_.three_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.three_ = reinterpret_cast<::city::water::interaction::v1::RuinInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:city.water.interaction.v1.GetRuinInfoResponse.three)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace interaction
}  // namespace water
}  // namespace city


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::city::water::interaction::v1::WaterFacilityType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::city::water::interaction::v1::WaterFacilityType>() {
  return ::city::water::interaction::v1::WaterFacilityType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_2epb_2eh

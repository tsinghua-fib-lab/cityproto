// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/water/interaction/v1/water_service.proto

#include "city/water/interaction/v1/water_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace water {
namespace interaction {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR SetPumpPowerStatusRequest::SetPumpPowerStatusRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.status_)*/ false,
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SetPumpPowerStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpPowerStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpPowerStatusRequestDefaultTypeInternal() {}
  union {
    SetPumpPowerStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpPowerStatusRequestDefaultTypeInternal _SetPumpPowerStatusRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SetPumpPowerStatusResponse::SetPumpPowerStatusResponse(::_pbi::ConstantInitialized) {}
struct SetPumpPowerStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpPowerStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpPowerStatusResponseDefaultTypeInternal() {}
  union {
    SetPumpPowerStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpPowerStatusResponseDefaultTypeInternal _SetPumpPowerStatusResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SetPumpNetworkStatusRequest::SetPumpNetworkStatusRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.status_)*/ false,
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SetPumpNetworkStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpNetworkStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpNetworkStatusRequestDefaultTypeInternal() {}
  union {
    SetPumpNetworkStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpNetworkStatusRequestDefaultTypeInternal _SetPumpNetworkStatusRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SetPumpNetworkStatusResponse::SetPumpNetworkStatusResponse(::_pbi::ConstantInitialized) {}
struct SetPumpNetworkStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpNetworkStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpNetworkStatusResponseDefaultTypeInternal() {}
  union {
    SetPumpNetworkStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpNetworkStatusResponseDefaultTypeInternal _SetPumpNetworkStatusResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SetPumpStatusRequest::SetPumpStatusRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_.status_)*/ false,
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SetPumpStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpStatusRequestDefaultTypeInternal() {}
  union {
    SetPumpStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpStatusRequestDefaultTypeInternal _SetPumpStatusRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SetPumpStatusResponse::SetPumpStatusResponse(::_pbi::ConstantInitialized) {}
struct SetPumpStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPumpStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPumpStatusResponseDefaultTypeInternal() {}
  union {
    SetPumpStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPumpStatusResponseDefaultTypeInternal _SetPumpStatusResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetPumpStatusRequest::GetPumpStatusRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.flag_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetPumpStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPumpStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPumpStatusRequestDefaultTypeInternal() {}
  union {
    GetPumpStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPumpStatusRequestDefaultTypeInternal _GetPumpStatusRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetPumpStatusResponse_PumpStatusEntry_DoNotUse::GetPumpStatusResponse_PumpStatusEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetPumpStatusResponse_PumpStatusEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPumpStatusResponse_PumpStatusEntry_DoNotUseDefaultTypeInternal _GetPumpStatusResponse_PumpStatusEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetPumpStatusResponse::GetPumpStatusResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.pump_status_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetPumpStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPumpStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPumpStatusResponseDefaultTypeInternal() {}
  union {
    GetPumpStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPumpStatusResponseDefaultTypeInternal _GetPumpStatusResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetNoWaterAOIRequest::GetNoWaterAOIRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.flag_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetNoWaterAOIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNoWaterAOIRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNoWaterAOIRequestDefaultTypeInternal() {}
  union {
    GetNoWaterAOIRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNoWaterAOIRequestDefaultTypeInternal _GetNoWaterAOIRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetNoWaterAOIResponse::GetNoWaterAOIResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.aoi_)*/ {},
      /* _impl_._aoi_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetNoWaterAOIResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNoWaterAOIResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNoWaterAOIResponseDefaultTypeInternal() {}
  union {
    GetNoWaterAOIResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNoWaterAOIResponseDefaultTypeInternal _GetNoWaterAOIResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetRuinInfoRequest::GetRuinInfoRequest(::_pbi::ConstantInitialized) {}
struct GetRuinInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRuinInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRuinInfoRequestDefaultTypeInternal() {}
  union {
    GetRuinInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRuinInfoRequestDefaultTypeInternal _GetRuinInfoRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR RuinInfo::RuinInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ratio_)*/ 0,
      /*decltype(_impl_.num_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct RuinInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuinInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuinInfoDefaultTypeInternal() {}
  union {
    RuinInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuinInfoDefaultTypeInternal _RuinInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetRuinInfoResponse::GetRuinInfoResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.one_)*/ nullptr,
      /*decltype(_impl_.two_)*/ nullptr,
      /*decltype(_impl_.three_)*/ nullptr,
    } {}
struct GetRuinInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRuinInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRuinInfoResponseDefaultTypeInternal() {}
  union {
    GetRuinInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRuinInfoResponseDefaultTypeInternal _GetRuinInfoResponse_default_instance_;
}  // namespace v1
}  // namespace interaction
}  // namespace water
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpPowerStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpPowerStatusRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpPowerStatusRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpPowerStatusRequest, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpPowerStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpNetworkStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpNetworkStatusRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpNetworkStatusRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpNetworkStatusRequest, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpNetworkStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpStatusRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpStatusRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpStatusRequest, _impl_.type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::SetPumpStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusRequest, _impl_.flag_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse_PumpStatusEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse_PumpStatusEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse_PumpStatusEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse_PumpStatusEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetPumpStatusResponse, _impl_.pump_status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetNoWaterAOIRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetNoWaterAOIRequest, _impl_.flag_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetNoWaterAOIResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetNoWaterAOIResponse, _impl_.aoi_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::RuinInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::RuinInfo, _impl_.num_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::RuinInfo, _impl_.ratio_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoResponse, _impl_.one_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoResponse, _impl_.two_),
    PROTOBUF_FIELD_OFFSET(::city::water::interaction::v1::GetRuinInfoResponse, _impl_.three_),
    0,
    1,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::city::water::interaction::v1::SetPumpPowerStatusRequest)},
        {11, -1, -1, sizeof(::city::water::interaction::v1::SetPumpPowerStatusResponse)},
        {19, -1, -1, sizeof(::city::water::interaction::v1::SetPumpNetworkStatusRequest)},
        {30, -1, -1, sizeof(::city::water::interaction::v1::SetPumpNetworkStatusResponse)},
        {38, -1, -1, sizeof(::city::water::interaction::v1::SetPumpStatusRequest)},
        {49, -1, -1, sizeof(::city::water::interaction::v1::SetPumpStatusResponse)},
        {57, -1, -1, sizeof(::city::water::interaction::v1::GetPumpStatusRequest)},
        {66, 76, -1, sizeof(::city::water::interaction::v1::GetPumpStatusResponse_PumpStatusEntry_DoNotUse)},
        {78, -1, -1, sizeof(::city::water::interaction::v1::GetPumpStatusResponse)},
        {87, -1, -1, sizeof(::city::water::interaction::v1::GetNoWaterAOIRequest)},
        {96, -1, -1, sizeof(::city::water::interaction::v1::GetNoWaterAOIResponse)},
        {105, -1, -1, sizeof(::city::water::interaction::v1::GetRuinInfoRequest)},
        {113, -1, -1, sizeof(::city::water::interaction::v1::RuinInfo)},
        {123, 134, -1, sizeof(::city::water::interaction::v1::GetRuinInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::water::interaction::v1::_SetPumpPowerStatusRequest_default_instance_._instance,
    &::city::water::interaction::v1::_SetPumpPowerStatusResponse_default_instance_._instance,
    &::city::water::interaction::v1::_SetPumpNetworkStatusRequest_default_instance_._instance,
    &::city::water::interaction::v1::_SetPumpNetworkStatusResponse_default_instance_._instance,
    &::city::water::interaction::v1::_SetPumpStatusRequest_default_instance_._instance,
    &::city::water::interaction::v1::_SetPumpStatusResponse_default_instance_._instance,
    &::city::water::interaction::v1::_GetPumpStatusRequest_default_instance_._instance,
    &::city::water::interaction::v1::_GetPumpStatusResponse_PumpStatusEntry_DoNotUse_default_instance_._instance,
    &::city::water::interaction::v1::_GetPumpStatusResponse_default_instance_._instance,
    &::city::water::interaction::v1::_GetNoWaterAOIRequest_default_instance_._instance,
    &::city::water::interaction::v1::_GetNoWaterAOIResponse_default_instance_._instance,
    &::city::water::interaction::v1::_GetRuinInfoRequest_default_instance_._instance,
    &::city::water::interaction::v1::_RuinInfo_default_instance_._instance,
    &::city::water::interaction::v1::_GetRuinInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n-city/water/interaction/v1/water_servic"
    "e.proto\022\031city.water.interaction.v1\"\205\001\n\031S"
    "etPumpPowerStatusRequest\022\016\n\002id\030\001 \001(\005R\002id"
    "\022\026\n\006status\030\002 \001(\010R\006status\022@\n\004type\030\003 \001(\0162,"
    ".city.water.interaction.v1.WaterFacility"
    "TypeR\004type\"\034\n\032SetPumpPowerStatusResponse"
    "\"\207\001\n\033SetPumpNetworkStatusRequest\022\016\n\002id\030\001"
    " \001(\005R\002id\022\026\n\006status\030\002 \001(\010R\006status\022@\n\004type"
    "\030\003 \001(\0162,.city.water.interaction.v1.Water"
    "FacilityTypeR\004type\"\036\n\034SetPumpNetworkStat"
    "usResponse\"\200\001\n\024SetPumpStatusRequest\022\016\n\002i"
    "d\030\001 \001(\005R\002id\022\026\n\006status\030\002 \001(\010R\006status\022@\n\004t"
    "ype\030\003 \001(\0162,.city.water.interaction.v1.Wa"
    "terFacilityTypeR\004type\"\027\n\025SetPumpStatusRe"
    "sponse\"*\n\024GetPumpStatusRequest\022\022\n\004flag\030\001"
    " \001(\005R\004flag\"\271\001\n\025GetPumpStatusResponse\022a\n\013"
    "pump_status\030\001 \003(\0132@.city.water.interacti"
    "on.v1.GetPumpStatusResponse.PumpStatusEn"
    "tryR\npumpStatus\032=\n\017PumpStatusEntry\022\020\n\003ke"
    "y\030\001 \001(\005R\003key\022\024\n\005value\030\002 \001(\005R\005value:\0028\001\"*"
    "\n\024GetNoWaterAOIRequest\022\022\n\004flag\030\001 \001(\005R\004fl"
    "ag\")\n\025GetNoWaterAOIResponse\022\020\n\003aoi\030\001 \003(\005"
    "R\003aoi\"\024\n\022GetRuinInfoRequest\"2\n\010RuinInfo\022"
    "\020\n\003num\030\001 \001(\005R\003num\022\024\n\005ratio\030\002 \001(\001R\005ratio\""
    "\276\001\n\023GetRuinInfoResponse\0225\n\003one\030\001 \001(\0132#.c"
    "ity.water.interaction.v1.RuinInfoR\003one\0225"
    "\n\003two\030\002 \001(\0132#.city.water.interaction.v1."
    "RuinInfoR\003two\0229\n\005three\030\003 \001(\0132#.city.wate"
    "r.interaction.v1.RuinInfoR\005three*z\n\021Wate"
    "rFacilityType\022#\n\037WATER_FACILITY_TYPE_UNS"
    "PECIFIED\020\000\022\036\n\032WATER_FACILITY_TYPE_SUPPLY"
    "\020\001\022 \n\034WATER_FACILITY_TYPE_DRAINAGE\020\0022\362\005\n"
    "\014WaterService\022\203\001\n\022SetPumpPowerStatus\0224.c"
    "ity.water.interaction.v1.SetPumpPowerSta"
    "tusRequest\0325.city.water.interaction.v1.S"
    "etPumpPowerStatusResponse\"\000\022\211\001\n\024SetPumpN"
    "etworkStatus\0226.city.water.interaction.v1"
    ".SetPumpNetworkStatusRequest\0327.city.wate"
    "r.interaction.v1.SetPumpNetworkStatusRes"
    "ponse\"\000\022t\n\rSetPumpStatus\022/.city.water.in"
    "teraction.v1.SetPumpStatusRequest\0320.city"
    ".water.interaction.v1.SetPumpStatusRespo"
    "nse\"\000\022t\n\rGetPumpStatus\022/.city.water.inte"
    "raction.v1.GetPumpStatusRequest\0320.city.w"
    "ater.interaction.v1.GetPumpStatusRespons"
    "e\"\000\022t\n\rGetNoWaterAOI\022/.city.water.intera"
    "ction.v1.GetNoWaterAOIRequest\0320.city.wat"
    "er.interaction.v1.GetNoWaterAOIResponse\""
    "\000\022n\n\013GetRuinInfo\022-.city.water.interactio"
    "n.v1.GetRuinInfoRequest\032..city.water.int"
    "eraction.v1.GetRuinInfoResponse\"\000B\377\001\n\035co"
    "m.city.water.interaction.v1B\021WaterServic"
    "eProtoP\001ZDgit.fiblab.net/sim/protos/go/c"
    "ity/water/interaction/v1;interactionv1\242\002"
    "\003CWI\252\002\031City.Water.Interaction.V1\312\002\031City\\"
    "Water\\Interaction\\V1\342\002%City\\Water\\Intera"
    "ction\\V1\\GPBMetadata\352\002\034City::Water::Inte"
    "raction::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto = {
    false,
    false,
    2299,
    descriptor_table_protodef_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto,
    "city/water/interaction/v1/water_service.proto",
    &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
    nullptr,
    0,
    14,
    schemas,
    file_default_instances,
    TableStruct_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto::offsets,
    file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto,
    file_level_enum_descriptors_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto,
    file_level_service_descriptors_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto(&descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto);
namespace city {
namespace water {
namespace interaction {
namespace v1 {
const ::google::protobuf::EnumDescriptor* WaterFacilityType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto);
  return file_level_enum_descriptors_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[0];
}
bool WaterFacilityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class SetPumpPowerStatusRequest::_Internal {
 public:
};

SetPumpPowerStatusRequest::SetPumpPowerStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpPowerStatusRequest)
}
SetPumpPowerStatusRequest::SetPumpPowerStatusRequest(const SetPumpPowerStatusRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpPowerStatusRequest)
}
inline void SetPumpPowerStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0},
      decltype(_impl_.status_){false},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SetPumpPowerStatusRequest::~SetPumpPowerStatusRequest() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.SetPumpPowerStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPumpPowerStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SetPumpPowerStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SetPumpPowerStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.SetPumpPowerStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPumpPowerStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SetPumpPowerStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPumpPowerStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpPowerStatusRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.id_)}},
    // bool status = 2 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetPumpPowerStatusRequest, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.status_)}},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpPowerStatusRequest, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPumpPowerStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.SetPumpPowerStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_status(), target);
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.SetPumpPowerStatusRequest)
  return target;
}

::size_t SetPumpPowerStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.SetPumpPowerStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPumpPowerStatusRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SetPumpPowerStatusRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SetPumpPowerStatusRequest::GetClassData() const { return &_class_data_; }


void SetPumpPowerStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPumpPowerStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetPumpPowerStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.SetPumpPowerStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPumpPowerStatusRequest::CopyFrom(const SetPumpPowerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.SetPumpPowerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPumpPowerStatusRequest::IsInitialized() const {
  return true;
}

void SetPumpPowerStatusRequest::InternalSwap(SetPumpPowerStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.type_)
      + sizeof(SetPumpPowerStatusRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SetPumpPowerStatusRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SetPumpPowerStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[0]);
}
// ===================================================================

class SetPumpPowerStatusResponse::_Internal {
 public:
};

SetPumpPowerStatusResponse::SetPumpPowerStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpPowerStatusResponse)
}
SetPumpPowerStatusResponse::SetPumpPowerStatusResponse(const SetPumpPowerStatusResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SetPumpPowerStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpPowerStatusResponse)
}




const ::google::protobuf::Message::ClassData SetPumpPowerStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SetPumpPowerStatusResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SetPumpPowerStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[1]);
}
// ===================================================================

class SetPumpNetworkStatusRequest::_Internal {
 public:
};

SetPumpNetworkStatusRequest::SetPumpNetworkStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpNetworkStatusRequest)
}
SetPumpNetworkStatusRequest::SetPumpNetworkStatusRequest(const SetPumpNetworkStatusRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpNetworkStatusRequest)
}
inline void SetPumpNetworkStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0},
      decltype(_impl_.status_){false},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SetPumpNetworkStatusRequest::~SetPumpNetworkStatusRequest() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPumpNetworkStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SetPumpNetworkStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SetPumpNetworkStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPumpNetworkStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SetPumpNetworkStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPumpNetworkStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpNetworkStatusRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.id_)}},
    // bool status = 2 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetPumpNetworkStatusRequest, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.status_)}},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpNetworkStatusRequest, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPumpNetworkStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_status(), target);
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  return target;
}

::size_t SetPumpNetworkStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPumpNetworkStatusRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SetPumpNetworkStatusRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SetPumpNetworkStatusRequest::GetClassData() const { return &_class_data_; }


void SetPumpNetworkStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPumpNetworkStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetPumpNetworkStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPumpNetworkStatusRequest::CopyFrom(const SetPumpNetworkStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.SetPumpNetworkStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPumpNetworkStatusRequest::IsInitialized() const {
  return true;
}

void SetPumpNetworkStatusRequest::InternalSwap(SetPumpNetworkStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.type_)
      + sizeof(SetPumpNetworkStatusRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SetPumpNetworkStatusRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SetPumpNetworkStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[2]);
}
// ===================================================================

class SetPumpNetworkStatusResponse::_Internal {
 public:
};

SetPumpNetworkStatusResponse::SetPumpNetworkStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpNetworkStatusResponse)
}
SetPumpNetworkStatusResponse::SetPumpNetworkStatusResponse(const SetPumpNetworkStatusResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SetPumpNetworkStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpNetworkStatusResponse)
}




const ::google::protobuf::Message::ClassData SetPumpNetworkStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SetPumpNetworkStatusResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SetPumpNetworkStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[3]);
}
// ===================================================================

class SetPumpStatusRequest::_Internal {
 public:
};

SetPumpStatusRequest::SetPumpStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpStatusRequest)
}
SetPumpStatusRequest::SetPumpStatusRequest(const SetPumpStatusRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpStatusRequest)
}
inline void SetPumpStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0},
      decltype(_impl_.status_){false},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SetPumpStatusRequest::~SetPumpStatusRequest() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.SetPumpStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPumpStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SetPumpStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SetPumpStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.SetPumpStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPumpStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SetPumpStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPumpStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpStatusRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.id_)}},
    // bool status = 2 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetPumpStatusRequest, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.status_)}},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetPumpStatusRequest, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPumpStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.SetPumpStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_status(), target);
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.SetPumpStatusRequest)
  return target;
}

::size_t SetPumpStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.SetPumpStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // bool status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  // .city.water.interaction.v1.WaterFacilityType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPumpStatusRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SetPumpStatusRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SetPumpStatusRequest::GetClassData() const { return &_class_data_; }


void SetPumpStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPumpStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetPumpStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.SetPumpStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPumpStatusRequest::CopyFrom(const SetPumpStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.SetPumpStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPumpStatusRequest::IsInitialized() const {
  return true;
}

void SetPumpStatusRequest::InternalSwap(SetPumpStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.type_)
      + sizeof(SetPumpStatusRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SetPumpStatusRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata SetPumpStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[4]);
}
// ===================================================================

class SetPumpStatusResponse::_Internal {
 public:
};

SetPumpStatusResponse::SetPumpStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.SetPumpStatusResponse)
}
SetPumpStatusResponse::SetPumpStatusResponse(const SetPumpStatusResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SetPumpStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.SetPumpStatusResponse)
}




const ::google::protobuf::Message::ClassData SetPumpStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SetPumpStatusResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SetPumpStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[5]);
}
// ===================================================================

class GetPumpStatusRequest::_Internal {
 public:
};

GetPumpStatusRequest::GetPumpStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetPumpStatusRequest)
}
GetPumpStatusRequest::GetPumpStatusRequest(const GetPumpStatusRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetPumpStatusRequest)
}
inline void GetPumpStatusRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetPumpStatusRequest::~GetPumpStatusRequest() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.GetPumpStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPumpStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void GetPumpStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetPumpStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.GetPumpStatusRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPumpStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetPumpStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPumpStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 flag = 1 [json_name = "flag"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetPumpStatusRequest, _impl_.flag_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetPumpStatusRequest, _impl_.flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 flag = 1 [json_name = "flag"];
    {PROTOBUF_FIELD_OFFSET(GetPumpStatusRequest, _impl_.flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetPumpStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.GetPumpStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.GetPumpStatusRequest)
  return target;
}

::size_t GetPumpStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.GetPumpStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPumpStatusRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetPumpStatusRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetPumpStatusRequest::GetClassData() const { return &_class_data_; }


void GetPumpStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPumpStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetPumpStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.GetPumpStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPumpStatusRequest::CopyFrom(const GetPumpStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.GetPumpStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPumpStatusRequest::IsInitialized() const {
  return true;
}

void GetPumpStatusRequest::InternalSwap(GetPumpStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.flag_, other->_impl_.flag_);
}

::google::protobuf::Metadata GetPumpStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[6]);
}
// ===================================================================

GetPumpStatusResponse_PumpStatusEntry_DoNotUse::GetPumpStatusResponse_PumpStatusEntry_DoNotUse() {}
GetPumpStatusResponse_PumpStatusEntry_DoNotUse::GetPumpStatusResponse_PumpStatusEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void GetPumpStatusResponse_PumpStatusEntry_DoNotUse::MergeFrom(const GetPumpStatusResponse_PumpStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GetPumpStatusResponse_PumpStatusEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[7]);
}
// ===================================================================

class GetPumpStatusResponse::_Internal {
 public:
};

GetPumpStatusResponse::GetPumpStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetPumpStatusResponse)
}
GetPumpStatusResponse::GetPumpStatusResponse(const GetPumpStatusResponse& from) : ::google::protobuf::Message() {
  GetPumpStatusResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.pump_status_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.pump_status_.MergeFrom(from._impl_.pump_status_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetPumpStatusResponse)
}
inline void GetPumpStatusResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.pump_status_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetPumpStatusResponse::~GetPumpStatusResponse() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.GetPumpStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPumpStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pump_status_.~MapField();
}
void GetPumpStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetPumpStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.GetPumpStatusResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pump_status_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPumpStatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetPumpStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPumpStatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, int32> pump_status = 1 [json_name = "pumpStatus"];
    {PROTOBUF_FIELD_OFFSET(GetPumpStatusResponse, _impl_.pump_status_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(GetPumpStatusResponse()._impl_.pump_status_)>(1, 0, 0)},
  }}, {{
  }},
};

::uint8_t* GetPumpStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.GetPumpStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, int32> pump_status = 1 [json_name = "pumpStatus"];
  if (!_internal_pump_status().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int32_t>;
    using WireHelper = GetPumpStatusResponse_PumpStatusEntry_DoNotUse::Funcs;
    const auto& field = _internal_pump_status();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.GetPumpStatusResponse)
  return target;
}

::size_t GetPumpStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.GetPumpStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> pump_status = 1 [json_name = "pumpStatus"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_pump_status_size());
  for (const auto& entry : _internal_pump_status()) {
    total_size += GetPumpStatusResponse_PumpStatusEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPumpStatusResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetPumpStatusResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetPumpStatusResponse::GetClassData() const { return &_class_data_; }


void GetPumpStatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPumpStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetPumpStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.GetPumpStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.pump_status_.MergeFrom(from._impl_.pump_status_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPumpStatusResponse::CopyFrom(const GetPumpStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.GetPumpStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPumpStatusResponse::IsInitialized() const {
  return true;
}

void GetPumpStatusResponse::InternalSwap(GetPumpStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pump_status_.InternalSwap(&other->_impl_.pump_status_);
}

::google::protobuf::Metadata GetPumpStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[8]);
}
// ===================================================================

class GetNoWaterAOIRequest::_Internal {
 public:
};

GetNoWaterAOIRequest::GetNoWaterAOIRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetNoWaterAOIRequest)
}
GetNoWaterAOIRequest::GetNoWaterAOIRequest(const GetNoWaterAOIRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetNoWaterAOIRequest)
}
inline void GetNoWaterAOIRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.flag_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetNoWaterAOIRequest::~GetNoWaterAOIRequest() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.GetNoWaterAOIRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetNoWaterAOIRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void GetNoWaterAOIRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetNoWaterAOIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.GetNoWaterAOIRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetNoWaterAOIRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetNoWaterAOIRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetNoWaterAOIRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 flag = 1 [json_name = "flag"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetNoWaterAOIRequest, _impl_.flag_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetNoWaterAOIRequest, _impl_.flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 flag = 1 [json_name = "flag"];
    {PROTOBUF_FIELD_OFFSET(GetNoWaterAOIRequest, _impl_.flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetNoWaterAOIRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.GetNoWaterAOIRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.GetNoWaterAOIRequest)
  return target;
}

::size_t GetNoWaterAOIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.GetNoWaterAOIRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flag = 1 [json_name = "flag"];
  if (this->_internal_flag() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetNoWaterAOIRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetNoWaterAOIRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetNoWaterAOIRequest::GetClassData() const { return &_class_data_; }


void GetNoWaterAOIRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetNoWaterAOIRequest*>(&to_msg);
  auto& from = static_cast<const GetNoWaterAOIRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.GetNoWaterAOIRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetNoWaterAOIRequest::CopyFrom(const GetNoWaterAOIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.GetNoWaterAOIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetNoWaterAOIRequest::IsInitialized() const {
  return true;
}

void GetNoWaterAOIRequest::InternalSwap(GetNoWaterAOIRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.flag_, other->_impl_.flag_);
}

::google::protobuf::Metadata GetNoWaterAOIRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[9]);
}
// ===================================================================

class GetNoWaterAOIResponse::_Internal {
 public:
};

GetNoWaterAOIResponse::GetNoWaterAOIResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetNoWaterAOIResponse)
}
GetNoWaterAOIResponse::GetNoWaterAOIResponse(const GetNoWaterAOIResponse& from) : ::google::protobuf::Message() {
  GetNoWaterAOIResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_){from._impl_.aoi_},
      /* _impl_._aoi_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetNoWaterAOIResponse)
}
inline void GetNoWaterAOIResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.aoi_){arena},
      /* _impl_._aoi_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetNoWaterAOIResponse::~GetNoWaterAOIResponse() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.GetNoWaterAOIResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetNoWaterAOIResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.aoi_.~RepeatedField();
}
void GetNoWaterAOIResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetNoWaterAOIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.GetNoWaterAOIResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_aoi()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetNoWaterAOIResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetNoWaterAOIResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetNoWaterAOIResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 aoi = 1 [json_name = "aoi"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetNoWaterAOIResponse, _impl_.aoi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 aoi = 1 [json_name = "aoi"];
    {PROTOBUF_FIELD_OFFSET(GetNoWaterAOIResponse, _impl_.aoi_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetNoWaterAOIResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.GetNoWaterAOIResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 aoi = 1 [json_name = "aoi"];
  {
    int byte_size = _impl_._aoi_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1, _internal_aoi(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.GetNoWaterAOIResponse)
  return target;
}

::size_t GetNoWaterAOIResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.GetNoWaterAOIResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 aoi = 1 [json_name = "aoi"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_aoi())
    ;
    _impl_._aoi_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetNoWaterAOIResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetNoWaterAOIResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetNoWaterAOIResponse::GetClassData() const { return &_class_data_; }


void GetNoWaterAOIResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetNoWaterAOIResponse*>(&to_msg);
  auto& from = static_cast<const GetNoWaterAOIResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.GetNoWaterAOIResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_aoi()->MergeFrom(from._internal_aoi());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetNoWaterAOIResponse::CopyFrom(const GetNoWaterAOIResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.GetNoWaterAOIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetNoWaterAOIResponse::IsInitialized() const {
  return true;
}

void GetNoWaterAOIResponse::InternalSwap(GetNoWaterAOIResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.aoi_.InternalSwap(&other->_impl_.aoi_);
}

::google::protobuf::Metadata GetNoWaterAOIResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[10]);
}
// ===================================================================

class GetRuinInfoRequest::_Internal {
 public:
};

GetRuinInfoRequest::GetRuinInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetRuinInfoRequest)
}
GetRuinInfoRequest::GetRuinInfoRequest(const GetRuinInfoRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  GetRuinInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetRuinInfoRequest)
}




const ::google::protobuf::Message::ClassData GetRuinInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*GetRuinInfoRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata GetRuinInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[11]);
}
// ===================================================================

class RuinInfo::_Internal {
 public:
};

RuinInfo::RuinInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.RuinInfo)
}
RuinInfo::RuinInfo(const RuinInfo& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.RuinInfo)
}
inline void RuinInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ratio_){0},
      decltype(_impl_.num_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
RuinInfo::~RuinInfo() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.RuinInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RuinInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void RuinInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void RuinInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.RuinInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ratio_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.ratio_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RuinInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RuinInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RuinInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double ratio = 2 [json_name = "ratio"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.ratio_)}},
    // int32 num = 1 [json_name = "num"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RuinInfo, _impl_.num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.num_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num = 1 [json_name = "num"];
    {PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double ratio = 2 [json_name = "ratio"];
    {PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RuinInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.RuinInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 num = 1 [json_name = "num"];
  if (this->_internal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_num(), target);
  }

  // double ratio = 2 [json_name = "ratio"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_ratio = this->_internal_ratio();
  ::uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_ratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.RuinInfo)
  return target;
}

::size_t RuinInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.RuinInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double ratio = 2 [json_name = "ratio"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_ratio = this->_internal_ratio();
  ::uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    total_size += 9;
  }

  // int32 num = 1 [json_name = "num"];
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RuinInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    RuinInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*RuinInfo::GetClassData() const { return &_class_data_; }


void RuinInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RuinInfo*>(&to_msg);
  auto& from = static_cast<const RuinInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.RuinInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_ratio = from._internal_ratio();
  ::uint64_t raw_ratio;
  memcpy(&raw_ratio, &tmp_ratio, sizeof(tmp_ratio));
  if (raw_ratio != 0) {
    _this->_internal_set_ratio(from._internal_ratio());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RuinInfo::CopyFrom(const RuinInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.RuinInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RuinInfo::IsInitialized() const {
  return true;
}

void RuinInfo::InternalSwap(RuinInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.num_)
      + sizeof(RuinInfo::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(RuinInfo, _impl_.ratio_)>(
          reinterpret_cast<char*>(&_impl_.ratio_),
          reinterpret_cast<char*>(&other->_impl_.ratio_));
}

::google::protobuf::Metadata RuinInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[12]);
}
// ===================================================================

class GetRuinInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetRuinInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_._has_bits_);
  static const ::city::water::interaction::v1::RuinInfo& one(const GetRuinInfoResponse* msg);
  static void set_has_one(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::city::water::interaction::v1::RuinInfo& two(const GetRuinInfoResponse* msg);
  static void set_has_two(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::city::water::interaction::v1::RuinInfo& three(const GetRuinInfoResponse* msg);
  static void set_has_three(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_Internal::one(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.one_;
}
const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_Internal::two(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.two_;
}
const ::city::water::interaction::v1::RuinInfo& GetRuinInfoResponse::_Internal::three(const GetRuinInfoResponse* msg) {
  return *msg->_impl_.three_;
}
GetRuinInfoResponse::GetRuinInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.water.interaction.v1.GetRuinInfoResponse)
}
GetRuinInfoResponse::GetRuinInfoResponse(const GetRuinInfoResponse& from) : ::google::protobuf::Message() {
  GetRuinInfoResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.one_){nullptr},
      decltype(_impl_.two_){nullptr},
      decltype(_impl_.three_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.one_ = new ::city::water::interaction::v1::RuinInfo(*from._impl_.one_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.two_ = new ::city::water::interaction::v1::RuinInfo(*from._impl_.two_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.three_ = new ::city::water::interaction::v1::RuinInfo(*from._impl_.three_);
  }

  // @@protoc_insertion_point(copy_constructor:city.water.interaction.v1.GetRuinInfoResponse)
}
inline void GetRuinInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.one_){nullptr},
      decltype(_impl_.two_){nullptr},
      decltype(_impl_.three_){nullptr},
  };
}
GetRuinInfoResponse::~GetRuinInfoResponse() {
  // @@protoc_insertion_point(destructor:city.water.interaction.v1.GetRuinInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetRuinInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.one_;
  if (this != internal_default_instance()) delete _impl_.two_;
  if (this != internal_default_instance()) delete _impl_.three_;
}
void GetRuinInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetRuinInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.water.interaction.v1.GetRuinInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.one_ != nullptr);
      _impl_.one_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.two_ != nullptr);
      _impl_.two_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.three_ != nullptr);
      _impl_.three_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetRuinInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> GetRuinInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetRuinInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.one_)}},
    // .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.two_)}},
    // .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.three_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
    {PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.one_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
    {PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.two_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
    {PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.three_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::city::water::interaction::v1::RuinInfo>()},
    {::_pbi::TcParser::GetTable<::city::water::interaction::v1::RuinInfo>()},
    {::_pbi::TcParser::GetTable<::city::water::interaction::v1::RuinInfo>()},
  }}, {{
  }},
};

::uint8_t* GetRuinInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.water.interaction.v1.GetRuinInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::one(this),
        _Internal::one(this).GetCachedSize(), target, stream);
  }

  // .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::two(this),
        _Internal::two(this).GetCachedSize(), target, stream);
  }

  // .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::three(this),
        _Internal::three(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.water.interaction.v1.GetRuinInfoResponse)
  return target;
}

::size_t GetRuinInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.water.interaction.v1.GetRuinInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .city.water.interaction.v1.RuinInfo one = 1 [json_name = "one"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.one_);
    }

    // .city.water.interaction.v1.RuinInfo two = 2 [json_name = "two"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.two_);
    }

    // .city.water.interaction.v1.RuinInfo three = 3 [json_name = "three"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.three_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetRuinInfoResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetRuinInfoResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetRuinInfoResponse::GetClassData() const { return &_class_data_; }


void GetRuinInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetRuinInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetRuinInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.water.interaction.v1.GetRuinInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_one()->::city::water::interaction::v1::RuinInfo::MergeFrom(
          from._internal_one());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_two()->::city::water::interaction::v1::RuinInfo::MergeFrom(
          from._internal_two());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_three()->::city::water::interaction::v1::RuinInfo::MergeFrom(
          from._internal_three());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRuinInfoResponse::CopyFrom(const GetRuinInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.water.interaction.v1.GetRuinInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetRuinInfoResponse::IsInitialized() const {
  return true;
}

void GetRuinInfoResponse::InternalSwap(GetRuinInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.three_)
      + sizeof(GetRuinInfoResponse::_impl_.three_)
      - PROTOBUF_FIELD_OFFSET(GetRuinInfoResponse, _impl_.one_)>(
          reinterpret_cast<char*>(&_impl_.one_),
          reinterpret_cast<char*>(&other->_impl_.one_));
}

::google::protobuf::Metadata GetRuinInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_getter, &descriptor_table_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto_once,
      file_level_metadata_city_2fwater_2finteraction_2fv1_2fwater_5fservice_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace interaction
}  // namespace water
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

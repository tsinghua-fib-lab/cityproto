// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/economy/v2/org_service.proto

#include "city/economy/v2/org_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace economy {
namespace v2 {
PROTOBUF_CONSTEXPR AddOrgRequest::AddOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddOrgRequestDefaultTypeInternal() {}
  union {
    AddOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddOrgRequestDefaultTypeInternal _AddOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR AddOrgResponse::AddOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct AddOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddOrgResponseDefaultTypeInternal() {}
  union {
    AddOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddOrgResponseDefaultTypeInternal _AddOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveOrgRequest::RemoveOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOrgRequestDefaultTypeInternal() {}
  union {
    RemoveOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOrgRequestDefaultTypeInternal _RemoveOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveOrgResponse::RemoveOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOrgResponseDefaultTypeInternal() {}
  union {
    RemoveOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOrgResponseDefaultTypeInternal _RemoveOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrgRequest::GetOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrgRequestDefaultTypeInternal() {}
  union {
    GetOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrgRequestDefaultTypeInternal _GetOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrgResponse::GetOrgResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrgResponseDefaultTypeInternal() {}
  union {
    GetOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrgResponseDefaultTypeInternal _GetOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrgRequest::UpdateOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrgRequestDefaultTypeInternal() {}
  union {
    UpdateOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrgRequestDefaultTypeInternal _UpdateOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrgResponse::UpdateOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrgResponseDefaultTypeInternal() {}
  union {
    UpdateOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrgResponseDefaultTypeInternal _UpdateOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR AddAgentRequest::AddAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentRequestDefaultTypeInternal() {}
  union {
    AddAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentRequestDefaultTypeInternal _AddAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR AddAgentResponse::AddAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct AddAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentResponseDefaultTypeInternal() {}
  union {
    AddAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentResponseDefaultTypeInternal _AddAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentRequest::RemoveAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentRequestDefaultTypeInternal() {}
  union {
    RemoveAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentRequestDefaultTypeInternal _RemoveAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentResponse::RemoveAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentResponseDefaultTypeInternal() {}
  union {
    RemoveAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentResponseDefaultTypeInternal _RemoveAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAgentRequest::GetAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentRequestDefaultTypeInternal() {}
  union {
    GetAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAgentResponse::GetAgentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentResponseDefaultTypeInternal() {}
  union {
    GetAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentResponseDefaultTypeInternal _GetAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateAgentRequest::UpdateAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentRequestDefaultTypeInternal() {}
  union {
    UpdateAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentRequestDefaultTypeInternal _UpdateAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateAgentResponse::UpdateAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentResponseDefaultTypeInternal() {}
  union {
    UpdateAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentResponseDefaultTypeInternal _UpdateAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueRequest::CalculateTaxesDueRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.incomes_)*/{}
  , /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_.enable_redistribution_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueRequestDefaultTypeInternal() {}
  union {
    CalculateTaxesDueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueRequestDefaultTypeInternal _CalculateTaxesDueRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueResponse::CalculateTaxesDueResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_incomes_)*/{}
  , /*decltype(_impl_.taxes_due_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueResponseDefaultTypeInternal() {}
  union {
    CalculateTaxesDueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueResponseDefaultTypeInternal _CalculateTaxesDueResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionRequest::CalculateConsumptionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.demands_)*/{}
  , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_.consumption_accumulation_)*/false} {}
struct CalculateConsumptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionRequestDefaultTypeInternal() {}
  union {
    CalculateConsumptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionRequestDefaultTypeInternal _CalculateConsumptionRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionResponse::CalculateConsumptionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.actual_consumption_)*/0
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateConsumptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionResponseDefaultTypeInternal() {}
  union {
    CalculateConsumptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionResponseDefaultTypeInternal _CalculateConsumptionResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestRequest::CalculateInterestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestRequestDefaultTypeInternal() {}
  union {
    CalculateInterestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestRequestDefaultTypeInternal _CalculateInterestRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestResponse::CalculateInterestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_currencies_)*/{}
  , /*decltype(_impl_.total_interest_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestResponseDefaultTypeInternal() {}
  union {
    CalculateInterestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestResponseDefaultTypeInternal _CalculateInterestResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateRealGDPRequest::CalculateRealGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateRealGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateRealGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateRealGDPRequestDefaultTypeInternal() {}
  union {
    CalculateRealGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateRealGDPRequestDefaultTypeInternal _CalculateRealGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateRealGDPResponse::CalculateRealGDPResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.real_gdp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateRealGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateRealGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateRealGDPResponseDefaultTypeInternal() {}
  union {
    CalculateRealGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateRealGDPResponseDefaultTypeInternal _CalculateRealGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchGetRequest::BatchGetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ids_)*/{}
  , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchGetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchGetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchGetRequestDefaultTypeInternal() {}
  union {
    BatchGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchGetRequestDefaultTypeInternal _BatchGetRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchGetResponse::BatchGetResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orgs_)*/{}
  , /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchGetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchGetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchGetResponseDefaultTypeInternal() {}
  union {
    BatchGetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchGetResponseDefaultTypeInternal _BatchGetResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchUpdateRequest::BatchUpdateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orgs_)*/{}
  , /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchUpdateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchUpdateRequestDefaultTypeInternal() {}
  union {
    BatchUpdateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchUpdateRequestDefaultTypeInternal _BatchUpdateRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchUpdateResponse::BatchUpdateResponse(
    ::_pbi::ConstantInitialized) {}
struct BatchUpdateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchUpdateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchUpdateResponseDefaultTypeInternal() {}
  union {
    BatchUpdateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchUpdateResponseDefaultTypeInternal _BatchUpdateResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchSetRequest::BatchSetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orgs_)*/{}
  , /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchSetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchSetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchSetRequestDefaultTypeInternal() {}
  union {
    BatchSetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchSetRequestDefaultTypeInternal _BatchSetRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchSetResponse::BatchSetResponse(
    ::_pbi::ConstantInitialized) {}
struct BatchSetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchSetResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchSetResponseDefaultTypeInternal() {}
  union {
    BatchSetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchSetResponseDefaultTypeInternal _BatchSetResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateOrgRequest::DeltaUpdateOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delta_nominal_gdp_)*/{}
  , /*decltype(_impl_.delta_real_gdp_)*/{}
  , /*decltype(_impl_.delta_unemployment_)*/{}
  , /*decltype(_impl_.delta_wages_)*/{}
  , /*decltype(_impl_.delta_prices_)*/{}
  , /*decltype(_impl_.delta_bracket_cutoffs_)*/{}
  , /*decltype(_impl_.delta_bracket_rates_)*/{}
  , /*decltype(_impl_.add_employees_)*/{}
  , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_employees_)*/{}
  , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
  , /*decltype(_impl_.add_citizens_)*/{}
  , /*decltype(_impl_._add_citizens_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_citizens_)*/{}
  , /*decltype(_impl_._remove_citizens_cached_byte_size_)*/{0}
  , /*decltype(_impl_.delta_consumption_currency_)*/{}
  , /*decltype(_impl_.delta_consumption_propensity_)*/{}
  , /*decltype(_impl_.delta_income_currency_)*/{}
  , /*decltype(_impl_.delta_depression_)*/{}
  , /*decltype(_impl_.delta_locus_control_)*/{}
  , /*decltype(_impl_.delta_working_hours_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_.delta_inventory_)*/0
  , /*decltype(_impl_.delta_price_)*/0
  , /*decltype(_impl_.delta_currency_)*/0
  , /*decltype(_impl_.delta_interest_rate_)*/0
  , /*decltype(_impl_.delta_demand_)*/0
  , /*decltype(_impl_.delta_sales_)*/0} {}
struct DeltaUpdateOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateOrgRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateOrgRequestDefaultTypeInternal _DeltaUpdateOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateOrgResponse::DeltaUpdateOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateOrgResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateOrgResponseDefaultTypeInternal _DeltaUpdateOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_.delta_currency_)*/0
  , /*decltype(_impl_.new_firm_id_)*/0
  , /*decltype(_impl_.delta_skill_)*/0
  , /*decltype(_impl_.delta_consumption_)*/0
  , /*decltype(_impl_.delta_income_)*/0} {}
struct DeltaUpdateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateAgentRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateAgentRequestDefaultTypeInternal _DeltaUpdateAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateAgentResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateAgentResponseDefaultTypeInternal _DeltaUpdateAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR BatchDeltaUpdateRequest::BatchDeltaUpdateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orgs_)*/{}
  , /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BatchDeltaUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchDeltaUpdateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchDeltaUpdateRequestDefaultTypeInternal() {}
  union {
    BatchDeltaUpdateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchDeltaUpdateRequestDefaultTypeInternal _BatchDeltaUpdateRequest_default_instance_;
PROTOBUF_CONSTEXPR BatchDeltaUpdateResponse::BatchDeltaUpdateResponse(
    ::_pbi::ConstantInitialized) {}
struct BatchDeltaUpdateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchDeltaUpdateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchDeltaUpdateResponseDefaultTypeInternal() {}
  union {
    BatchDeltaUpdateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchDeltaUpdateResponseDefaultTypeInternal _BatchDeltaUpdateResponse_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesRequestDefaultTypeInternal _SaveEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_ids_)*/{}
  , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesResponseDefaultTypeInternal _SaveEconomyEntitiesResponse_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesRequestDefaultTypeInternal _LoadEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_ids_)*/{}
  , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesResponseDefaultTypeInternal _LoadEconomyEntitiesResponse_default_instance_;
}  // namespace v2
}  // namespace economy
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[40];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgRequest, _impl_.org_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetOrgRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetOrgResponse, _impl_.org_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateOrgRequest, _impl_.org_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _impl_.agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _impl_.agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentRequest, _impl_.agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentResponse, _impl_.agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentRequest, _impl_.agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.government_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.incomes_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.enable_redistribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.taxes_due_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.updated_incomes_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.firm_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.demands_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.consumption_accumulation_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.actual_consumption_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.bank_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.total_interest_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.updated_currencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPRequest, _impl_.nbs_agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPResponse, _impl_.real_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetRequest, _impl_.ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetRequest, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetResponse, _impl_.orgs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchGetResponse, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchUpdateRequest, _impl_.orgs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchUpdateRequest, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchSetRequest, _impl_.orgs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchSetRequest, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_nominal_gdp_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_real_gdp_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_unemployment_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_wages_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_prices_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_inventory_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_price_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_interest_rate_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_bracket_cutoffs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_bracket_rates_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_demand_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_sales_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.add_employees_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.remove_employees_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.add_citizens_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.remove_citizens_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_consumption_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_consumption_propensity_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_income_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_depression_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_locus_control_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgRequest, _impl_.delta_working_hours_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  4,
  5,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.new_firm_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.delta_skill_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.delta_consumption_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.delta_income_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchDeltaUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchDeltaUpdateRequest, _impl_.orgs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchDeltaUpdateRequest, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::BatchDeltaUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.org_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.org_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.agent_ids_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::economy::v2::AddOrgRequest)},
  { 7, -1, -1, sizeof(::city::economy::v2::AddOrgResponse)},
  { 13, -1, -1, sizeof(::city::economy::v2::RemoveOrgRequest)},
  { 20, -1, -1, sizeof(::city::economy::v2::RemoveOrgResponse)},
  { 26, -1, -1, sizeof(::city::economy::v2::GetOrgRequest)},
  { 33, -1, -1, sizeof(::city::economy::v2::GetOrgResponse)},
  { 40, -1, -1, sizeof(::city::economy::v2::UpdateOrgRequest)},
  { 47, -1, -1, sizeof(::city::economy::v2::UpdateOrgResponse)},
  { 53, -1, -1, sizeof(::city::economy::v2::AddAgentRequest)},
  { 60, -1, -1, sizeof(::city::economy::v2::AddAgentResponse)},
  { 66, -1, -1, sizeof(::city::economy::v2::RemoveAgentRequest)},
  { 73, -1, -1, sizeof(::city::economy::v2::RemoveAgentResponse)},
  { 79, -1, -1, sizeof(::city::economy::v2::GetAgentRequest)},
  { 86, -1, -1, sizeof(::city::economy::v2::GetAgentResponse)},
  { 93, -1, -1, sizeof(::city::economy::v2::UpdateAgentRequest)},
  { 100, -1, -1, sizeof(::city::economy::v2::UpdateAgentResponse)},
  { 106, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueRequest)},
  { 116, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueResponse)},
  { 124, 134, -1, sizeof(::city::economy::v2::CalculateConsumptionRequest)},
  { 138, -1, -1, sizeof(::city::economy::v2::CalculateConsumptionResponse)},
  { 146, -1, -1, sizeof(::city::economy::v2::CalculateInterestRequest)},
  { 154, -1, -1, sizeof(::city::economy::v2::CalculateInterestResponse)},
  { 162, -1, -1, sizeof(::city::economy::v2::CalculateRealGDPRequest)},
  { 169, -1, -1, sizeof(::city::economy::v2::CalculateRealGDPResponse)},
  { 176, -1, -1, sizeof(::city::economy::v2::BatchGetRequest)},
  { 184, -1, -1, sizeof(::city::economy::v2::BatchGetResponse)},
  { 192, -1, -1, sizeof(::city::economy::v2::BatchUpdateRequest)},
  { 200, -1, -1, sizeof(::city::economy::v2::BatchUpdateResponse)},
  { 206, -1, -1, sizeof(::city::economy::v2::BatchSetRequest)},
  { 214, -1, -1, sizeof(::city::economy::v2::BatchSetResponse)},
  { 220, 250, -1, sizeof(::city::economy::v2::DeltaUpdateOrgRequest)},
  { 274, -1, -1, sizeof(::city::economy::v2::DeltaUpdateOrgResponse)},
  { 280, 292, -1, sizeof(::city::economy::v2::DeltaUpdateAgentRequest)},
  { 298, -1, -1, sizeof(::city::economy::v2::DeltaUpdateAgentResponse)},
  { 304, -1, -1, sizeof(::city::economy::v2::BatchDeltaUpdateRequest)},
  { 312, -1, -1, sizeof(::city::economy::v2::BatchDeltaUpdateResponse)},
  { 318, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesRequest)},
  { 325, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesResponse)},
  { 333, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesRequest)},
  { 340, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::economy::v2::_AddOrgRequest_default_instance_._instance,
  &::city::economy::v2::_AddOrgResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveOrgRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveOrgResponse_default_instance_._instance,
  &::city::economy::v2::_GetOrgRequest_default_instance_._instance,
  &::city::economy::v2::_GetOrgResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateOrgRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateOrgResponse_default_instance_._instance,
  &::city::economy::v2::_AddAgentRequest_default_instance_._instance,
  &::city::economy::v2::_AddAgentResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentResponse_default_instance_._instance,
  &::city::economy::v2::_GetAgentRequest_default_instance_._instance,
  &::city::economy::v2::_GetAgentResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateAgentRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateAgentResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateRealGDPRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateRealGDPResponse_default_instance_._instance,
  &::city::economy::v2::_BatchGetRequest_default_instance_._instance,
  &::city::economy::v2::_BatchGetResponse_default_instance_._instance,
  &::city::economy::v2::_BatchUpdateRequest_default_instance_._instance,
  &::city::economy::v2::_BatchUpdateResponse_default_instance_._instance,
  &::city::economy::v2::_BatchSetRequest_default_instance_._instance,
  &::city::economy::v2::_BatchSetResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateOrgRequest_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateOrgResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateAgentRequest_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateAgentResponse_default_instance_._instance,
  &::city::economy::v2::_BatchDeltaUpdateRequest_default_instance_._instance,
  &::city::economy::v2::_BatchDeltaUpdateResponse_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesResponse_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!city/economy/v2/org_service.proto\022\017cit"
  "y.economy.v2\032\035city/economy/v2/economy.pr"
  "oto\"7\n\rAddOrgRequest\022&\n\003org\030\001 \001(\0132\024.city"
  ".economy.v2.OrgR\003org\"\020\n\016AddOrgResponse\")"
  "\n\020RemoveOrgRequest\022\025\n\006org_id\030\001 \001(\005R\005orgI"
  "d\"\023\n\021RemoveOrgResponse\"&\n\rGetOrgRequest\022"
  "\025\n\006org_id\030\001 \001(\005R\005orgId\"8\n\016GetOrgResponse"
  "\022&\n\003org\030\001 \001(\0132\024.city.economy.v2.OrgR\003org"
  "\":\n\020UpdateOrgRequest\022&\n\003org\030\001 \001(\0132\024.city"
  ".economy.v2.OrgR\003org\"\023\n\021UpdateOrgRespons"
  "e\"\?\n\017AddAgentRequest\022,\n\005agent\030\001 \001(\0132\026.ci"
  "ty.economy.v2.AgentR\005agent\"\022\n\020AddAgentRe"
  "sponse\"/\n\022RemoveAgentRequest\022\031\n\010agent_id"
  "\030\001 \001(\005R\007agentId\"\025\n\023RemoveAgentResponse\","
  "\n\017GetAgentRequest\022\031\n\010agent_id\030\001 \001(\005R\007age"
  "ntId\"@\n\020GetAgentResponse\022,\n\005agent\030\001 \001(\0132"
  "\026.city.economy.v2.AgentR\005agent\"B\n\022Update"
  "AgentRequest\022,\n\005agent\030\001 \001(\0132\026.city.econo"
  "my.v2.AgentR\005agent\"\025\n\023UpdateAgentRespons"
  "e\"\253\001\n\030CalculateTaxesDueRequest\022#\n\rgovern"
  "ment_id\030\001 \001(\005R\014governmentId\022\033\n\tagent_ids"
  "\030\002 \003(\005R\010agentIds\022\030\n\007incomes\030\003 \003(\002R\007incom"
  "es\0223\n\025enable_redistribution\030\004 \001(\010R\024enabl"
  "eRedistribution\"a\n\031CalculateTaxesDueResp"
  "onse\022\033\n\ttaxes_due\030\001 \001(\002R\010taxesDue\022\'\n\017upd"
  "ated_incomes\030\002 \003(\002R\016updatedIncomes\"\312\001\n\033C"
  "alculateConsumptionRequest\022\031\n\010firm_ids\030\001"
  " \003(\005R\007firmIds\022\031\n\010agent_id\030\002 \001(\005R\007agentId"
  "\022\030\n\007demands\030\003 \003(\005R\007demands\022>\n\030consumptio"
  "n_accumulation\030\004 \001(\010H\000R\027consumptionAccum"
  "ulation\210\001\001B\033\n\031_consumption_accumulation\""
  "g\n\034CalculateConsumptionResponse\022-\n\022actua"
  "l_consumption\030\001 \001(\002R\021actualConsumption\022\030"
  "\n\007success\030\002 \001(\010R\007success\"P\n\030CalculateInt"
  "erestRequest\022\027\n\007bank_id\030\001 \001(\005R\006bankId\022\033\n"
  "\tagent_ids\030\002 \003(\005R\010agentIds\"q\n\031CalculateI"
  "nterestResponse\022%\n\016total_interest\030\001 \001(\002R"
  "\rtotalInterest\022-\n\022updated_currencies\030\002 \003"
  "(\002R\021updatedCurrencies\";\n\027CalculateRealGD"
  "PRequest\022 \n\014nbs_agent_id\030\001 \001(\005R\nnbsAgent"
  "Id\"5\n\030CalculateRealGDPResponse\022\031\n\010real_g"
  "dp\030\001 \001(\002R\007realGdp\"7\n\017BatchGetRequest\022\020\n\003"
  "ids\030\001 \003(\005R\003ids\022\022\n\004type\030\002 \001(\tR\004type\"l\n\020Ba"
  "tchGetResponse\022(\n\004orgs\030\001 \003(\0132\024.city.econ"
  "omy.v2.OrgR\004orgs\022.\n\006agents\030\002 \003(\0132\026.city."
  "economy.v2.AgentR\006agents\"n\n\022BatchUpdateR"
  "equest\022(\n\004orgs\030\001 \003(\0132\024.city.economy.v2.O"
  "rgR\004orgs\022.\n\006agents\030\002 \003(\0132\026.city.economy."
  "v2.AgentR\006agents\"\025\n\023BatchUpdateResponse\""
  "k\n\017BatchSetRequest\022(\n\004orgs\030\001 \003(\0132\024.city."
  "economy.v2.OrgR\004orgs\022.\n\006agents\030\002 \003(\0132\026.c"
  "ity.economy.v2.AgentR\006agents\"\022\n\020BatchSet"
  "Response\"\245\t\n\025DeltaUpdateOrgRequest\022\025\n\006or"
  "g_id\030\001 \001(\005R\005orgId\022*\n\021delta_nominal_gdp\030\002"
  " \003(\002R\017deltaNominalGdp\022$\n\016delta_real_gdp\030"
  "\003 \003(\002R\014deltaRealGdp\022-\n\022delta_unemploymen"
  "t\030\004 \003(\002R\021deltaUnemployment\022\037\n\013delta_wage"
  "s\030\005 \003(\002R\ndeltaWages\022!\n\014delta_prices\030\006 \003("
  "\002R\013deltaPrices\022,\n\017delta_inventory\030\007 \001(\005H"
  "\000R\016deltaInventory\210\001\001\022$\n\013delta_price\030\010 \001("
  "\002H\001R\ndeltaPrice\210\001\001\022*\n\016delta_currency\030\t \001"
  "(\002H\002R\rdeltaCurrency\210\001\001\0223\n\023delta_interest"
  "_rate\030\n \001(\002H\003R\021deltaInterestRate\210\001\001\0222\n\025d"
  "elta_bracket_cutoffs\030\013 \003(\002R\023deltaBracket"
  "Cutoffs\022.\n\023delta_bracket_rates\030\014 \003(\002R\021de"
  "ltaBracketRates\022&\n\014delta_demand\030\r \001(\005H\004R"
  "\013deltaDemand\210\001\001\022$\n\013delta_sales\030\016 \001(\005H\005R\n"
  "deltaSales\210\001\001\022#\n\radd_employees\030\017 \003(\005R\014ad"
  "dEmployees\022)\n\020remove_employees\030\020 \003(\005R\017re"
  "moveEmployees\022!\n\014add_citizens\030\021 \003(\005R\013add"
  "Citizens\022\'\n\017remove_citizens\030\022 \003(\005R\016remov"
  "eCitizens\022<\n\032delta_consumption_currency\030"
  "\023 \003(\002R\030deltaConsumptionCurrency\022@\n\034delta"
  "_consumption_propensity\030\024 \003(\002R\032deltaCons"
  "umptionPropensity\0222\n\025delta_income_curren"
  "cy\030\025 \003(\002R\023deltaIncomeCurrency\022)\n\020delta_d"
  "epression\030\026 \003(\002R\017deltaDepression\022.\n\023delt"
  "a_locus_control\030\027 \003(\002R\021deltaLocusControl"
  "\022.\n\023delta_working_hours\030\030 \003(\002R\021deltaWork"
  "ingHoursB\022\n\020_delta_inventoryB\016\n\014_delta_p"
  "riceB\021\n\017_delta_currencyB\026\n\024_delta_intere"
  "st_rateB\017\n\r_delta_demandB\016\n\014_delta_sales"
  "\"\030\n\026DeltaUpdateOrgResponse\"\337\002\n\027DeltaUpda"
  "teAgentRequest\022\031\n\010agent_id\030\001 \001(\005R\007agentI"
  "d\022*\n\016delta_currency\030\002 \001(\002H\000R\rdeltaCurren"
  "cy\210\001\001\022#\n\013new_firm_id\030\003 \001(\005H\001R\tnewFirmId\210"
  "\001\001\022$\n\013delta_skill\030\004 \001(\002H\002R\ndeltaSkill\210\001\001"
  "\0220\n\021delta_consumption\030\005 \001(\002H\003R\020deltaCons"
  "umption\210\001\001\022&\n\014delta_income\030\006 \001(\002H\004R\013delt"
  "aIncome\210\001\001B\021\n\017_delta_currencyB\016\n\014_new_fi"
  "rm_idB\016\n\014_delta_skillB\024\n\022_delta_consumpt"
  "ionB\017\n\r_delta_income\"\032\n\030DeltaUpdateAgent"
  "Response\"\227\001\n\027BatchDeltaUpdateRequest\022:\n\004"
  "orgs\030\001 \003(\0132&.city.economy.v2.DeltaUpdate"
  "OrgRequestR\004orgs\022@\n\006agents\030\002 \003(\0132(.city."
  "economy.v2.DeltaUpdateAgentRequestR\006agen"
  "ts\"\032\n\030BatchDeltaUpdateResponse\"9\n\032SaveEc"
  "onomyEntitiesRequest\022\033\n\tfile_path\030\001 \001(\tR"
  "\010filePath\"S\n\033SaveEconomyEntitiesResponse"
  "\022\027\n\007org_ids\030\001 \003(\005R\006orgIds\022\033\n\tagent_ids\030\002"
  " \003(\005R\010agentIds\"9\n\032LoadEconomyEntitiesReq"
  "uest\022\033\n\tfile_path\030\001 \001(\tR\010filePath\"S\n\033Loa"
  "dEconomyEntitiesResponse\022\027\n\007org_ids\030\001 \003("
  "\005R\006orgIds\022\033\n\tagent_ids\030\002 \003(\005R\010agentIds2\203"
  "\017\n\nOrgService\022I\n\006AddOrg\022\036.city.economy.v"
  "2.AddOrgRequest\032\037.city.economy.v2.AddOrg"
  "Response\022R\n\tRemoveOrg\022!.city.economy.v2."
  "RemoveOrgRequest\032\".city.economy.v2.Remov"
  "eOrgResponse\022I\n\006GetOrg\022\036.city.economy.v2"
  ".GetOrgRequest\032\037.city.economy.v2.GetOrgR"
  "esponse\022R\n\tUpdateOrg\022!.city.economy.v2.U"
  "pdateOrgRequest\032\".city.economy.v2.Update"
  "OrgResponse\022O\n\010AddAgent\022 .city.economy.v"
  "2.AddAgentRequest\032!.city.economy.v2.AddA"
  "gentResponse\022X\n\013RemoveAgent\022#.city.econo"
  "my.v2.RemoveAgentRequest\032$.city.economy."
  "v2.RemoveAgentResponse\022O\n\010GetAgent\022 .cit"
  "y.economy.v2.GetAgentRequest\032!.city.econ"
  "omy.v2.GetAgentResponse\022X\n\013UpdateAgent\022#"
  ".city.economy.v2.UpdateAgentRequest\032$.ci"
  "ty.economy.v2.UpdateAgentResponse\022Q\n\010Bat"
  "chGet\022 .city.economy.v2.BatchGetRequest\032"
  "!.city.economy.v2.BatchGetResponse\"\000\022Z\n\013"
  "BatchUpdate\022#.city.economy.v2.BatchUpdat"
  "eRequest\032$.city.economy.v2.BatchUpdateRe"
  "sponse\"\000\022Q\n\010BatchSet\022 .city.economy.v2.B"
  "atchSetRequest\032!.city.economy.v2.BatchSe"
  "tResponse\"\000\022c\n\016DeltaUpdateOrg\022&.city.eco"
  "nomy.v2.DeltaUpdateOrgRequest\032\'.city.eco"
  "nomy.v2.DeltaUpdateOrgResponse\"\000\022i\n\020Delt"
  "aUpdateAgent\022(.city.economy.v2.DeltaUpda"
  "teAgentRequest\032).city.economy.v2.DeltaUp"
  "dateAgentResponse\"\000\022i\n\020BatchDeltaUpdate\022"
  "(.city.economy.v2.BatchDeltaUpdateReques"
  "t\032).city.economy.v2.BatchDeltaUpdateResp"
  "onse\"\000\022l\n\021CalculateTaxesDue\022).city.econo"
  "my.v2.CalculateTaxesDueRequest\032*.city.ec"
  "onomy.v2.CalculateTaxesDueResponse\"\000\022u\n\024"
  "CalculateConsumption\022,.city.economy.v2.C"
  "alculateConsumptionRequest\032-.city.econom"
  "y.v2.CalculateConsumptionResponse\"\000\022l\n\021C"
  "alculateInterest\022).city.economy.v2.Calcu"
  "lateInterestRequest\032*.city.economy.v2.Ca"
  "lculateInterestResponse\"\000\022i\n\020CalculateRe"
  "alGDP\022(.city.economy.v2.CalculateRealGDP"
  "Request\032).city.economy.v2.CalculateRealG"
  "DPResponse\"\000\022r\n\023SaveEconomyEntities\022+.ci"
  "ty.economy.v2.SaveEconomyEntitiesRequest"
  "\032,.city.economy.v2.SaveEconomyEntitiesRe"
  "sponse\"\000\022r\n\023LoadEconomyEntities\022+.city.e"
  "conomy.v2.LoadEconomyEntitiesRequest\032,.c"
  "ity.economy.v2.LoadEconomyEntitiesRespon"
  "se\"\000B\277\001\n\023com.city.economy.v2B\017OrgService"
  "ProtoP\001Z9git.fiblab.net/sim/protos/v2/go"
  "/city/economy/v2;economyv2\242\002\003CEX\252\002\017City."
  "Economy.V2\312\002\017City\\Economy\\V2\342\002\033City\\Econ"
  "omy\\V2\\GPBMetadata\352\002\021City::Economy::V2b\006"
  "proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps[1] = {
  &::descriptor_table_city_2feconomy_2fv2_2feconomy_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto = {
    false, false, 6286, descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    "city/economy/v2/org_service.proto",
    &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once, descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps, 1, 40,
    schemas, file_default_instances, TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets,
    file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto, file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter() {
  return &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2feconomy_2fv2_2forg_5fservice_2eproto(&descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto);
namespace city {
namespace economy {
namespace v2 {

// ===================================================================

class AddOrgRequest::_Internal {
 public:
  static const ::city::economy::v2::Org& org(const AddOrgRequest* msg);
};

const ::city::economy::v2::Org&
AddOrgRequest::_Internal::org(const AddOrgRequest* msg) {
  return *msg->_impl_.org_;
}
void AddOrgRequest::clear_org() {
  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
}
AddOrgRequest::AddOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddOrgRequest)
}
AddOrgRequest::AddOrgRequest(const AddOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_org()) {
    _this->_impl_.org_ = new ::city::economy::v2::Org(*from._impl_.org_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddOrgRequest)
}

inline void AddOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddOrgRequest::~AddOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.org_;
}

void AddOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Org org = 1 [json_name = "org"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_org(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::org(this),
        _Internal::org(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddOrgRequest)
  return target;
}

size_t AddOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.org_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddOrgRequest::GetClassData() const { return &_class_data_; }


void AddOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddOrgRequest*>(&to_msg);
  auto& from = static_cast<const AddOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_org()) {
    _this->_internal_mutable_org()->::city::economy::v2::Org::MergeFrom(
        from._internal_org());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddOrgRequest::CopyFrom(const AddOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrgRequest::IsInitialized() const {
  return true;
}

void AddOrgRequest::InternalSwap(AddOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_, other->_impl_.org_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[0]);
}

// ===================================================================

class AddOrgResponse::_Internal {
 public:
};

AddOrgResponse::AddOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddOrgResponse)
}
AddOrgResponse::AddOrgResponse(const AddOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[1]);
}

// ===================================================================

class RemoveOrgRequest::_Internal {
 public:
};

RemoveOrgRequest::RemoveOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveOrgRequest)
}
RemoveOrgRequest::RemoveOrgRequest(const RemoveOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveOrgRequest)
}

inline void RemoveOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveOrgRequest::~RemoveOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveOrgRequest)
  return target;
}

size_t RemoveOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOrgRequest::GetClassData() const { return &_class_data_; }


void RemoveOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveOrgRequest*>(&to_msg);
  auto& from = static_cast<const RemoveOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveOrgRequest::CopyFrom(const RemoveOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrgRequest::IsInitialized() const {
  return true;
}

void RemoveOrgRequest::InternalSwap(RemoveOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[2]);
}

// ===================================================================

class RemoveOrgResponse::_Internal {
 public:
};

RemoveOrgResponse::RemoveOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveOrgResponse)
}
RemoveOrgResponse::RemoveOrgResponse(const RemoveOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[3]);
}

// ===================================================================

class GetOrgRequest::_Internal {
 public:
};

GetOrgRequest::GetOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetOrgRequest)
}
GetOrgRequest::GetOrgRequest(const GetOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetOrgRequest)
}

inline void GetOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOrgRequest::~GetOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetOrgRequest)
  return target;
}

size_t GetOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrgRequest::GetClassData() const { return &_class_data_; }


void GetOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOrgRequest*>(&to_msg);
  auto& from = static_cast<const GetOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrgRequest::CopyFrom(const GetOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrgRequest::IsInitialized() const {
  return true;
}

void GetOrgRequest::InternalSwap(GetOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[4]);
}

// ===================================================================

class GetOrgResponse::_Internal {
 public:
  static const ::city::economy::v2::Org& org(const GetOrgResponse* msg);
};

const ::city::economy::v2::Org&
GetOrgResponse::_Internal::org(const GetOrgResponse* msg) {
  return *msg->_impl_.org_;
}
void GetOrgResponse::clear_org() {
  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
}
GetOrgResponse::GetOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetOrgResponse)
}
GetOrgResponse::GetOrgResponse(const GetOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOrgResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_org()) {
    _this->_impl_.org_ = new ::city::economy::v2::Org(*from._impl_.org_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetOrgResponse)
}

inline void GetOrgResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOrgResponse::~GetOrgResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetOrgResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrgResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.org_;
}

void GetOrgResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOrgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetOrgResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrgResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Org org = 1 [json_name = "org"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_org(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrgResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetOrgResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::org(this),
        _Internal::org(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetOrgResponse)
  return target;
}

size_t GetOrgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetOrgResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.org_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOrgResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrgResponse::GetClassData() const { return &_class_data_; }


void GetOrgResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOrgResponse*>(&to_msg);
  auto& from = static_cast<const GetOrgResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetOrgResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_org()) {
    _this->_internal_mutable_org()->::city::economy::v2::Org::MergeFrom(
        from._internal_org());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrgResponse::CopyFrom(const GetOrgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetOrgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrgResponse::IsInitialized() const {
  return true;
}

void GetOrgResponse::InternalSwap(GetOrgResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_, other->_impl_.org_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[5]);
}

// ===================================================================

class UpdateOrgRequest::_Internal {
 public:
  static const ::city::economy::v2::Org& org(const UpdateOrgRequest* msg);
};

const ::city::economy::v2::Org&
UpdateOrgRequest::_Internal::org(const UpdateOrgRequest* msg) {
  return *msg->_impl_.org_;
}
void UpdateOrgRequest::clear_org() {
  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
}
UpdateOrgRequest::UpdateOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateOrgRequest)
}
UpdateOrgRequest::UpdateOrgRequest(const UpdateOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_org()) {
    _this->_impl_.org_ = new ::city::economy::v2::Org(*from._impl_.org_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateOrgRequest)
}

inline void UpdateOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateOrgRequest::~UpdateOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.org_;
}

void UpdateOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Org org = 1 [json_name = "org"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_org(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::org(this),
        _Internal::org(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateOrgRequest)
  return target;
}

size_t UpdateOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.org_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrgRequest::GetClassData() const { return &_class_data_; }


void UpdateOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateOrgRequest*>(&to_msg);
  auto& from = static_cast<const UpdateOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_org()) {
    _this->_internal_mutable_org()->::city::economy::v2::Org::MergeFrom(
        from._internal_org());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrgRequest::CopyFrom(const UpdateOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrgRequest::IsInitialized() const {
  return true;
}

void UpdateOrgRequest::InternalSwap(UpdateOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_, other->_impl_.org_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[6]);
}

// ===================================================================

class UpdateOrgResponse::_Internal {
 public:
};

UpdateOrgResponse::UpdateOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateOrgResponse)
}
UpdateOrgResponse::UpdateOrgResponse(const UpdateOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[7]);
}

// ===================================================================

class AddAgentRequest::_Internal {
 public:
  static const ::city::economy::v2::Agent& agent(const AddAgentRequest* msg);
};

const ::city::economy::v2::Agent&
AddAgentRequest::_Internal::agent(const AddAgentRequest* msg) {
  return *msg->_impl_.agent_;
}
void AddAgentRequest::clear_agent() {
  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
}
AddAgentRequest::AddAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentRequest)
}
AddAgentRequest::AddAgentRequest(const AddAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_agent()) {
    _this->_impl_.agent_ = new ::city::economy::v2::Agent(*from._impl_.agent_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentRequest)
}

inline void AddAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentRequest::~AddAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.agent_;
}

void AddAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::agent(this),
        _Internal::agent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddAgentRequest)
  return target;
}

size_t AddAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.agent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentRequest::GetClassData() const { return &_class_data_; }


void AddAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentRequest*>(&to_msg);
  auto& from = static_cast<const AddAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_agent()) {
    _this->_internal_mutable_agent()->::city::economy::v2::Agent::MergeFrom(
        from._internal_agent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentRequest::CopyFrom(const AddAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentRequest::IsInitialized() const {
  return true;
}

void AddAgentRequest::InternalSwap(AddAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[8]);
}

// ===================================================================

class AddAgentResponse::_Internal {
 public:
};

AddAgentResponse::AddAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentResponse)
}
AddAgentResponse::AddAgentResponse(const AddAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[9]);
}

// ===================================================================

class RemoveAgentRequest::_Internal {
 public:
};

RemoveAgentRequest::RemoveAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentRequest)
}
RemoveAgentRequest::RemoveAgentRequest(const RemoveAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentRequest)
}

inline void RemoveAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveAgentRequest::~RemoveAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveAgentRequest)
  return target;
}

size_t RemoveAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentRequest::GetClassData() const { return &_class_data_; }


void RemoveAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveAgentRequest*>(&to_msg);
  auto& from = static_cast<const RemoveAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveAgentRequest::CopyFrom(const RemoveAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAgentRequest::IsInitialized() const {
  return true;
}

void RemoveAgentRequest::InternalSwap(RemoveAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[10]);
}

// ===================================================================

class RemoveAgentResponse::_Internal {
 public:
};

RemoveAgentResponse::RemoveAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentResponse)
}
RemoveAgentResponse::RemoveAgentResponse(const RemoveAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[11]);
}

// ===================================================================

class GetAgentRequest::_Internal {
 public:
};

GetAgentRequest::GetAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetAgentRequest)
}
GetAgentRequest::GetAgentRequest(const GetAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetAgentRequest)
}

inline void GetAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentRequest::~GetAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetAgentRequest)
  return target;
}

size_t GetAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentRequest::GetClassData() const { return &_class_data_; }


void GetAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentRequest*>(&to_msg);
  auto& from = static_cast<const GetAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentRequest::CopyFrom(const GetAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentRequest::IsInitialized() const {
  return true;
}

void GetAgentRequest::InternalSwap(GetAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[12]);
}

// ===================================================================

class GetAgentResponse::_Internal {
 public:
  static const ::city::economy::v2::Agent& agent(const GetAgentResponse* msg);
};

const ::city::economy::v2::Agent&
GetAgentResponse::_Internal::agent(const GetAgentResponse* msg) {
  return *msg->_impl_.agent_;
}
void GetAgentResponse::clear_agent() {
  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
}
GetAgentResponse::GetAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetAgentResponse)
}
GetAgentResponse::GetAgentResponse(const GetAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_agent()) {
    _this->_impl_.agent_ = new ::city::economy::v2::Agent(*from._impl_.agent_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetAgentResponse)
}

inline void GetAgentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentResponse::~GetAgentResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetAgentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.agent_;
}

void GetAgentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::agent(this),
        _Internal::agent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetAgentResponse)
  return target;
}

size_t GetAgentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetAgentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.agent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentResponse::GetClassData() const { return &_class_data_; }


void GetAgentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentResponse*>(&to_msg);
  auto& from = static_cast<const GetAgentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetAgentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_agent()) {
    _this->_internal_mutable_agent()->::city::economy::v2::Agent::MergeFrom(
        from._internal_agent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentResponse::CopyFrom(const GetAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentResponse::IsInitialized() const {
  return true;
}

void GetAgentResponse::InternalSwap(GetAgentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[13]);
}

// ===================================================================

class UpdateAgentRequest::_Internal {
 public:
  static const ::city::economy::v2::Agent& agent(const UpdateAgentRequest* msg);
};

const ::city::economy::v2::Agent&
UpdateAgentRequest::_Internal::agent(const UpdateAgentRequest* msg) {
  return *msg->_impl_.agent_;
}
void UpdateAgentRequest::clear_agent() {
  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
}
UpdateAgentRequest::UpdateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateAgentRequest)
}
UpdateAgentRequest::UpdateAgentRequest(const UpdateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_agent()) {
    _this->_impl_.agent_ = new ::city::economy::v2::Agent(*from._impl_.agent_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateAgentRequest)
}

inline void UpdateAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateAgentRequest::~UpdateAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.agent_;
}

void UpdateAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::agent(this),
        _Internal::agent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateAgentRequest)
  return target;
}

size_t UpdateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.agent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAgentRequest::GetClassData() const { return &_class_data_; }


void UpdateAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateAgentRequest*>(&to_msg);
  auto& from = static_cast<const UpdateAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_agent()) {
    _this->_internal_mutable_agent()->::city::economy::v2::Agent::MergeFrom(
        from._internal_agent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAgentRequest::CopyFrom(const UpdateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAgentRequest::IsInitialized() const {
  return true;
}

void UpdateAgentRequest::InternalSwap(UpdateAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[14]);
}

// ===================================================================

class UpdateAgentResponse::_Internal {
 public:
};

UpdateAgentResponse::UpdateAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateAgentResponse)
}
UpdateAgentResponse::UpdateAgentResponse(const UpdateAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[15]);
}

// ===================================================================

class CalculateTaxesDueRequest::_Internal {
 public:
};

CalculateTaxesDueRequest::CalculateTaxesDueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueRequest)
}
CalculateTaxesDueRequest::CalculateTaxesDueRequest(const CalculateTaxesDueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){from._impl_.incomes_}
    , decltype(_impl_.government_id_){}
    , decltype(_impl_.enable_redistribution_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.government_id_, &from._impl_.government_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
    reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueRequest)
}

inline void CalculateTaxesDueRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){arena}
    , decltype(_impl_.government_id_){0}
    , decltype(_impl_.enable_redistribution_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueRequest::~CalculateTaxesDueRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.incomes_.~RepeatedField();
}

void CalculateTaxesDueRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.incomes_.Clear();
  ::memset(&_impl_.government_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
      reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float incomes = 3 [json_name = "incomes"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 29) {
          _internal_add_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.enable_redistribution_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  if (this->_internal_incomes_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_incomes(), target);
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_enable_redistribution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueRequest)
  return target;
}

size_t CalculateTaxesDueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueRequest::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueRequest*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.incomes_.MergeFrom(from._impl_.incomes_);
  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  if (from._internal_enable_redistribution() != 0) {
    _this->_internal_set_enable_redistribution(from._internal_enable_redistribution());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueRequest::CopyFrom(const CalculateTaxesDueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueRequest::IsInitialized() const {
  return true;
}

void CalculateTaxesDueRequest::InternalSwap(CalculateTaxesDueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.incomes_.InternalSwap(&other->_impl_.incomes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.enable_redistribution_)
      + sizeof(CalculateTaxesDueRequest::_impl_.enable_redistribution_)
      - PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.government_id_)>(
          reinterpret_cast<char*>(&_impl_.government_id_),
          reinterpret_cast<char*>(&other->_impl_.government_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[16]);
}

// ===================================================================

class CalculateTaxesDueResponse::_Internal {
 public:
};

CalculateTaxesDueResponse::CalculateTaxesDueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueResponse)
}
CalculateTaxesDueResponse::CalculateTaxesDueResponse(const CalculateTaxesDueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){from._impl_.updated_incomes_}
    , decltype(_impl_.taxes_due_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.taxes_due_ = from._impl_.taxes_due_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueResponse)
}

inline void CalculateTaxesDueResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){arena}
    , decltype(_impl_.taxes_due_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueResponse::~CalculateTaxesDueResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_incomes_.~RepeatedField();
}

void CalculateTaxesDueResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_incomes_.Clear();
  _impl_.taxes_due_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float taxes_due = 1 [json_name = "taxesDue"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.taxes_due_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_taxes_due(), target);
  }

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  if (this->_internal_updated_incomes_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_incomes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueResponse)
  return target;
}

size_t CalculateTaxesDueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueResponse::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueResponse*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_incomes_.MergeFrom(from._impl_.updated_incomes_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = from._internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    _this->_internal_set_taxes_due(from._internal_taxes_due());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueResponse::CopyFrom(const CalculateTaxesDueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueResponse::IsInitialized() const {
  return true;
}

void CalculateTaxesDueResponse::InternalSwap(CalculateTaxesDueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_incomes_.InternalSwap(&other->_impl_.updated_incomes_);
  swap(_impl_.taxes_due_, other->_impl_.taxes_due_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[17]);
}

// ===================================================================

class CalculateConsumptionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CalculateConsumptionRequest>()._impl_._has_bits_);
  static void set_has_consumption_accumulation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CalculateConsumptionRequest::CalculateConsumptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionRequest)
}
CalculateConsumptionRequest::CalculateConsumptionRequest(const CalculateConsumptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){from._impl_.demands_}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.consumption_accumulation_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.agent_id_, &from._impl_.agent_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.consumption_accumulation_) -
    reinterpret_cast<char*>(&_impl_.agent_id_)) + sizeof(_impl_.consumption_accumulation_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionRequest)
}

inline void CalculateConsumptionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){arena}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_id_){0}
    , decltype(_impl_.consumption_accumulation_){false}
  };
}

CalculateConsumptionRequest::~CalculateConsumptionRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
  _impl_.demands_.~RepeatedField();
}

void CalculateConsumptionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _impl_.demands_.Clear();
  _impl_.agent_id_ = 0;
  _impl_.consumption_accumulation_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 agent_id = 2 [json_name = "agentId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 demands = 3 [json_name = "demands"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_demands(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_demands(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_consumption_accumulation(&has_bits);
          _impl_.consumption_accumulation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  // int32 agent_id = 2 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_agent_id(), target);
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    int byte_size = _impl_._demands_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_demands(), byte_size, target);
    }
  }

  // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
  if (_internal_has_consumption_accumulation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_consumption_accumulation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionRequest)
  return target;
}

size_t CalculateConsumptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.demands_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._demands_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 agent_id = 2 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionRequest::GetClassData() const { return &_class_data_; }


void CalculateConsumptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionRequest*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_impl_.demands_.MergeFrom(from._impl_.demands_);
  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (from._internal_has_consumption_accumulation()) {
    _this->_internal_set_consumption_accumulation(from._internal_consumption_accumulation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionRequest::CopyFrom(const CalculateConsumptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionRequest::IsInitialized() const {
  return true;
}

void CalculateConsumptionRequest::InternalSwap(CalculateConsumptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
  _impl_.demands_.InternalSwap(&other->_impl_.demands_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateConsumptionRequest, _impl_.consumption_accumulation_)
      + sizeof(CalculateConsumptionRequest::_impl_.consumption_accumulation_)
      - PROTOBUF_FIELD_OFFSET(CalculateConsumptionRequest, _impl_.agent_id_)>(
          reinterpret_cast<char*>(&_impl_.agent_id_),
          reinterpret_cast<char*>(&other->_impl_.agent_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[18]);
}

// ===================================================================

class CalculateConsumptionResponse::_Internal {
 public:
};

CalculateConsumptionResponse::CalculateConsumptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionResponse)
}
CalculateConsumptionResponse::CalculateConsumptionResponse(const CalculateConsumptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.actual_consumption_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.actual_consumption_, &from._impl_.actual_consumption_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.actual_consumption_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionResponse)
}

inline void CalculateConsumptionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.actual_consumption_){0}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateConsumptionResponse::~CalculateConsumptionResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateConsumptionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.actual_consumption_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.actual_consumption_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float actual_consumption = 1 [json_name = "actualConsumption"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.actual_consumption_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2 [json_name = "success"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float actual_consumption = 1 [json_name = "actualConsumption"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = this->_internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_actual_consumption(), target);
  }

  // bool success = 2 [json_name = "success"];
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionResponse)
  return target;
}

size_t CalculateConsumptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float actual_consumption = 1 [json_name = "actualConsumption"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = this->_internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    total_size += 1 + 4;
  }

  // bool success = 2 [json_name = "success"];
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionResponse::GetClassData() const { return &_class_data_; }


void CalculateConsumptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionResponse*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = from._internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    _this->_internal_set_actual_consumption(from._internal_actual_consumption());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionResponse::CopyFrom(const CalculateConsumptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionResponse::IsInitialized() const {
  return true;
}

void CalculateConsumptionResponse::InternalSwap(CalculateConsumptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateConsumptionResponse, _impl_.success_)
      + sizeof(CalculateConsumptionResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CalculateConsumptionResponse, _impl_.actual_consumption_)>(
          reinterpret_cast<char*>(&_impl_.actual_consumption_),
          reinterpret_cast<char*>(&other->_impl_.actual_consumption_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[19]);
}

// ===================================================================

class CalculateInterestRequest::_Internal {
 public:
};

CalculateInterestRequest::CalculateInterestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestRequest)
}
CalculateInterestRequest::CalculateInterestRequest(const CalculateInterestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bank_id_ = from._impl_.bank_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestRequest)
}

inline void CalculateInterestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestRequest::~CalculateInterestRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void CalculateInterestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.bank_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestRequest)
  return target;
}

size_t CalculateInterestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestRequest::GetClassData() const { return &_class_data_; }


void CalculateInterestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestRequest*>(&to_msg);
  auto& from = static_cast<const CalculateInterestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestRequest::CopyFrom(const CalculateInterestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestRequest::IsInitialized() const {
  return true;
}

void CalculateInterestRequest::InternalSwap(CalculateInterestRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  swap(_impl_.bank_id_, other->_impl_.bank_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[20]);
}

// ===================================================================

class CalculateInterestResponse::_Internal {
 public:
};

CalculateInterestResponse::CalculateInterestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestResponse)
}
CalculateInterestResponse::CalculateInterestResponse(const CalculateInterestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){from._impl_.updated_currencies_}
    , decltype(_impl_.total_interest_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.total_interest_ = from._impl_.total_interest_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestResponse)
}

inline void CalculateInterestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){arena}
    , decltype(_impl_.total_interest_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestResponse::~CalculateInterestResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_currencies_.~RepeatedField();
}

void CalculateInterestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_currencies_.Clear();
  _impl_.total_interest_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float total_interest = 1 [json_name = "totalInterest"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.total_interest_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_currencies(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_currencies(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_total_interest(), target);
  }

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  if (this->_internal_updated_currencies_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_currencies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestResponse)
  return target;
}

size_t CalculateInterestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_currencies_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestResponse::GetClassData() const { return &_class_data_; }


void CalculateInterestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestResponse*>(&to_msg);
  auto& from = static_cast<const CalculateInterestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_currencies_.MergeFrom(from._impl_.updated_currencies_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = from._internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    _this->_internal_set_total_interest(from._internal_total_interest());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestResponse::CopyFrom(const CalculateInterestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestResponse::IsInitialized() const {
  return true;
}

void CalculateInterestResponse::InternalSwap(CalculateInterestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_currencies_.InternalSwap(&other->_impl_.updated_currencies_);
  swap(_impl_.total_interest_, other->_impl_.total_interest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[21]);
}

// ===================================================================

class CalculateRealGDPRequest::_Internal {
 public:
};

CalculateRealGDPRequest::CalculateRealGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateRealGDPRequest)
}
CalculateRealGDPRequest::CalculateRealGDPRequest(const CalculateRealGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateRealGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.nbs_agent_id_ = from._impl_.nbs_agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateRealGDPRequest)
}

inline void CalculateRealGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateRealGDPRequest::~CalculateRealGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateRealGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateRealGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateRealGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateRealGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateRealGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nbs_agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateRealGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nbs_agent_id = 1 [json_name = "nbsAgentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nbs_agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateRealGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateRealGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nbs_agent_id = 1 [json_name = "nbsAgentId"];
  if (this->_internal_nbs_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nbs_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateRealGDPRequest)
  return target;
}

size_t CalculateRealGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateRealGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 nbs_agent_id = 1 [json_name = "nbsAgentId"];
  if (this->_internal_nbs_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nbs_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateRealGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateRealGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateRealGDPRequest::GetClassData() const { return &_class_data_; }


void CalculateRealGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateRealGDPRequest*>(&to_msg);
  auto& from = static_cast<const CalculateRealGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateRealGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nbs_agent_id() != 0) {
    _this->_internal_set_nbs_agent_id(from._internal_nbs_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateRealGDPRequest::CopyFrom(const CalculateRealGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateRealGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateRealGDPRequest::IsInitialized() const {
  return true;
}

void CalculateRealGDPRequest::InternalSwap(CalculateRealGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_agent_id_, other->_impl_.nbs_agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateRealGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[22]);
}

// ===================================================================

class CalculateRealGDPResponse::_Internal {
 public:
};

CalculateRealGDPResponse::CalculateRealGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateRealGDPResponse)
}
CalculateRealGDPResponse::CalculateRealGDPResponse(const CalculateRealGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateRealGDPResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.real_gdp_ = from._impl_.real_gdp_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateRealGDPResponse)
}

inline void CalculateRealGDPResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateRealGDPResponse::~CalculateRealGDPResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateRealGDPResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateRealGDPResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateRealGDPResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateRealGDPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateRealGDPResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_gdp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateRealGDPResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float real_gdp = 1 [json_name = "realGdp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.real_gdp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateRealGDPResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateRealGDPResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float real_gdp = 1 [json_name = "realGdp"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = this->_internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_real_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateRealGDPResponse)
  return target;
}

size_t CalculateRealGDPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateRealGDPResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float real_gdp = 1 [json_name = "realGdp"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = this->_internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateRealGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateRealGDPResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateRealGDPResponse::GetClassData() const { return &_class_data_; }


void CalculateRealGDPResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateRealGDPResponse*>(&to_msg);
  auto& from = static_cast<const CalculateRealGDPResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateRealGDPResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = from._internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    _this->_internal_set_real_gdp(from._internal_real_gdp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateRealGDPResponse::CopyFrom(const CalculateRealGDPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateRealGDPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateRealGDPResponse::IsInitialized() const {
  return true;
}

void CalculateRealGDPResponse::InternalSwap(CalculateRealGDPResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.real_gdp_, other->_impl_.real_gdp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateRealGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[23]);
}

// ===================================================================

class BatchGetRequest::_Internal {
 public:
};

BatchGetRequest::BatchGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchGetRequest)
}
BatchGetRequest::BatchGetRequest(const BatchGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchGetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){from._impl_.ids_}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchGetRequest)
}

inline void BatchGetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ids_){arena}
    , /*decltype(_impl_._ids_cached_byte_size_)*/{0}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BatchGetRequest::~BatchGetRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.BatchGetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ids_.~RepeatedField();
  _impl_.type_.Destroy();
}

void BatchGetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.BatchGetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchGetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 ids = 1 [json_name = "ids"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string type = 2 [json_name = "type"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.BatchGetRequest.type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchGetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.BatchGetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 ids = 1 [json_name = "ids"];
  {
    int byte_size = _impl_._ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.BatchGetRequest.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.BatchGetRequest)
  return target;
}

size_t BatchGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.BatchGetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 ids = 1 [json_name = "ids"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string type = 2 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchGetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchGetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchGetRequest::GetClassData() const { return &_class_data_; }


void BatchGetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchGetRequest*>(&to_msg);
  auto& from = static_cast<const BatchGetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.BatchGetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ids_.MergeFrom(from._impl_.ids_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchGetRequest::CopyFrom(const BatchGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.BatchGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetRequest::IsInitialized() const {
  return true;
}

void BatchGetRequest::InternalSwap(BatchGetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchGetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[24]);
}

// ===================================================================

class BatchGetResponse::_Internal {
 public:
};

void BatchGetResponse::clear_orgs() {
  _impl_.orgs_.Clear();
}
void BatchGetResponse::clear_agents() {
  _impl_.agents_.Clear();
}
BatchGetResponse::BatchGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchGetResponse)
}
BatchGetResponse::BatchGetResponse(const BatchGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchGetResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){from._impl_.orgs_}
    , decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchGetResponse)
}

inline void BatchGetResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){arena}
    , decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchGetResponse::~BatchGetResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.BatchGetResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orgs_.~RepeatedPtrField();
  _impl_.agents_.~RepeatedPtrField();
}

void BatchGetResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.BatchGetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orgs_.Clear();
  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchGetResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchGetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.BatchGetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.BatchGetResponse)
  return target;
}

size_t BatchGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.BatchGetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->_impl_.orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchGetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchGetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchGetResponse::GetClassData() const { return &_class_data_; }


void BatchGetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchGetResponse*>(&to_msg);
  auto& from = static_cast<const BatchGetResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.BatchGetResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.orgs_.MergeFrom(from._impl_.orgs_);
  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchGetResponse::CopyFrom(const BatchGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.BatchGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetResponse::IsInitialized() const {
  return true;
}

void BatchGetResponse::InternalSwap(BatchGetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orgs_.InternalSwap(&other->_impl_.orgs_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchGetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[25]);
}

// ===================================================================

class BatchUpdateRequest::_Internal {
 public:
};

void BatchUpdateRequest::clear_orgs() {
  _impl_.orgs_.Clear();
}
void BatchUpdateRequest::clear_agents() {
  _impl_.agents_.Clear();
}
BatchUpdateRequest::BatchUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchUpdateRequest)
}
BatchUpdateRequest::BatchUpdateRequest(const BatchUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchUpdateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){from._impl_.orgs_}
    , decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchUpdateRequest)
}

inline void BatchUpdateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){arena}
    , decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchUpdateRequest::~BatchUpdateRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.BatchUpdateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchUpdateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orgs_.~RepeatedPtrField();
  _impl_.agents_.~RepeatedPtrField();
}

void BatchUpdateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.BatchUpdateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orgs_.Clear();
  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchUpdateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchUpdateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.BatchUpdateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.BatchUpdateRequest)
  return target;
}

size_t BatchUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.BatchUpdateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->_impl_.orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchUpdateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchUpdateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchUpdateRequest::GetClassData() const { return &_class_data_; }


void BatchUpdateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchUpdateRequest*>(&to_msg);
  auto& from = static_cast<const BatchUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.BatchUpdateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.orgs_.MergeFrom(from._impl_.orgs_);
  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchUpdateRequest::CopyFrom(const BatchUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.BatchUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchUpdateRequest::IsInitialized() const {
  return true;
}

void BatchUpdateRequest::InternalSwap(BatchUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orgs_.InternalSwap(&other->_impl_.orgs_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[26]);
}

// ===================================================================

class BatchUpdateResponse::_Internal {
 public:
};

BatchUpdateResponse::BatchUpdateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchUpdateResponse)
}
BatchUpdateResponse::BatchUpdateResponse(const BatchUpdateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  BatchUpdateResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchUpdateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchUpdateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchUpdateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BatchUpdateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[27]);
}

// ===================================================================

class BatchSetRequest::_Internal {
 public:
};

void BatchSetRequest::clear_orgs() {
  _impl_.orgs_.Clear();
}
void BatchSetRequest::clear_agents() {
  _impl_.agents_.Clear();
}
BatchSetRequest::BatchSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchSetRequest)
}
BatchSetRequest::BatchSetRequest(const BatchSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchSetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){from._impl_.orgs_}
    , decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchSetRequest)
}

inline void BatchSetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){arena}
    , decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchSetRequest::~BatchSetRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.BatchSetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchSetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orgs_.~RepeatedPtrField();
  _impl_.agents_.~RepeatedPtrField();
}

void BatchSetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.BatchSetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orgs_.Clear();
  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchSetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchSetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.BatchSetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.BatchSetRequest)
  return target;
}

size_t BatchSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.BatchSetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Org orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->_impl_.orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .city.economy.v2.Agent agents = 2 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchSetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchSetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchSetRequest::GetClassData() const { return &_class_data_; }


void BatchSetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchSetRequest*>(&to_msg);
  auto& from = static_cast<const BatchSetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.BatchSetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.orgs_.MergeFrom(from._impl_.orgs_);
  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchSetRequest::CopyFrom(const BatchSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.BatchSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchSetRequest::IsInitialized() const {
  return true;
}

void BatchSetRequest::InternalSwap(BatchSetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orgs_.InternalSwap(&other->_impl_.orgs_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchSetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[28]);
}

// ===================================================================

class BatchSetResponse::_Internal {
 public:
};

BatchSetResponse::BatchSetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchSetResponse)
}
BatchSetResponse::BatchSetResponse(const BatchSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  BatchSetResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchSetResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchSetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchSetResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BatchSetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[29]);
}

// ===================================================================

class DeltaUpdateOrgRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DeltaUpdateOrgRequest>()._impl_._has_bits_);
  static void set_has_delta_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_delta_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delta_interest_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_delta_demand(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_delta_sales(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

DeltaUpdateOrgRequest::DeltaUpdateOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateOrgRequest)
}
DeltaUpdateOrgRequest::DeltaUpdateOrgRequest(const DeltaUpdateOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delta_nominal_gdp_){from._impl_.delta_nominal_gdp_}
    , decltype(_impl_.delta_real_gdp_){from._impl_.delta_real_gdp_}
    , decltype(_impl_.delta_unemployment_){from._impl_.delta_unemployment_}
    , decltype(_impl_.delta_wages_){from._impl_.delta_wages_}
    , decltype(_impl_.delta_prices_){from._impl_.delta_prices_}
    , decltype(_impl_.delta_bracket_cutoffs_){from._impl_.delta_bracket_cutoffs_}
    , decltype(_impl_.delta_bracket_rates_){from._impl_.delta_bracket_rates_}
    , decltype(_impl_.add_employees_){from._impl_.add_employees_}
    , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_employees_){from._impl_.remove_employees_}
    , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.add_citizens_){from._impl_.add_citizens_}
    , /*decltype(_impl_._add_citizens_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizens_){from._impl_.remove_citizens_}
    , /*decltype(_impl_._remove_citizens_cached_byte_size_)*/{0}
    , decltype(_impl_.delta_consumption_currency_){from._impl_.delta_consumption_currency_}
    , decltype(_impl_.delta_consumption_propensity_){from._impl_.delta_consumption_propensity_}
    , decltype(_impl_.delta_income_currency_){from._impl_.delta_income_currency_}
    , decltype(_impl_.delta_depression_){from._impl_.delta_depression_}
    , decltype(_impl_.delta_locus_control_){from._impl_.delta_locus_control_}
    , decltype(_impl_.delta_working_hours_){from._impl_.delta_working_hours_}
    , decltype(_impl_.org_id_){}
    , decltype(_impl_.delta_inventory_){}
    , decltype(_impl_.delta_price_){}
    , decltype(_impl_.delta_currency_){}
    , decltype(_impl_.delta_interest_rate_){}
    , decltype(_impl_.delta_demand_){}
    , decltype(_impl_.delta_sales_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.org_id_, &from._impl_.org_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_sales_) -
    reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.delta_sales_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateOrgRequest)
}

inline void DeltaUpdateOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delta_nominal_gdp_){arena}
    , decltype(_impl_.delta_real_gdp_){arena}
    , decltype(_impl_.delta_unemployment_){arena}
    , decltype(_impl_.delta_wages_){arena}
    , decltype(_impl_.delta_prices_){arena}
    , decltype(_impl_.delta_bracket_cutoffs_){arena}
    , decltype(_impl_.delta_bracket_rates_){arena}
    , decltype(_impl_.add_employees_){arena}
    , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_employees_){arena}
    , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.add_citizens_){arena}
    , /*decltype(_impl_._add_citizens_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizens_){arena}
    , /*decltype(_impl_._remove_citizens_cached_byte_size_)*/{0}
    , decltype(_impl_.delta_consumption_currency_){arena}
    , decltype(_impl_.delta_consumption_propensity_){arena}
    , decltype(_impl_.delta_income_currency_){arena}
    , decltype(_impl_.delta_depression_){arena}
    , decltype(_impl_.delta_locus_control_){arena}
    , decltype(_impl_.delta_working_hours_){arena}
    , decltype(_impl_.org_id_){0}
    , decltype(_impl_.delta_inventory_){0}
    , decltype(_impl_.delta_price_){0}
    , decltype(_impl_.delta_currency_){0}
    , decltype(_impl_.delta_interest_rate_){0}
    , decltype(_impl_.delta_demand_){0}
    , decltype(_impl_.delta_sales_){0}
  };
}

DeltaUpdateOrgRequest::~DeltaUpdateOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delta_nominal_gdp_.~RepeatedField();
  _impl_.delta_real_gdp_.~RepeatedField();
  _impl_.delta_unemployment_.~RepeatedField();
  _impl_.delta_wages_.~RepeatedField();
  _impl_.delta_prices_.~RepeatedField();
  _impl_.delta_bracket_cutoffs_.~RepeatedField();
  _impl_.delta_bracket_rates_.~RepeatedField();
  _impl_.add_employees_.~RepeatedField();
  _impl_.remove_employees_.~RepeatedField();
  _impl_.add_citizens_.~RepeatedField();
  _impl_.remove_citizens_.~RepeatedField();
  _impl_.delta_consumption_currency_.~RepeatedField();
  _impl_.delta_consumption_propensity_.~RepeatedField();
  _impl_.delta_income_currency_.~RepeatedField();
  _impl_.delta_depression_.~RepeatedField();
  _impl_.delta_locus_control_.~RepeatedField();
  _impl_.delta_working_hours_.~RepeatedField();
}

void DeltaUpdateOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delta_nominal_gdp_.Clear();
  _impl_.delta_real_gdp_.Clear();
  _impl_.delta_unemployment_.Clear();
  _impl_.delta_wages_.Clear();
  _impl_.delta_prices_.Clear();
  _impl_.delta_bracket_cutoffs_.Clear();
  _impl_.delta_bracket_rates_.Clear();
  _impl_.add_employees_.Clear();
  _impl_.remove_employees_.Clear();
  _impl_.add_citizens_.Clear();
  _impl_.remove_citizens_.Clear();
  _impl_.delta_consumption_currency_.Clear();
  _impl_.delta_consumption_propensity_.Clear();
  _impl_.delta_income_currency_.Clear();
  _impl_.delta_depression_.Clear();
  _impl_.delta_locus_control_.Clear();
  _impl_.delta_working_hours_.Clear();
  _impl_.org_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.delta_inventory_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_sales_) -
        reinterpret_cast<char*>(&_impl_.delta_inventory_)) + sizeof(_impl_.delta_sales_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_nominal_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_delta_nominal_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_real_gdp = 3 [json_name = "deltaRealGdp"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_real_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 29) {
          _internal_add_delta_real_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_unemployment = 4 [json_name = "deltaUnemployment"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_unemployment(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 37) {
          _internal_add_delta_unemployment(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_wages = 5 [json_name = "deltaWages"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_wages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 45) {
          _internal_add_delta_wages(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_prices = 6 [json_name = "deltaPrices"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_prices(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 53) {
          _internal_add_delta_prices(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 delta_inventory = 7 [json_name = "deltaInventory"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_delta_inventory(&has_bits);
          _impl_.delta_inventory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_price = 8 [json_name = "deltaPrice"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _Internal::set_has_delta_price(&has_bits);
          _impl_.delta_price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 9 [json_name = "deltaCurrency"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_interest_rate = 10 [json_name = "deltaInterestRate"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 85)) {
          _Internal::set_has_delta_interest_rate(&has_bits);
          _impl_.delta_interest_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_bracket_cutoffs = 11 [json_name = "deltaBracketCutoffs"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_bracket_cutoffs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 93) {
          _internal_add_delta_bracket_cutoffs(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_bracket_rates = 12 [json_name = "deltaBracketRates"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_bracket_rates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 101) {
          _internal_add_delta_bracket_rates(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 delta_demand = 13 [json_name = "deltaDemand"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_delta_demand(&has_bits);
          _impl_.delta_demand_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 delta_sales = 14 [json_name = "deltaSales"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_delta_sales(&has_bits);
          _impl_.delta_sales_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_employees = 15 [json_name = "addEmployees"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_employees(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 120) {
          _internal_add_add_employees(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_employees = 16 [json_name = "removeEmployees"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_employees(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 128) {
          _internal_add_remove_employees(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_citizens = 17 [json_name = "addCitizens"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_citizens(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 136) {
          _internal_add_add_citizens(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_citizens = 18 [json_name = "removeCitizens"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_citizens(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 144) {
          _internal_add_remove_citizens(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_consumption_currency = 19 [json_name = "deltaConsumptionCurrency"];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_consumption_currency(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 157) {
          _internal_add_delta_consumption_currency(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_consumption_propensity = 20 [json_name = "deltaConsumptionPropensity"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_consumption_propensity(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 165) {
          _internal_add_delta_consumption_propensity(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_income_currency = 21 [json_name = "deltaIncomeCurrency"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_income_currency(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 173) {
          _internal_add_delta_income_currency(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_depression = 22 [json_name = "deltaDepression"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_depression(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 181) {
          _internal_add_delta_depression(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_locus_control = 23 [json_name = "deltaLocusControl"];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_locus_control(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 189) {
          _internal_add_delta_locus_control(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_working_hours = 24 [json_name = "deltaWorkingHours"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_working_hours(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 197) {
          _internal_add_delta_working_hours(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
  if (this->_internal_delta_nominal_gdp_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_delta_nominal_gdp(), target);
  }

  // repeated float delta_real_gdp = 3 [json_name = "deltaRealGdp"];
  if (this->_internal_delta_real_gdp_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_delta_real_gdp(), target);
  }

  // repeated float delta_unemployment = 4 [json_name = "deltaUnemployment"];
  if (this->_internal_delta_unemployment_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_delta_unemployment(), target);
  }

  // repeated float delta_wages = 5 [json_name = "deltaWages"];
  if (this->_internal_delta_wages_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_delta_wages(), target);
  }

  // repeated float delta_prices = 6 [json_name = "deltaPrices"];
  if (this->_internal_delta_prices_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_delta_prices(), target);
  }

  // optional int32 delta_inventory = 7 [json_name = "deltaInventory"];
  if (_internal_has_delta_inventory()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_delta_inventory(), target);
  }

  // optional float delta_price = 8 [json_name = "deltaPrice"];
  if (_internal_has_delta_price()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_delta_price(), target);
  }

  // optional float delta_currency = 9 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(9, this->_internal_delta_currency(), target);
  }

  // optional float delta_interest_rate = 10 [json_name = "deltaInterestRate"];
  if (_internal_has_delta_interest_rate()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(10, this->_internal_delta_interest_rate(), target);
  }

  // repeated float delta_bracket_cutoffs = 11 [json_name = "deltaBracketCutoffs"];
  if (this->_internal_delta_bracket_cutoffs_size() > 0) {
    target = stream->WriteFixedPacked(11, _internal_delta_bracket_cutoffs(), target);
  }

  // repeated float delta_bracket_rates = 12 [json_name = "deltaBracketRates"];
  if (this->_internal_delta_bracket_rates_size() > 0) {
    target = stream->WriteFixedPacked(12, _internal_delta_bracket_rates(), target);
  }

  // optional int32 delta_demand = 13 [json_name = "deltaDemand"];
  if (_internal_has_delta_demand()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(13, this->_internal_delta_demand(), target);
  }

  // optional int32 delta_sales = 14 [json_name = "deltaSales"];
  if (_internal_has_delta_sales()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_delta_sales(), target);
  }

  // repeated int32 add_employees = 15 [json_name = "addEmployees"];
  {
    int byte_size = _impl_._add_employees_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          15, _internal_add_employees(), byte_size, target);
    }
  }

  // repeated int32 remove_employees = 16 [json_name = "removeEmployees"];
  {
    int byte_size = _impl_._remove_employees_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          16, _internal_remove_employees(), byte_size, target);
    }
  }

  // repeated int32 add_citizens = 17 [json_name = "addCitizens"];
  {
    int byte_size = _impl_._add_citizens_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          17, _internal_add_citizens(), byte_size, target);
    }
  }

  // repeated int32 remove_citizens = 18 [json_name = "removeCitizens"];
  {
    int byte_size = _impl_._remove_citizens_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          18, _internal_remove_citizens(), byte_size, target);
    }
  }

  // repeated float delta_consumption_currency = 19 [json_name = "deltaConsumptionCurrency"];
  if (this->_internal_delta_consumption_currency_size() > 0) {
    target = stream->WriteFixedPacked(19, _internal_delta_consumption_currency(), target);
  }

  // repeated float delta_consumption_propensity = 20 [json_name = "deltaConsumptionPropensity"];
  if (this->_internal_delta_consumption_propensity_size() > 0) {
    target = stream->WriteFixedPacked(20, _internal_delta_consumption_propensity(), target);
  }

  // repeated float delta_income_currency = 21 [json_name = "deltaIncomeCurrency"];
  if (this->_internal_delta_income_currency_size() > 0) {
    target = stream->WriteFixedPacked(21, _internal_delta_income_currency(), target);
  }

  // repeated float delta_depression = 22 [json_name = "deltaDepression"];
  if (this->_internal_delta_depression_size() > 0) {
    target = stream->WriteFixedPacked(22, _internal_delta_depression(), target);
  }

  // repeated float delta_locus_control = 23 [json_name = "deltaLocusControl"];
  if (this->_internal_delta_locus_control_size() > 0) {
    target = stream->WriteFixedPacked(23, _internal_delta_locus_control(), target);
  }

  // repeated float delta_working_hours = 24 [json_name = "deltaWorkingHours"];
  if (this->_internal_delta_working_hours_size() > 0) {
    target = stream->WriteFixedPacked(24, _internal_delta_working_hours(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateOrgRequest)
  return target;
}

size_t DeltaUpdateOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_nominal_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_real_gdp = 3 [json_name = "deltaRealGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_real_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_unemployment = 4 [json_name = "deltaUnemployment"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_unemployment_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_wages = 5 [json_name = "deltaWages"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_wages_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_prices = 6 [json_name = "deltaPrices"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_prices_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_bracket_cutoffs = 11 [json_name = "deltaBracketCutoffs"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_bracket_cutoffs_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_bracket_rates = 12 [json_name = "deltaBracketRates"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_bracket_rates_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated int32 add_employees = 15 [json_name = "addEmployees"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_employees_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_employees_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_employees = 16 [json_name = "removeEmployees"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_employees_);
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_employees_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 add_citizens = 17 [json_name = "addCitizens"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_citizens_);
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_citizens_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_citizens = 18 [json_name = "removeCitizens"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_citizens_);
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_citizens_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float delta_consumption_currency = 19 [json_name = "deltaConsumptionCurrency"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_consumption_currency_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_consumption_propensity = 20 [json_name = "deltaConsumptionPropensity"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_consumption_propensity_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_income_currency = 21 [json_name = "deltaIncomeCurrency"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_income_currency_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_depression = 22 [json_name = "deltaDepression"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_depression_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_locus_control = 23 [json_name = "deltaLocusControl"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_locus_control_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_working_hours = 24 [json_name = "deltaWorkingHours"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_working_hours_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional int32 delta_inventory = 7 [json_name = "deltaInventory"];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delta_inventory());
    }

    // optional float delta_price = 8 [json_name = "deltaPrice"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float delta_currency = 9 [json_name = "deltaCurrency"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float delta_interest_rate = 10 [json_name = "deltaInterestRate"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional int32 delta_demand = 13 [json_name = "deltaDemand"];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delta_demand());
    }

    // optional int32 delta_sales = 14 [json_name = "deltaSales"];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delta_sales());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateOrgRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateOrgRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.delta_nominal_gdp_.MergeFrom(from._impl_.delta_nominal_gdp_);
  _this->_impl_.delta_real_gdp_.MergeFrom(from._impl_.delta_real_gdp_);
  _this->_impl_.delta_unemployment_.MergeFrom(from._impl_.delta_unemployment_);
  _this->_impl_.delta_wages_.MergeFrom(from._impl_.delta_wages_);
  _this->_impl_.delta_prices_.MergeFrom(from._impl_.delta_prices_);
  _this->_impl_.delta_bracket_cutoffs_.MergeFrom(from._impl_.delta_bracket_cutoffs_);
  _this->_impl_.delta_bracket_rates_.MergeFrom(from._impl_.delta_bracket_rates_);
  _this->_impl_.add_employees_.MergeFrom(from._impl_.add_employees_);
  _this->_impl_.remove_employees_.MergeFrom(from._impl_.remove_employees_);
  _this->_impl_.add_citizens_.MergeFrom(from._impl_.add_citizens_);
  _this->_impl_.remove_citizens_.MergeFrom(from._impl_.remove_citizens_);
  _this->_impl_.delta_consumption_currency_.MergeFrom(from._impl_.delta_consumption_currency_);
  _this->_impl_.delta_consumption_propensity_.MergeFrom(from._impl_.delta_consumption_propensity_);
  _this->_impl_.delta_income_currency_.MergeFrom(from._impl_.delta_income_currency_);
  _this->_impl_.delta_depression_.MergeFrom(from._impl_.delta_depression_);
  _this->_impl_.delta_locus_control_.MergeFrom(from._impl_.delta_locus_control_);
  _this->_impl_.delta_working_hours_.MergeFrom(from._impl_.delta_working_hours_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delta_inventory_ = from._impl_.delta_inventory_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.delta_price_ = from._impl_.delta_price_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.delta_currency_ = from._impl_.delta_currency_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delta_interest_rate_ = from._impl_.delta_interest_rate_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.delta_demand_ = from._impl_.delta_demand_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.delta_sales_ = from._impl_.delta_sales_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateOrgRequest::CopyFrom(const DeltaUpdateOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateOrgRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateOrgRequest::InternalSwap(DeltaUpdateOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.delta_nominal_gdp_.InternalSwap(&other->_impl_.delta_nominal_gdp_);
  _impl_.delta_real_gdp_.InternalSwap(&other->_impl_.delta_real_gdp_);
  _impl_.delta_unemployment_.InternalSwap(&other->_impl_.delta_unemployment_);
  _impl_.delta_wages_.InternalSwap(&other->_impl_.delta_wages_);
  _impl_.delta_prices_.InternalSwap(&other->_impl_.delta_prices_);
  _impl_.delta_bracket_cutoffs_.InternalSwap(&other->_impl_.delta_bracket_cutoffs_);
  _impl_.delta_bracket_rates_.InternalSwap(&other->_impl_.delta_bracket_rates_);
  _impl_.add_employees_.InternalSwap(&other->_impl_.add_employees_);
  _impl_.remove_employees_.InternalSwap(&other->_impl_.remove_employees_);
  _impl_.add_citizens_.InternalSwap(&other->_impl_.add_citizens_);
  _impl_.remove_citizens_.InternalSwap(&other->_impl_.remove_citizens_);
  _impl_.delta_consumption_currency_.InternalSwap(&other->_impl_.delta_consumption_currency_);
  _impl_.delta_consumption_propensity_.InternalSwap(&other->_impl_.delta_consumption_propensity_);
  _impl_.delta_income_currency_.InternalSwap(&other->_impl_.delta_income_currency_);
  _impl_.delta_depression_.InternalSwap(&other->_impl_.delta_depression_);
  _impl_.delta_locus_control_.InternalSwap(&other->_impl_.delta_locus_control_);
  _impl_.delta_working_hours_.InternalSwap(&other->_impl_.delta_working_hours_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaUpdateOrgRequest, _impl_.delta_sales_)
      + sizeof(DeltaUpdateOrgRequest::_impl_.delta_sales_)
      - PROTOBUF_FIELD_OFFSET(DeltaUpdateOrgRequest, _impl_.org_id_)>(
          reinterpret_cast<char*>(&_impl_.org_id_),
          reinterpret_cast<char*>(&other->_impl_.org_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[30]);
}

// ===================================================================

class DeltaUpdateOrgResponse::_Internal {
 public:
};

DeltaUpdateOrgResponse::DeltaUpdateOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateOrgResponse)
}
DeltaUpdateOrgResponse::DeltaUpdateOrgResponse(const DeltaUpdateOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[31]);
}

// ===================================================================

class DeltaUpdateAgentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DeltaUpdateAgentRequest>()._impl_._has_bits_);
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_new_firm_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delta_skill(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delta_consumption(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_delta_income(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateAgentRequest)
}
DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(const DeltaUpdateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.delta_currency_){}
    , decltype(_impl_.new_firm_id_){}
    , decltype(_impl_.delta_skill_){}
    , decltype(_impl_.delta_consumption_){}
    , decltype(_impl_.delta_income_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.agent_id_, &from._impl_.agent_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_income_) -
    reinterpret_cast<char*>(&_impl_.agent_id_)) + sizeof(_impl_.delta_income_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateAgentRequest)
}

inline void DeltaUpdateAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.agent_id_){0}
    , decltype(_impl_.delta_currency_){0}
    , decltype(_impl_.new_firm_id_){0}
    , decltype(_impl_.delta_skill_){0}
    , decltype(_impl_.delta_consumption_){0}
    , decltype(_impl_.delta_income_){0}
  };
}

DeltaUpdateAgentRequest::~DeltaUpdateAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeltaUpdateAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.delta_currency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_income_) -
        reinterpret_cast<char*>(&_impl_.delta_currency_)) + sizeof(_impl_.delta_income_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 2 [json_name = "deltaCurrency"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_new_firm_id(&has_bits);
          _impl_.new_firm_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_skill = 4 [json_name = "deltaSkill"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_delta_skill(&has_bits);
          _impl_.delta_skill_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _Internal::set_has_delta_consumption(&has_bits);
          _impl_.delta_consumption_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_income = 6 [json_name = "deltaIncome"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _Internal::set_has_delta_income(&has_bits);
          _impl_.delta_income_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  // optional float delta_currency = 2 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_delta_currency(), target);
  }

  // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
  if (_internal_has_new_firm_id()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_new_firm_id(), target);
  }

  // optional float delta_skill = 4 [json_name = "deltaSkill"];
  if (_internal_has_delta_skill()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_delta_skill(), target);
  }

  // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
  if (_internal_has_delta_consumption()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_delta_consumption(), target);
  }

  // optional float delta_income = 6 [json_name = "deltaIncome"];
  if (_internal_has_delta_income()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_delta_income(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateAgentRequest)
  return target;
}

size_t DeltaUpdateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional float delta_currency = 2 [json_name = "deltaCurrency"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_new_firm_id());
    }

    // optional float delta_skill = 4 [json_name = "deltaSkill"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float delta_income = 6 [json_name = "deltaIncome"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateAgentRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateAgentRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delta_currency_ = from._impl_.delta_currency_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.new_firm_id_ = from._impl_.new_firm_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.delta_skill_ = from._impl_.delta_skill_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delta_consumption_ = from._impl_.delta_consumption_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.delta_income_ = from._impl_.delta_income_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateAgentRequest::CopyFrom(const DeltaUpdateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateAgentRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateAgentRequest::InternalSwap(DeltaUpdateAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaUpdateAgentRequest, _impl_.delta_income_)
      + sizeof(DeltaUpdateAgentRequest::_impl_.delta_income_)
      - PROTOBUF_FIELD_OFFSET(DeltaUpdateAgentRequest, _impl_.agent_id_)>(
          reinterpret_cast<char*>(&_impl_.agent_id_),
          reinterpret_cast<char*>(&other->_impl_.agent_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[32]);
}

// ===================================================================

class DeltaUpdateAgentResponse::_Internal {
 public:
};

DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateAgentResponse)
}
DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(const DeltaUpdateAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[33]);
}

// ===================================================================

class BatchDeltaUpdateRequest::_Internal {
 public:
};

BatchDeltaUpdateRequest::BatchDeltaUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchDeltaUpdateRequest)
}
BatchDeltaUpdateRequest::BatchDeltaUpdateRequest(const BatchDeltaUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BatchDeltaUpdateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){from._impl_.orgs_}
    , decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchDeltaUpdateRequest)
}

inline void BatchDeltaUpdateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orgs_){arena}
    , decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BatchDeltaUpdateRequest::~BatchDeltaUpdateRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.BatchDeltaUpdateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BatchDeltaUpdateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orgs_.~RepeatedPtrField();
  _impl_.agents_.~RepeatedPtrField();
}

void BatchDeltaUpdateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BatchDeltaUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.BatchDeltaUpdateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orgs_.Clear();
  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BatchDeltaUpdateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.DeltaUpdateOrgRequest orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .city.economy.v2.DeltaUpdateAgentRequest agents = 2 [json_name = "agents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BatchDeltaUpdateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.BatchDeltaUpdateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.DeltaUpdateOrgRequest orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .city.economy.v2.DeltaUpdateAgentRequest agents = 2 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.BatchDeltaUpdateRequest)
  return target;
}

size_t BatchDeltaUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.BatchDeltaUpdateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.DeltaUpdateOrgRequest orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->_impl_.orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .city.economy.v2.DeltaUpdateAgentRequest agents = 2 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchDeltaUpdateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BatchDeltaUpdateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchDeltaUpdateRequest::GetClassData() const { return &_class_data_; }


void BatchDeltaUpdateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BatchDeltaUpdateRequest*>(&to_msg);
  auto& from = static_cast<const BatchDeltaUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.BatchDeltaUpdateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.orgs_.MergeFrom(from._impl_.orgs_);
  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BatchDeltaUpdateRequest::CopyFrom(const BatchDeltaUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.BatchDeltaUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchDeltaUpdateRequest::IsInitialized() const {
  return true;
}

void BatchDeltaUpdateRequest::InternalSwap(BatchDeltaUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orgs_.InternalSwap(&other->_impl_.orgs_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchDeltaUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[34]);
}

// ===================================================================

class BatchDeltaUpdateResponse::_Internal {
 public:
};

BatchDeltaUpdateResponse::BatchDeltaUpdateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.BatchDeltaUpdateResponse)
}
BatchDeltaUpdateResponse::BatchDeltaUpdateResponse(const BatchDeltaUpdateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  BatchDeltaUpdateResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.BatchDeltaUpdateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BatchDeltaUpdateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BatchDeltaUpdateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BatchDeltaUpdateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[35]);
}

// ===================================================================

class SaveEconomyEntitiesRequest::_Internal {
 public:
};

SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}
SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(const SaveEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}

inline void SaveEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveEconomyEntitiesRequest::~SaveEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void SaveEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.SaveEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.SaveEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesRequest)
  return target;
}

size_t SaveEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesRequest::CopyFrom(const SaveEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesRequest::InternalSwap(SaveEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[36]);
}

// ===================================================================

class SaveEconomyEntitiesResponse::_Internal {
 public:
};

SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}
SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(const SaveEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_ids_){from._impl_.org_ids_}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}

inline void SaveEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_ids_){arena}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveEconomyEntitiesResponse::~SaveEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.org_ids_.~RepeatedField();
  _impl_.agent_ids_.~RepeatedField();
}

void SaveEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_ids_.Clear();
  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 org_ids = 1 [json_name = "orgIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_org_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_org_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 org_ids = 1 [json_name = "orgIds"];
  {
    int byte_size = _impl_._org_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_org_ids(), byte_size, target);
    }
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesResponse)
  return target;
}

size_t SaveEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 org_ids = 1 [json_name = "orgIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.org_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._org_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.org_ids_.MergeFrom(from._impl_.org_ids_);
  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesResponse::CopyFrom(const SaveEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesResponse::InternalSwap(SaveEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.org_ids_.InternalSwap(&other->_impl_.org_ids_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[37]);
}

// ===================================================================

class LoadEconomyEntitiesRequest::_Internal {
 public:
};

LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}
LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(const LoadEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}

inline void LoadEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadEconomyEntitiesRequest::~LoadEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void LoadEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.LoadEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.LoadEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesRequest)
  return target;
}

size_t LoadEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesRequest::CopyFrom(const LoadEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesRequest::InternalSwap(LoadEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[38]);
}

// ===================================================================

class LoadEconomyEntitiesResponse::_Internal {
 public:
};

LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}
LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(const LoadEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_ids_){from._impl_.org_ids_}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}

inline void LoadEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_ids_){arena}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoadEconomyEntitiesResponse::~LoadEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.org_ids_.~RepeatedField();
  _impl_.agent_ids_.~RepeatedField();
}

void LoadEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_ids_.Clear();
  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 org_ids = 1 [json_name = "orgIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_org_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_org_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 org_ids = 1 [json_name = "orgIds"];
  {
    int byte_size = _impl_._org_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_org_ids(), byte_size, target);
    }
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesResponse)
  return target;
}

size_t LoadEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 org_ids = 1 [json_name = "orgIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.org_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._org_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.org_ids_.MergeFrom(from._impl_.org_ids_);
  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesResponse::CopyFrom(const LoadEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesResponse::InternalSwap(LoadEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.org_ids_.InternalSwap(&other->_impl_.org_ids_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[39]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace economy
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateRealGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateRealGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateRealGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateRealGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateRealGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateRealGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchGetRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchGetResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchUpdateRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchUpdateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchUpdateResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchUpdateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchSetRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchSetResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchSetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchDeltaUpdateRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchDeltaUpdateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchDeltaUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::BatchDeltaUpdateResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::BatchDeltaUpdateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::BatchDeltaUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/economy/v2/org_service.proto

#include "city/economy/v2/org_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace economy {
namespace v2 {
PROTOBUF_CONSTEXPR AddFirmRequest::AddFirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddFirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFirmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFirmRequestDefaultTypeInternal() {}
  union {
    AddFirmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFirmRequestDefaultTypeInternal _AddFirmRequest_default_instance_;
PROTOBUF_CONSTEXPR AddFirmResponse::AddFirmResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddFirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFirmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFirmResponseDefaultTypeInternal() {}
  union {
    AddFirmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFirmResponseDefaultTypeInternal _AddFirmResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveFirmRequest::RemoveFirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveFirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFirmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFirmRequestDefaultTypeInternal() {}
  union {
    RemoveFirmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFirmRequestDefaultTypeInternal _RemoveFirmRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveFirmResponse::RemoveFirmResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveFirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFirmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFirmResponseDefaultTypeInternal() {}
  union {
    RemoveFirmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFirmResponseDefaultTypeInternal _RemoveFirmResponse_default_instance_;
PROTOBUF_CONSTEXPR GetFirmRequest::GetFirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFirmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFirmRequestDefaultTypeInternal() {}
  union {
    GetFirmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFirmRequestDefaultTypeInternal _GetFirmRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFirmResponse::GetFirmResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFirmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFirmResponseDefaultTypeInternal() {}
  union {
    GetFirmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFirmResponseDefaultTypeInternal _GetFirmResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateFirmRequest::UpdateFirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateFirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFirmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFirmRequestDefaultTypeInternal() {}
  union {
    UpdateFirmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFirmRequestDefaultTypeInternal _UpdateFirmRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateFirmResponse::UpdateFirmResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateFirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFirmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFirmResponseDefaultTypeInternal() {}
  union {
    UpdateFirmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFirmResponseDefaultTypeInternal _UpdateFirmResponse_default_instance_;
PROTOBUF_CONSTEXPR ListFirmsRequest::ListFirmsRequest(
    ::_pbi::ConstantInitialized) {}
struct ListFirmsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFirmsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFirmsRequestDefaultTypeInternal() {}
  union {
    ListFirmsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFirmsRequestDefaultTypeInternal _ListFirmsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListFirmsResponse::ListFirmsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListFirmsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFirmsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFirmsResponseDefaultTypeInternal() {}
  union {
    ListFirmsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFirmsResponseDefaultTypeInternal _ListFirmsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateFirmRequest::DeltaUpdateFirmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updates_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeltaUpdateFirmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateFirmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateFirmRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateFirmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateFirmRequestDefaultTypeInternal _DeltaUpdateFirmRequest_default_instance_;
PROTOBUF_CONSTEXPR FirmDeltaUpdate::FirmDeltaUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.add_employees_)*/{}
  , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_employees_)*/{}
  , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
  , /*decltype(_impl_.firm_id_)*/0
  , /*decltype(_impl_.delta_price_)*/0
  , /*decltype(_impl_.delta_inventory_)*/0
  , /*decltype(_impl_.delta_demand_)*/0
  , /*decltype(_impl_.delta_sales_)*/0
  , /*decltype(_impl_.delta_currency_)*/0} {}
struct FirmDeltaUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FirmDeltaUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FirmDeltaUpdateDefaultTypeInternal() {}
  union {
    FirmDeltaUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FirmDeltaUpdateDefaultTypeInternal _FirmDeltaUpdate_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateFirmResponse::DeltaUpdateFirmResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateFirmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateFirmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateFirmResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateFirmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateFirmResponseDefaultTypeInternal _DeltaUpdateFirmResponse_default_instance_;
PROTOBUF_CONSTEXPR AddNBSRequest::AddNBSRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddNBSRequestDefaultTypeInternal() {}
  union {
    AddNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddNBSRequestDefaultTypeInternal _AddNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR AddNBSResponse::AddNBSResponse(
    ::_pbi::ConstantInitialized) {}
struct AddNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddNBSResponseDefaultTypeInternal() {}
  union {
    AddNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddNBSResponseDefaultTypeInternal _AddNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveNBSRequest::RemoveNBSRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveNBSRequestDefaultTypeInternal() {}
  union {
    RemoveNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveNBSRequestDefaultTypeInternal _RemoveNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveNBSResponse::RemoveNBSResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveNBSResponseDefaultTypeInternal() {}
  union {
    RemoveNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveNBSResponseDefaultTypeInternal _RemoveNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR GetNBSRequest::GetNBSRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNBSRequestDefaultTypeInternal() {}
  union {
    GetNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNBSRequestDefaultTypeInternal _GetNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR GetNBSResponse::GetNBSResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNBSResponseDefaultTypeInternal() {}
  union {
    GetNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNBSResponseDefaultTypeInternal _GetNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateNBSRequest::UpdateNBSRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateNBSRequestDefaultTypeInternal() {}
  union {
    UpdateNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateNBSRequestDefaultTypeInternal _UpdateNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateNBSResponse::UpdateNBSResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateNBSResponseDefaultTypeInternal() {}
  union {
    UpdateNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateNBSResponseDefaultTypeInternal _UpdateNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR ListNBSRequest::ListNBSRequest(
    ::_pbi::ConstantInitialized) {}
struct ListNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListNBSRequestDefaultTypeInternal() {}
  union {
    ListNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListNBSRequestDefaultTypeInternal _ListNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR ListNBSResponse::ListNBSResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_list_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListNBSResponseDefaultTypeInternal() {}
  union {
    ListNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListNBSResponseDefaultTypeInternal _ListNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUseDefaultTypeInternal _DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSRequest::DeltaUpdateNBSRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delta_nominal_gdp_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_real_gdp_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_unemployment_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_wages_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_prices_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_working_hours_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_depression_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_consumption_currency_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_income_currency_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.delta_locus_control_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.add_citizen_ids_)*/{}
  , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_citizen_ids_)*/{}
  , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.add_citizen_agent_ids_)*/{}
  , /*decltype(_impl_._add_citizen_agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_citizen_agent_ids_)*/{}
  , /*decltype(_impl_._remove_citizen_agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.nbs_id_)*/0
  , /*decltype(_impl_.delta_currency_)*/0} {}
struct DeltaUpdateNBSRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSRequestDefaultTypeInternal _DeltaUpdateNBSRequest_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateNBSResponse::DeltaUpdateNBSResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateNBSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateNBSResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateNBSResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateNBSResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateNBSResponseDefaultTypeInternal _DeltaUpdateNBSResponse_default_instance_;
PROTOBUF_CONSTEXPR AddGovernmentRequest::AddGovernmentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.government_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddGovernmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddGovernmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddGovernmentRequestDefaultTypeInternal() {}
  union {
    AddGovernmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddGovernmentRequestDefaultTypeInternal _AddGovernmentRequest_default_instance_;
PROTOBUF_CONSTEXPR AddGovernmentResponse::AddGovernmentResponse(
    ::_pbi::ConstantInitialized) {}
struct AddGovernmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddGovernmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddGovernmentResponseDefaultTypeInternal() {}
  union {
    AddGovernmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddGovernmentResponseDefaultTypeInternal _AddGovernmentResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveGovernmentRequest::RemoveGovernmentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveGovernmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveGovernmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveGovernmentRequestDefaultTypeInternal() {}
  union {
    RemoveGovernmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveGovernmentRequestDefaultTypeInternal _RemoveGovernmentRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveGovernmentResponse::RemoveGovernmentResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveGovernmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveGovernmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveGovernmentResponseDefaultTypeInternal() {}
  union {
    RemoveGovernmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveGovernmentResponseDefaultTypeInternal _RemoveGovernmentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetGovernmentRequest::GetGovernmentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGovernmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGovernmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGovernmentRequestDefaultTypeInternal() {}
  union {
    GetGovernmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGovernmentRequestDefaultTypeInternal _GetGovernmentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetGovernmentResponse::GetGovernmentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.government_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGovernmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGovernmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGovernmentResponseDefaultTypeInternal() {}
  union {
    GetGovernmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGovernmentResponseDefaultTypeInternal _GetGovernmentResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateGovernmentRequest::UpdateGovernmentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.government_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateGovernmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateGovernmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateGovernmentRequestDefaultTypeInternal() {}
  union {
    UpdateGovernmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateGovernmentRequestDefaultTypeInternal _UpdateGovernmentRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateGovernmentResponse::UpdateGovernmentResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateGovernmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateGovernmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateGovernmentResponseDefaultTypeInternal() {}
  union {
    UpdateGovernmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateGovernmentResponseDefaultTypeInternal _UpdateGovernmentResponse_default_instance_;
PROTOBUF_CONSTEXPR ListGovernmentsRequest::ListGovernmentsRequest(
    ::_pbi::ConstantInitialized) {}
struct ListGovernmentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListGovernmentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListGovernmentsRequestDefaultTypeInternal() {}
  union {
    ListGovernmentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListGovernmentsRequestDefaultTypeInternal _ListGovernmentsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListGovernmentsResponse::ListGovernmentsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.governments_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListGovernmentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListGovernmentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListGovernmentsResponseDefaultTypeInternal() {}
  union {
    ListGovernmentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListGovernmentsResponseDefaultTypeInternal _ListGovernmentsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateGovernmentRequest::DeltaUpdateGovernmentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.delta_bracket_cutoffs_)*/{}
  , /*decltype(_impl_.delta_bracket_rates_)*/{}
  , /*decltype(_impl_.add_citizen_ids_)*/{}
  , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_citizen_ids_)*/{}
  , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_.delta_currency_)*/0} {}
struct DeltaUpdateGovernmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateGovernmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateGovernmentRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateGovernmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateGovernmentRequestDefaultTypeInternal _DeltaUpdateGovernmentRequest_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateGovernmentResponse::DeltaUpdateGovernmentResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateGovernmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateGovernmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateGovernmentResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateGovernmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateGovernmentResponseDefaultTypeInternal _DeltaUpdateGovernmentResponse_default_instance_;
PROTOBUF_CONSTEXPR AddBankRequest::AddBankRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bank_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddBankRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBankRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBankRequestDefaultTypeInternal() {}
  union {
    AddBankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBankRequestDefaultTypeInternal _AddBankRequest_default_instance_;
PROTOBUF_CONSTEXPR AddBankResponse::AddBankResponse(
    ::_pbi::ConstantInitialized) {}
struct AddBankResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBankResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBankResponseDefaultTypeInternal() {}
  union {
    AddBankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBankResponseDefaultTypeInternal _AddBankResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveBankRequest::RemoveBankRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveBankRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveBankRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveBankRequestDefaultTypeInternal() {}
  union {
    RemoveBankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveBankRequestDefaultTypeInternal _RemoveBankRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveBankResponse::RemoveBankResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveBankResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveBankResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveBankResponseDefaultTypeInternal() {}
  union {
    RemoveBankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveBankResponseDefaultTypeInternal _RemoveBankResponse_default_instance_;
PROTOBUF_CONSTEXPR GetBankRequest::GetBankRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBankRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBankRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBankRequestDefaultTypeInternal() {}
  union {
    GetBankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBankRequestDefaultTypeInternal _GetBankRequest_default_instance_;
PROTOBUF_CONSTEXPR GetBankResponse::GetBankResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bank_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBankResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBankResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBankResponseDefaultTypeInternal() {}
  union {
    GetBankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBankResponseDefaultTypeInternal _GetBankResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateBankRequest::UpdateBankRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bank_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateBankRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBankRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBankRequestDefaultTypeInternal() {}
  union {
    UpdateBankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBankRequestDefaultTypeInternal _UpdateBankRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateBankResponse::UpdateBankResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateBankResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBankResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBankResponseDefaultTypeInternal() {}
  union {
    UpdateBankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBankResponseDefaultTypeInternal _UpdateBankResponse_default_instance_;
PROTOBUF_CONSTEXPR ListBanksRequest::ListBanksRequest(
    ::_pbi::ConstantInitialized) {}
struct ListBanksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBanksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBanksRequestDefaultTypeInternal() {}
  union {
    ListBanksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBanksRequestDefaultTypeInternal _ListBanksRequest_default_instance_;
PROTOBUF_CONSTEXPR ListBanksResponse::ListBanksResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.banks_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListBanksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBanksResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBanksResponseDefaultTypeInternal() {}
  union {
    ListBanksResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBanksResponseDefaultTypeInternal _ListBanksResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateBankRequest::DeltaUpdateBankRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.add_citizen_ids_)*/{}
  , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.remove_citizen_ids_)*/{}
  , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_.delta_interest_rate_)*/0
  , /*decltype(_impl_.delta_currency_)*/0} {}
struct DeltaUpdateBankRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateBankRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateBankRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateBankRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateBankRequestDefaultTypeInternal _DeltaUpdateBankRequest_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateBankResponse::DeltaUpdateBankResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateBankResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateBankResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateBankResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateBankResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateBankResponseDefaultTypeInternal _DeltaUpdateBankResponse_default_instance_;
PROTOBUF_CONSTEXPR AddAgentRequest::AddAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentRequestDefaultTypeInternal() {}
  union {
    AddAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentRequestDefaultTypeInternal _AddAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR AddAgentResponse::AddAgentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentResponseDefaultTypeInternal() {}
  union {
    AddAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentResponseDefaultTypeInternal _AddAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentRequest::RemoveAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentRequestDefaultTypeInternal() {}
  union {
    RemoveAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentRequestDefaultTypeInternal _RemoveAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentResponse::RemoveAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentResponseDefaultTypeInternal() {}
  union {
    RemoveAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentResponseDefaultTypeInternal _RemoveAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAgentRequest::GetAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentRequestDefaultTypeInternal() {}
  union {
    GetAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAgentResponse::GetAgentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentResponseDefaultTypeInternal() {}
  union {
    GetAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentResponseDefaultTypeInternal _GetAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateAgentRequest::UpdateAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentRequestDefaultTypeInternal() {}
  union {
    UpdateAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentRequestDefaultTypeInternal _UpdateAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateAgentResponse::UpdateAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct UpdateAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentResponseDefaultTypeInternal() {}
  union {
    UpdateAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentResponseDefaultTypeInternal _UpdateAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR ListAgentsRequest::ListAgentsRequest(
    ::_pbi::ConstantInitialized) {}
struct ListAgentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentsRequestDefaultTypeInternal() {}
  union {
    ListAgentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentsRequestDefaultTypeInternal _ListAgentsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListAgentsResponse::ListAgentsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListAgentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentsResponseDefaultTypeInternal() {}
  union {
    ListAgentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentsResponseDefaultTypeInternal _ListAgentsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updates_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeltaUpdateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateAgentRequestDefaultTypeInternal() {}
  union {
    DeltaUpdateAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateAgentRequestDefaultTypeInternal _DeltaUpdateAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR AgentDeltaUpdate::AgentDeltaUpdate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_.delta_currency_)*/0
  , /*decltype(_impl_.new_firm_id_)*/0
  , /*decltype(_impl_.delta_skill_)*/0
  , /*decltype(_impl_.delta_consumption_)*/0
  , /*decltype(_impl_.delta_income_)*/0} {}
struct AgentDeltaUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentDeltaUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentDeltaUpdateDefaultTypeInternal() {}
  union {
    AgentDeltaUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentDeltaUpdateDefaultTypeInternal _AgentDeltaUpdate_default_instance_;
PROTOBUF_CONSTEXPR DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct DeltaUpdateAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaUpdateAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaUpdateAgentResponseDefaultTypeInternal() {}
  union {
    DeltaUpdateAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaUpdateAgentResponseDefaultTypeInternal _DeltaUpdateAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueRequest::CalculateTaxesDueRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.incomes_)*/{}
  , /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_.enable_redistribution_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueRequestDefaultTypeInternal() {}
  union {
    CalculateTaxesDueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueRequestDefaultTypeInternal _CalculateTaxesDueRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueResponse::CalculateTaxesDueResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_incomes_)*/{}
  , /*decltype(_impl_.taxes_due_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueResponseDefaultTypeInternal() {}
  union {
    CalculateTaxesDueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueResponseDefaultTypeInternal _CalculateTaxesDueResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionRequest::CalculateConsumptionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.demands_)*/{}
  , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_.consumption_accumulation_)*/false} {}
struct CalculateConsumptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionRequestDefaultTypeInternal() {}
  union {
    CalculateConsumptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionRequestDefaultTypeInternal _CalculateConsumptionRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionResponse::CalculateConsumptionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.actual_consumption_)*/0
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateConsumptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionResponseDefaultTypeInternal() {}
  union {
    CalculateConsumptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionResponseDefaultTypeInternal _CalculateConsumptionResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestRequest::CalculateInterestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestRequestDefaultTypeInternal() {}
  union {
    CalculateInterestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestRequestDefaultTypeInternal _CalculateInterestRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestResponse::CalculateInterestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_currencies_)*/{}
  , /*decltype(_impl_.total_interest_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestResponseDefaultTypeInternal() {}
  union {
    CalculateInterestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestResponseDefaultTypeInternal _CalculateInterestResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateRealGDPRequest::CalculateRealGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nbs_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateRealGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateRealGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateRealGDPRequestDefaultTypeInternal() {}
  union {
    CalculateRealGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateRealGDPRequestDefaultTypeInternal _CalculateRealGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateRealGDPResponse::CalculateRealGDPResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.real_gdp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateRealGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateRealGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateRealGDPResponseDefaultTypeInternal() {}
  union {
    CalculateRealGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateRealGDPResponseDefaultTypeInternal _CalculateRealGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesRequestDefaultTypeInternal _SaveEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.nbs_ids_)*/{}
  , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.government_ids_)*/{}
  , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_ids_)*/{}
  , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesResponseDefaultTypeInternal _SaveEconomyEntitiesResponse_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesRequestDefaultTypeInternal _LoadEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.firm_ids_)*/{}
  , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.nbs_ids_)*/{}
  , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.government_ids_)*/{}
  , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_ids_)*/{}
  , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesResponseDefaultTypeInternal _LoadEconomyEntitiesResponse_default_instance_;
}  // namespace v2
}  // namespace economy
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[84];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddFirmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddFirmRequest, _impl_.firms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddFirmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddFirmResponse, _impl_.firm_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveFirmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveFirmRequest, _impl_.firm_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveFirmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetFirmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetFirmRequest, _impl_.firm_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetFirmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetFirmResponse, _impl_.firms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateFirmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateFirmRequest, _impl_.firms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateFirmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListFirmsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListFirmsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListFirmsResponse, _impl_.firms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateFirmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateFirmRequest, _impl_.updates_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.firm_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.delta_price_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.delta_inventory_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.delta_demand_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.delta_sales_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.add_employees_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::FirmDeltaUpdate, _impl_.remove_employees_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateFirmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddNBSRequest, _impl_.nbs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveNBSRequest, _impl_.nbs_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNBSRequest, _impl_.nbs_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNBSResponse, _impl_.nbs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateNBSRequest, _impl_.nbs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListNBSResponse, _impl_.nbs_list_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.nbs_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_nominal_gdp_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_real_gdp_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_unemployment_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_wages_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_prices_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_working_hours_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_depression_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_consumption_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_income_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_locus_control_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.add_citizen_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.remove_citizen_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.add_citizen_agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSRequest, _impl_.remove_citizen_agent_ids_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateNBSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddGovernmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddGovernmentRequest, _impl_.government_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddGovernmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveGovernmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveGovernmentRequest, _impl_.government_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveGovernmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetGovernmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetGovernmentRequest, _impl_.government_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetGovernmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetGovernmentResponse, _impl_.government_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateGovernmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateGovernmentRequest, _impl_.government_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateGovernmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListGovernmentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListGovernmentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListGovernmentsResponse, _impl_.governments_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.government_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.delta_bracket_cutoffs_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.delta_bracket_rates_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.add_citizen_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentRequest, _impl_.remove_citizen_ids_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateGovernmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddBankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddBankRequest, _impl_.bank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddBankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveBankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveBankRequest, _impl_.bank_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveBankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBankRequest, _impl_.bank_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBankResponse, _impl_.bank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateBankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateBankRequest, _impl_.bank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateBankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListBanksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListBanksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListBanksResponse, _impl_.banks_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_.bank_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_.delta_interest_rate_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_.add_citizen_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankRequest, _impl_.remove_citizen_ids_),
  ~0u,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateBankResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentResponse, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentRequest, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetAgentResponse, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentRequest, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::UpdateAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListAgentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListAgentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::ListAgentsResponse, _impl_.agents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentRequest, _impl_.updates_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.delta_currency_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.new_firm_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.delta_skill_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.delta_consumption_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AgentDeltaUpdate, _impl_.delta_income_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::DeltaUpdateAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.government_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.incomes_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.enable_redistribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.taxes_due_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.updated_incomes_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.firm_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.demands_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.consumption_accumulation_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.actual_consumption_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.bank_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.total_interest_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.updated_currencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPRequest, _impl_.nbs_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateRealGDPResponse, _impl_.real_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.firm_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.nbs_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.government_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.bank_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.firm_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.nbs_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.government_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.bank_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.agent_ids_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::economy::v2::AddFirmRequest)},
  { 7, -1, -1, sizeof(::city::economy::v2::AddFirmResponse)},
  { 14, -1, -1, sizeof(::city::economy::v2::RemoveFirmRequest)},
  { 21, -1, -1, sizeof(::city::economy::v2::RemoveFirmResponse)},
  { 27, -1, -1, sizeof(::city::economy::v2::GetFirmRequest)},
  { 34, -1, -1, sizeof(::city::economy::v2::GetFirmResponse)},
  { 41, -1, -1, sizeof(::city::economy::v2::UpdateFirmRequest)},
  { 48, -1, -1, sizeof(::city::economy::v2::UpdateFirmResponse)},
  { 54, -1, -1, sizeof(::city::economy::v2::ListFirmsRequest)},
  { 60, -1, -1, sizeof(::city::economy::v2::ListFirmsResponse)},
  { 67, -1, -1, sizeof(::city::economy::v2::DeltaUpdateFirmRequest)},
  { 74, 88, -1, sizeof(::city::economy::v2::FirmDeltaUpdate)},
  { 96, -1, -1, sizeof(::city::economy::v2::DeltaUpdateFirmResponse)},
  { 102, -1, -1, sizeof(::city::economy::v2::AddNBSRequest)},
  { 109, -1, -1, sizeof(::city::economy::v2::AddNBSResponse)},
  { 115, -1, -1, sizeof(::city::economy::v2::RemoveNBSRequest)},
  { 122, -1, -1, sizeof(::city::economy::v2::RemoveNBSResponse)},
  { 128, -1, -1, sizeof(::city::economy::v2::GetNBSRequest)},
  { 135, -1, -1, sizeof(::city::economy::v2::GetNBSResponse)},
  { 142, -1, -1, sizeof(::city::economy::v2::UpdateNBSRequest)},
  { 149, -1, -1, sizeof(::city::economy::v2::UpdateNBSResponse)},
  { 155, -1, -1, sizeof(::city::economy::v2::ListNBSRequest)},
  { 161, -1, -1, sizeof(::city::economy::v2::ListNBSResponse)},
  { 168, 176, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse)},
  { 178, 186, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse)},
  { 188, 196, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse)},
  { 198, 206, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse)},
  { 208, 216, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse)},
  { 218, 226, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse)},
  { 228, 236, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse)},
  { 238, 246, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse)},
  { 248, 256, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse)},
  { 258, 266, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse)},
  { 268, 290, -1, sizeof(::city::economy::v2::DeltaUpdateNBSRequest)},
  { 306, -1, -1, sizeof(::city::economy::v2::DeltaUpdateNBSResponse)},
  { 312, -1, -1, sizeof(::city::economy::v2::AddGovernmentRequest)},
  { 319, -1, -1, sizeof(::city::economy::v2::AddGovernmentResponse)},
  { 325, -1, -1, sizeof(::city::economy::v2::RemoveGovernmentRequest)},
  { 332, -1, -1, sizeof(::city::economy::v2::RemoveGovernmentResponse)},
  { 338, -1, -1, sizeof(::city::economy::v2::GetGovernmentRequest)},
  { 345, -1, -1, sizeof(::city::economy::v2::GetGovernmentResponse)},
  { 352, -1, -1, sizeof(::city::economy::v2::UpdateGovernmentRequest)},
  { 359, -1, -1, sizeof(::city::economy::v2::UpdateGovernmentResponse)},
  { 365, -1, -1, sizeof(::city::economy::v2::ListGovernmentsRequest)},
  { 371, -1, -1, sizeof(::city::economy::v2::ListGovernmentsResponse)},
  { 378, 390, -1, sizeof(::city::economy::v2::DeltaUpdateGovernmentRequest)},
  { 396, -1, -1, sizeof(::city::economy::v2::DeltaUpdateGovernmentResponse)},
  { 402, -1, -1, sizeof(::city::economy::v2::AddBankRequest)},
  { 409, -1, -1, sizeof(::city::economy::v2::AddBankResponse)},
  { 415, -1, -1, sizeof(::city::economy::v2::RemoveBankRequest)},
  { 422, -1, -1, sizeof(::city::economy::v2::RemoveBankResponse)},
  { 428, -1, -1, sizeof(::city::economy::v2::GetBankRequest)},
  { 435, -1, -1, sizeof(::city::economy::v2::GetBankResponse)},
  { 442, -1, -1, sizeof(::city::economy::v2::UpdateBankRequest)},
  { 449, -1, -1, sizeof(::city::economy::v2::UpdateBankResponse)},
  { 455, -1, -1, sizeof(::city::economy::v2::ListBanksRequest)},
  { 461, -1, -1, sizeof(::city::economy::v2::ListBanksResponse)},
  { 468, 479, -1, sizeof(::city::economy::v2::DeltaUpdateBankRequest)},
  { 484, -1, -1, sizeof(::city::economy::v2::DeltaUpdateBankResponse)},
  { 490, -1, -1, sizeof(::city::economy::v2::AddAgentRequest)},
  { 497, -1, -1, sizeof(::city::economy::v2::AddAgentResponse)},
  { 504, -1, -1, sizeof(::city::economy::v2::RemoveAgentRequest)},
  { 511, -1, -1, sizeof(::city::economy::v2::RemoveAgentResponse)},
  { 517, -1, -1, sizeof(::city::economy::v2::GetAgentRequest)},
  { 524, -1, -1, sizeof(::city::economy::v2::GetAgentResponse)},
  { 531, -1, -1, sizeof(::city::economy::v2::UpdateAgentRequest)},
  { 538, -1, -1, sizeof(::city::economy::v2::UpdateAgentResponse)},
  { 544, -1, -1, sizeof(::city::economy::v2::ListAgentsRequest)},
  { 550, -1, -1, sizeof(::city::economy::v2::ListAgentsResponse)},
  { 557, -1, -1, sizeof(::city::economy::v2::DeltaUpdateAgentRequest)},
  { 564, 576, -1, sizeof(::city::economy::v2::AgentDeltaUpdate)},
  { 582, -1, -1, sizeof(::city::economy::v2::DeltaUpdateAgentResponse)},
  { 588, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueRequest)},
  { 598, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueResponse)},
  { 606, 616, -1, sizeof(::city::economy::v2::CalculateConsumptionRequest)},
  { 620, -1, -1, sizeof(::city::economy::v2::CalculateConsumptionResponse)},
  { 628, -1, -1, sizeof(::city::economy::v2::CalculateInterestRequest)},
  { 636, -1, -1, sizeof(::city::economy::v2::CalculateInterestResponse)},
  { 644, -1, -1, sizeof(::city::economy::v2::CalculateRealGDPRequest)},
  { 651, -1, -1, sizeof(::city::economy::v2::CalculateRealGDPResponse)},
  { 658, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesRequest)},
  { 665, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesResponse)},
  { 676, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesRequest)},
  { 683, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::economy::v2::_AddFirmRequest_default_instance_._instance,
  &::city::economy::v2::_AddFirmResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveFirmRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveFirmResponse_default_instance_._instance,
  &::city::economy::v2::_GetFirmRequest_default_instance_._instance,
  &::city::economy::v2::_GetFirmResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateFirmRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateFirmResponse_default_instance_._instance,
  &::city::economy::v2::_ListFirmsRequest_default_instance_._instance,
  &::city::economy::v2::_ListFirmsResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateFirmRequest_default_instance_._instance,
  &::city::economy::v2::_FirmDeltaUpdate_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateFirmResponse_default_instance_._instance,
  &::city::economy::v2::_AddNBSRequest_default_instance_._instance,
  &::city::economy::v2::_AddNBSResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveNBSRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveNBSResponse_default_instance_._instance,
  &::city::economy::v2::_GetNBSRequest_default_instance_._instance,
  &::city::economy::v2::_GetNBSResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateNBSRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateNBSResponse_default_instance_._instance,
  &::city::economy::v2::_ListNBSRequest_default_instance_._instance,
  &::city::economy::v2::_ListNBSResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSRequest_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateNBSResponse_default_instance_._instance,
  &::city::economy::v2::_AddGovernmentRequest_default_instance_._instance,
  &::city::economy::v2::_AddGovernmentResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveGovernmentRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveGovernmentResponse_default_instance_._instance,
  &::city::economy::v2::_GetGovernmentRequest_default_instance_._instance,
  &::city::economy::v2::_GetGovernmentResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateGovernmentRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateGovernmentResponse_default_instance_._instance,
  &::city::economy::v2::_ListGovernmentsRequest_default_instance_._instance,
  &::city::economy::v2::_ListGovernmentsResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateGovernmentRequest_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateGovernmentResponse_default_instance_._instance,
  &::city::economy::v2::_AddBankRequest_default_instance_._instance,
  &::city::economy::v2::_AddBankResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveBankRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveBankResponse_default_instance_._instance,
  &::city::economy::v2::_GetBankRequest_default_instance_._instance,
  &::city::economy::v2::_GetBankResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateBankRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateBankResponse_default_instance_._instance,
  &::city::economy::v2::_ListBanksRequest_default_instance_._instance,
  &::city::economy::v2::_ListBanksResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateBankRequest_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateBankResponse_default_instance_._instance,
  &::city::economy::v2::_AddAgentRequest_default_instance_._instance,
  &::city::economy::v2::_AddAgentResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentResponse_default_instance_._instance,
  &::city::economy::v2::_GetAgentRequest_default_instance_._instance,
  &::city::economy::v2::_GetAgentResponse_default_instance_._instance,
  &::city::economy::v2::_UpdateAgentRequest_default_instance_._instance,
  &::city::economy::v2::_UpdateAgentResponse_default_instance_._instance,
  &::city::economy::v2::_ListAgentsRequest_default_instance_._instance,
  &::city::economy::v2::_ListAgentsResponse_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateAgentRequest_default_instance_._instance,
  &::city::economy::v2::_AgentDeltaUpdate_default_instance_._instance,
  &::city::economy::v2::_DeltaUpdateAgentResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateRealGDPRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateRealGDPResponse_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesResponse_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!city/economy/v2/org_service.proto\022\017cit"
  "y.economy.v2\032\035city/economy/v2/economy.pr"
  "oto\"=\n\016AddFirmRequest\022+\n\005firms\030\001 \003(\0132\025.c"
  "ity.economy.v2.FirmR\005firms\",\n\017AddFirmRes"
  "ponse\022\031\n\010firm_ids\030\001 \003(\005R\007firmIds\".\n\021Remo"
  "veFirmRequest\022\031\n\010firm_ids\030\001 \003(\005R\007firmIds"
  "\"\024\n\022RemoveFirmResponse\"+\n\016GetFirmRequest"
  "\022\031\n\010firm_ids\030\001 \003(\005R\007firmIds\">\n\017GetFirmRe"
  "sponse\022+\n\005firms\030\001 \003(\0132\025.city.economy.v2."
  "FirmR\005firms\"@\n\021UpdateFirmRequest\022+\n\005firm"
  "s\030\001 \003(\0132\025.city.economy.v2.FirmR\005firms\"\024\n"
  "\022UpdateFirmResponse\"\022\n\020ListFirmsRequest\""
  "@\n\021ListFirmsResponse\022+\n\005firms\030\001 \003(\0132\025.ci"
  "ty.economy.v2.FirmR\005firms\"T\n\026DeltaUpdate"
  "FirmRequest\022:\n\007updates\030\001 \003(\0132 .city.econ"
  "omy.v2.FirmDeltaUpdateR\007updates\"\240\003\n\017Firm"
  "DeltaUpdate\022\027\n\007firm_id\030\001 \001(\005R\006firmId\022$\n\013"
  "delta_price\030\002 \001(\002H\000R\ndeltaPrice\210\001\001\022,\n\017de"
  "lta_inventory\030\003 \001(\005H\001R\016deltaInventory\210\001\001"
  "\022&\n\014delta_demand\030\004 \001(\002H\002R\013deltaDemand\210\001\001"
  "\022$\n\013delta_sales\030\005 \001(\002H\003R\ndeltaSales\210\001\001\022*"
  "\n\016delta_currency\030\006 \001(\002H\004R\rdeltaCurrency\210"
  "\001\001\022#\n\radd_employees\030\007 \003(\005R\014addEmployees\022"
  ")\n\020remove_employees\030\010 \003(\005R\017removeEmploye"
  "esB\016\n\014_delta_priceB\022\n\020_delta_inventoryB\017"
  "\n\r_delta_demandB\016\n\014_delta_salesB\021\n\017_delt"
  "a_currency\"\031\n\027DeltaUpdateFirmResponse\"7\n"
  "\rAddNBSRequest\022&\n\003nbs\030\001 \001(\0132\024.city.econo"
  "my.v2.NBSR\003nbs\"\020\n\016AddNBSResponse\")\n\020Remo"
  "veNBSRequest\022\025\n\006nbs_id\030\001 \001(\005R\005nbsId\"\023\n\021R"
  "emoveNBSResponse\"&\n\rGetNBSRequest\022\025\n\006nbs"
  "_id\030\001 \001(\005R\005nbsId\"8\n\016GetNBSResponse\022&\n\003nb"
  "s\030\001 \001(\0132\024.city.economy.v2.NBSR\003nbs\":\n\020Up"
  "dateNBSRequest\022&\n\003nbs\030\001 \001(\0132\024.city.econo"
  "my.v2.NBSR\003nbs\"\023\n\021UpdateNBSResponse\"\020\n\016L"
  "istNBSRequest\"B\n\017ListNBSResponse\022/\n\010nbs_"
  "list\030\001 \003(\0132\024.city.economy.v2.NBSR\007nbsLis"
  "t\"\212\020\n\025DeltaUpdateNBSRequest\022\025\n\006nbs_id\030\001 "
  "\001(\005R\005nbsId\022g\n\021delta_nominal_gdp\030\002 \003(\0132;."
  "city.economy.v2.DeltaUpdateNBSRequest.De"
  "ltaNominalGdpEntryR\017deltaNominalGdp\022^\n\016d"
  "elta_real_gdp\030\003 \003(\01328.city.economy.v2.De"
  "ltaUpdateNBSRequest.DeltaRealGdpEntryR\014d"
  "eltaRealGdp\022l\n\022delta_unemployment\030\004 \003(\0132"
  "=.city.economy.v2.DeltaUpdateNBSRequest."
  "DeltaUnemploymentEntryR\021deltaUnemploymen"
  "t\022W\n\013delta_wages\030\005 \003(\01326.city.economy.v2"
  ".DeltaUpdateNBSRequest.DeltaWagesEntryR\n"
  "deltaWages\022Z\n\014delta_prices\030\006 \003(\01327.city."
  "economy.v2.DeltaUpdateNBSRequest.DeltaPr"
  "icesEntryR\013deltaPrices\022m\n\023delta_working_"
  "hours\030\007 \003(\0132=.city.economy.v2.DeltaUpdat"
  "eNBSRequest.DeltaWorkingHoursEntryR\021delt"
  "aWorkingHours\022f\n\020delta_depression\030\010 \003(\0132"
  ";.city.economy.v2.DeltaUpdateNBSRequest."
  "DeltaDepressionEntryR\017deltaDepression\022\202\001"
  "\n\032delta_consumption_currency\030\t \003(\0132D.cit"
  "y.economy.v2.DeltaUpdateNBSRequest.Delta"
  "ConsumptionCurrencyEntryR\030deltaConsumpti"
  "onCurrency\022s\n\025delta_income_currency\030\n \003("
  "\0132\?.city.economy.v2.DeltaUpdateNBSReques"
  "t.DeltaIncomeCurrencyEntryR\023deltaIncomeC"
  "urrency\022m\n\023delta_locus_control\030\013 \003(\0132=.c"
  "ity.economy.v2.DeltaUpdateNBSRequest.Del"
  "taLocusControlEntryR\021deltaLocusControl\022*"
  "\n\016delta_currency\030\014 \001(\002H\000R\rdeltaCurrency\210"
  "\001\001\022&\n\017add_citizen_ids\030\r \003(\005R\raddCitizenI"
  "ds\022,\n\022remove_citizen_ids\030\016 \003(\005R\020removeCi"
  "tizenIds\0221\n\025add_citizen_agent_ids\030\017 \003(\005R"
  "\022addCitizenAgentIds\0227\n\030remove_citizen_ag"
  "ent_ids\030\020 \003(\005R\025removeCitizenAgentIds\032B\n\024"
  "DeltaNominalGdpEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024"
  "\n\005value\030\002 \001(\002R\005value:\0028\001\032\?\n\021DeltaRealGdp"
  "Entry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\002R\005"
  "value:\0028\001\032D\n\026DeltaUnemploymentEntry\022\020\n\003k"
  "ey\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\002R\005value:\0028\001\032"
  "=\n\017DeltaWagesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005"
  "value\030\002 \001(\002R\005value:\0028\001\032>\n\020DeltaPricesEnt"
  "ry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\002R\005val"
  "ue:\0028\001\032D\n\026DeltaWorkingHoursEntry\022\020\n\003key\030"
  "\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\002R\005value:\0028\001\032B\n\024"
  "DeltaDepressionEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024"
  "\n\005value\030\002 \001(\002R\005value:\0028\001\032K\n\035DeltaConsump"
  "tionCurrencyEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005v"
  "alue\030\002 \001(\002R\005value:\0028\001\032F\n\030DeltaIncomeCurr"
  "encyEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001"
  "(\002R\005value:\0028\001\032D\n\026DeltaLocusControlEntry\022"
  "\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\002R\005value:"
  "\0028\001B\021\n\017_delta_currency\"\030\n\026DeltaUpdateNBS"
  "Response\"S\n\024AddGovernmentRequest\022;\n\ngove"
  "rnment\030\001 \001(\0132\033.city.economy.v2.Governmen"
  "tR\ngovernment\"\027\n\025AddGovernmentResponse\">"
  "\n\027RemoveGovernmentRequest\022#\n\rgovernment_"
  "id\030\001 \001(\005R\014governmentId\"\032\n\030RemoveGovernme"
  "ntResponse\";\n\024GetGovernmentRequest\022#\n\rgo"
  "vernment_id\030\001 \001(\005R\014governmentId\"T\n\025GetGo"
  "vernmentResponse\022;\n\ngovernment\030\001 \001(\0132\033.c"
  "ity.economy.v2.GovernmentR\ngovernment\"V\n"
  "\027UpdateGovernmentRequest\022;\n\ngovernment\030\001"
  " \001(\0132\033.city.economy.v2.GovernmentR\ngover"
  "nment\"\032\n\030UpdateGovernmentResponse\"\030\n\026Lis"
  "tGovernmentsRequest\"X\n\027ListGovernmentsRe"
  "sponse\022=\n\013governments\030\001 \003(\0132\033.city.econo"
  "my.v2.GovernmentR\013governments\"\274\002\n\034DeltaU"
  "pdateGovernmentRequest\022#\n\rgovernment_id\030"
  "\001 \001(\005R\014governmentId\0222\n\025delta_bracket_cut"
  "offs\030\002 \003(\002R\023deltaBracketCutoffs\022.\n\023delta"
  "_bracket_rates\030\003 \003(\002R\021deltaBracketRates\022"
  "*\n\016delta_currency\030\004 \001(\002H\000R\rdeltaCurrency"
  "\210\001\001\022&\n\017add_citizen_ids\030\005 \003(\005R\raddCitizen"
  "Ids\022,\n\022remove_citizen_ids\030\006 \003(\005R\020removeC"
  "itizenIdsB\021\n\017_delta_currency\"\037\n\035DeltaUpd"
  "ateGovernmentResponse\";\n\016AddBankRequest\022"
  ")\n\004bank\030\001 \001(\0132\025.city.economy.v2.BankR\004ba"
  "nk\"\021\n\017AddBankResponse\",\n\021RemoveBankReque"
  "st\022\027\n\007bank_id\030\001 \001(\005R\006bankId\"\024\n\022RemoveBan"
  "kResponse\")\n\016GetBankRequest\022\027\n\007bank_id\030\001"
  " \001(\005R\006bankId\"<\n\017GetBankResponse\022)\n\004bank\030"
  "\001 \001(\0132\025.city.economy.v2.BankR\004bank\">\n\021Up"
  "dateBankRequest\022)\n\004bank\030\001 \001(\0132\025.city.eco"
  "nomy.v2.BankR\004bank\"\024\n\022UpdateBankResponse"
  "\"\022\n\020ListBanksRequest\"@\n\021ListBanksRespons"
  "e\022+\n\005banks\030\001 \003(\0132\025.city.economy.v2.BankR"
  "\005banks\"\223\002\n\026DeltaUpdateBankRequest\022\027\n\007ban"
  "k_id\030\001 \001(\005R\006bankId\0223\n\023delta_interest_rat"
  "e\030\002 \001(\002H\000R\021deltaInterestRate\210\001\001\022*\n\016delta"
  "_currency\030\003 \001(\002H\001R\rdeltaCurrency\210\001\001\022&\n\017a"
  "dd_citizen_ids\030\004 \003(\005R\raddCitizenIds\022,\n\022r"
  "emove_citizen_ids\030\005 \003(\005R\020removeCitizenId"
  "sB\026\n\024_delta_interest_rateB\021\n\017_delta_curr"
  "ency\"\031\n\027DeltaUpdateBankResponse\"A\n\017AddAg"
  "entRequest\022.\n\006agents\030\001 \003(\0132\026.city.econom"
  "y.v2.AgentR\006agents\"/\n\020AddAgentResponse\022\033"
  "\n\tagent_ids\030\001 \003(\005R\010agentIds\"1\n\022RemoveAge"
  "ntRequest\022\033\n\tagent_ids\030\001 \003(\005R\010agentIds\"\025"
  "\n\023RemoveAgentResponse\".\n\017GetAgentRequest"
  "\022\033\n\tagent_ids\030\001 \003(\005R\010agentIds\"B\n\020GetAgen"
  "tResponse\022.\n\006agents\030\001 \003(\0132\026.city.economy"
  ".v2.AgentR\006agents\"D\n\022UpdateAgentRequest\022"
  ".\n\006agents\030\001 \003(\0132\026.city.economy.v2.AgentR"
  "\006agents\"\025\n\023UpdateAgentResponse\"\023\n\021ListAg"
  "entsRequest\"D\n\022ListAgentsResponse\022.\n\006age"
  "nts\030\001 \003(\0132\026.city.economy.v2.AgentR\006agent"
  "s\"V\n\027DeltaUpdateAgentRequest\022;\n\007updates\030"
  "\001 \003(\0132!.city.economy.v2.AgentDeltaUpdate"
  "R\007updates\"\330\002\n\020AgentDeltaUpdate\022\031\n\010agent_"
  "id\030\001 \001(\005R\007agentId\022*\n\016delta_currency\030\002 \001("
  "\002H\000R\rdeltaCurrency\210\001\001\022#\n\013new_firm_id\030\003 \001"
  "(\005H\001R\tnewFirmId\210\001\001\022$\n\013delta_skill\030\004 \001(\002H"
  "\002R\ndeltaSkill\210\001\001\0220\n\021delta_consumption\030\005 "
  "\001(\002H\003R\020deltaConsumption\210\001\001\022&\n\014delta_inco"
  "me\030\006 \001(\002H\004R\013deltaIncome\210\001\001B\021\n\017_delta_cur"
  "rencyB\016\n\014_new_firm_idB\016\n\014_delta_skillB\024\n"
  "\022_delta_consumptionB\017\n\r_delta_income\"\032\n\030"
  "DeltaUpdateAgentResponse\"\253\001\n\030CalculateTa"
  "xesDueRequest\022#\n\rgovernment_id\030\001 \001(\005R\014go"
  "vernmentId\022\033\n\tagent_ids\030\002 \003(\005R\010agentIds\022"
  "\030\n\007incomes\030\003 \003(\002R\007incomes\0223\n\025enable_redi"
  "stribution\030\004 \001(\010R\024enableRedistribution\"a"
  "\n\031CalculateTaxesDueResponse\022\033\n\ttaxes_due"
  "\030\001 \001(\002R\010taxesDue\022\'\n\017updated_incomes\030\002 \003("
  "\002R\016updatedIncomes\"\312\001\n\033CalculateConsumpti"
  "onRequest\022\031\n\010firm_ids\030\001 \003(\005R\007firmIds\022\031\n\010"
  "agent_id\030\002 \001(\005R\007agentId\022\030\n\007demands\030\003 \003(\005"
  "R\007demands\022>\n\030consumption_accumulation\030\004 "
  "\001(\010H\000R\027consumptionAccumulation\210\001\001B\033\n\031_co"
  "nsumption_accumulation\"g\n\034CalculateConsu"
  "mptionResponse\022-\n\022actual_consumption\030\001 \001"
  "(\002R\021actualConsumption\022\030\n\007success\030\002 \001(\010R\007"
  "success\"P\n\030CalculateInterestRequest\022\027\n\007b"
  "ank_id\030\001 \001(\005R\006bankId\022\033\n\tagent_ids\030\002 \003(\005R"
  "\010agentIds\"q\n\031CalculateInterestResponse\022%"
  "\n\016total_interest\030\001 \001(\002R\rtotalInterest\022-\n"
  "\022updated_currencies\030\002 \003(\002R\021updatedCurren"
  "cies\"0\n\027CalculateRealGDPRequest\022\025\n\006nbs_i"
  "d\030\001 \001(\005R\005nbsId\"5\n\030CalculateRealGDPRespon"
  "se\022\031\n\010real_gdp\030\001 \001(\002R\007realGdp\"9\n\032SaveEco"
  "nomyEntitiesRequest\022\033\n\tfile_path\030\001 \001(\tR\010"
  "filePath\"\260\001\n\033SaveEconomyEntitiesResponse"
  "\022\031\n\010firm_ids\030\001 \003(\005R\007firmIds\022\027\n\007nbs_ids\030\002"
  " \003(\005R\006nbsIds\022%\n\016government_ids\030\003 \003(\005R\rgo"
  "vernmentIds\022\031\n\010bank_ids\030\004 \003(\005R\007bankIds\022\033"
  "\n\tagent_ids\030\005 \003(\005R\010agentIds\"9\n\032LoadEcono"
  "myEntitiesRequest\022\033\n\tfile_path\030\001 \001(\tR\010fi"
  "lePath\"\260\001\n\033LoadEconomyEntitiesResponse\022\031"
  "\n\010firm_ids\030\001 \003(\005R\007firmIds\022\027\n\007nbs_ids\030\002 \003"
  "(\005R\006nbsIds\022%\n\016government_ids\030\003 \003(\005R\rgove"
  "rnmentIds\022\031\n\010bank_ids\030\004 \003(\005R\007bankIds\022\033\n\t"
  "agent_ids\030\005 \003(\005R\010agentIds2\243\032\n\nOrgService"
  "\022L\n\007AddFirm\022\037.city.economy.v2.AddFirmReq"
  "uest\032 .city.economy.v2.AddFirmResponse\022U"
  "\n\nRemoveFirm\022\".city.economy.v2.RemoveFir"
  "mRequest\032#.city.economy.v2.RemoveFirmRes"
  "ponse\022L\n\007GetFirm\022\037.city.economy.v2.GetFi"
  "rmRequest\032 .city.economy.v2.GetFirmRespo"
  "nse\022U\n\nUpdateFirm\022\".city.economy.v2.Upda"
  "teFirmRequest\032#.city.economy.v2.UpdateFi"
  "rmResponse\022R\n\tListFirms\022!.city.economy.v"
  "2.ListFirmsRequest\032\".city.economy.v2.Lis"
  "tFirmsResponse\022d\n\017DeltaUpdateFirm\022\'.city"
  ".economy.v2.DeltaUpdateFirmRequest\032(.cit"
  "y.economy.v2.DeltaUpdateFirmResponse\022I\n\006"
  "AddNBS\022\036.city.economy.v2.AddNBSRequest\032\037"
  ".city.economy.v2.AddNBSResponse\022R\n\tRemov"
  "eNBS\022!.city.economy.v2.RemoveNBSRequest\032"
  "\".city.economy.v2.RemoveNBSResponse\022I\n\006G"
  "etNBS\022\036.city.economy.v2.GetNBSRequest\032\037."
  "city.economy.v2.GetNBSResponse\022R\n\tUpdate"
  "NBS\022!.city.economy.v2.UpdateNBSRequest\032\""
  ".city.economy.v2.UpdateNBSResponse\022L\n\007Li"
  "stNBS\022\037.city.economy.v2.ListNBSRequest\032 "
  ".city.economy.v2.ListNBSResponse\022a\n\016Delt"
  "aUpdateNBS\022&.city.economy.v2.DeltaUpdate"
  "NBSRequest\032\'.city.economy.v2.DeltaUpdate"
  "NBSResponse\022^\n\rAddGovernment\022%.city.econ"
  "omy.v2.AddGovernmentRequest\032&.city.econo"
  "my.v2.AddGovernmentResponse\022g\n\020RemoveGov"
  "ernment\022(.city.economy.v2.RemoveGovernme"
  "ntRequest\032).city.economy.v2.RemoveGovern"
  "mentResponse\022^\n\rGetGovernment\022%.city.eco"
  "nomy.v2.GetGovernmentRequest\032&.city.econ"
  "omy.v2.GetGovernmentResponse\022g\n\020UpdateGo"
  "vernment\022(.city.economy.v2.UpdateGovernm"
  "entRequest\032).city.economy.v2.UpdateGover"
  "nmentResponse\022d\n\017ListGovernments\022\'.city."
  "economy.v2.ListGovernmentsRequest\032(.city"
  ".economy.v2.ListGovernmentsResponse\022v\n\025D"
  "eltaUpdateGovernment\022-.city.economy.v2.D"
  "eltaUpdateGovernmentRequest\032..city.econo"
  "my.v2.DeltaUpdateGovernmentResponse\022L\n\007A"
  "ddBank\022\037.city.economy.v2.AddBankRequest\032"
  " .city.economy.v2.AddBankResponse\022U\n\nRem"
  "oveBank\022\".city.economy.v2.RemoveBankRequ"
  "est\032#.city.economy.v2.RemoveBankResponse"
  "\022L\n\007GetBank\022\037.city.economy.v2.GetBankReq"
  "uest\032 .city.economy.v2.GetBankResponse\022U"
  "\n\nUpdateBank\022\".city.economy.v2.UpdateBan"
  "kRequest\032#.city.economy.v2.UpdateBankRes"
  "ponse\022R\n\tListBanks\022!.city.economy.v2.Lis"
  "tBanksRequest\032\".city.economy.v2.ListBank"
  "sResponse\022d\n\017DeltaUpdateBank\022\'.city.econ"
  "omy.v2.DeltaUpdateBankRequest\032(.city.eco"
  "nomy.v2.DeltaUpdateBankResponse\022O\n\010AddAg"
  "ent\022 .city.economy.v2.AddAgentRequest\032!."
  "city.economy.v2.AddAgentResponse\022X\n\013Remo"
  "veAgent\022#.city.economy.v2.RemoveAgentReq"
  "uest\032$.city.economy.v2.RemoveAgentRespon"
  "se\022O\n\010GetAgent\022 .city.economy.v2.GetAgen"
  "tRequest\032!.city.economy.v2.GetAgentRespo"
  "nse\022X\n\013UpdateAgent\022#.city.economy.v2.Upd"
  "ateAgentRequest\032$.city.economy.v2.Update"
  "AgentResponse\022U\n\nListAgents\022\".city.econo"
  "my.v2.ListAgentsRequest\032#.city.economy.v"
  "2.ListAgentsResponse\022g\n\020DeltaUpdateAgent"
  "\022(.city.economy.v2.DeltaUpdateAgentReque"
  "st\032).city.economy.v2.DeltaUpdateAgentRes"
  "ponse\022j\n\021CalculateTaxesDue\022).city.econom"
  "y.v2.CalculateTaxesDueRequest\032*.city.eco"
  "nomy.v2.CalculateTaxesDueResponse\022s\n\024Cal"
  "culateConsumption\022,.city.economy.v2.Calc"
  "ulateConsumptionRequest\032-.city.economy.v"
  "2.CalculateConsumptionResponse\022j\n\021Calcul"
  "ateInterest\022).city.economy.v2.CalculateI"
  "nterestRequest\032*.city.economy.v2.Calcula"
  "teInterestResponse\022g\n\020CalculateRealGDP\022("
  ".city.economy.v2.CalculateRealGDPRequest"
  "\032).city.economy.v2.CalculateRealGDPRespo"
  "nse\022p\n\023SaveEconomyEntities\022+.city.econom"
  "y.v2.SaveEconomyEntitiesRequest\032,.city.e"
  "conomy.v2.SaveEconomyEntitiesResponse\022p\n"
  "\023LoadEconomyEntities\022+.city.economy.v2.L"
  "oadEconomyEntitiesRequest\032,.city.economy"
  ".v2.LoadEconomyEntitiesResponseB\277\001\n\023com."
  "city.economy.v2B\017OrgServiceProtoP\001Z9git."
  "fiblab.net/sim/protos/v2/go/city/economy"
  "/v2;economyv2\242\002\003CEX\252\002\017City.Economy.V2\312\002\017"
  "City\\Economy\\V2\342\002\033City\\Economy\\V2\\GPBMet"
  "adata\352\002\021City::Economy::V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps[1] = {
  &::descriptor_table_city_2feconomy_2fv2_2feconomy_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto = {
    false, false, 11113, descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    "city/economy/v2/org_service.proto",
    &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once, descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps, 1, 84,
    schemas, file_default_instances, TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets,
    file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto, file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter() {
  return &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2feconomy_2fv2_2forg_5fservice_2eproto(&descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto);
namespace city {
namespace economy {
namespace v2 {

// ===================================================================

class AddFirmRequest::_Internal {
 public:
};

void AddFirmRequest::clear_firms() {
  _impl_.firms_.Clear();
}
AddFirmRequest::AddFirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddFirmRequest)
}
AddFirmRequest::AddFirmRequest(const AddFirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddFirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){from._impl_.firms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddFirmRequest)
}

inline void AddFirmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddFirmRequest::~AddFirmRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddFirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddFirmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firms_.~RepeatedPtrField();
}

void AddFirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddFirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddFirmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddFirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_firms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddFirmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddFirmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_firms_size()); i < n; i++) {
    const auto& repfield = this->_internal_firms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddFirmRequest)
  return target;
}

size_t AddFirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddFirmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  total_size += 1UL * this->_internal_firms_size();
  for (const auto& msg : this->_impl_.firms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddFirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddFirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddFirmRequest::GetClassData() const { return &_class_data_; }


void AddFirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddFirmRequest*>(&to_msg);
  auto& from = static_cast<const AddFirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddFirmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firms_.MergeFrom(from._impl_.firms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddFirmRequest::CopyFrom(const AddFirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddFirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFirmRequest::IsInitialized() const {
  return true;
}

void AddFirmRequest::InternalSwap(AddFirmRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firms_.InternalSwap(&other->_impl_.firms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddFirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[0]);
}

// ===================================================================

class AddFirmResponse::_Internal {
 public:
};

AddFirmResponse::AddFirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddFirmResponse)
}
AddFirmResponse::AddFirmResponse(const AddFirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddFirmResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddFirmResponse)
}

inline void AddFirmResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddFirmResponse::~AddFirmResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddFirmResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddFirmResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
}

void AddFirmResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddFirmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddFirmResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddFirmResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddFirmResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddFirmResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddFirmResponse)
  return target;
}

size_t AddFirmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddFirmResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddFirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddFirmResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddFirmResponse::GetClassData() const { return &_class_data_; }


void AddFirmResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddFirmResponse*>(&to_msg);
  auto& from = static_cast<const AddFirmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddFirmResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddFirmResponse::CopyFrom(const AddFirmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddFirmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFirmResponse::IsInitialized() const {
  return true;
}

void AddFirmResponse::InternalSwap(AddFirmResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddFirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[1]);
}

// ===================================================================

class RemoveFirmRequest::_Internal {
 public:
};

RemoveFirmRequest::RemoveFirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveFirmRequest)
}
RemoveFirmRequest::RemoveFirmRequest(const RemoveFirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveFirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveFirmRequest)
}

inline void RemoveFirmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveFirmRequest::~RemoveFirmRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveFirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveFirmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
}

void RemoveFirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveFirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveFirmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveFirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveFirmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveFirmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveFirmRequest)
  return target;
}

size_t RemoveFirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveFirmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveFirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveFirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveFirmRequest::GetClassData() const { return &_class_data_; }


void RemoveFirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveFirmRequest*>(&to_msg);
  auto& from = static_cast<const RemoveFirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveFirmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFirmRequest::CopyFrom(const RemoveFirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveFirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFirmRequest::IsInitialized() const {
  return true;
}

void RemoveFirmRequest::InternalSwap(RemoveFirmRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveFirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[2]);
}

// ===================================================================

class RemoveFirmResponse::_Internal {
 public:
};

RemoveFirmResponse::RemoveFirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveFirmResponse)
}
RemoveFirmResponse::RemoveFirmResponse(const RemoveFirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveFirmResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveFirmResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveFirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveFirmResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveFirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[3]);
}

// ===================================================================

class GetFirmRequest::_Internal {
 public:
};

GetFirmRequest::GetFirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetFirmRequest)
}
GetFirmRequest::GetFirmRequest(const GetFirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetFirmRequest)
}

inline void GetFirmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFirmRequest::~GetFirmRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetFirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFirmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
}

void GetFirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetFirmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFirmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetFirmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetFirmRequest)
  return target;
}

size_t GetFirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetFirmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFirmRequest::GetClassData() const { return &_class_data_; }


void GetFirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFirmRequest*>(&to_msg);
  auto& from = static_cast<const GetFirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetFirmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFirmRequest::CopyFrom(const GetFirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetFirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFirmRequest::IsInitialized() const {
  return true;
}

void GetFirmRequest::InternalSwap(GetFirmRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[4]);
}

// ===================================================================

class GetFirmResponse::_Internal {
 public:
};

void GetFirmResponse::clear_firms() {
  _impl_.firms_.Clear();
}
GetFirmResponse::GetFirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetFirmResponse)
}
GetFirmResponse::GetFirmResponse(const GetFirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFirmResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){from._impl_.firms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetFirmResponse)
}

inline void GetFirmResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFirmResponse::~GetFirmResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetFirmResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFirmResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firms_.~RepeatedPtrField();
}

void GetFirmResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFirmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetFirmResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFirmResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_firms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFirmResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetFirmResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_firms_size()); i < n; i++) {
    const auto& repfield = this->_internal_firms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetFirmResponse)
  return target;
}

size_t GetFirmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetFirmResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  total_size += 1UL * this->_internal_firms_size();
  for (const auto& msg : this->_impl_.firms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFirmResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFirmResponse::GetClassData() const { return &_class_data_; }


void GetFirmResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFirmResponse*>(&to_msg);
  auto& from = static_cast<const GetFirmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetFirmResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firms_.MergeFrom(from._impl_.firms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFirmResponse::CopyFrom(const GetFirmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetFirmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFirmResponse::IsInitialized() const {
  return true;
}

void GetFirmResponse::InternalSwap(GetFirmResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firms_.InternalSwap(&other->_impl_.firms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[5]);
}

// ===================================================================

class UpdateFirmRequest::_Internal {
 public:
};

void UpdateFirmRequest::clear_firms() {
  _impl_.firms_.Clear();
}
UpdateFirmRequest::UpdateFirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateFirmRequest)
}
UpdateFirmRequest::UpdateFirmRequest(const UpdateFirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateFirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){from._impl_.firms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateFirmRequest)
}

inline void UpdateFirmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateFirmRequest::~UpdateFirmRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateFirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFirmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firms_.~RepeatedPtrField();
}

void UpdateFirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateFirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateFirmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_firms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFirmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateFirmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_firms_size()); i < n; i++) {
    const auto& repfield = this->_internal_firms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateFirmRequest)
  return target;
}

size_t UpdateFirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateFirmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  total_size += 1UL * this->_internal_firms_size();
  for (const auto& msg : this->_impl_.firms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateFirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFirmRequest::GetClassData() const { return &_class_data_; }


void UpdateFirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateFirmRequest*>(&to_msg);
  auto& from = static_cast<const UpdateFirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateFirmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firms_.MergeFrom(from._impl_.firms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFirmRequest::CopyFrom(const UpdateFirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateFirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFirmRequest::IsInitialized() const {
  return true;
}

void UpdateFirmRequest::InternalSwap(UpdateFirmRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firms_.InternalSwap(&other->_impl_.firms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[6]);
}

// ===================================================================

class UpdateFirmResponse::_Internal {
 public:
};

UpdateFirmResponse::UpdateFirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateFirmResponse)
}
UpdateFirmResponse::UpdateFirmResponse(const UpdateFirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateFirmResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateFirmResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFirmResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateFirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[7]);
}

// ===================================================================

class ListFirmsRequest::_Internal {
 public:
};

ListFirmsRequest::ListFirmsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListFirmsRequest)
}
ListFirmsRequest::ListFirmsRequest(const ListFirmsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListFirmsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListFirmsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFirmsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFirmsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListFirmsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[8]);
}

// ===================================================================

class ListFirmsResponse::_Internal {
 public:
};

void ListFirmsResponse::clear_firms() {
  _impl_.firms_.Clear();
}
ListFirmsResponse::ListFirmsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListFirmsResponse)
}
ListFirmsResponse::ListFirmsResponse(const ListFirmsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListFirmsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){from._impl_.firms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListFirmsResponse)
}

inline void ListFirmsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListFirmsResponse::~ListFirmsResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.ListFirmsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFirmsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firms_.~RepeatedPtrField();
}

void ListFirmsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListFirmsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.ListFirmsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFirmsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_firms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFirmsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.ListFirmsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_firms_size()); i < n; i++) {
    const auto& repfield = this->_internal_firms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.ListFirmsResponse)
  return target;
}

size_t ListFirmsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.ListFirmsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Firm firms = 1 [json_name = "firms"];
  total_size += 1UL * this->_internal_firms_size();
  for (const auto& msg : this->_impl_.firms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFirmsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListFirmsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFirmsResponse::GetClassData() const { return &_class_data_; }


void ListFirmsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListFirmsResponse*>(&to_msg);
  auto& from = static_cast<const ListFirmsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.ListFirmsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firms_.MergeFrom(from._impl_.firms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFirmsResponse::CopyFrom(const ListFirmsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.ListFirmsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFirmsResponse::IsInitialized() const {
  return true;
}

void ListFirmsResponse::InternalSwap(ListFirmsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firms_.InternalSwap(&other->_impl_.firms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFirmsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[9]);
}

// ===================================================================

class DeltaUpdateFirmRequest::_Internal {
 public:
};

DeltaUpdateFirmRequest::DeltaUpdateFirmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateFirmRequest)
}
DeltaUpdateFirmRequest::DeltaUpdateFirmRequest(const DeltaUpdateFirmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateFirmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){from._impl_.updates_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateFirmRequest)
}

inline void DeltaUpdateFirmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeltaUpdateFirmRequest::~DeltaUpdateFirmRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateFirmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateFirmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updates_.~RepeatedPtrField();
}

void DeltaUpdateFirmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateFirmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateFirmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateFirmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.FirmDeltaUpdate updates = 1 [json_name = "updates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateFirmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateFirmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.FirmDeltaUpdate updates = 1 [json_name = "updates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_updates_size()); i < n; i++) {
    const auto& repfield = this->_internal_updates(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateFirmRequest)
  return target;
}

size_t DeltaUpdateFirmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateFirmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.FirmDeltaUpdate updates = 1 [json_name = "updates"];
  total_size += 1UL * this->_internal_updates_size();
  for (const auto& msg : this->_impl_.updates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateFirmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateFirmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateFirmRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateFirmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateFirmRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateFirmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateFirmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updates_.MergeFrom(from._impl_.updates_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateFirmRequest::CopyFrom(const DeltaUpdateFirmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateFirmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateFirmRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateFirmRequest::InternalSwap(DeltaUpdateFirmRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateFirmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[10]);
}

// ===================================================================

class FirmDeltaUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<FirmDeltaUpdate>()._impl_._has_bits_);
  static void set_has_delta_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_delta_inventory(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delta_demand(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delta_sales(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

FirmDeltaUpdate::FirmDeltaUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.FirmDeltaUpdate)
}
FirmDeltaUpdate::FirmDeltaUpdate(const FirmDeltaUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FirmDeltaUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.add_employees_){from._impl_.add_employees_}
    , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_employees_){from._impl_.remove_employees_}
    , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.firm_id_){}
    , decltype(_impl_.delta_price_){}
    , decltype(_impl_.delta_inventory_){}
    , decltype(_impl_.delta_demand_){}
    , decltype(_impl_.delta_sales_){}
    , decltype(_impl_.delta_currency_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.firm_id_, &from._impl_.firm_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_currency_) -
    reinterpret_cast<char*>(&_impl_.firm_id_)) + sizeof(_impl_.delta_currency_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.FirmDeltaUpdate)
}

inline void FirmDeltaUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.add_employees_){arena}
    , /*decltype(_impl_._add_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_employees_){arena}
    , /*decltype(_impl_._remove_employees_cached_byte_size_)*/{0}
    , decltype(_impl_.firm_id_){0}
    , decltype(_impl_.delta_price_){0}
    , decltype(_impl_.delta_inventory_){0}
    , decltype(_impl_.delta_demand_){0}
    , decltype(_impl_.delta_sales_){0}
    , decltype(_impl_.delta_currency_){0}
  };
}

FirmDeltaUpdate::~FirmDeltaUpdate() {
  // @@protoc_insertion_point(destructor:city.economy.v2.FirmDeltaUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FirmDeltaUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.add_employees_.~RepeatedField();
  _impl_.remove_employees_.~RepeatedField();
}

void FirmDeltaUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FirmDeltaUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.FirmDeltaUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.add_employees_.Clear();
  _impl_.remove_employees_.Clear();
  _impl_.firm_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.delta_price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_currency_) -
        reinterpret_cast<char*>(&_impl_.delta_price_)) + sizeof(_impl_.delta_currency_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FirmDeltaUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 firm_id = 1 [json_name = "firmId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.firm_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_price = 2 [json_name = "deltaPrice"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_delta_price(&has_bits);
          _impl_.delta_price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 delta_inventory = 3 [json_name = "deltaInventory"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_delta_inventory(&has_bits);
          _impl_.delta_inventory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_demand = 4 [json_name = "deltaDemand"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_delta_demand(&has_bits);
          _impl_.delta_demand_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_sales = 5 [json_name = "deltaSales"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _Internal::set_has_delta_sales(&has_bits);
          _impl_.delta_sales_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 6 [json_name = "deltaCurrency"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_employees = 7 [json_name = "addEmployees"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_employees(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 56) {
          _internal_add_add_employees(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_employees = 8 [json_name = "removeEmployees"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_employees(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 64) {
          _internal_add_remove_employees(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FirmDeltaUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.FirmDeltaUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 firm_id = 1 [json_name = "firmId"];
  if (this->_internal_firm_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_firm_id(), target);
  }

  // optional float delta_price = 2 [json_name = "deltaPrice"];
  if (_internal_has_delta_price()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_delta_price(), target);
  }

  // optional int32 delta_inventory = 3 [json_name = "deltaInventory"];
  if (_internal_has_delta_inventory()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_delta_inventory(), target);
  }

  // optional float delta_demand = 4 [json_name = "deltaDemand"];
  if (_internal_has_delta_demand()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_delta_demand(), target);
  }

  // optional float delta_sales = 5 [json_name = "deltaSales"];
  if (_internal_has_delta_sales()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_delta_sales(), target);
  }

  // optional float delta_currency = 6 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_delta_currency(), target);
  }

  // repeated int32 add_employees = 7 [json_name = "addEmployees"];
  {
    int byte_size = _impl_._add_employees_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          7, _internal_add_employees(), byte_size, target);
    }
  }

  // repeated int32 remove_employees = 8 [json_name = "removeEmployees"];
  {
    int byte_size = _impl_._remove_employees_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_remove_employees(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.FirmDeltaUpdate)
  return target;
}

size_t FirmDeltaUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.FirmDeltaUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 add_employees = 7 [json_name = "addEmployees"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_employees_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_employees_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_employees = 8 [json_name = "removeEmployees"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_employees_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_employees_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 firm_id = 1 [json_name = "firmId"];
  if (this->_internal_firm_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_firm_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional float delta_price = 2 [json_name = "deltaPrice"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 delta_inventory = 3 [json_name = "deltaInventory"];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delta_inventory());
    }

    // optional float delta_demand = 4 [json_name = "deltaDemand"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float delta_sales = 5 [json_name = "deltaSales"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float delta_currency = 6 [json_name = "deltaCurrency"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FirmDeltaUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FirmDeltaUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FirmDeltaUpdate::GetClassData() const { return &_class_data_; }


void FirmDeltaUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FirmDeltaUpdate*>(&to_msg);
  auto& from = static_cast<const FirmDeltaUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.FirmDeltaUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.add_employees_.MergeFrom(from._impl_.add_employees_);
  _this->_impl_.remove_employees_.MergeFrom(from._impl_.remove_employees_);
  if (from._internal_firm_id() != 0) {
    _this->_internal_set_firm_id(from._internal_firm_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delta_price_ = from._impl_.delta_price_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.delta_inventory_ = from._impl_.delta_inventory_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.delta_demand_ = from._impl_.delta_demand_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delta_sales_ = from._impl_.delta_sales_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.delta_currency_ = from._impl_.delta_currency_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FirmDeltaUpdate::CopyFrom(const FirmDeltaUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.FirmDeltaUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FirmDeltaUpdate::IsInitialized() const {
  return true;
}

void FirmDeltaUpdate::InternalSwap(FirmDeltaUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.add_employees_.InternalSwap(&other->_impl_.add_employees_);
  _impl_.remove_employees_.InternalSwap(&other->_impl_.remove_employees_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FirmDeltaUpdate, _impl_.delta_currency_)
      + sizeof(FirmDeltaUpdate::_impl_.delta_currency_)
      - PROTOBUF_FIELD_OFFSET(FirmDeltaUpdate, _impl_.firm_id_)>(
          reinterpret_cast<char*>(&_impl_.firm_id_),
          reinterpret_cast<char*>(&other->_impl_.firm_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FirmDeltaUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[11]);
}

// ===================================================================

class DeltaUpdateFirmResponse::_Internal {
 public:
};

DeltaUpdateFirmResponse::DeltaUpdateFirmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateFirmResponse)
}
DeltaUpdateFirmResponse::DeltaUpdateFirmResponse(const DeltaUpdateFirmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateFirmResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateFirmResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateFirmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateFirmResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateFirmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[12]);
}

// ===================================================================

class AddNBSRequest::_Internal {
 public:
  static const ::city::economy::v2::NBS& nbs(const AddNBSRequest* msg);
};

const ::city::economy::v2::NBS&
AddNBSRequest::_Internal::nbs(const AddNBSRequest* msg) {
  return *msg->_impl_.nbs_;
}
void AddNBSRequest::clear_nbs() {
  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
}
AddNBSRequest::AddNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddNBSRequest)
}
AddNBSRequest::AddNBSRequest(const AddNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddNBSRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nbs()) {
    _this->_impl_.nbs_ = new ::city::economy::v2::NBS(*from._impl_.nbs_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddNBSRequest)
}

inline void AddNBSRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddNBSRequest::~AddNBSRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddNBSRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddNBSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.nbs_;
}

void AddNBSRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddNBSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddNBSRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddNBSRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nbs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddNBSRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddNBSRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::nbs(this),
        _Internal::nbs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddNBSRequest)
  return target;
}

size_t AddNBSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddNBSRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nbs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddNBSRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddNBSRequest::GetClassData() const { return &_class_data_; }


void AddNBSRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddNBSRequest*>(&to_msg);
  auto& from = static_cast<const AddNBSRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddNBSRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nbs()) {
    _this->_internal_mutable_nbs()->::city::economy::v2::NBS::MergeFrom(
        from._internal_nbs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddNBSRequest::CopyFrom(const AddNBSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddNBSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNBSRequest::IsInitialized() const {
  return true;
}

void AddNBSRequest::InternalSwap(AddNBSRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_, other->_impl_.nbs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[13]);
}

// ===================================================================

class AddNBSResponse::_Internal {
 public:
};

AddNBSResponse::AddNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddNBSResponse)
}
AddNBSResponse::AddNBSResponse(const AddNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddNBSResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddNBSResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddNBSResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[14]);
}

// ===================================================================

class RemoveNBSRequest::_Internal {
 public:
};

RemoveNBSRequest::RemoveNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveNBSRequest)
}
RemoveNBSRequest::RemoveNBSRequest(const RemoveNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveNBSRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.nbs_id_ = from._impl_.nbs_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveNBSRequest)
}

inline void RemoveNBSRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveNBSRequest::~RemoveNBSRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveNBSRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveNBSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveNBSRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveNBSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveNBSRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nbs_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveNBSRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nbs_id = 1 [json_name = "nbsId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nbs_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveNBSRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveNBSRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nbs_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveNBSRequest)
  return target;
}

size_t RemoveNBSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveNBSRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nbs_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveNBSRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveNBSRequest::GetClassData() const { return &_class_data_; }


void RemoveNBSRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveNBSRequest*>(&to_msg);
  auto& from = static_cast<const RemoveNBSRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveNBSRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nbs_id() != 0) {
    _this->_internal_set_nbs_id(from._internal_nbs_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveNBSRequest::CopyFrom(const RemoveNBSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveNBSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveNBSRequest::IsInitialized() const {
  return true;
}

void RemoveNBSRequest::InternalSwap(RemoveNBSRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_id_, other->_impl_.nbs_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[15]);
}

// ===================================================================

class RemoveNBSResponse::_Internal {
 public:
};

RemoveNBSResponse::RemoveNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveNBSResponse)
}
RemoveNBSResponse::RemoveNBSResponse(const RemoveNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveNBSResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveNBSResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveNBSResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[16]);
}

// ===================================================================

class GetNBSRequest::_Internal {
 public:
};

GetNBSRequest::GetNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetNBSRequest)
}
GetNBSRequest::GetNBSRequest(const GetNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNBSRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.nbs_id_ = from._impl_.nbs_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetNBSRequest)
}

inline void GetNBSRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNBSRequest::~GetNBSRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetNBSRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNBSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetNBSRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNBSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetNBSRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nbs_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNBSRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nbs_id = 1 [json_name = "nbsId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nbs_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNBSRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetNBSRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nbs_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetNBSRequest)
  return target;
}

size_t GetNBSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetNBSRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nbs_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNBSRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNBSRequest::GetClassData() const { return &_class_data_; }


void GetNBSRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNBSRequest*>(&to_msg);
  auto& from = static_cast<const GetNBSRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetNBSRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nbs_id() != 0) {
    _this->_internal_set_nbs_id(from._internal_nbs_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNBSRequest::CopyFrom(const GetNBSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetNBSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNBSRequest::IsInitialized() const {
  return true;
}

void GetNBSRequest::InternalSwap(GetNBSRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_id_, other->_impl_.nbs_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[17]);
}

// ===================================================================

class GetNBSResponse::_Internal {
 public:
  static const ::city::economy::v2::NBS& nbs(const GetNBSResponse* msg);
};

const ::city::economy::v2::NBS&
GetNBSResponse::_Internal::nbs(const GetNBSResponse* msg) {
  return *msg->_impl_.nbs_;
}
void GetNBSResponse::clear_nbs() {
  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
}
GetNBSResponse::GetNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetNBSResponse)
}
GetNBSResponse::GetNBSResponse(const GetNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNBSResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nbs()) {
    _this->_impl_.nbs_ = new ::city::economy::v2::NBS(*from._impl_.nbs_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetNBSResponse)
}

inline void GetNBSResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNBSResponse::~GetNBSResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetNBSResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNBSResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.nbs_;
}

void GetNBSResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNBSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetNBSResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNBSResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nbs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNBSResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetNBSResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::nbs(this),
        _Internal::nbs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetNBSResponse)
  return target;
}

size_t GetNBSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetNBSResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nbs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNBSResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNBSResponse::GetClassData() const { return &_class_data_; }


void GetNBSResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNBSResponse*>(&to_msg);
  auto& from = static_cast<const GetNBSResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetNBSResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nbs()) {
    _this->_internal_mutable_nbs()->::city::economy::v2::NBS::MergeFrom(
        from._internal_nbs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNBSResponse::CopyFrom(const GetNBSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetNBSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNBSResponse::IsInitialized() const {
  return true;
}

void GetNBSResponse::InternalSwap(GetNBSResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_, other->_impl_.nbs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[18]);
}

// ===================================================================

class UpdateNBSRequest::_Internal {
 public:
  static const ::city::economy::v2::NBS& nbs(const UpdateNBSRequest* msg);
};

const ::city::economy::v2::NBS&
UpdateNBSRequest::_Internal::nbs(const UpdateNBSRequest* msg) {
  return *msg->_impl_.nbs_;
}
void UpdateNBSRequest::clear_nbs() {
  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
}
UpdateNBSRequest::UpdateNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateNBSRequest)
}
UpdateNBSRequest::UpdateNBSRequest(const UpdateNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateNBSRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nbs()) {
    _this->_impl_.nbs_ = new ::city::economy::v2::NBS(*from._impl_.nbs_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateNBSRequest)
}

inline void UpdateNBSRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateNBSRequest::~UpdateNBSRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateNBSRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateNBSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.nbs_;
}

void UpdateNBSRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateNBSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateNBSRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.nbs_ != nullptr) {
    delete _impl_.nbs_;
  }
  _impl_.nbs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateNBSRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nbs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateNBSRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateNBSRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::nbs(this),
        _Internal::nbs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateNBSRequest)
  return target;
}

size_t UpdateNBSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateNBSRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.NBS nbs = 1 [json_name = "nbs"];
  if (this->_internal_has_nbs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nbs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateNBSRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNBSRequest::GetClassData() const { return &_class_data_; }


void UpdateNBSRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateNBSRequest*>(&to_msg);
  auto& from = static_cast<const UpdateNBSRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateNBSRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nbs()) {
    _this->_internal_mutable_nbs()->::city::economy::v2::NBS::MergeFrom(
        from._internal_nbs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNBSRequest::CopyFrom(const UpdateNBSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateNBSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNBSRequest::IsInitialized() const {
  return true;
}

void UpdateNBSRequest::InternalSwap(UpdateNBSRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_, other->_impl_.nbs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[19]);
}

// ===================================================================

class UpdateNBSResponse::_Internal {
 public:
};

UpdateNBSResponse::UpdateNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateNBSResponse)
}
UpdateNBSResponse::UpdateNBSResponse(const UpdateNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateNBSResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateNBSResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNBSResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[20]);
}

// ===================================================================

class ListNBSRequest::_Internal {
 public:
};

ListNBSRequest::ListNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListNBSRequest)
}
ListNBSRequest::ListNBSRequest(const ListNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListNBSRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListNBSRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNBSRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[21]);
}

// ===================================================================

class ListNBSResponse::_Internal {
 public:
};

void ListNBSResponse::clear_nbs_list() {
  _impl_.nbs_list_.Clear();
}
ListNBSResponse::ListNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListNBSResponse)
}
ListNBSResponse::ListNBSResponse(const ListNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListNBSResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_list_){from._impl_.nbs_list_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListNBSResponse)
}

inline void ListNBSResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_list_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListNBSResponse::~ListNBSResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.ListNBSResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListNBSResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nbs_list_.~RepeatedPtrField();
}

void ListNBSResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListNBSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.ListNBSResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nbs_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNBSResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.NBS nbs_list = 1 [json_name = "nbsList"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nbs_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNBSResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.ListNBSResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.NBS nbs_list = 1 [json_name = "nbsList"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nbs_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_nbs_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.ListNBSResponse)
  return target;
}

size_t ListNBSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.ListNBSResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.NBS nbs_list = 1 [json_name = "nbsList"];
  total_size += 1UL * this->_internal_nbs_list_size();
  for (const auto& msg : this->_impl_.nbs_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListNBSResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNBSResponse::GetClassData() const { return &_class_data_; }


void ListNBSResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListNBSResponse*>(&to_msg);
  auto& from = static_cast<const ListNBSResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.ListNBSResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nbs_list_.MergeFrom(from._impl_.nbs_list_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNBSResponse::CopyFrom(const ListNBSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.ListNBSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNBSResponse::IsInitialized() const {
  return true;
}

void ListNBSResponse::InternalSwap(ListNBSResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nbs_list_.InternalSwap(&other->_impl_.nbs_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[22]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[23]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[24]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[25]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[26]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[27]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[28]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[29]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[30]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[31]);
}

// ===================================================================

DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse() {}
DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::MergeFrom(const DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[32]);
}

// ===================================================================

class DeltaUpdateNBSRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DeltaUpdateNBSRequest>()._impl_._has_bits_);
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DeltaUpdateNBSRequest::DeltaUpdateNBSRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &DeltaUpdateNBSRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateNBSRequest)
}
DeltaUpdateNBSRequest::DeltaUpdateNBSRequest(const DeltaUpdateNBSRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateNBSRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.delta_nominal_gdp_)*/{}
    , /*decltype(_impl_.delta_real_gdp_)*/{}
    , /*decltype(_impl_.delta_unemployment_)*/{}
    , /*decltype(_impl_.delta_wages_)*/{}
    , /*decltype(_impl_.delta_prices_)*/{}
    , /*decltype(_impl_.delta_working_hours_)*/{}
    , /*decltype(_impl_.delta_depression_)*/{}
    , /*decltype(_impl_.delta_consumption_currency_)*/{}
    , /*decltype(_impl_.delta_income_currency_)*/{}
    , /*decltype(_impl_.delta_locus_control_)*/{}
    , decltype(_impl_.add_citizen_ids_){from._impl_.add_citizen_ids_}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){from._impl_.remove_citizen_ids_}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.add_citizen_agent_ids_){from._impl_.add_citizen_agent_ids_}
    , /*decltype(_impl_._add_citizen_agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_agent_ids_){from._impl_.remove_citizen_agent_ids_}
    , /*decltype(_impl_._remove_citizen_agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_id_){}
    , decltype(_impl_.delta_currency_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.delta_nominal_gdp_.MergeFrom(from._impl_.delta_nominal_gdp_);
  _this->_impl_.delta_real_gdp_.MergeFrom(from._impl_.delta_real_gdp_);
  _this->_impl_.delta_unemployment_.MergeFrom(from._impl_.delta_unemployment_);
  _this->_impl_.delta_wages_.MergeFrom(from._impl_.delta_wages_);
  _this->_impl_.delta_prices_.MergeFrom(from._impl_.delta_prices_);
  _this->_impl_.delta_working_hours_.MergeFrom(from._impl_.delta_working_hours_);
  _this->_impl_.delta_depression_.MergeFrom(from._impl_.delta_depression_);
  _this->_impl_.delta_consumption_currency_.MergeFrom(from._impl_.delta_consumption_currency_);
  _this->_impl_.delta_income_currency_.MergeFrom(from._impl_.delta_income_currency_);
  _this->_impl_.delta_locus_control_.MergeFrom(from._impl_.delta_locus_control_);
  ::memcpy(&_impl_.nbs_id_, &from._impl_.nbs_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_currency_) -
    reinterpret_cast<char*>(&_impl_.nbs_id_)) + sizeof(_impl_.delta_currency_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateNBSRequest)
}

inline void DeltaUpdateNBSRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.delta_nominal_gdp_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_real_gdp_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_unemployment_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_wages_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_prices_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_working_hours_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_depression_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_consumption_currency_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_income_currency_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.delta_locus_control_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.add_citizen_ids_){arena}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){arena}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.add_citizen_agent_ids_){arena}
    , /*decltype(_impl_._add_citizen_agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_agent_ids_){arena}
    , /*decltype(_impl_._remove_citizen_agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_id_){0}
    , decltype(_impl_.delta_currency_){0}
  };
}

DeltaUpdateNBSRequest::~DeltaUpdateNBSRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateNBSRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateNBSRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delta_nominal_gdp_.Destruct();
  _impl_.delta_nominal_gdp_.~MapField();
  _impl_.delta_real_gdp_.Destruct();
  _impl_.delta_real_gdp_.~MapField();
  _impl_.delta_unemployment_.Destruct();
  _impl_.delta_unemployment_.~MapField();
  _impl_.delta_wages_.Destruct();
  _impl_.delta_wages_.~MapField();
  _impl_.delta_prices_.Destruct();
  _impl_.delta_prices_.~MapField();
  _impl_.delta_working_hours_.Destruct();
  _impl_.delta_working_hours_.~MapField();
  _impl_.delta_depression_.Destruct();
  _impl_.delta_depression_.~MapField();
  _impl_.delta_consumption_currency_.Destruct();
  _impl_.delta_consumption_currency_.~MapField();
  _impl_.delta_income_currency_.Destruct();
  _impl_.delta_income_currency_.~MapField();
  _impl_.delta_locus_control_.Destruct();
  _impl_.delta_locus_control_.~MapField();
  _impl_.add_citizen_ids_.~RepeatedField();
  _impl_.remove_citizen_ids_.~RepeatedField();
  _impl_.add_citizen_agent_ids_.~RepeatedField();
  _impl_.remove_citizen_agent_ids_.~RepeatedField();
}

void DeltaUpdateNBSRequest::ArenaDtor(void* object) {
  DeltaUpdateNBSRequest* _this = reinterpret_cast< DeltaUpdateNBSRequest* >(object);
  _this->_impl_.delta_nominal_gdp_.Destruct();
  _this->_impl_.delta_real_gdp_.Destruct();
  _this->_impl_.delta_unemployment_.Destruct();
  _this->_impl_.delta_wages_.Destruct();
  _this->_impl_.delta_prices_.Destruct();
  _this->_impl_.delta_working_hours_.Destruct();
  _this->_impl_.delta_depression_.Destruct();
  _this->_impl_.delta_consumption_currency_.Destruct();
  _this->_impl_.delta_income_currency_.Destruct();
  _this->_impl_.delta_locus_control_.Destruct();
}
void DeltaUpdateNBSRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateNBSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateNBSRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delta_nominal_gdp_.Clear();
  _impl_.delta_real_gdp_.Clear();
  _impl_.delta_unemployment_.Clear();
  _impl_.delta_wages_.Clear();
  _impl_.delta_prices_.Clear();
  _impl_.delta_working_hours_.Clear();
  _impl_.delta_depression_.Clear();
  _impl_.delta_consumption_currency_.Clear();
  _impl_.delta_income_currency_.Clear();
  _impl_.delta_locus_control_.Clear();
  _impl_.add_citizen_ids_.Clear();
  _impl_.remove_citizen_ids_.Clear();
  _impl_.add_citizen_agent_ids_.Clear();
  _impl_.remove_citizen_agent_ids_.Clear();
  _impl_.nbs_id_ = 0;
  _impl_.delta_currency_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateNBSRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nbs_id = 1 [json_name = "nbsId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nbs_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_nominal_gdp_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_real_gdp = 3 [json_name = "deltaRealGdp"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_real_gdp_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_unemployment = 4 [json_name = "deltaUnemployment"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_unemployment_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_wages = 5 [json_name = "deltaWages"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_wages_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_prices = 6 [json_name = "deltaPrices"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_prices_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_working_hours = 7 [json_name = "deltaWorkingHours"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_working_hours_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_depression = 8 [json_name = "deltaDepression"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_depression_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_consumption_currency = 9 [json_name = "deltaConsumptionCurrency"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_consumption_currency_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_income_currency = 10 [json_name = "deltaIncomeCurrency"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_income_currency_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, float> delta_locus_control = 11 [json_name = "deltaLocusControl"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.delta_locus_control_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 12 [json_name = "deltaCurrency"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_citizen_ids = 13 [json_name = "addCitizenIds"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 104) {
          _internal_add_add_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_citizen_ids = 14 [json_name = "removeCitizenIds"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 112) {
          _internal_add_remove_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_citizen_agent_ids = 15 [json_name = "addCitizenAgentIds"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_citizen_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 120) {
          _internal_add_add_citizen_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_citizen_agent_ids = 16 [json_name = "removeCitizenAgentIds"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_citizen_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 128) {
          _internal_add_remove_citizen_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateNBSRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateNBSRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nbs_id(), target);
  }

  // map<string, float> delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
  if (!this->_internal_delta_nominal_gdp().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_nominal_gdp();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaNominalGdpEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_real_gdp = 3 [json_name = "deltaRealGdp"];
  if (!this->_internal_delta_real_gdp().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_real_gdp();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaRealGdpEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_unemployment = 4 [json_name = "deltaUnemployment"];
  if (!this->_internal_delta_unemployment().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_unemployment();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaUnemploymentEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_wages = 5 [json_name = "deltaWages"];
  if (!this->_internal_delta_wages().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_wages();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaWagesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_prices = 6 [json_name = "deltaPrices"];
  if (!this->_internal_delta_prices().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_prices();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaPricesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_working_hours = 7 [json_name = "deltaWorkingHours"];
  if (!this->_internal_delta_working_hours().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_working_hours();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaWorkingHoursEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(7, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_depression = 8 [json_name = "deltaDepression"];
  if (!this->_internal_delta_depression().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_depression();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaDepressionEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_consumption_currency = 9 [json_name = "deltaConsumptionCurrency"];
  if (!this->_internal_delta_consumption_currency().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_consumption_currency();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaConsumptionCurrencyEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(9, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_income_currency = 10 [json_name = "deltaIncomeCurrency"];
  if (!this->_internal_delta_income_currency().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_income_currency();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaIncomeCurrencyEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(10, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, float> delta_locus_control = 11 [json_name = "deltaLocusControl"];
  if (!this->_internal_delta_locus_control().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_delta_locus_control();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "city.economy.v2.DeltaUpdateNBSRequest.DeltaLocusControlEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // optional float delta_currency = 12 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(12, this->_internal_delta_currency(), target);
  }

  // repeated int32 add_citizen_ids = 13 [json_name = "addCitizenIds"];
  {
    int byte_size = _impl_._add_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          13, _internal_add_citizen_ids(), byte_size, target);
    }
  }

  // repeated int32 remove_citizen_ids = 14 [json_name = "removeCitizenIds"];
  {
    int byte_size = _impl_._remove_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          14, _internal_remove_citizen_ids(), byte_size, target);
    }
  }

  // repeated int32 add_citizen_agent_ids = 15 [json_name = "addCitizenAgentIds"];
  {
    int byte_size = _impl_._add_citizen_agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          15, _internal_add_citizen_agent_ids(), byte_size, target);
    }
  }

  // repeated int32 remove_citizen_agent_ids = 16 [json_name = "removeCitizenAgentIds"];
  {
    int byte_size = _impl_._remove_citizen_agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          16, _internal_remove_citizen_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateNBSRequest)
  return target;
}

size_t DeltaUpdateNBSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateNBSRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, float> delta_nominal_gdp = 2 [json_name = "deltaNominalGdp"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_nominal_gdp_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_nominal_gdp().begin();
      it != this->_internal_delta_nominal_gdp().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_real_gdp = 3 [json_name = "deltaRealGdp"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_real_gdp_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_real_gdp().begin();
      it != this->_internal_delta_real_gdp().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_unemployment = 4 [json_name = "deltaUnemployment"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_unemployment_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_unemployment().begin();
      it != this->_internal_delta_unemployment().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_wages = 5 [json_name = "deltaWages"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_wages_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_wages().begin();
      it != this->_internal_delta_wages().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_prices = 6 [json_name = "deltaPrices"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_prices_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_prices().begin();
      it != this->_internal_delta_prices().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_working_hours = 7 [json_name = "deltaWorkingHours"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_working_hours_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_working_hours().begin();
      it != this->_internal_delta_working_hours().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_depression = 8 [json_name = "deltaDepression"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_depression_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_depression().begin();
      it != this->_internal_delta_depression().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_consumption_currency = 9 [json_name = "deltaConsumptionCurrency"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_consumption_currency_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_consumption_currency().begin();
      it != this->_internal_delta_consumption_currency().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_income_currency = 10 [json_name = "deltaIncomeCurrency"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_income_currency_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_income_currency().begin();
      it != this->_internal_delta_income_currency().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, float> delta_locus_control = 11 [json_name = "deltaLocusControl"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_delta_locus_control_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_delta_locus_control().begin();
      it != this->_internal_delta_locus_control().end(); ++it) {
    total_size += DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated int32 add_citizen_ids = 13 [json_name = "addCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_citizen_ids = 14 [json_name = "removeCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 add_citizen_agent_ids = 15 [json_name = "addCitizenAgentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_citizen_agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_citizen_agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_citizen_agent_ids = 16 [json_name = "removeCitizenAgentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_citizen_agent_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_citizen_agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nbs_id());
  }

  // optional float delta_currency = 12 [json_name = "deltaCurrency"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateNBSRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateNBSRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateNBSRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateNBSRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateNBSRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateNBSRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateNBSRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.delta_nominal_gdp_.MergeFrom(from._impl_.delta_nominal_gdp_);
  _this->_impl_.delta_real_gdp_.MergeFrom(from._impl_.delta_real_gdp_);
  _this->_impl_.delta_unemployment_.MergeFrom(from._impl_.delta_unemployment_);
  _this->_impl_.delta_wages_.MergeFrom(from._impl_.delta_wages_);
  _this->_impl_.delta_prices_.MergeFrom(from._impl_.delta_prices_);
  _this->_impl_.delta_working_hours_.MergeFrom(from._impl_.delta_working_hours_);
  _this->_impl_.delta_depression_.MergeFrom(from._impl_.delta_depression_);
  _this->_impl_.delta_consumption_currency_.MergeFrom(from._impl_.delta_consumption_currency_);
  _this->_impl_.delta_income_currency_.MergeFrom(from._impl_.delta_income_currency_);
  _this->_impl_.delta_locus_control_.MergeFrom(from._impl_.delta_locus_control_);
  _this->_impl_.add_citizen_ids_.MergeFrom(from._impl_.add_citizen_ids_);
  _this->_impl_.remove_citizen_ids_.MergeFrom(from._impl_.remove_citizen_ids_);
  _this->_impl_.add_citizen_agent_ids_.MergeFrom(from._impl_.add_citizen_agent_ids_);
  _this->_impl_.remove_citizen_agent_ids_.MergeFrom(from._impl_.remove_citizen_agent_ids_);
  if (from._internal_nbs_id() != 0) {
    _this->_internal_set_nbs_id(from._internal_nbs_id());
  }
  if (from._internal_has_delta_currency()) {
    _this->_internal_set_delta_currency(from._internal_delta_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateNBSRequest::CopyFrom(const DeltaUpdateNBSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateNBSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateNBSRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateNBSRequest::InternalSwap(DeltaUpdateNBSRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.delta_nominal_gdp_.InternalSwap(&other->_impl_.delta_nominal_gdp_);
  _impl_.delta_real_gdp_.InternalSwap(&other->_impl_.delta_real_gdp_);
  _impl_.delta_unemployment_.InternalSwap(&other->_impl_.delta_unemployment_);
  _impl_.delta_wages_.InternalSwap(&other->_impl_.delta_wages_);
  _impl_.delta_prices_.InternalSwap(&other->_impl_.delta_prices_);
  _impl_.delta_working_hours_.InternalSwap(&other->_impl_.delta_working_hours_);
  _impl_.delta_depression_.InternalSwap(&other->_impl_.delta_depression_);
  _impl_.delta_consumption_currency_.InternalSwap(&other->_impl_.delta_consumption_currency_);
  _impl_.delta_income_currency_.InternalSwap(&other->_impl_.delta_income_currency_);
  _impl_.delta_locus_control_.InternalSwap(&other->_impl_.delta_locus_control_);
  _impl_.add_citizen_ids_.InternalSwap(&other->_impl_.add_citizen_ids_);
  _impl_.remove_citizen_ids_.InternalSwap(&other->_impl_.remove_citizen_ids_);
  _impl_.add_citizen_agent_ids_.InternalSwap(&other->_impl_.add_citizen_agent_ids_);
  _impl_.remove_citizen_agent_ids_.InternalSwap(&other->_impl_.remove_citizen_agent_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaUpdateNBSRequest, _impl_.delta_currency_)
      + sizeof(DeltaUpdateNBSRequest::_impl_.delta_currency_)
      - PROTOBUF_FIELD_OFFSET(DeltaUpdateNBSRequest, _impl_.nbs_id_)>(
          reinterpret_cast<char*>(&_impl_.nbs_id_),
          reinterpret_cast<char*>(&other->_impl_.nbs_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[33]);
}

// ===================================================================

class DeltaUpdateNBSResponse::_Internal {
 public:
};

DeltaUpdateNBSResponse::DeltaUpdateNBSResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateNBSResponse)
}
DeltaUpdateNBSResponse::DeltaUpdateNBSResponse(const DeltaUpdateNBSResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateNBSResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateNBSResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateNBSResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateNBSResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateNBSResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[34]);
}

// ===================================================================

class AddGovernmentRequest::_Internal {
 public:
  static const ::city::economy::v2::Government& government(const AddGovernmentRequest* msg);
};

const ::city::economy::v2::Government&
AddGovernmentRequest::_Internal::government(const AddGovernmentRequest* msg) {
  return *msg->_impl_.government_;
}
void AddGovernmentRequest::clear_government() {
  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
}
AddGovernmentRequest::AddGovernmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddGovernmentRequest)
}
AddGovernmentRequest::AddGovernmentRequest(const AddGovernmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddGovernmentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_government()) {
    _this->_impl_.government_ = new ::city::economy::v2::Government(*from._impl_.government_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddGovernmentRequest)
}

inline void AddGovernmentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddGovernmentRequest::~AddGovernmentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddGovernmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddGovernmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.government_;
}

void AddGovernmentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddGovernmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddGovernmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddGovernmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Government government = 1 [json_name = "government"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_government(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddGovernmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddGovernmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::government(this),
        _Internal::government(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddGovernmentRequest)
  return target;
}

size_t AddGovernmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddGovernmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.government_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddGovernmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddGovernmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddGovernmentRequest::GetClassData() const { return &_class_data_; }


void AddGovernmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddGovernmentRequest*>(&to_msg);
  auto& from = static_cast<const AddGovernmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddGovernmentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_government()) {
    _this->_internal_mutable_government()->::city::economy::v2::Government::MergeFrom(
        from._internal_government());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddGovernmentRequest::CopyFrom(const AddGovernmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddGovernmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGovernmentRequest::IsInitialized() const {
  return true;
}

void AddGovernmentRequest::InternalSwap(AddGovernmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.government_, other->_impl_.government_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGovernmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[35]);
}

// ===================================================================

class AddGovernmentResponse::_Internal {
 public:
};

AddGovernmentResponse::AddGovernmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddGovernmentResponse)
}
AddGovernmentResponse::AddGovernmentResponse(const AddGovernmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddGovernmentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddGovernmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddGovernmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddGovernmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddGovernmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[36]);
}

// ===================================================================

class RemoveGovernmentRequest::_Internal {
 public:
};

RemoveGovernmentRequest::RemoveGovernmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveGovernmentRequest)
}
RemoveGovernmentRequest::RemoveGovernmentRequest(const RemoveGovernmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveGovernmentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.government_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.government_id_ = from._impl_.government_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveGovernmentRequest)
}

inline void RemoveGovernmentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.government_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveGovernmentRequest::~RemoveGovernmentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveGovernmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveGovernmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveGovernmentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveGovernmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveGovernmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.government_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveGovernmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveGovernmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveGovernmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveGovernmentRequest)
  return target;
}

size_t RemoveGovernmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveGovernmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveGovernmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveGovernmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveGovernmentRequest::GetClassData() const { return &_class_data_; }


void RemoveGovernmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveGovernmentRequest*>(&to_msg);
  auto& from = static_cast<const RemoveGovernmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveGovernmentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveGovernmentRequest::CopyFrom(const RemoveGovernmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveGovernmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGovernmentRequest::IsInitialized() const {
  return true;
}

void RemoveGovernmentRequest::InternalSwap(RemoveGovernmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.government_id_, other->_impl_.government_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGovernmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[37]);
}

// ===================================================================

class RemoveGovernmentResponse::_Internal {
 public:
};

RemoveGovernmentResponse::RemoveGovernmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveGovernmentResponse)
}
RemoveGovernmentResponse::RemoveGovernmentResponse(const RemoveGovernmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveGovernmentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveGovernmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveGovernmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveGovernmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveGovernmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[38]);
}

// ===================================================================

class GetGovernmentRequest::_Internal {
 public:
};

GetGovernmentRequest::GetGovernmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetGovernmentRequest)
}
GetGovernmentRequest::GetGovernmentRequest(const GetGovernmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGovernmentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.government_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.government_id_ = from._impl_.government_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetGovernmentRequest)
}

inline void GetGovernmentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.government_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGovernmentRequest::~GetGovernmentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetGovernmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGovernmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGovernmentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGovernmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetGovernmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.government_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGovernmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGovernmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetGovernmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetGovernmentRequest)
  return target;
}

size_t GetGovernmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetGovernmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGovernmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGovernmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGovernmentRequest::GetClassData() const { return &_class_data_; }


void GetGovernmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGovernmentRequest*>(&to_msg);
  auto& from = static_cast<const GetGovernmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetGovernmentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGovernmentRequest::CopyFrom(const GetGovernmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetGovernmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGovernmentRequest::IsInitialized() const {
  return true;
}

void GetGovernmentRequest::InternalSwap(GetGovernmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.government_id_, other->_impl_.government_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGovernmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[39]);
}

// ===================================================================

class GetGovernmentResponse::_Internal {
 public:
  static const ::city::economy::v2::Government& government(const GetGovernmentResponse* msg);
};

const ::city::economy::v2::Government&
GetGovernmentResponse::_Internal::government(const GetGovernmentResponse* msg) {
  return *msg->_impl_.government_;
}
void GetGovernmentResponse::clear_government() {
  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
}
GetGovernmentResponse::GetGovernmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetGovernmentResponse)
}
GetGovernmentResponse::GetGovernmentResponse(const GetGovernmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGovernmentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_government()) {
    _this->_impl_.government_ = new ::city::economy::v2::Government(*from._impl_.government_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetGovernmentResponse)
}

inline void GetGovernmentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGovernmentResponse::~GetGovernmentResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetGovernmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGovernmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.government_;
}

void GetGovernmentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGovernmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetGovernmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGovernmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Government government = 1 [json_name = "government"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_government(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGovernmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetGovernmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::government(this),
        _Internal::government(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetGovernmentResponse)
  return target;
}

size_t GetGovernmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetGovernmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.government_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGovernmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGovernmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGovernmentResponse::GetClassData() const { return &_class_data_; }


void GetGovernmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGovernmentResponse*>(&to_msg);
  auto& from = static_cast<const GetGovernmentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetGovernmentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_government()) {
    _this->_internal_mutable_government()->::city::economy::v2::Government::MergeFrom(
        from._internal_government());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGovernmentResponse::CopyFrom(const GetGovernmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetGovernmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGovernmentResponse::IsInitialized() const {
  return true;
}

void GetGovernmentResponse::InternalSwap(GetGovernmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.government_, other->_impl_.government_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGovernmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[40]);
}

// ===================================================================

class UpdateGovernmentRequest::_Internal {
 public:
  static const ::city::economy::v2::Government& government(const UpdateGovernmentRequest* msg);
};

const ::city::economy::v2::Government&
UpdateGovernmentRequest::_Internal::government(const UpdateGovernmentRequest* msg) {
  return *msg->_impl_.government_;
}
void UpdateGovernmentRequest::clear_government() {
  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
}
UpdateGovernmentRequest::UpdateGovernmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateGovernmentRequest)
}
UpdateGovernmentRequest::UpdateGovernmentRequest(const UpdateGovernmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateGovernmentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_government()) {
    _this->_impl_.government_ = new ::city::economy::v2::Government(*from._impl_.government_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateGovernmentRequest)
}

inline void UpdateGovernmentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.government_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateGovernmentRequest::~UpdateGovernmentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateGovernmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateGovernmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.government_;
}

void UpdateGovernmentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateGovernmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateGovernmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.government_ != nullptr) {
    delete _impl_.government_;
  }
  _impl_.government_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGovernmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Government government = 1 [json_name = "government"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_government(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateGovernmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateGovernmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::government(this),
        _Internal::government(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateGovernmentRequest)
  return target;
}

size_t UpdateGovernmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateGovernmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Government government = 1 [json_name = "government"];
  if (this->_internal_has_government()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.government_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateGovernmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateGovernmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateGovernmentRequest::GetClassData() const { return &_class_data_; }


void UpdateGovernmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateGovernmentRequest*>(&to_msg);
  auto& from = static_cast<const UpdateGovernmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateGovernmentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_government()) {
    _this->_internal_mutable_government()->::city::economy::v2::Government::MergeFrom(
        from._internal_government());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateGovernmentRequest::CopyFrom(const UpdateGovernmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateGovernmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGovernmentRequest::IsInitialized() const {
  return true;
}

void UpdateGovernmentRequest::InternalSwap(UpdateGovernmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.government_, other->_impl_.government_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGovernmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[41]);
}

// ===================================================================

class UpdateGovernmentResponse::_Internal {
 public:
};

UpdateGovernmentResponse::UpdateGovernmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateGovernmentResponse)
}
UpdateGovernmentResponse::UpdateGovernmentResponse(const UpdateGovernmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateGovernmentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateGovernmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateGovernmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateGovernmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateGovernmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[42]);
}

// ===================================================================

class ListGovernmentsRequest::_Internal {
 public:
};

ListGovernmentsRequest::ListGovernmentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListGovernmentsRequest)
}
ListGovernmentsRequest::ListGovernmentsRequest(const ListGovernmentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListGovernmentsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListGovernmentsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListGovernmentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListGovernmentsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListGovernmentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[43]);
}

// ===================================================================

class ListGovernmentsResponse::_Internal {
 public:
};

void ListGovernmentsResponse::clear_governments() {
  _impl_.governments_.Clear();
}
ListGovernmentsResponse::ListGovernmentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListGovernmentsResponse)
}
ListGovernmentsResponse::ListGovernmentsResponse(const ListGovernmentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListGovernmentsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.governments_){from._impl_.governments_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListGovernmentsResponse)
}

inline void ListGovernmentsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.governments_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListGovernmentsResponse::~ListGovernmentsResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.ListGovernmentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListGovernmentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.governments_.~RepeatedPtrField();
}

void ListGovernmentsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListGovernmentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.ListGovernmentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.governments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListGovernmentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Government governments = 1 [json_name = "governments"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_governments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListGovernmentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.ListGovernmentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Government governments = 1 [json_name = "governments"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_governments_size()); i < n; i++) {
    const auto& repfield = this->_internal_governments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.ListGovernmentsResponse)
  return target;
}

size_t ListGovernmentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.ListGovernmentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Government governments = 1 [json_name = "governments"];
  total_size += 1UL * this->_internal_governments_size();
  for (const auto& msg : this->_impl_.governments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListGovernmentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListGovernmentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListGovernmentsResponse::GetClassData() const { return &_class_data_; }


void ListGovernmentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListGovernmentsResponse*>(&to_msg);
  auto& from = static_cast<const ListGovernmentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.ListGovernmentsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.governments_.MergeFrom(from._impl_.governments_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListGovernmentsResponse::CopyFrom(const ListGovernmentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.ListGovernmentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListGovernmentsResponse::IsInitialized() const {
  return true;
}

void ListGovernmentsResponse::InternalSwap(ListGovernmentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.governments_.InternalSwap(&other->_impl_.governments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListGovernmentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[44]);
}

// ===================================================================

class DeltaUpdateGovernmentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DeltaUpdateGovernmentRequest>()._impl_._has_bits_);
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DeltaUpdateGovernmentRequest::DeltaUpdateGovernmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateGovernmentRequest)
}
DeltaUpdateGovernmentRequest::DeltaUpdateGovernmentRequest(const DeltaUpdateGovernmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateGovernmentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delta_bracket_cutoffs_){from._impl_.delta_bracket_cutoffs_}
    , decltype(_impl_.delta_bracket_rates_){from._impl_.delta_bracket_rates_}
    , decltype(_impl_.add_citizen_ids_){from._impl_.add_citizen_ids_}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){from._impl_.remove_citizen_ids_}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_id_){}
    , decltype(_impl_.delta_currency_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.government_id_, &from._impl_.government_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_currency_) -
    reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.delta_currency_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateGovernmentRequest)
}

inline void DeltaUpdateGovernmentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.delta_bracket_cutoffs_){arena}
    , decltype(_impl_.delta_bracket_rates_){arena}
    , decltype(_impl_.add_citizen_ids_){arena}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){arena}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_id_){0}
    , decltype(_impl_.delta_currency_){0}
  };
}

DeltaUpdateGovernmentRequest::~DeltaUpdateGovernmentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateGovernmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateGovernmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.delta_bracket_cutoffs_.~RepeatedField();
  _impl_.delta_bracket_rates_.~RepeatedField();
  _impl_.add_citizen_ids_.~RepeatedField();
  _impl_.remove_citizen_ids_.~RepeatedField();
}

void DeltaUpdateGovernmentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateGovernmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateGovernmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delta_bracket_cutoffs_.Clear();
  _impl_.delta_bracket_rates_.Clear();
  _impl_.add_citizen_ids_.Clear();
  _impl_.remove_citizen_ids_.Clear();
  _impl_.government_id_ = 0;
  _impl_.delta_currency_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateGovernmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_bracket_cutoffs = 2 [json_name = "deltaBracketCutoffs"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_bracket_cutoffs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_delta_bracket_cutoffs(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float delta_bracket_rates = 3 [json_name = "deltaBracketRates"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_delta_bracket_rates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 29) {
          _internal_add_delta_bracket_rates(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 4 [json_name = "deltaCurrency"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_citizen_ids = 5 [json_name = "addCitizenIds"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_add_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_citizen_ids = 6 [json_name = "removeCitizenIds"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 48) {
          _internal_add_remove_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateGovernmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateGovernmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  // repeated float delta_bracket_cutoffs = 2 [json_name = "deltaBracketCutoffs"];
  if (this->_internal_delta_bracket_cutoffs_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_delta_bracket_cutoffs(), target);
  }

  // repeated float delta_bracket_rates = 3 [json_name = "deltaBracketRates"];
  if (this->_internal_delta_bracket_rates_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_delta_bracket_rates(), target);
  }

  // optional float delta_currency = 4 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_delta_currency(), target);
  }

  // repeated int32 add_citizen_ids = 5 [json_name = "addCitizenIds"];
  {
    int byte_size = _impl_._add_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_add_citizen_ids(), byte_size, target);
    }
  }

  // repeated int32 remove_citizen_ids = 6 [json_name = "removeCitizenIds"];
  {
    int byte_size = _impl_._remove_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, _internal_remove_citizen_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateGovernmentRequest)
  return target;
}

size_t DeltaUpdateGovernmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateGovernmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float delta_bracket_cutoffs = 2 [json_name = "deltaBracketCutoffs"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_bracket_cutoffs_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float delta_bracket_rates = 3 [json_name = "deltaBracketRates"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_delta_bracket_rates_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated int32 add_citizen_ids = 5 [json_name = "addCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_citizen_ids = 6 [json_name = "removeCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  // optional float delta_currency = 4 [json_name = "deltaCurrency"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateGovernmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateGovernmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateGovernmentRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateGovernmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateGovernmentRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateGovernmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateGovernmentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.delta_bracket_cutoffs_.MergeFrom(from._impl_.delta_bracket_cutoffs_);
  _this->_impl_.delta_bracket_rates_.MergeFrom(from._impl_.delta_bracket_rates_);
  _this->_impl_.add_citizen_ids_.MergeFrom(from._impl_.add_citizen_ids_);
  _this->_impl_.remove_citizen_ids_.MergeFrom(from._impl_.remove_citizen_ids_);
  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  if (from._internal_has_delta_currency()) {
    _this->_internal_set_delta_currency(from._internal_delta_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateGovernmentRequest::CopyFrom(const DeltaUpdateGovernmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateGovernmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateGovernmentRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateGovernmentRequest::InternalSwap(DeltaUpdateGovernmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.delta_bracket_cutoffs_.InternalSwap(&other->_impl_.delta_bracket_cutoffs_);
  _impl_.delta_bracket_rates_.InternalSwap(&other->_impl_.delta_bracket_rates_);
  _impl_.add_citizen_ids_.InternalSwap(&other->_impl_.add_citizen_ids_);
  _impl_.remove_citizen_ids_.InternalSwap(&other->_impl_.remove_citizen_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaUpdateGovernmentRequest, _impl_.delta_currency_)
      + sizeof(DeltaUpdateGovernmentRequest::_impl_.delta_currency_)
      - PROTOBUF_FIELD_OFFSET(DeltaUpdateGovernmentRequest, _impl_.government_id_)>(
          reinterpret_cast<char*>(&_impl_.government_id_),
          reinterpret_cast<char*>(&other->_impl_.government_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateGovernmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[45]);
}

// ===================================================================

class DeltaUpdateGovernmentResponse::_Internal {
 public:
};

DeltaUpdateGovernmentResponse::DeltaUpdateGovernmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateGovernmentResponse)
}
DeltaUpdateGovernmentResponse::DeltaUpdateGovernmentResponse(const DeltaUpdateGovernmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateGovernmentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateGovernmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateGovernmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateGovernmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateGovernmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[46]);
}

// ===================================================================

class AddBankRequest::_Internal {
 public:
  static const ::city::economy::v2::Bank& bank(const AddBankRequest* msg);
};

const ::city::economy::v2::Bank&
AddBankRequest::_Internal::bank(const AddBankRequest* msg) {
  return *msg->_impl_.bank_;
}
void AddBankRequest::clear_bank() {
  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
}
AddBankRequest::AddBankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddBankRequest)
}
AddBankRequest::AddBankRequest(const AddBankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddBankRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bank()) {
    _this->_impl_.bank_ = new ::city::economy::v2::Bank(*from._impl_.bank_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddBankRequest)
}

inline void AddBankRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddBankRequest::~AddBankRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddBankRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddBankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bank_;
}

void AddBankRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddBankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddBankRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBankRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddBankRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddBankRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bank(this),
        _Internal::bank(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddBankRequest)
  return target;
}

size_t AddBankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddBankRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bank_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBankRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddBankRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBankRequest::GetClassData() const { return &_class_data_; }


void AddBankRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddBankRequest*>(&to_msg);
  auto& from = static_cast<const AddBankRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddBankRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bank()) {
    _this->_internal_mutable_bank()->::city::economy::v2::Bank::MergeFrom(
        from._internal_bank());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddBankRequest::CopyFrom(const AddBankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddBankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBankRequest::IsInitialized() const {
  return true;
}

void AddBankRequest::InternalSwap(AddBankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.bank_, other->_impl_.bank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBankRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[47]);
}

// ===================================================================

class AddBankResponse::_Internal {
 public:
};

AddBankResponse::AddBankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddBankResponse)
}
AddBankResponse::AddBankResponse(const AddBankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddBankResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddBankResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBankResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBankResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddBankResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[48]);
}

// ===================================================================

class RemoveBankRequest::_Internal {
 public:
};

RemoveBankRequest::RemoveBankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveBankRequest)
}
RemoveBankRequest::RemoveBankRequest(const RemoveBankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveBankRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bank_id_ = from._impl_.bank_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveBankRequest)
}

inline void RemoveBankRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveBankRequest::~RemoveBankRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveBankRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveBankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveBankRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveBankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveBankRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bank_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveBankRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveBankRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveBankRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveBankRequest)
  return target;
}

size_t RemoveBankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveBankRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveBankRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveBankRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveBankRequest::GetClassData() const { return &_class_data_; }


void RemoveBankRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveBankRequest*>(&to_msg);
  auto& from = static_cast<const RemoveBankRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveBankRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveBankRequest::CopyFrom(const RemoveBankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveBankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveBankRequest::IsInitialized() const {
  return true;
}

void RemoveBankRequest::InternalSwap(RemoveBankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.bank_id_, other->_impl_.bank_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveBankRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[49]);
}

// ===================================================================

class RemoveBankResponse::_Internal {
 public:
};

RemoveBankResponse::RemoveBankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveBankResponse)
}
RemoveBankResponse::RemoveBankResponse(const RemoveBankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveBankResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveBankResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveBankResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveBankResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveBankResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[50]);
}

// ===================================================================

class GetBankRequest::_Internal {
 public:
};

GetBankRequest::GetBankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBankRequest)
}
GetBankRequest::GetBankRequest(const GetBankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBankRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bank_id_ = from._impl_.bank_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBankRequest)
}

inline void GetBankRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBankRequest::~GetBankRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBankRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBankRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBankRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bank_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBankRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBankRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBankRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBankRequest)
  return target;
}

size_t GetBankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBankRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBankRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBankRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBankRequest::GetClassData() const { return &_class_data_; }


void GetBankRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBankRequest*>(&to_msg);
  auto& from = static_cast<const GetBankRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBankRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBankRequest::CopyFrom(const GetBankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBankRequest::IsInitialized() const {
  return true;
}

void GetBankRequest::InternalSwap(GetBankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.bank_id_, other->_impl_.bank_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBankRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[51]);
}

// ===================================================================

class GetBankResponse::_Internal {
 public:
  static const ::city::economy::v2::Bank& bank(const GetBankResponse* msg);
};

const ::city::economy::v2::Bank&
GetBankResponse::_Internal::bank(const GetBankResponse* msg) {
  return *msg->_impl_.bank_;
}
void GetBankResponse::clear_bank() {
  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
}
GetBankResponse::GetBankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBankResponse)
}
GetBankResponse::GetBankResponse(const GetBankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBankResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bank()) {
    _this->_impl_.bank_ = new ::city::economy::v2::Bank(*from._impl_.bank_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBankResponse)
}

inline void GetBankResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBankResponse::~GetBankResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBankResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBankResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bank_;
}

void GetBankResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBankResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBankResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBankResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBankResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBankResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bank(this),
        _Internal::bank(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBankResponse)
  return target;
}

size_t GetBankResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBankResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bank_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBankResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBankResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBankResponse::GetClassData() const { return &_class_data_; }


void GetBankResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBankResponse*>(&to_msg);
  auto& from = static_cast<const GetBankResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBankResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bank()) {
    _this->_internal_mutable_bank()->::city::economy::v2::Bank::MergeFrom(
        from._internal_bank());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBankResponse::CopyFrom(const GetBankResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBankResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBankResponse::IsInitialized() const {
  return true;
}

void GetBankResponse::InternalSwap(GetBankResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.bank_, other->_impl_.bank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBankResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[52]);
}

// ===================================================================

class UpdateBankRequest::_Internal {
 public:
  static const ::city::economy::v2::Bank& bank(const UpdateBankRequest* msg);
};

const ::city::economy::v2::Bank&
UpdateBankRequest::_Internal::bank(const UpdateBankRequest* msg) {
  return *msg->_impl_.bank_;
}
void UpdateBankRequest::clear_bank() {
  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
}
UpdateBankRequest::UpdateBankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateBankRequest)
}
UpdateBankRequest::UpdateBankRequest(const UpdateBankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateBankRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bank()) {
    _this->_impl_.bank_ = new ::city::economy::v2::Bank(*from._impl_.bank_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateBankRequest)
}

inline void UpdateBankRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bank_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateBankRequest::~UpdateBankRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateBankRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateBankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bank_;
}

void UpdateBankRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateBankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateBankRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.bank_ != nullptr) {
    delete _impl_.bank_;
  }
  _impl_.bank_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBankRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateBankRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateBankRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::bank(this),
        _Internal::bank(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateBankRequest)
  return target;
}

size_t UpdateBankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateBankRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Bank bank = 1 [json_name = "bank"];
  if (this->_internal_has_bank()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bank_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBankRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateBankRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBankRequest::GetClassData() const { return &_class_data_; }


void UpdateBankRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateBankRequest*>(&to_msg);
  auto& from = static_cast<const UpdateBankRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateBankRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bank()) {
    _this->_internal_mutable_bank()->::city::economy::v2::Bank::MergeFrom(
        from._internal_bank());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBankRequest::CopyFrom(const UpdateBankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateBankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBankRequest::IsInitialized() const {
  return true;
}

void UpdateBankRequest::InternalSwap(UpdateBankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.bank_, other->_impl_.bank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBankRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[53]);
}

// ===================================================================

class UpdateBankResponse::_Internal {
 public:
};

UpdateBankResponse::UpdateBankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateBankResponse)
}
UpdateBankResponse::UpdateBankResponse(const UpdateBankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateBankResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateBankResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBankResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBankResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateBankResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[54]);
}

// ===================================================================

class ListBanksRequest::_Internal {
 public:
};

ListBanksRequest::ListBanksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListBanksRequest)
}
ListBanksRequest::ListBanksRequest(const ListBanksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListBanksRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListBanksRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBanksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBanksRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListBanksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[55]);
}

// ===================================================================

class ListBanksResponse::_Internal {
 public:
};

void ListBanksResponse::clear_banks() {
  _impl_.banks_.Clear();
}
ListBanksResponse::ListBanksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListBanksResponse)
}
ListBanksResponse::ListBanksResponse(const ListBanksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBanksResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.banks_){from._impl_.banks_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListBanksResponse)
}

inline void ListBanksResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.banks_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListBanksResponse::~ListBanksResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.ListBanksResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBanksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.banks_.~RepeatedPtrField();
}

void ListBanksResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBanksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.ListBanksResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.banks_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBanksResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Bank banks = 1 [json_name = "banks"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_banks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBanksResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.ListBanksResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Bank banks = 1 [json_name = "banks"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_banks_size()); i < n; i++) {
    const auto& repfield = this->_internal_banks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.ListBanksResponse)
  return target;
}

size_t ListBanksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.ListBanksResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Bank banks = 1 [json_name = "banks"];
  total_size += 1UL * this->_internal_banks_size();
  for (const auto& msg : this->_impl_.banks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBanksResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBanksResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBanksResponse::GetClassData() const { return &_class_data_; }


void ListBanksResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBanksResponse*>(&to_msg);
  auto& from = static_cast<const ListBanksResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.ListBanksResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.banks_.MergeFrom(from._impl_.banks_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBanksResponse::CopyFrom(const ListBanksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.ListBanksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBanksResponse::IsInitialized() const {
  return true;
}

void ListBanksResponse::InternalSwap(ListBanksResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.banks_.InternalSwap(&other->_impl_.banks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBanksResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[56]);
}

// ===================================================================

class DeltaUpdateBankRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DeltaUpdateBankRequest>()._impl_._has_bits_);
  static void set_has_delta_interest_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

DeltaUpdateBankRequest::DeltaUpdateBankRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateBankRequest)
}
DeltaUpdateBankRequest::DeltaUpdateBankRequest(const DeltaUpdateBankRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateBankRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.add_citizen_ids_){from._impl_.add_citizen_ids_}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){from._impl_.remove_citizen_ids_}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){}
    , decltype(_impl_.delta_interest_rate_){}
    , decltype(_impl_.delta_currency_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bank_id_, &from._impl_.bank_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_currency_) -
    reinterpret_cast<char*>(&_impl_.bank_id_)) + sizeof(_impl_.delta_currency_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateBankRequest)
}

inline void DeltaUpdateBankRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.add_citizen_ids_){arena}
    , /*decltype(_impl_._add_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.remove_citizen_ids_){arena}
    , /*decltype(_impl_._remove_citizen_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){0}
    , decltype(_impl_.delta_interest_rate_){0}
    , decltype(_impl_.delta_currency_){0}
  };
}

DeltaUpdateBankRequest::~DeltaUpdateBankRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateBankRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateBankRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.add_citizen_ids_.~RepeatedField();
  _impl_.remove_citizen_ids_.~RepeatedField();
}

void DeltaUpdateBankRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateBankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateBankRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.add_citizen_ids_.Clear();
  _impl_.remove_citizen_ids_.Clear();
  _impl_.bank_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.delta_interest_rate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_currency_) -
        reinterpret_cast<char*>(&_impl_.delta_interest_rate_)) + sizeof(_impl_.delta_currency_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateBankRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_interest_rate = 2 [json_name = "deltaInterestRate"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_delta_interest_rate(&has_bits);
          _impl_.delta_interest_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 3 [json_name = "deltaCurrency"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 add_citizen_ids = 4 [json_name = "addCitizenIds"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_add_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_add_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 remove_citizen_ids = 5 [json_name = "removeCitizenIds"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_remove_citizen_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_remove_citizen_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateBankRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateBankRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  // optional float delta_interest_rate = 2 [json_name = "deltaInterestRate"];
  if (_internal_has_delta_interest_rate()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_delta_interest_rate(), target);
  }

  // optional float delta_currency = 3 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_delta_currency(), target);
  }

  // repeated int32 add_citizen_ids = 4 [json_name = "addCitizenIds"];
  {
    int byte_size = _impl_._add_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_add_citizen_ids(), byte_size, target);
    }
  }

  // repeated int32 remove_citizen_ids = 5 [json_name = "removeCitizenIds"];
  {
    int byte_size = _impl_._remove_citizen_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_remove_citizen_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateBankRequest)
  return target;
}

size_t DeltaUpdateBankRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateBankRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 add_citizen_ids = 4 [json_name = "addCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.add_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._add_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 remove_citizen_ids = 5 [json_name = "removeCitizenIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.remove_citizen_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._remove_citizen_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional float delta_interest_rate = 2 [json_name = "deltaInterestRate"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float delta_currency = 3 [json_name = "deltaCurrency"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateBankRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateBankRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateBankRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateBankRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateBankRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateBankRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateBankRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.add_citizen_ids_.MergeFrom(from._impl_.add_citizen_ids_);
  _this->_impl_.remove_citizen_ids_.MergeFrom(from._impl_.remove_citizen_ids_);
  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delta_interest_rate_ = from._impl_.delta_interest_rate_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.delta_currency_ = from._impl_.delta_currency_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateBankRequest::CopyFrom(const DeltaUpdateBankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateBankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateBankRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateBankRequest::InternalSwap(DeltaUpdateBankRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.add_citizen_ids_.InternalSwap(&other->_impl_.add_citizen_ids_);
  _impl_.remove_citizen_ids_.InternalSwap(&other->_impl_.remove_citizen_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaUpdateBankRequest, _impl_.delta_currency_)
      + sizeof(DeltaUpdateBankRequest::_impl_.delta_currency_)
      - PROTOBUF_FIELD_OFFSET(DeltaUpdateBankRequest, _impl_.bank_id_)>(
          reinterpret_cast<char*>(&_impl_.bank_id_),
          reinterpret_cast<char*>(&other->_impl_.bank_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateBankRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[57]);
}

// ===================================================================

class DeltaUpdateBankResponse::_Internal {
 public:
};

DeltaUpdateBankResponse::DeltaUpdateBankResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateBankResponse)
}
DeltaUpdateBankResponse::DeltaUpdateBankResponse(const DeltaUpdateBankResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateBankResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateBankResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateBankResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateBankResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateBankResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[58]);
}

// ===================================================================

class AddAgentRequest::_Internal {
 public:
};

void AddAgentRequest::clear_agents() {
  _impl_.agents_.Clear();
}
AddAgentRequest::AddAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentRequest)
}
AddAgentRequest::AddAgentRequest(const AddAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentRequest)
}

inline void AddAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentRequest::~AddAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
}

void AddAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddAgentRequest)
  return target;
}

size_t AddAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentRequest::GetClassData() const { return &_class_data_; }


void AddAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentRequest*>(&to_msg);
  auto& from = static_cast<const AddAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentRequest::CopyFrom(const AddAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentRequest::IsInitialized() const {
  return true;
}

void AddAgentRequest::InternalSwap(AddAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[59]);
}

// ===================================================================

class AddAgentResponse::_Internal {
 public:
};

AddAgentResponse::AddAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentResponse)
}
AddAgentResponse::AddAgentResponse(const AddAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentResponse)
}

inline void AddAgentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentResponse::~AddAgentResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddAgentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void AddAgentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddAgentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 agent_ids = 1 [json_name = "agentIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddAgentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddAgentResponse)
  return target;
}

size_t AddAgentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddAgentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentResponse::GetClassData() const { return &_class_data_; }


void AddAgentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentResponse*>(&to_msg);
  auto& from = static_cast<const AddAgentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddAgentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentResponse::CopyFrom(const AddAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentResponse::IsInitialized() const {
  return true;
}

void AddAgentResponse::InternalSwap(AddAgentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[60]);
}

// ===================================================================

class RemoveAgentRequest::_Internal {
 public:
};

RemoveAgentRequest::RemoveAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentRequest)
}
RemoveAgentRequest::RemoveAgentRequest(const RemoveAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentRequest)
}

inline void RemoveAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveAgentRequest::~RemoveAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void RemoveAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 agent_ids = 1 [json_name = "agentIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveAgentRequest)
  return target;
}

size_t RemoveAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentRequest::GetClassData() const { return &_class_data_; }


void RemoveAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveAgentRequest*>(&to_msg);
  auto& from = static_cast<const RemoveAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveAgentRequest::CopyFrom(const RemoveAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAgentRequest::IsInitialized() const {
  return true;
}

void RemoveAgentRequest::InternalSwap(RemoveAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[61]);
}

// ===================================================================

class RemoveAgentResponse::_Internal {
 public:
};

RemoveAgentResponse::RemoveAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentResponse)
}
RemoveAgentResponse::RemoveAgentResponse(const RemoveAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[62]);
}

// ===================================================================

class GetAgentRequest::_Internal {
 public:
};

GetAgentRequest::GetAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetAgentRequest)
}
GetAgentRequest::GetAgentRequest(const GetAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetAgentRequest)
}

inline void GetAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentRequest::~GetAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void GetAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 agent_ids = 1 [json_name = "agentIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetAgentRequest)
  return target;
}

size_t GetAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentRequest::GetClassData() const { return &_class_data_; }


void GetAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentRequest*>(&to_msg);
  auto& from = static_cast<const GetAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentRequest::CopyFrom(const GetAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentRequest::IsInitialized() const {
  return true;
}

void GetAgentRequest::InternalSwap(GetAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[63]);
}

// ===================================================================

class GetAgentResponse::_Internal {
 public:
};

void GetAgentResponse::clear_agents() {
  _impl_.agents_.Clear();
}
GetAgentResponse::GetAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetAgentResponse)
}
GetAgentResponse::GetAgentResponse(const GetAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAgentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetAgentResponse)
}

inline void GetAgentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAgentResponse::~GetAgentResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetAgentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAgentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
}

void GetAgentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAgentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAgentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetAgentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetAgentResponse)
  return target;
}

size_t GetAgentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetAgentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAgentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAgentResponse::GetClassData() const { return &_class_data_; }


void GetAgentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAgentResponse*>(&to_msg);
  auto& from = static_cast<const GetAgentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetAgentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentResponse::CopyFrom(const GetAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAgentResponse::IsInitialized() const {
  return true;
}

void GetAgentResponse::InternalSwap(GetAgentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[64]);
}

// ===================================================================

class UpdateAgentRequest::_Internal {
 public:
};

void UpdateAgentRequest::clear_agents() {
  _impl_.agents_.Clear();
}
UpdateAgentRequest::UpdateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateAgentRequest)
}
UpdateAgentRequest::UpdateAgentRequest(const UpdateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateAgentRequest)
}

inline void UpdateAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateAgentRequest::~UpdateAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.UpdateAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
}

void UpdateAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.UpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.UpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.UpdateAgentRequest)
  return target;
}

size_t UpdateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.UpdateAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAgentRequest::GetClassData() const { return &_class_data_; }


void UpdateAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateAgentRequest*>(&to_msg);
  auto& from = static_cast<const UpdateAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.UpdateAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAgentRequest::CopyFrom(const UpdateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.UpdateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAgentRequest::IsInitialized() const {
  return true;
}

void UpdateAgentRequest::InternalSwap(UpdateAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[65]);
}

// ===================================================================

class UpdateAgentResponse::_Internal {
 public:
};

UpdateAgentResponse::UpdateAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.UpdateAgentResponse)
}
UpdateAgentResponse::UpdateAgentResponse(const UpdateAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.UpdateAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[66]);
}

// ===================================================================

class ListAgentsRequest::_Internal {
 public:
};

ListAgentsRequest::ListAgentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListAgentsRequest)
}
ListAgentsRequest::ListAgentsRequest(const ListAgentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ListAgentsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListAgentsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAgentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAgentsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListAgentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[67]);
}

// ===================================================================

class ListAgentsResponse::_Internal {
 public:
};

void ListAgentsResponse::clear_agents() {
  _impl_.agents_.Clear();
}
ListAgentsResponse::ListAgentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.ListAgentsResponse)
}
ListAgentsResponse::ListAgentsResponse(const ListAgentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListAgentsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.ListAgentsResponse)
}

inline void ListAgentsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListAgentsResponse::~ListAgentsResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.ListAgentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAgentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
}

void ListAgentsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListAgentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.ListAgentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAgentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAgentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.ListAgentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.ListAgentsResponse)
  return target;
}

size_t ListAgentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.ListAgentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.Agent agents = 1 [json_name = "agents"];
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAgentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListAgentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAgentsResponse::GetClassData() const { return &_class_data_; }


void ListAgentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListAgentsResponse*>(&to_msg);
  auto& from = static_cast<const ListAgentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.ListAgentsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAgentsResponse::CopyFrom(const ListAgentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.ListAgentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAgentsResponse::IsInitialized() const {
  return true;
}

void ListAgentsResponse::InternalSwap(ListAgentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAgentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[68]);
}

// ===================================================================

class DeltaUpdateAgentRequest::_Internal {
 public:
};

DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateAgentRequest)
}
DeltaUpdateAgentRequest::DeltaUpdateAgentRequest(const DeltaUpdateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeltaUpdateAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){from._impl_.updates_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateAgentRequest)
}

inline void DeltaUpdateAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updates_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeltaUpdateAgentRequest::~DeltaUpdateAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.DeltaUpdateAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeltaUpdateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updates_.~RepeatedPtrField();
}

void DeltaUpdateAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeltaUpdateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.DeltaUpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeltaUpdateAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.economy.v2.AgentDeltaUpdate updates = 1 [json_name = "updates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeltaUpdateAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.DeltaUpdateAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.economy.v2.AgentDeltaUpdate updates = 1 [json_name = "updates"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_updates_size()); i < n; i++) {
    const auto& repfield = this->_internal_updates(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.DeltaUpdateAgentRequest)
  return target;
}

size_t DeltaUpdateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.DeltaUpdateAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.economy.v2.AgentDeltaUpdate updates = 1 [json_name = "updates"];
  total_size += 1UL * this->_internal_updates_size();
  for (const auto& msg : this->_impl_.updates_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeltaUpdateAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateAgentRequest::GetClassData() const { return &_class_data_; }


void DeltaUpdateAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeltaUpdateAgentRequest*>(&to_msg);
  auto& from = static_cast<const DeltaUpdateAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.DeltaUpdateAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updates_.MergeFrom(from._impl_.updates_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaUpdateAgentRequest::CopyFrom(const DeltaUpdateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.DeltaUpdateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaUpdateAgentRequest::IsInitialized() const {
  return true;
}

void DeltaUpdateAgentRequest::InternalSwap(DeltaUpdateAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[69]);
}

// ===================================================================

class AgentDeltaUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<AgentDeltaUpdate>()._impl_._has_bits_);
  static void set_has_delta_currency(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_new_firm_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_delta_skill(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delta_consumption(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_delta_income(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

AgentDeltaUpdate::AgentDeltaUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AgentDeltaUpdate)
}
AgentDeltaUpdate::AgentDeltaUpdate(const AgentDeltaUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentDeltaUpdate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.delta_currency_){}
    , decltype(_impl_.new_firm_id_){}
    , decltype(_impl_.delta_skill_){}
    , decltype(_impl_.delta_consumption_){}
    , decltype(_impl_.delta_income_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.agent_id_, &from._impl_.agent_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.delta_income_) -
    reinterpret_cast<char*>(&_impl_.agent_id_)) + sizeof(_impl_.delta_income_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AgentDeltaUpdate)
}

inline void AgentDeltaUpdate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.agent_id_){0}
    , decltype(_impl_.delta_currency_){0}
    , decltype(_impl_.new_firm_id_){0}
    , decltype(_impl_.delta_skill_){0}
    , decltype(_impl_.delta_consumption_){0}
    , decltype(_impl_.delta_income_){0}
  };
}

AgentDeltaUpdate::~AgentDeltaUpdate() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AgentDeltaUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentDeltaUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgentDeltaUpdate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentDeltaUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AgentDeltaUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.delta_currency_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.delta_income_) -
        reinterpret_cast<char*>(&_impl_.delta_currency_)) + sizeof(_impl_.delta_income_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentDeltaUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_currency = 2 [json_name = "deltaCurrency"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _Internal::set_has_delta_currency(&has_bits);
          _impl_.delta_currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_new_firm_id(&has_bits);
          _impl_.new_firm_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_skill = 4 [json_name = "deltaSkill"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _Internal::set_has_delta_skill(&has_bits);
          _impl_.delta_skill_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _Internal::set_has_delta_consumption(&has_bits);
          _impl_.delta_consumption_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // optional float delta_income = 6 [json_name = "deltaIncome"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _Internal::set_has_delta_income(&has_bits);
          _impl_.delta_income_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentDeltaUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AgentDeltaUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  // optional float delta_currency = 2 [json_name = "deltaCurrency"];
  if (_internal_has_delta_currency()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_delta_currency(), target);
  }

  // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
  if (_internal_has_new_firm_id()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_new_firm_id(), target);
  }

  // optional float delta_skill = 4 [json_name = "deltaSkill"];
  if (_internal_has_delta_skill()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_delta_skill(), target);
  }

  // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
  if (_internal_has_delta_consumption()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_delta_consumption(), target);
  }

  // optional float delta_income = 6 [json_name = "deltaIncome"];
  if (_internal_has_delta_income()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_delta_income(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AgentDeltaUpdate)
  return target;
}

size_t AgentDeltaUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AgentDeltaUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional float delta_currency = 2 [json_name = "deltaCurrency"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 new_firm_id = 3 [json_name = "newFirmId"];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_new_firm_id());
    }

    // optional float delta_skill = 4 [json_name = "deltaSkill"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float delta_consumption = 5 [json_name = "deltaConsumption"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float delta_income = 6 [json_name = "deltaIncome"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentDeltaUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentDeltaUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentDeltaUpdate::GetClassData() const { return &_class_data_; }


void AgentDeltaUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentDeltaUpdate*>(&to_msg);
  auto& from = static_cast<const AgentDeltaUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AgentDeltaUpdate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.delta_currency_ = from._impl_.delta_currency_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.new_firm_id_ = from._impl_.new_firm_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.delta_skill_ = from._impl_.delta_skill_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delta_consumption_ = from._impl_.delta_consumption_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.delta_income_ = from._impl_.delta_income_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentDeltaUpdate::CopyFrom(const AgentDeltaUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AgentDeltaUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentDeltaUpdate::IsInitialized() const {
  return true;
}

void AgentDeltaUpdate::InternalSwap(AgentDeltaUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentDeltaUpdate, _impl_.delta_income_)
      + sizeof(AgentDeltaUpdate::_impl_.delta_income_)
      - PROTOBUF_FIELD_OFFSET(AgentDeltaUpdate, _impl_.agent_id_)>(
          reinterpret_cast<char*>(&_impl_.agent_id_),
          reinterpret_cast<char*>(&other->_impl_.agent_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentDeltaUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[70]);
}

// ===================================================================

class DeltaUpdateAgentResponse::_Internal {
 public:
};

DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.DeltaUpdateAgentResponse)
}
DeltaUpdateAgentResponse::DeltaUpdateAgentResponse(const DeltaUpdateAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeltaUpdateAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.DeltaUpdateAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeltaUpdateAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeltaUpdateAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeltaUpdateAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[71]);
}

// ===================================================================

class CalculateTaxesDueRequest::_Internal {
 public:
};

CalculateTaxesDueRequest::CalculateTaxesDueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueRequest)
}
CalculateTaxesDueRequest::CalculateTaxesDueRequest(const CalculateTaxesDueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){from._impl_.incomes_}
    , decltype(_impl_.government_id_){}
    , decltype(_impl_.enable_redistribution_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.government_id_, &from._impl_.government_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
    reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueRequest)
}

inline void CalculateTaxesDueRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){arena}
    , decltype(_impl_.government_id_){0}
    , decltype(_impl_.enable_redistribution_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueRequest::~CalculateTaxesDueRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.incomes_.~RepeatedField();
}

void CalculateTaxesDueRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.incomes_.Clear();
  ::memset(&_impl_.government_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
      reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float incomes = 3 [json_name = "incomes"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 29) {
          _internal_add_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.enable_redistribution_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  if (this->_internal_incomes_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_incomes(), target);
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_enable_redistribution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueRequest)
  return target;
}

size_t CalculateTaxesDueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueRequest::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueRequest*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.incomes_.MergeFrom(from._impl_.incomes_);
  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  if (from._internal_enable_redistribution() != 0) {
    _this->_internal_set_enable_redistribution(from._internal_enable_redistribution());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueRequest::CopyFrom(const CalculateTaxesDueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueRequest::IsInitialized() const {
  return true;
}

void CalculateTaxesDueRequest::InternalSwap(CalculateTaxesDueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.incomes_.InternalSwap(&other->_impl_.incomes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.enable_redistribution_)
      + sizeof(CalculateTaxesDueRequest::_impl_.enable_redistribution_)
      - PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.government_id_)>(
          reinterpret_cast<char*>(&_impl_.government_id_),
          reinterpret_cast<char*>(&other->_impl_.government_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[72]);
}

// ===================================================================

class CalculateTaxesDueResponse::_Internal {
 public:
};

CalculateTaxesDueResponse::CalculateTaxesDueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueResponse)
}
CalculateTaxesDueResponse::CalculateTaxesDueResponse(const CalculateTaxesDueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){from._impl_.updated_incomes_}
    , decltype(_impl_.taxes_due_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.taxes_due_ = from._impl_.taxes_due_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueResponse)
}

inline void CalculateTaxesDueResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){arena}
    , decltype(_impl_.taxes_due_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueResponse::~CalculateTaxesDueResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_incomes_.~RepeatedField();
}

void CalculateTaxesDueResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_incomes_.Clear();
  _impl_.taxes_due_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float taxes_due = 1 [json_name = "taxesDue"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.taxes_due_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_taxes_due(), target);
  }

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  if (this->_internal_updated_incomes_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_incomes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueResponse)
  return target;
}

size_t CalculateTaxesDueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueResponse::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueResponse*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_incomes_.MergeFrom(from._impl_.updated_incomes_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = from._internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    _this->_internal_set_taxes_due(from._internal_taxes_due());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueResponse::CopyFrom(const CalculateTaxesDueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueResponse::IsInitialized() const {
  return true;
}

void CalculateTaxesDueResponse::InternalSwap(CalculateTaxesDueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_incomes_.InternalSwap(&other->_impl_.updated_incomes_);
  swap(_impl_.taxes_due_, other->_impl_.taxes_due_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[73]);
}

// ===================================================================

class CalculateConsumptionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CalculateConsumptionRequest>()._impl_._has_bits_);
  static void set_has_consumption_accumulation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CalculateConsumptionRequest::CalculateConsumptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionRequest)
}
CalculateConsumptionRequest::CalculateConsumptionRequest(const CalculateConsumptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){from._impl_.demands_}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.consumption_accumulation_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.agent_id_, &from._impl_.agent_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.consumption_accumulation_) -
    reinterpret_cast<char*>(&_impl_.agent_id_)) + sizeof(_impl_.consumption_accumulation_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionRequest)
}

inline void CalculateConsumptionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){arena}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_id_){0}
    , decltype(_impl_.consumption_accumulation_){false}
  };
}

CalculateConsumptionRequest::~CalculateConsumptionRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
  _impl_.demands_.~RepeatedField();
}

void CalculateConsumptionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _impl_.demands_.Clear();
  _impl_.agent_id_ = 0;
  _impl_.consumption_accumulation_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 agent_id = 2 [json_name = "agentId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 demands = 3 [json_name = "demands"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_demands(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_demands(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_consumption_accumulation(&has_bits);
          _impl_.consumption_accumulation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  // int32 agent_id = 2 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_agent_id(), target);
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    int byte_size = _impl_._demands_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_demands(), byte_size, target);
    }
  }

  // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
  if (_internal_has_consumption_accumulation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_consumption_accumulation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionRequest)
  return target;
}

size_t CalculateConsumptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.demands_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._demands_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 agent_id = 2 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  // optional bool consumption_accumulation = 4 [json_name = "consumptionAccumulation"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionRequest::GetClassData() const { return &_class_data_; }


void CalculateConsumptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionRequest*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_impl_.demands_.MergeFrom(from._impl_.demands_);
  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (from._internal_has_consumption_accumulation()) {
    _this->_internal_set_consumption_accumulation(from._internal_consumption_accumulation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionRequest::CopyFrom(const CalculateConsumptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionRequest::IsInitialized() const {
  return true;
}

void CalculateConsumptionRequest::InternalSwap(CalculateConsumptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
  _impl_.demands_.InternalSwap(&other->_impl_.demands_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateConsumptionRequest, _impl_.consumption_accumulation_)
      + sizeof(CalculateConsumptionRequest::_impl_.consumption_accumulation_)
      - PROTOBUF_FIELD_OFFSET(CalculateConsumptionRequest, _impl_.agent_id_)>(
          reinterpret_cast<char*>(&_impl_.agent_id_),
          reinterpret_cast<char*>(&other->_impl_.agent_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[74]);
}

// ===================================================================

class CalculateConsumptionResponse::_Internal {
 public:
};

CalculateConsumptionResponse::CalculateConsumptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionResponse)
}
CalculateConsumptionResponse::CalculateConsumptionResponse(const CalculateConsumptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.actual_consumption_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.actual_consumption_, &from._impl_.actual_consumption_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.actual_consumption_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionResponse)
}

inline void CalculateConsumptionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.actual_consumption_){0}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateConsumptionResponse::~CalculateConsumptionResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateConsumptionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.actual_consumption_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.actual_consumption_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float actual_consumption = 1 [json_name = "actualConsumption"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.actual_consumption_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool success = 2 [json_name = "success"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float actual_consumption = 1 [json_name = "actualConsumption"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = this->_internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_actual_consumption(), target);
  }

  // bool success = 2 [json_name = "success"];
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionResponse)
  return target;
}

size_t CalculateConsumptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float actual_consumption = 1 [json_name = "actualConsumption"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = this->_internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    total_size += 1 + 4;
  }

  // bool success = 2 [json_name = "success"];
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionResponse::GetClassData() const { return &_class_data_; }


void CalculateConsumptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionResponse*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_actual_consumption = from._internal_actual_consumption();
  uint32_t raw_actual_consumption;
  memcpy(&raw_actual_consumption, &tmp_actual_consumption, sizeof(tmp_actual_consumption));
  if (raw_actual_consumption != 0) {
    _this->_internal_set_actual_consumption(from._internal_actual_consumption());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionResponse::CopyFrom(const CalculateConsumptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionResponse::IsInitialized() const {
  return true;
}

void CalculateConsumptionResponse::InternalSwap(CalculateConsumptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateConsumptionResponse, _impl_.success_)
      + sizeof(CalculateConsumptionResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CalculateConsumptionResponse, _impl_.actual_consumption_)>(
          reinterpret_cast<char*>(&_impl_.actual_consumption_),
          reinterpret_cast<char*>(&other->_impl_.actual_consumption_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[75]);
}

// ===================================================================

class CalculateInterestRequest::_Internal {
 public:
};

CalculateInterestRequest::CalculateInterestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestRequest)
}
CalculateInterestRequest::CalculateInterestRequest(const CalculateInterestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bank_id_ = from._impl_.bank_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestRequest)
}

inline void CalculateInterestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestRequest::~CalculateInterestRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void CalculateInterestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.bank_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestRequest)
  return target;
}

size_t CalculateInterestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestRequest::GetClassData() const { return &_class_data_; }


void CalculateInterestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestRequest*>(&to_msg);
  auto& from = static_cast<const CalculateInterestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestRequest::CopyFrom(const CalculateInterestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestRequest::IsInitialized() const {
  return true;
}

void CalculateInterestRequest::InternalSwap(CalculateInterestRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  swap(_impl_.bank_id_, other->_impl_.bank_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[76]);
}

// ===================================================================

class CalculateInterestResponse::_Internal {
 public:
};

CalculateInterestResponse::CalculateInterestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestResponse)
}
CalculateInterestResponse::CalculateInterestResponse(const CalculateInterestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){from._impl_.updated_currencies_}
    , decltype(_impl_.total_interest_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.total_interest_ = from._impl_.total_interest_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestResponse)
}

inline void CalculateInterestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){arena}
    , decltype(_impl_.total_interest_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestResponse::~CalculateInterestResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_currencies_.~RepeatedField();
}

void CalculateInterestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_currencies_.Clear();
  _impl_.total_interest_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float total_interest = 1 [json_name = "totalInterest"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.total_interest_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_currencies(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_currencies(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_total_interest(), target);
  }

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  if (this->_internal_updated_currencies_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_currencies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestResponse)
  return target;
}

size_t CalculateInterestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_currencies_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestResponse::GetClassData() const { return &_class_data_; }


void CalculateInterestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestResponse*>(&to_msg);
  auto& from = static_cast<const CalculateInterestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_currencies_.MergeFrom(from._impl_.updated_currencies_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = from._internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    _this->_internal_set_total_interest(from._internal_total_interest());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestResponse::CopyFrom(const CalculateInterestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestResponse::IsInitialized() const {
  return true;
}

void CalculateInterestResponse::InternalSwap(CalculateInterestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_currencies_.InternalSwap(&other->_impl_.updated_currencies_);
  swap(_impl_.total_interest_, other->_impl_.total_interest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[77]);
}

// ===================================================================

class CalculateRealGDPRequest::_Internal {
 public:
};

CalculateRealGDPRequest::CalculateRealGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateRealGDPRequest)
}
CalculateRealGDPRequest::CalculateRealGDPRequest(const CalculateRealGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateRealGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.nbs_id_ = from._impl_.nbs_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateRealGDPRequest)
}

inline void CalculateRealGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nbs_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateRealGDPRequest::~CalculateRealGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateRealGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateRealGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateRealGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateRealGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateRealGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nbs_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateRealGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 nbs_id = 1 [json_name = "nbsId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.nbs_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateRealGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateRealGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_nbs_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateRealGDPRequest)
  return target;
}

size_t CalculateRealGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateRealGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 nbs_id = 1 [json_name = "nbsId"];
  if (this->_internal_nbs_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nbs_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateRealGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateRealGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateRealGDPRequest::GetClassData() const { return &_class_data_; }


void CalculateRealGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateRealGDPRequest*>(&to_msg);
  auto& from = static_cast<const CalculateRealGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateRealGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nbs_id() != 0) {
    _this->_internal_set_nbs_id(from._internal_nbs_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateRealGDPRequest::CopyFrom(const CalculateRealGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateRealGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateRealGDPRequest::IsInitialized() const {
  return true;
}

void CalculateRealGDPRequest::InternalSwap(CalculateRealGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.nbs_id_, other->_impl_.nbs_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateRealGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[78]);
}

// ===================================================================

class CalculateRealGDPResponse::_Internal {
 public:
};

CalculateRealGDPResponse::CalculateRealGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateRealGDPResponse)
}
CalculateRealGDPResponse::CalculateRealGDPResponse(const CalculateRealGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateRealGDPResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.real_gdp_ = from._impl_.real_gdp_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateRealGDPResponse)
}

inline void CalculateRealGDPResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateRealGDPResponse::~CalculateRealGDPResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateRealGDPResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateRealGDPResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CalculateRealGDPResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateRealGDPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateRealGDPResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_gdp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateRealGDPResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float real_gdp = 1 [json_name = "realGdp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.real_gdp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateRealGDPResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateRealGDPResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float real_gdp = 1 [json_name = "realGdp"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = this->_internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_real_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateRealGDPResponse)
  return target;
}

size_t CalculateRealGDPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateRealGDPResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float real_gdp = 1 [json_name = "realGdp"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = this->_internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateRealGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateRealGDPResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateRealGDPResponse::GetClassData() const { return &_class_data_; }


void CalculateRealGDPResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateRealGDPResponse*>(&to_msg);
  auto& from = static_cast<const CalculateRealGDPResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateRealGDPResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_real_gdp = from._internal_real_gdp();
  uint32_t raw_real_gdp;
  memcpy(&raw_real_gdp, &tmp_real_gdp, sizeof(tmp_real_gdp));
  if (raw_real_gdp != 0) {
    _this->_internal_set_real_gdp(from._internal_real_gdp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateRealGDPResponse::CopyFrom(const CalculateRealGDPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateRealGDPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateRealGDPResponse::IsInitialized() const {
  return true;
}

void CalculateRealGDPResponse::InternalSwap(CalculateRealGDPResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.real_gdp_, other->_impl_.real_gdp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateRealGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[79]);
}

// ===================================================================

class SaveEconomyEntitiesRequest::_Internal {
 public:
};

SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}
SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(const SaveEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}

inline void SaveEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveEconomyEntitiesRequest::~SaveEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void SaveEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.SaveEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.SaveEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesRequest)
  return target;
}

size_t SaveEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesRequest::CopyFrom(const SaveEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesRequest::InternalSwap(SaveEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[80]);
}

// ===================================================================

class SaveEconomyEntitiesResponse::_Internal {
 public:
};

SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}
SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(const SaveEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_ids_){from._impl_.nbs_ids_}
    , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_ids_){from._impl_.government_ids_}
    , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_ids_){from._impl_.bank_ids_}
    , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}

inline void SaveEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_ids_){arena}
    , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_ids_){arena}
    , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_ids_){arena}
    , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveEconomyEntitiesResponse::~SaveEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
  _impl_.nbs_ids_.~RepeatedField();
  _impl_.government_ids_.~RepeatedField();
  _impl_.bank_ids_.~RepeatedField();
  _impl_.agent_ids_.~RepeatedField();
}

void SaveEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _impl_.nbs_ids_.Clear();
  _impl_.government_ids_.Clear();
  _impl_.bank_ids_.Clear();
  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_nbs_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_nbs_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 government_ids = 3 [json_name = "governmentIds"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_government_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_government_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 bank_ids = 4 [json_name = "bankIds"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_bank_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_bank_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 5 [json_name = "agentIds"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
  {
    int byte_size = _impl_._nbs_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_nbs_ids(), byte_size, target);
    }
  }

  // repeated int32 government_ids = 3 [json_name = "governmentIds"];
  {
    int byte_size = _impl_._government_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_government_ids(), byte_size, target);
    }
  }

  // repeated int32 bank_ids = 4 [json_name = "bankIds"];
  {
    int byte_size = _impl_._bank_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_bank_ids(), byte_size, target);
    }
  }

  // repeated int32 agent_ids = 5 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesResponse)
  return target;
}

size_t SaveEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.nbs_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._nbs_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 government_ids = 3 [json_name = "governmentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.government_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._government_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 bank_ids = 4 [json_name = "bankIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.bank_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._bank_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 agent_ids = 5 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_impl_.nbs_ids_.MergeFrom(from._impl_.nbs_ids_);
  _this->_impl_.government_ids_.MergeFrom(from._impl_.government_ids_);
  _this->_impl_.bank_ids_.MergeFrom(from._impl_.bank_ids_);
  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesResponse::CopyFrom(const SaveEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesResponse::InternalSwap(SaveEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
  _impl_.nbs_ids_.InternalSwap(&other->_impl_.nbs_ids_);
  _impl_.government_ids_.InternalSwap(&other->_impl_.government_ids_);
  _impl_.bank_ids_.InternalSwap(&other->_impl_.bank_ids_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[81]);
}

// ===================================================================

class LoadEconomyEntitiesRequest::_Internal {
 public:
};

LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}
LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(const LoadEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}

inline void LoadEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadEconomyEntitiesRequest::~LoadEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void LoadEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.LoadEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.LoadEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesRequest)
  return target;
}

size_t LoadEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesRequest::CopyFrom(const LoadEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesRequest::InternalSwap(LoadEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[82]);
}

// ===================================================================

class LoadEconomyEntitiesResponse::_Internal {
 public:
};

LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}
LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(const LoadEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){from._impl_.firm_ids_}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_ids_){from._impl_.nbs_ids_}
    , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_ids_){from._impl_.government_ids_}
    , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_ids_){from._impl_.bank_ids_}
    , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}

inline void LoadEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.firm_ids_){arena}
    , /*decltype(_impl_._firm_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.nbs_ids_){arena}
    , /*decltype(_impl_._nbs_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.government_ids_){arena}
    , /*decltype(_impl_._government_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_ids_){arena}
    , /*decltype(_impl_._bank_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoadEconomyEntitiesResponse::~LoadEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firm_ids_.~RepeatedField();
  _impl_.nbs_ids_.~RepeatedField();
  _impl_.government_ids_.~RepeatedField();
  _impl_.bank_ids_.~RepeatedField();
  _impl_.agent_ids_.~RepeatedField();
}

void LoadEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firm_ids_.Clear();
  _impl_.nbs_ids_.Clear();
  _impl_.government_ids_.Clear();
  _impl_.bank_ids_.Clear();
  _impl_.agent_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 firm_ids = 1 [json_name = "firmIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_firm_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_firm_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_nbs_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_nbs_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 government_ids = 3 [json_name = "governmentIds"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_government_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_government_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 bank_ids = 4 [json_name = "bankIds"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_bank_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_bank_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 5 [json_name = "agentIds"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    int byte_size = _impl_._firm_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_firm_ids(), byte_size, target);
    }
  }

  // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
  {
    int byte_size = _impl_._nbs_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_nbs_ids(), byte_size, target);
    }
  }

  // repeated int32 government_ids = 3 [json_name = "governmentIds"];
  {
    int byte_size = _impl_._government_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_government_ids(), byte_size, target);
    }
  }

  // repeated int32 bank_ids = 4 [json_name = "bankIds"];
  {
    int byte_size = _impl_._bank_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_bank_ids(), byte_size, target);
    }
  }

  // repeated int32 agent_ids = 5 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesResponse)
  return target;
}

size_t LoadEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 firm_ids = 1 [json_name = "firmIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.firm_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._firm_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 nbs_ids = 2 [json_name = "nbsIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.nbs_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._nbs_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 government_ids = 3 [json_name = "governmentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.government_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._government_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 bank_ids = 4 [json_name = "bankIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.bank_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._bank_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 agent_ids = 5 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.firm_ids_.MergeFrom(from._impl_.firm_ids_);
  _this->_impl_.nbs_ids_.MergeFrom(from._impl_.nbs_ids_);
  _this->_impl_.government_ids_.MergeFrom(from._impl_.government_ids_);
  _this->_impl_.bank_ids_.MergeFrom(from._impl_.bank_ids_);
  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesResponse::CopyFrom(const LoadEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesResponse::InternalSwap(LoadEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.firm_ids_.InternalSwap(&other->_impl_.firm_ids_);
  _impl_.nbs_ids_.InternalSwap(&other->_impl_.nbs_ids_);
  _impl_.government_ids_.InternalSwap(&other->_impl_.government_ids_);
  _impl_.bank_ids_.InternalSwap(&other->_impl_.bank_ids_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[83]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace economy
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddFirmRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddFirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddFirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddFirmResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddFirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddFirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveFirmRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveFirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveFirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveFirmResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveFirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveFirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetFirmRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetFirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetFirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetFirmResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetFirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetFirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateFirmRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateFirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateFirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateFirmResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateFirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateFirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListFirmsRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::ListFirmsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListFirmsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListFirmsResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::ListFirmsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListFirmsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateFirmRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateFirmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateFirmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::FirmDeltaUpdate*
Arena::CreateMaybeMessage< ::city::economy::v2::FirmDeltaUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::FirmDeltaUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateFirmResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateFirmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateFirmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::ListNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::ListNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaNominalGdpEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaRealGdpEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaUnemploymentEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWagesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaPricesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaWorkingHoursEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaDepressionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaConsumptionCurrencyEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaIncomeCurrencyEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest_DeltaLocusControlEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateNBSResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateNBSResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateNBSResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddGovernmentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddGovernmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddGovernmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddGovernmentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddGovernmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddGovernmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveGovernmentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveGovernmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveGovernmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveGovernmentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveGovernmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveGovernmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetGovernmentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetGovernmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetGovernmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetGovernmentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetGovernmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetGovernmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateGovernmentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateGovernmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateGovernmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateGovernmentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateGovernmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateGovernmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListGovernmentsRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::ListGovernmentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListGovernmentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListGovernmentsResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::ListGovernmentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListGovernmentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateGovernmentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateGovernmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateGovernmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateGovernmentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateGovernmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateGovernmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddBankRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddBankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddBankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddBankResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddBankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddBankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveBankRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveBankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveBankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveBankResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveBankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveBankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBankRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBankResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateBankRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateBankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateBankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateBankResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateBankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateBankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListBanksRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::ListBanksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListBanksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListBanksResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::ListBanksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListBanksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateBankRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateBankRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateBankRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateBankResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateBankResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateBankResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::UpdateAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::UpdateAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::UpdateAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListAgentsRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::ListAgentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListAgentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::ListAgentsResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::ListAgentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::ListAgentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AgentDeltaUpdate*
Arena::CreateMaybeMessage< ::city::economy::v2::AgentDeltaUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AgentDeltaUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::DeltaUpdateAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::DeltaUpdateAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::DeltaUpdateAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateRealGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateRealGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateRealGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateRealGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateRealGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateRealGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/economy/v2/org_service.proto

#include "city/economy/v2/org_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace economy {
namespace v2 {
PROTOBUF_CONSTEXPR AddOrgRequest::AddOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddOrgRequestDefaultTypeInternal() {}
  union {
    AddOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddOrgRequestDefaultTypeInternal _AddOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR AddOrgResponse::AddOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct AddOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddOrgResponseDefaultTypeInternal() {}
  union {
    AddOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddOrgResponseDefaultTypeInternal _AddOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveOrgRequest::RemoveOrgRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveOrgRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOrgRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOrgRequestDefaultTypeInternal() {}
  union {
    RemoveOrgRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOrgRequestDefaultTypeInternal _RemoveOrgRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveOrgResponse::RemoveOrgResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveOrgResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOrgResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOrgResponseDefaultTypeInternal() {}
  union {
    RemoveOrgResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOrgResponseDefaultTypeInternal _RemoveOrgResponse_default_instance_;
PROTOBUF_CONSTEXPR AddAgentRequest::AddAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentRequestDefaultTypeInternal() {}
  union {
    AddAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentRequestDefaultTypeInternal _AddAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR AddAgentResponse::AddAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct AddAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddAgentResponseDefaultTypeInternal() {}
  union {
    AddAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddAgentResponseDefaultTypeInternal _AddAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentRequest::RemoveAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentRequestDefaultTypeInternal() {}
  union {
    RemoveAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentRequestDefaultTypeInternal _RemoveAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveAgentResponse::RemoveAgentResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveAgentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveAgentResponseDefaultTypeInternal() {}
  union {
    RemoveAgentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveAgentResponseDefaultTypeInternal _RemoveAgentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetNominalGDPRequest::GetNominalGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNominalGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNominalGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNominalGDPRequestDefaultTypeInternal() {}
  union {
    GetNominalGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNominalGDPRequestDefaultTypeInternal _GetNominalGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR GetNominalGDPResponse::GetNominalGDPResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nominal_gdp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetNominalGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNominalGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNominalGDPResponseDefaultTypeInternal() {}
  union {
    GetNominalGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNominalGDPResponseDefaultTypeInternal _GetNominalGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR SetNominalGDPRequest::SetNominalGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nominal_gdp_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetNominalGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetNominalGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetNominalGDPRequestDefaultTypeInternal() {}
  union {
    SetNominalGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetNominalGDPRequestDefaultTypeInternal _SetNominalGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR SetNominalGDPResponse::SetNominalGDPResponse(
    ::_pbi::ConstantInitialized) {}
struct SetNominalGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetNominalGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetNominalGDPResponseDefaultTypeInternal() {}
  union {
    SetNominalGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetNominalGDPResponseDefaultTypeInternal _SetNominalGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRealGDPRequest::GetRealGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRealGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRealGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRealGDPRequestDefaultTypeInternal() {}
  union {
    GetRealGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRealGDPRequestDefaultTypeInternal _GetRealGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRealGDPResponse::GetRealGDPResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.real_gdp_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRealGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRealGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRealGDPResponseDefaultTypeInternal() {}
  union {
    GetRealGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRealGDPResponseDefaultTypeInternal _GetRealGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR SetRealGDPRequest::SetRealGDPRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.real_gdp_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetRealGDPRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRealGDPRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRealGDPRequestDefaultTypeInternal() {}
  union {
    SetRealGDPRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRealGDPRequestDefaultTypeInternal _SetRealGDPRequest_default_instance_;
PROTOBUF_CONSTEXPR SetRealGDPResponse::SetRealGDPResponse(
    ::_pbi::ConstantInitialized) {}
struct SetRealGDPResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRealGDPResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRealGDPResponseDefaultTypeInternal() {}
  union {
    SetRealGDPResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRealGDPResponseDefaultTypeInternal _SetRealGDPResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUnemploymentRequest::GetUnemploymentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUnemploymentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUnemploymentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUnemploymentRequestDefaultTypeInternal() {}
  union {
    GetUnemploymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUnemploymentRequestDefaultTypeInternal _GetUnemploymentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUnemploymentResponse::GetUnemploymentResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unemployment_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUnemploymentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUnemploymentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUnemploymentResponseDefaultTypeInternal() {}
  union {
    GetUnemploymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUnemploymentResponseDefaultTypeInternal _GetUnemploymentResponse_default_instance_;
PROTOBUF_CONSTEXPR SetUnemploymentRequest::SetUnemploymentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unemployment_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetUnemploymentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUnemploymentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUnemploymentRequestDefaultTypeInternal() {}
  union {
    SetUnemploymentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUnemploymentRequestDefaultTypeInternal _SetUnemploymentRequest_default_instance_;
PROTOBUF_CONSTEXPR SetUnemploymentResponse::SetUnemploymentResponse(
    ::_pbi::ConstantInitialized) {}
struct SetUnemploymentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUnemploymentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUnemploymentResponseDefaultTypeInternal() {}
  union {
    SetUnemploymentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUnemploymentResponseDefaultTypeInternal _SetUnemploymentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetWagesRequest::GetWagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetWagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWagesRequestDefaultTypeInternal() {}
  union {
    GetWagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWagesRequestDefaultTypeInternal _GetWagesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetWagesResponse::GetWagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.wages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetWagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWagesResponseDefaultTypeInternal() {}
  union {
    GetWagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWagesResponseDefaultTypeInternal _GetWagesResponse_default_instance_;
PROTOBUF_CONSTEXPR SetWagesRequest::SetWagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.wages_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetWagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetWagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetWagesRequestDefaultTypeInternal() {}
  union {
    SetWagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetWagesRequestDefaultTypeInternal _SetWagesRequest_default_instance_;
PROTOBUF_CONSTEXPR SetWagesResponse::SetWagesResponse(
    ::_pbi::ConstantInitialized) {}
struct SetWagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetWagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetWagesResponseDefaultTypeInternal() {}
  union {
    SetWagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetWagesResponseDefaultTypeInternal _SetWagesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPricesRequest::GetPricesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPricesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPricesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPricesRequestDefaultTypeInternal() {}
  union {
    GetPricesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPricesRequestDefaultTypeInternal _GetPricesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPricesResponse::GetPricesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.prices_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPricesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPricesResponseDefaultTypeInternal() {}
  union {
    GetPricesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPricesResponseDefaultTypeInternal _GetPricesResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPricesRequest::SetPricesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.prices_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetPricesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPricesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPricesRequestDefaultTypeInternal() {}
  union {
    SetPricesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPricesRequestDefaultTypeInternal _SetPricesRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPricesResponse::SetPricesResponse(
    ::_pbi::ConstantInitialized) {}
struct SetPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPricesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPricesResponseDefaultTypeInternal() {}
  union {
    SetPricesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPricesResponseDefaultTypeInternal _SetPricesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetInventoryRequest::GetInventoryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInventoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInventoryRequestDefaultTypeInternal() {}
  union {
    GetInventoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInventoryRequestDefaultTypeInternal _GetInventoryRequest_default_instance_;
PROTOBUF_CONSTEXPR GetInventoryResponse::GetInventoryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inventory_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetInventoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInventoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInventoryResponseDefaultTypeInternal() {}
  union {
    GetInventoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInventoryResponseDefaultTypeInternal _GetInventoryResponse_default_instance_;
PROTOBUF_CONSTEXPR SetInventoryRequest::SetInventoryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_.inventory_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInventoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInventoryRequestDefaultTypeInternal() {}
  union {
    SetInventoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInventoryRequestDefaultTypeInternal _SetInventoryRequest_default_instance_;
PROTOBUF_CONSTEXPR SetInventoryResponse::SetInventoryResponse(
    ::_pbi::ConstantInitialized) {}
struct SetInventoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInventoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInventoryResponseDefaultTypeInternal() {}
  union {
    SetInventoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInventoryResponseDefaultTypeInternal _SetInventoryResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPriceRequest::GetPriceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPriceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPriceRequestDefaultTypeInternal() {}
  union {
    GetPriceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPriceRequestDefaultTypeInternal _GetPriceRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPriceResponse::GetPriceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.price_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPriceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPriceResponseDefaultTypeInternal() {}
  union {
    GetPriceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPriceResponseDefaultTypeInternal _GetPriceResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPriceRequest::SetPriceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_.price_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPriceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPriceRequestDefaultTypeInternal() {}
  union {
    SetPriceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPriceRequestDefaultTypeInternal _SetPriceRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPriceResponse::SetPriceResponse(
    ::_pbi::ConstantInitialized) {}
struct SetPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPriceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPriceResponseDefaultTypeInternal() {}
  union {
    SetPriceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPriceResponseDefaultTypeInternal _SetPriceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetCurrencyRequest::GetCurrencyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCurrencyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrencyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrencyRequestDefaultTypeInternal() {}
  union {
    GetCurrencyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrencyRequestDefaultTypeInternal _GetCurrencyRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCurrencyResponse::GetCurrencyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.currency_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCurrencyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrencyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrencyResponseDefaultTypeInternal() {}
  union {
    GetCurrencyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrencyResponseDefaultTypeInternal _GetCurrencyResponse_default_instance_;
PROTOBUF_CONSTEXPR SetCurrencyRequest::SetCurrencyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_.currency_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetCurrencyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrencyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrencyRequestDefaultTypeInternal() {}
  union {
    SetCurrencyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrencyRequestDefaultTypeInternal _SetCurrencyRequest_default_instance_;
PROTOBUF_CONSTEXPR SetCurrencyResponse::SetCurrencyResponse(
    ::_pbi::ConstantInitialized) {}
struct SetCurrencyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrencyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrencyResponseDefaultTypeInternal() {}
  union {
    SetCurrencyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrencyResponseDefaultTypeInternal _SetCurrencyResponse_default_instance_;
PROTOBUF_CONSTEXPR GetInterestRateRequest::GetInterestRateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetInterestRateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInterestRateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInterestRateRequestDefaultTypeInternal() {}
  union {
    GetInterestRateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInterestRateRequestDefaultTypeInternal _GetInterestRateRequest_default_instance_;
PROTOBUF_CONSTEXPR GetInterestRateResponse::GetInterestRateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.interest_rate_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetInterestRateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInterestRateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInterestRateResponseDefaultTypeInternal() {}
  union {
    GetInterestRateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInterestRateResponseDefaultTypeInternal _GetInterestRateResponse_default_instance_;
PROTOBUF_CONSTEXPR SetInterestRateRequest::SetInterestRateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_.interest_rate_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetInterestRateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInterestRateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInterestRateRequestDefaultTypeInternal() {}
  union {
    SetInterestRateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInterestRateRequestDefaultTypeInternal _SetInterestRateRequest_default_instance_;
PROTOBUF_CONSTEXPR SetInterestRateResponse::SetInterestRateResponse(
    ::_pbi::ConstantInitialized) {}
struct SetInterestRateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInterestRateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInterestRateResponseDefaultTypeInternal() {}
  union {
    SetInterestRateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInterestRateResponseDefaultTypeInternal _SetInterestRateResponse_default_instance_;
PROTOBUF_CONSTEXPR GetBracketCutoffsRequest::GetBracketCutoffsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBracketCutoffsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBracketCutoffsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBracketCutoffsRequestDefaultTypeInternal() {}
  union {
    GetBracketCutoffsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBracketCutoffsRequestDefaultTypeInternal _GetBracketCutoffsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetBracketCutoffsResponse::GetBracketCutoffsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bracket_cutoffs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBracketCutoffsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBracketCutoffsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBracketCutoffsResponseDefaultTypeInternal() {}
  union {
    GetBracketCutoffsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBracketCutoffsResponseDefaultTypeInternal _GetBracketCutoffsResponse_default_instance_;
PROTOBUF_CONSTEXPR SetBracketCutoffsRequest::SetBracketCutoffsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bracket_cutoffs_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetBracketCutoffsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBracketCutoffsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBracketCutoffsRequestDefaultTypeInternal() {}
  union {
    SetBracketCutoffsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBracketCutoffsRequestDefaultTypeInternal _SetBracketCutoffsRequest_default_instance_;
PROTOBUF_CONSTEXPR SetBracketCutoffsResponse::SetBracketCutoffsResponse(
    ::_pbi::ConstantInitialized) {}
struct SetBracketCutoffsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBracketCutoffsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBracketCutoffsResponseDefaultTypeInternal() {}
  union {
    SetBracketCutoffsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBracketCutoffsResponseDefaultTypeInternal _SetBracketCutoffsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetBracketRatesRequest::GetBracketRatesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBracketRatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBracketRatesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBracketRatesRequestDefaultTypeInternal() {}
  union {
    GetBracketRatesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBracketRatesRequestDefaultTypeInternal _GetBracketRatesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetBracketRatesResponse::GetBracketRatesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bracket_rates_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBracketRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBracketRatesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBracketRatesResponseDefaultTypeInternal() {}
  union {
    GetBracketRatesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBracketRatesResponseDefaultTypeInternal _GetBracketRatesResponse_default_instance_;
PROTOBUF_CONSTEXPR SetBracketRatesRequest::SetBracketRatesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bracket_rates_)*/{}
  , /*decltype(_impl_.org_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetBracketRatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBracketRatesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBracketRatesRequestDefaultTypeInternal() {}
  union {
    SetBracketRatesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBracketRatesRequestDefaultTypeInternal _SetBracketRatesRequest_default_instance_;
PROTOBUF_CONSTEXPR SetBracketRatesResponse::SetBracketRatesResponse(
    ::_pbi::ConstantInitialized) {}
struct SetBracketRatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBracketRatesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBracketRatesResponseDefaultTypeInternal() {}
  union {
    SetBracketRatesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBracketRatesResponseDefaultTypeInternal _SetBracketRatesResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueRequest::CalculateTaxesDueRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.incomes_)*/{}
  , /*decltype(_impl_.government_id_)*/0
  , /*decltype(_impl_.enable_redistribution_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueRequestDefaultTypeInternal() {}
  union {
    CalculateTaxesDueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueRequestDefaultTypeInternal _CalculateTaxesDueRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateTaxesDueResponse::CalculateTaxesDueResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_incomes_)*/{}
  , /*decltype(_impl_.taxes_due_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateTaxesDueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateTaxesDueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateTaxesDueResponseDefaultTypeInternal() {}
  union {
    CalculateTaxesDueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateTaxesDueResponseDefaultTypeInternal _CalculateTaxesDueResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionRequest::CalculateConsumptionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.demands_)*/{}
  , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
  , /*decltype(_impl_.firm_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateConsumptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionRequestDefaultTypeInternal() {}
  union {
    CalculateConsumptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionRequestDefaultTypeInternal _CalculateConsumptionRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateConsumptionResponse::CalculateConsumptionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_currencies_)*/{}
  , /*decltype(_impl_.remain_inventory_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateConsumptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateConsumptionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateConsumptionResponseDefaultTypeInternal() {}
  union {
    CalculateConsumptionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateConsumptionResponseDefaultTypeInternal _CalculateConsumptionResponse_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestRequest::CalculateInterestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.bank_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestRequestDefaultTypeInternal() {}
  union {
    CalculateInterestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestRequestDefaultTypeInternal _CalculateInterestRequest_default_instance_;
PROTOBUF_CONSTEXPR CalculateInterestResponse::CalculateInterestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.updated_currencies_)*/{}
  , /*decltype(_impl_.total_interest_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CalculateInterestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateInterestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateInterestResponseDefaultTypeInternal() {}
  union {
    CalculateInterestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateInterestResponseDefaultTypeInternal _CalculateInterestResponse_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesRequestDefaultTypeInternal _SaveEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.org_ids_)*/{}
  , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    SaveEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveEconomyEntitiesResponseDefaultTypeInternal _SaveEconomyEntitiesResponse_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.file_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesRequestDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesRequestDefaultTypeInternal _LoadEconomyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_ids_)*/{}
  , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.org_ids_)*/{}
  , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadEconomyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadEconomyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadEconomyEntitiesResponseDefaultTypeInternal() {}
  union {
    LoadEconomyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadEconomyEntitiesResponseDefaultTypeInternal _LoadEconomyEntitiesResponse_default_instance_;
}  // namespace v2
}  // namespace economy
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[62];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgRequest, _impl_.org_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentRequest, _impl_.agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::AddAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentRequest, _impl_.agent_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::RemoveAgentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNominalGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNominalGDPRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNominalGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetNominalGDPResponse, _impl_.nominal_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetNominalGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetNominalGDPRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetNominalGDPRequest, _impl_.nominal_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetNominalGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetRealGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetRealGDPRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetRealGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetRealGDPResponse, _impl_.real_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetRealGDPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetRealGDPRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetRealGDPRequest, _impl_.real_gdp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetRealGDPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetUnemploymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetUnemploymentRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetUnemploymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetUnemploymentResponse, _impl_.unemployment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetUnemploymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetUnemploymentRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetUnemploymentRequest, _impl_.unemployment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetUnemploymentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetWagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetWagesRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetWagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetWagesResponse, _impl_.wages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetWagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetWagesRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetWagesRequest, _impl_.wages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetWagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPricesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPricesRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPricesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPricesResponse, _impl_.prices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPricesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPricesRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPricesRequest, _impl_.prices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPricesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInventoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInventoryRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInventoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInventoryResponse, _impl_.inventory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInventoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInventoryRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInventoryRequest, _impl_.inventory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInventoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPriceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPriceRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPriceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetPriceResponse, _impl_.price_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPriceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPriceRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPriceRequest, _impl_.price_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetPriceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetCurrencyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetCurrencyRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetCurrencyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetCurrencyResponse, _impl_.currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetCurrencyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetCurrencyRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetCurrencyRequest, _impl_.currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetCurrencyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInterestRateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInterestRateRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInterestRateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetInterestRateResponse, _impl_.interest_rate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInterestRateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInterestRateRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInterestRateRequest, _impl_.interest_rate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetInterestRateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketCutoffsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketCutoffsRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketCutoffsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketCutoffsResponse, _impl_.bracket_cutoffs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketCutoffsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketCutoffsRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketCutoffsRequest, _impl_.bracket_cutoffs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketCutoffsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketRatesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketRatesRequest, _impl_.org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketRatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::GetBracketRatesResponse, _impl_.bracket_rates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketRatesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketRatesRequest, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketRatesRequest, _impl_.bracket_rates_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SetBracketRatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.government_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.incomes_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueRequest, _impl_.enable_redistribution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.taxes_due_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateTaxesDueResponse, _impl_.updated_incomes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.firm_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionRequest, _impl_.demands_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.remain_inventory_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateConsumptionResponse, _impl_.updated_currencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.bank_id_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestRequest, _impl_.agent_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.total_interest_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::CalculateInterestResponse, _impl_.updated_currencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::SaveEconomyEntitiesResponse, _impl_.org_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesRequest, _impl_.file_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.agent_ids_),
  PROTOBUF_FIELD_OFFSET(::city::economy::v2::LoadEconomyEntitiesResponse, _impl_.org_ids_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::economy::v2::AddOrgRequest)},
  { 7, -1, -1, sizeof(::city::economy::v2::AddOrgResponse)},
  { 13, -1, -1, sizeof(::city::economy::v2::RemoveOrgRequest)},
  { 20, -1, -1, sizeof(::city::economy::v2::RemoveOrgResponse)},
  { 26, -1, -1, sizeof(::city::economy::v2::AddAgentRequest)},
  { 33, -1, -1, sizeof(::city::economy::v2::AddAgentResponse)},
  { 39, -1, -1, sizeof(::city::economy::v2::RemoveAgentRequest)},
  { 46, -1, -1, sizeof(::city::economy::v2::RemoveAgentResponse)},
  { 52, -1, -1, sizeof(::city::economy::v2::GetNominalGDPRequest)},
  { 59, -1, -1, sizeof(::city::economy::v2::GetNominalGDPResponse)},
  { 66, -1, -1, sizeof(::city::economy::v2::SetNominalGDPRequest)},
  { 74, -1, -1, sizeof(::city::economy::v2::SetNominalGDPResponse)},
  { 80, -1, -1, sizeof(::city::economy::v2::GetRealGDPRequest)},
  { 87, -1, -1, sizeof(::city::economy::v2::GetRealGDPResponse)},
  { 94, -1, -1, sizeof(::city::economy::v2::SetRealGDPRequest)},
  { 102, -1, -1, sizeof(::city::economy::v2::SetRealGDPResponse)},
  { 108, -1, -1, sizeof(::city::economy::v2::GetUnemploymentRequest)},
  { 115, -1, -1, sizeof(::city::economy::v2::GetUnemploymentResponse)},
  { 122, -1, -1, sizeof(::city::economy::v2::SetUnemploymentRequest)},
  { 130, -1, -1, sizeof(::city::economy::v2::SetUnemploymentResponse)},
  { 136, -1, -1, sizeof(::city::economy::v2::GetWagesRequest)},
  { 143, -1, -1, sizeof(::city::economy::v2::GetWagesResponse)},
  { 150, -1, -1, sizeof(::city::economy::v2::SetWagesRequest)},
  { 158, -1, -1, sizeof(::city::economy::v2::SetWagesResponse)},
  { 164, -1, -1, sizeof(::city::economy::v2::GetPricesRequest)},
  { 171, -1, -1, sizeof(::city::economy::v2::GetPricesResponse)},
  { 178, -1, -1, sizeof(::city::economy::v2::SetPricesRequest)},
  { 186, -1, -1, sizeof(::city::economy::v2::SetPricesResponse)},
  { 192, -1, -1, sizeof(::city::economy::v2::GetInventoryRequest)},
  { 199, -1, -1, sizeof(::city::economy::v2::GetInventoryResponse)},
  { 206, -1, -1, sizeof(::city::economy::v2::SetInventoryRequest)},
  { 214, -1, -1, sizeof(::city::economy::v2::SetInventoryResponse)},
  { 220, -1, -1, sizeof(::city::economy::v2::GetPriceRequest)},
  { 227, -1, -1, sizeof(::city::economy::v2::GetPriceResponse)},
  { 234, -1, -1, sizeof(::city::economy::v2::SetPriceRequest)},
  { 242, -1, -1, sizeof(::city::economy::v2::SetPriceResponse)},
  { 248, -1, -1, sizeof(::city::economy::v2::GetCurrencyRequest)},
  { 255, -1, -1, sizeof(::city::economy::v2::GetCurrencyResponse)},
  { 262, -1, -1, sizeof(::city::economy::v2::SetCurrencyRequest)},
  { 270, -1, -1, sizeof(::city::economy::v2::SetCurrencyResponse)},
  { 276, -1, -1, sizeof(::city::economy::v2::GetInterestRateRequest)},
  { 283, -1, -1, sizeof(::city::economy::v2::GetInterestRateResponse)},
  { 290, -1, -1, sizeof(::city::economy::v2::SetInterestRateRequest)},
  { 298, -1, -1, sizeof(::city::economy::v2::SetInterestRateResponse)},
  { 304, -1, -1, sizeof(::city::economy::v2::GetBracketCutoffsRequest)},
  { 311, -1, -1, sizeof(::city::economy::v2::GetBracketCutoffsResponse)},
  { 318, -1, -1, sizeof(::city::economy::v2::SetBracketCutoffsRequest)},
  { 326, -1, -1, sizeof(::city::economy::v2::SetBracketCutoffsResponse)},
  { 332, -1, -1, sizeof(::city::economy::v2::GetBracketRatesRequest)},
  { 339, -1, -1, sizeof(::city::economy::v2::GetBracketRatesResponse)},
  { 346, -1, -1, sizeof(::city::economy::v2::SetBracketRatesRequest)},
  { 354, -1, -1, sizeof(::city::economy::v2::SetBracketRatesResponse)},
  { 360, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueRequest)},
  { 370, -1, -1, sizeof(::city::economy::v2::CalculateTaxesDueResponse)},
  { 378, -1, -1, sizeof(::city::economy::v2::CalculateConsumptionRequest)},
  { 387, -1, -1, sizeof(::city::economy::v2::CalculateConsumptionResponse)},
  { 395, -1, -1, sizeof(::city::economy::v2::CalculateInterestRequest)},
  { 403, -1, -1, sizeof(::city::economy::v2::CalculateInterestResponse)},
  { 411, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesRequest)},
  { 418, -1, -1, sizeof(::city::economy::v2::SaveEconomyEntitiesResponse)},
  { 426, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesRequest)},
  { 433, -1, -1, sizeof(::city::economy::v2::LoadEconomyEntitiesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::economy::v2::_AddOrgRequest_default_instance_._instance,
  &::city::economy::v2::_AddOrgResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveOrgRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveOrgResponse_default_instance_._instance,
  &::city::economy::v2::_AddAgentRequest_default_instance_._instance,
  &::city::economy::v2::_AddAgentResponse_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentRequest_default_instance_._instance,
  &::city::economy::v2::_RemoveAgentResponse_default_instance_._instance,
  &::city::economy::v2::_GetNominalGDPRequest_default_instance_._instance,
  &::city::economy::v2::_GetNominalGDPResponse_default_instance_._instance,
  &::city::economy::v2::_SetNominalGDPRequest_default_instance_._instance,
  &::city::economy::v2::_SetNominalGDPResponse_default_instance_._instance,
  &::city::economy::v2::_GetRealGDPRequest_default_instance_._instance,
  &::city::economy::v2::_GetRealGDPResponse_default_instance_._instance,
  &::city::economy::v2::_SetRealGDPRequest_default_instance_._instance,
  &::city::economy::v2::_SetRealGDPResponse_default_instance_._instance,
  &::city::economy::v2::_GetUnemploymentRequest_default_instance_._instance,
  &::city::economy::v2::_GetUnemploymentResponse_default_instance_._instance,
  &::city::economy::v2::_SetUnemploymentRequest_default_instance_._instance,
  &::city::economy::v2::_SetUnemploymentResponse_default_instance_._instance,
  &::city::economy::v2::_GetWagesRequest_default_instance_._instance,
  &::city::economy::v2::_GetWagesResponse_default_instance_._instance,
  &::city::economy::v2::_SetWagesRequest_default_instance_._instance,
  &::city::economy::v2::_SetWagesResponse_default_instance_._instance,
  &::city::economy::v2::_GetPricesRequest_default_instance_._instance,
  &::city::economy::v2::_GetPricesResponse_default_instance_._instance,
  &::city::economy::v2::_SetPricesRequest_default_instance_._instance,
  &::city::economy::v2::_SetPricesResponse_default_instance_._instance,
  &::city::economy::v2::_GetInventoryRequest_default_instance_._instance,
  &::city::economy::v2::_GetInventoryResponse_default_instance_._instance,
  &::city::economy::v2::_SetInventoryRequest_default_instance_._instance,
  &::city::economy::v2::_SetInventoryResponse_default_instance_._instance,
  &::city::economy::v2::_GetPriceRequest_default_instance_._instance,
  &::city::economy::v2::_GetPriceResponse_default_instance_._instance,
  &::city::economy::v2::_SetPriceRequest_default_instance_._instance,
  &::city::economy::v2::_SetPriceResponse_default_instance_._instance,
  &::city::economy::v2::_GetCurrencyRequest_default_instance_._instance,
  &::city::economy::v2::_GetCurrencyResponse_default_instance_._instance,
  &::city::economy::v2::_SetCurrencyRequest_default_instance_._instance,
  &::city::economy::v2::_SetCurrencyResponse_default_instance_._instance,
  &::city::economy::v2::_GetInterestRateRequest_default_instance_._instance,
  &::city::economy::v2::_GetInterestRateResponse_default_instance_._instance,
  &::city::economy::v2::_SetInterestRateRequest_default_instance_._instance,
  &::city::economy::v2::_SetInterestRateResponse_default_instance_._instance,
  &::city::economy::v2::_GetBracketCutoffsRequest_default_instance_._instance,
  &::city::economy::v2::_GetBracketCutoffsResponse_default_instance_._instance,
  &::city::economy::v2::_SetBracketCutoffsRequest_default_instance_._instance,
  &::city::economy::v2::_SetBracketCutoffsResponse_default_instance_._instance,
  &::city::economy::v2::_GetBracketRatesRequest_default_instance_._instance,
  &::city::economy::v2::_GetBracketRatesResponse_default_instance_._instance,
  &::city::economy::v2::_SetBracketRatesRequest_default_instance_._instance,
  &::city::economy::v2::_SetBracketRatesResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateTaxesDueResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateConsumptionResponse_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestRequest_default_instance_._instance,
  &::city::economy::v2::_CalculateInterestResponse_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_SaveEconomyEntitiesResponse_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesRequest_default_instance_._instance,
  &::city::economy::v2::_LoadEconomyEntitiesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!city/economy/v2/org_service.proto\022\017cit"
  "y.economy.v2\032\035city/economy/v2/economy.pr"
  "oto\"7\n\rAddOrgRequest\022&\n\003org\030\001 \001(\0132\024.city"
  ".economy.v2.OrgR\003org\"\020\n\016AddOrgResponse\")"
  "\n\020RemoveOrgRequest\022\025\n\006org_id\030\001 \001(\005R\005orgI"
  "d\"\023\n\021RemoveOrgResponse\"\?\n\017AddAgentReques"
  "t\022,\n\005agent\030\001 \001(\0132\026.city.economy.v2.Agent"
  "R\005agent\"\022\n\020AddAgentResponse\"/\n\022RemoveAge"
  "ntRequest\022\031\n\010agent_id\030\001 \001(\005R\007agentId\"\025\n\023"
  "RemoveAgentResponse\"-\n\024GetNominalGDPRequ"
  "est\022\025\n\006org_id\030\001 \001(\005R\005orgId\"8\n\025GetNominal"
  "GDPResponse\022\037\n\013nominal_gdp\030\001 \003(\002R\nnomina"
  "lGdp\"N\n\024SetNominalGDPRequest\022\025\n\006org_id\030\001"
  " \001(\005R\005orgId\022\037\n\013nominal_gdp\030\002 \003(\002R\nnomina"
  "lGdp\"\027\n\025SetNominalGDPResponse\"*\n\021GetReal"
  "GDPRequest\022\025\n\006org_id\030\001 \001(\005R\005orgId\"/\n\022Get"
  "RealGDPResponse\022\031\n\010real_gdp\030\001 \003(\002R\007realG"
  "dp\"E\n\021SetRealGDPRequest\022\025\n\006org_id\030\001 \001(\005R"
  "\005orgId\022\031\n\010real_gdp\030\002 \003(\002R\007realGdp\"\024\n\022Set"
  "RealGDPResponse\"/\n\026GetUnemploymentReques"
  "t\022\025\n\006org_id\030\001 \001(\005R\005orgId\"=\n\027GetUnemploym"
  "entResponse\022\"\n\014unemployment\030\001 \003(\002R\014unemp"
  "loyment\"S\n\026SetUnemploymentRequest\022\025\n\006org"
  "_id\030\001 \001(\005R\005orgId\022\"\n\014unemployment\030\002 \003(\002R\014"
  "unemployment\"\031\n\027SetUnemploymentResponse\""
  "(\n\017GetWagesRequest\022\025\n\006org_id\030\001 \001(\005R\005orgI"
  "d\"(\n\020GetWagesResponse\022\024\n\005wages\030\001 \003(\002R\005wa"
  "ges\">\n\017SetWagesRequest\022\025\n\006org_id\030\001 \001(\005R\005"
  "orgId\022\024\n\005wages\030\002 \003(\002R\005wages\"\022\n\020SetWagesR"
  "esponse\")\n\020GetPricesRequest\022\025\n\006org_id\030\001 "
  "\001(\005R\005orgId\"+\n\021GetPricesResponse\022\026\n\006price"
  "s\030\001 \003(\002R\006prices\"A\n\020SetPricesRequest\022\025\n\006o"
  "rg_id\030\001 \001(\005R\005orgId\022\026\n\006prices\030\002 \003(\002R\006pric"
  "es\"\023\n\021SetPricesResponse\",\n\023GetInventoryR"
  "equest\022\025\n\006org_id\030\001 \001(\005R\005orgId\"4\n\024GetInve"
  "ntoryResponse\022\034\n\tinventory\030\001 \001(\005R\tinvent"
  "ory\"J\n\023SetInventoryRequest\022\025\n\006org_id\030\001 \001"
  "(\005R\005orgId\022\034\n\tinventory\030\002 \001(\005R\tinventory\""
  "\026\n\024SetInventoryResponse\"(\n\017GetPriceReque"
  "st\022\025\n\006org_id\030\001 \001(\005R\005orgId\"(\n\020GetPriceRes"
  "ponse\022\024\n\005price\030\001 \001(\002R\005price\">\n\017SetPriceR"
  "equest\022\025\n\006org_id\030\001 \001(\005R\005orgId\022\024\n\005price\030\002"
  " \001(\002R\005price\"\022\n\020SetPriceResponse\"+\n\022GetCu"
  "rrencyRequest\022\025\n\006org_id\030\001 \001(\005R\005orgId\"1\n\023"
  "GetCurrencyResponse\022\032\n\010currency\030\001 \001(\002R\010c"
  "urrency\"G\n\022SetCurrencyRequest\022\025\n\006org_id\030"
  "\001 \001(\005R\005orgId\022\032\n\010currency\030\002 \001(\002R\010currency"
  "\"\025\n\023SetCurrencyResponse\"/\n\026GetInterestRa"
  "teRequest\022\025\n\006org_id\030\001 \001(\005R\005orgId\">\n\027GetI"
  "nterestRateResponse\022#\n\rinterest_rate\030\001 \001"
  "(\002R\014interestRate\"T\n\026SetInterestRateReque"
  "st\022\025\n\006org_id\030\001 \001(\005R\005orgId\022#\n\rinterest_ra"
  "te\030\002 \001(\002R\014interestRate\"\031\n\027SetInterestRat"
  "eResponse\"1\n\030GetBracketCutoffsRequest\022\025\n"
  "\006org_id\030\001 \001(\005R\005orgId\"D\n\031GetBracketCutoff"
  "sResponse\022\'\n\017bracket_cutoffs\030\001 \003(\002R\016brac"
  "ketCutoffs\"Z\n\030SetBracketCutoffsRequest\022\025"
  "\n\006org_id\030\001 \001(\005R\005orgId\022\'\n\017bracket_cutoffs"
  "\030\002 \003(\002R\016bracketCutoffs\"\033\n\031SetBracketCuto"
  "ffsResponse\"/\n\026GetBracketRatesRequest\022\025\n"
  "\006org_id\030\001 \001(\005R\005orgId\">\n\027GetBracketRatesR"
  "esponse\022#\n\rbracket_rates\030\001 \003(\002R\014bracketR"
  "ates\"T\n\026SetBracketRatesRequest\022\025\n\006org_id"
  "\030\001 \001(\005R\005orgId\022#\n\rbracket_rates\030\002 \003(\002R\014br"
  "acketRates\"\031\n\027SetBracketRatesResponse\"\253\001"
  "\n\030CalculateTaxesDueRequest\022#\n\rgovernment"
  "_id\030\001 \001(\005R\014governmentId\022\033\n\tagent_ids\030\002 \003"
  "(\005R\010agentIds\022\030\n\007incomes\030\003 \003(\002R\007incomes\0223"
  "\n\025enable_redistribution\030\004 \001(\010R\024enableRed"
  "istribution\"a\n\031CalculateTaxesDueResponse"
  "\022\033\n\ttaxes_due\030\001 \001(\002R\010taxesDue\022\'\n\017updated"
  "_incomes\030\002 \003(\002R\016updatedIncomes\"m\n\033Calcul"
  "ateConsumptionRequest\022\027\n\007firm_id\030\001 \001(\005R\006"
  "firmId\022\033\n\tagent_ids\030\002 \003(\005R\010agentIds\022\030\n\007d"
  "emands\030\003 \003(\005R\007demands\"x\n\034CalculateConsum"
  "ptionResponse\022)\n\020remain_inventory\030\001 \001(\005R"
  "\017remainInventory\022-\n\022updated_currencies\030\002"
  " \003(\002R\021updatedCurrencies\"P\n\030CalculateInte"
  "restRequest\022\027\n\007bank_id\030\001 \001(\005R\006bankId\022\033\n\t"
  "agent_ids\030\002 \003(\005R\010agentIds\"q\n\031CalculateIn"
  "terestResponse\022%\n\016total_interest\030\001 \001(\002R\r"
  "totalInterest\022-\n\022updated_currencies\030\002 \003("
  "\002R\021updatedCurrencies\"9\n\032SaveEconomyEntit"
  "iesRequest\022\033\n\tfile_path\030\001 \001(\tR\010filePath\""
  "S\n\033SaveEconomyEntitiesResponse\022\033\n\tagent_"
  "ids\030\001 \003(\005R\010agentIds\022\027\n\007org_ids\030\002 \003(\005R\006or"
  "gIds\"9\n\032LoadEconomyEntitiesRequest\022\033\n\tfi"
  "le_path\030\001 \001(\tR\010filePath\"S\n\033LoadEconomyEn"
  "titiesResponse\022\033\n\tagent_ids\030\001 \003(\005R\010agent"
  "Ids\022\027\n\007org_ids\030\002 \003(\005R\006orgIds2\213\027\n\nOrgServ"
  "ice\022I\n\006AddOrg\022\036.city.economy.v2.AddOrgRe"
  "quest\032\037.city.economy.v2.AddOrgResponse\022R"
  "\n\tRemoveOrg\022!.city.economy.v2.RemoveOrgR"
  "equest\032\".city.economy.v2.RemoveOrgRespon"
  "se\022O\n\010AddAgent\022 .city.economy.v2.AddAgen"
  "tRequest\032!.city.economy.v2.AddAgentRespo"
  "nse\022X\n\013RemoveAgent\022#.city.economy.v2.Rem"
  "oveAgentRequest\032$.city.economy.v2.Remove"
  "AgentResponse\022^\n\rGetNominalGDP\022%.city.ec"
  "onomy.v2.GetNominalGDPRequest\032&.city.eco"
  "nomy.v2.GetNominalGDPResponse\022^\n\rSetNomi"
  "nalGDP\022%.city.economy.v2.SetNominalGDPRe"
  "quest\032&.city.economy.v2.SetNominalGDPRes"
  "ponse\022U\n\nGetRealGDP\022\".city.economy.v2.Ge"
  "tRealGDPRequest\032#.city.economy.v2.GetRea"
  "lGDPResponse\022U\n\nSetRealGDP\022\".city.econom"
  "y.v2.SetRealGDPRequest\032#.city.economy.v2"
  ".SetRealGDPResponse\022d\n\017GetUnemployment\022\'"
  ".city.economy.v2.GetUnemploymentRequest\032"
  "(.city.economy.v2.GetUnemploymentRespons"
  "e\022d\n\017SetUnemployment\022\'.city.economy.v2.S"
  "etUnemploymentRequest\032(.city.economy.v2."
  "SetUnemploymentResponse\022O\n\010GetWages\022 .ci"
  "ty.economy.v2.GetWagesRequest\032!.city.eco"
  "nomy.v2.GetWagesResponse\022O\n\010SetWages\022 .c"
  "ity.economy.v2.SetWagesRequest\032!.city.ec"
  "onomy.v2.SetWagesResponse\022R\n\tGetPrices\022!"
  ".city.economy.v2.GetPricesRequest\032\".city"
  ".economy.v2.GetPricesResponse\022R\n\tSetPric"
  "es\022!.city.economy.v2.SetPricesRequest\032\"."
  "city.economy.v2.SetPricesResponse\022[\n\014Get"
  "Inventory\022$.city.economy.v2.GetInventory"
  "Request\032%.city.economy.v2.GetInventoryRe"
  "sponse\022[\n\014SetInventory\022$.city.economy.v2"
  ".SetInventoryRequest\032%.city.economy.v2.S"
  "etInventoryResponse\022O\n\010GetPrice\022 .city.e"
  "conomy.v2.GetPriceRequest\032!.city.economy"
  ".v2.GetPriceResponse\022O\n\010SetPrice\022 .city."
  "economy.v2.SetPriceRequest\032!.city.econom"
  "y.v2.SetPriceResponse\022X\n\013GetCurrency\022#.c"
  "ity.economy.v2.GetCurrencyRequest\032$.city"
  ".economy.v2.GetCurrencyResponse\022X\n\013SetCu"
  "rrency\022#.city.economy.v2.SetCurrencyRequ"
  "est\032$.city.economy.v2.SetCurrencyRespons"
  "e\022d\n\017GetInterestRate\022\'.city.economy.v2.G"
  "etInterestRateRequest\032(.city.economy.v2."
  "GetInterestRateResponse\022d\n\017SetInterestRa"
  "te\022\'.city.economy.v2.SetInterestRateRequ"
  "est\032(.city.economy.v2.SetInterestRateRes"
  "ponse\022j\n\021GetBracketCutoffs\022).city.econom"
  "y.v2.GetBracketCutoffsRequest\032*.city.eco"
  "nomy.v2.GetBracketCutoffsResponse\022j\n\021Set"
  "BracketCutoffs\022).city.economy.v2.SetBrac"
  "ketCutoffsRequest\032*.city.economy.v2.SetB"
  "racketCutoffsResponse\022d\n\017GetBracketRates"
  "\022\'.city.economy.v2.GetBracketRatesReques"
  "t\032(.city.economy.v2.GetBracketRatesRespo"
  "nse\022d\n\017SetBracketRates\022\'.city.economy.v2"
  ".SetBracketRatesRequest\032(.city.economy.v"
  "2.SetBracketRatesResponse\022j\n\021CalculateTa"
  "xesDue\022).city.economy.v2.CalculateTaxesD"
  "ueRequest\032*.city.economy.v2.CalculateTax"
  "esDueResponse\022s\n\024CalculateConsumption\022,."
  "city.economy.v2.CalculateConsumptionRequ"
  "est\032-.city.economy.v2.CalculateConsumpti"
  "onResponse\022j\n\021CalculateInterest\022).city.e"
  "conomy.v2.CalculateInterestRequest\032*.cit"
  "y.economy.v2.CalculateInterestResponse\022p"
  "\n\023SaveEconomyEntities\022+.city.economy.v2."
  "SaveEconomyEntitiesRequest\032,.city.econom"
  "y.v2.SaveEconomyEntitiesResponse\022p\n\023Load"
  "EconomyEntities\022+.city.economy.v2.LoadEc"
  "onomyEntitiesRequest\032,.city.economy.v2.L"
  "oadEconomyEntitiesResponseB\277\001\n\023com.city."
  "economy.v2B\017OrgServiceProtoP\001Z9git.fibla"
  "b.net/sim/protos/v2/go/city/economy/v2;e"
  "conomyv2\242\002\003CEX\252\002\017City.Economy.V2\312\002\017City\\"
  "Economy\\V2\342\002\033City\\Economy\\V2\\GPBMetadata"
  "\352\002\021City::Economy::V2b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps[1] = {
  &::descriptor_table_city_2feconomy_2fv2_2feconomy_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto = {
    false, false, 6748, descriptor_table_protodef_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    "city/economy/v2/org_service.proto",
    &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once, descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_deps, 1, 62,
    schemas, file_default_instances, TableStruct_city_2feconomy_2fv2_2forg_5fservice_2eproto::offsets,
    file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto, file_level_enum_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
    file_level_service_descriptors_city_2feconomy_2fv2_2forg_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter() {
  return &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2feconomy_2fv2_2forg_5fservice_2eproto(&descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto);
namespace city {
namespace economy {
namespace v2 {

// ===================================================================

class AddOrgRequest::_Internal {
 public:
  static const ::city::economy::v2::Org& org(const AddOrgRequest* msg);
};

const ::city::economy::v2::Org&
AddOrgRequest::_Internal::org(const AddOrgRequest* msg) {
  return *msg->_impl_.org_;
}
void AddOrgRequest::clear_org() {
  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
}
AddOrgRequest::AddOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddOrgRequest)
}
AddOrgRequest::AddOrgRequest(const AddOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_org()) {
    _this->_impl_.org_ = new ::city::economy::v2::Org(*from._impl_.org_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddOrgRequest)
}

inline void AddOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddOrgRequest::~AddOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.org_;
}

void AddOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.org_ != nullptr) {
    delete _impl_.org_;
  }
  _impl_.org_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Org org = 1 [json_name = "org"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_org(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::org(this),
        _Internal::org(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddOrgRequest)
  return target;
}

size_t AddOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Org org = 1 [json_name = "org"];
  if (this->_internal_has_org()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.org_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddOrgRequest::GetClassData() const { return &_class_data_; }


void AddOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddOrgRequest*>(&to_msg);
  auto& from = static_cast<const AddOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_org()) {
    _this->_internal_mutable_org()->::city::economy::v2::Org::MergeFrom(
        from._internal_org());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddOrgRequest::CopyFrom(const AddOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOrgRequest::IsInitialized() const {
  return true;
}

void AddOrgRequest::InternalSwap(AddOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_, other->_impl_.org_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[0]);
}

// ===================================================================

class AddOrgResponse::_Internal {
 public:
};

AddOrgResponse::AddOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddOrgResponse)
}
AddOrgResponse::AddOrgResponse(const AddOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[1]);
}

// ===================================================================

class RemoveOrgRequest::_Internal {
 public:
};

RemoveOrgRequest::RemoveOrgRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveOrgRequest)
}
RemoveOrgRequest::RemoveOrgRequest(const RemoveOrgRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveOrgRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveOrgRequest)
}

inline void RemoveOrgRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveOrgRequest::~RemoveOrgRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveOrgRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveOrgRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveOrgRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveOrgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveOrgRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOrgRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveOrgRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveOrgRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveOrgRequest)
  return target;
}

size_t RemoveOrgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveOrgRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOrgRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveOrgRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOrgRequest::GetClassData() const { return &_class_data_; }


void RemoveOrgRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveOrgRequest*>(&to_msg);
  auto& from = static_cast<const RemoveOrgRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveOrgRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveOrgRequest::CopyFrom(const RemoveOrgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveOrgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOrgRequest::IsInitialized() const {
  return true;
}

void RemoveOrgRequest::InternalSwap(RemoveOrgRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrgRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[2]);
}

// ===================================================================

class RemoveOrgResponse::_Internal {
 public:
};

RemoveOrgResponse::RemoveOrgResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveOrgResponse)
}
RemoveOrgResponse::RemoveOrgResponse(const RemoveOrgResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveOrgResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveOrgResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOrgResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOrgResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveOrgResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[3]);
}

// ===================================================================

class AddAgentRequest::_Internal {
 public:
  static const ::city::economy::v2::Agent& agent(const AddAgentRequest* msg);
};

const ::city::economy::v2::Agent&
AddAgentRequest::_Internal::agent(const AddAgentRequest* msg) {
  return *msg->_impl_.agent_;
}
void AddAgentRequest::clear_agent() {
  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
}
AddAgentRequest::AddAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentRequest)
}
AddAgentRequest::AddAgentRequest(const AddAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_agent()) {
    _this->_impl_.agent_ = new ::city::economy::v2::Agent(*from._impl_.agent_);
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentRequest)
}

inline void AddAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddAgentRequest::~AddAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.AddAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.agent_;
}

void AddAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.agent_ != nullptr) {
    delete _impl_.agent_;
  }
  _impl_.agent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_agent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.AddAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::agent(this),
        _Internal::agent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.AddAgentRequest)
  return target;
}

size_t AddAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.AddAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .city.economy.v2.Agent agent = 1 [json_name = "agent"];
  if (this->_internal_has_agent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.agent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentRequest::GetClassData() const { return &_class_data_; }


void AddAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddAgentRequest*>(&to_msg);
  auto& from = static_cast<const AddAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.AddAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_agent()) {
    _this->_internal_mutable_agent()->::city::economy::v2::Agent::MergeFrom(
        from._internal_agent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddAgentRequest::CopyFrom(const AddAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.AddAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAgentRequest::IsInitialized() const {
  return true;
}

void AddAgentRequest::InternalSwap(AddAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[4]);
}

// ===================================================================

class AddAgentResponse::_Internal {
 public:
};

AddAgentResponse::AddAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.AddAgentResponse)
}
AddAgentResponse::AddAgentResponse(const AddAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.AddAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[5]);
}

// ===================================================================

class RemoveAgentRequest::_Internal {
 public:
};

RemoveAgentRequest::RemoveAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentRequest)
}
RemoveAgentRequest::RemoveAgentRequest(const RemoveAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.agent_id_ = from._impl_.agent_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentRequest)
}

inline void RemoveAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveAgentRequest::~RemoveAgentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.RemoveAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 agent_id = 1 [json_name = "agentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.agent_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.RemoveAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_agent_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.RemoveAgentRequest)
  return target;
}

size_t RemoveAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.RemoveAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 agent_id = 1 [json_name = "agentId"];
  if (this->_internal_agent_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentRequest::GetClassData() const { return &_class_data_; }


void RemoveAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveAgentRequest*>(&to_msg);
  auto& from = static_cast<const RemoveAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.RemoveAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_agent_id() != 0) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveAgentRequest::CopyFrom(const RemoveAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.RemoveAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveAgentRequest::IsInitialized() const {
  return true;
}

void RemoveAgentRequest::InternalSwap(RemoveAgentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.agent_id_, other->_impl_.agent_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[6]);
}

// ===================================================================

class RemoveAgentResponse::_Internal {
 public:
};

RemoveAgentResponse::RemoveAgentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.RemoveAgentResponse)
}
RemoveAgentResponse::RemoveAgentResponse(const RemoveAgentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveAgentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.RemoveAgentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveAgentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveAgentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveAgentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[7]);
}

// ===================================================================

class GetNominalGDPRequest::_Internal {
 public:
};

GetNominalGDPRequest::GetNominalGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetNominalGDPRequest)
}
GetNominalGDPRequest::GetNominalGDPRequest(const GetNominalGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNominalGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetNominalGDPRequest)
}

inline void GetNominalGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNominalGDPRequest::~GetNominalGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetNominalGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNominalGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetNominalGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNominalGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetNominalGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNominalGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNominalGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetNominalGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetNominalGDPRequest)
  return target;
}

size_t GetNominalGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetNominalGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNominalGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNominalGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNominalGDPRequest::GetClassData() const { return &_class_data_; }


void GetNominalGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNominalGDPRequest*>(&to_msg);
  auto& from = static_cast<const GetNominalGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetNominalGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNominalGDPRequest::CopyFrom(const GetNominalGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetNominalGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNominalGDPRequest::IsInitialized() const {
  return true;
}

void GetNominalGDPRequest::InternalSwap(GetNominalGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNominalGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[8]);
}

// ===================================================================

class GetNominalGDPResponse::_Internal {
 public:
};

GetNominalGDPResponse::GetNominalGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetNominalGDPResponse)
}
GetNominalGDPResponse::GetNominalGDPResponse(const GetNominalGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNominalGDPResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nominal_gdp_){from._impl_.nominal_gdp_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetNominalGDPResponse)
}

inline void GetNominalGDPResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nominal_gdp_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetNominalGDPResponse::~GetNominalGDPResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetNominalGDPResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNominalGDPResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nominal_gdp_.~RepeatedField();
}

void GetNominalGDPResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNominalGDPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetNominalGDPResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nominal_gdp_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNominalGDPResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float nominal_gdp = 1 [json_name = "nominalGdp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_nominal_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_nominal_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNominalGDPResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetNominalGDPResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float nominal_gdp = 1 [json_name = "nominalGdp"];
  if (this->_internal_nominal_gdp_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_nominal_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetNominalGDPResponse)
  return target;
}

size_t GetNominalGDPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetNominalGDPResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float nominal_gdp = 1 [json_name = "nominalGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_nominal_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNominalGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNominalGDPResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNominalGDPResponse::GetClassData() const { return &_class_data_; }


void GetNominalGDPResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNominalGDPResponse*>(&to_msg);
  auto& from = static_cast<const GetNominalGDPResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetNominalGDPResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nominal_gdp_.MergeFrom(from._impl_.nominal_gdp_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNominalGDPResponse::CopyFrom(const GetNominalGDPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetNominalGDPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNominalGDPResponse::IsInitialized() const {
  return true;
}

void GetNominalGDPResponse::InternalSwap(GetNominalGDPResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nominal_gdp_.InternalSwap(&other->_impl_.nominal_gdp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNominalGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[9]);
}

// ===================================================================

class SetNominalGDPRequest::_Internal {
 public:
};

SetNominalGDPRequest::SetNominalGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetNominalGDPRequest)
}
SetNominalGDPRequest::SetNominalGDPRequest(const SetNominalGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetNominalGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nominal_gdp_){from._impl_.nominal_gdp_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetNominalGDPRequest)
}

inline void SetNominalGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nominal_gdp_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetNominalGDPRequest::~SetNominalGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetNominalGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetNominalGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nominal_gdp_.~RepeatedField();
}

void SetNominalGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetNominalGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetNominalGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nominal_gdp_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetNominalGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float nominal_gdp = 2 [json_name = "nominalGdp"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_nominal_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_nominal_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetNominalGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetNominalGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float nominal_gdp = 2 [json_name = "nominalGdp"];
  if (this->_internal_nominal_gdp_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_nominal_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetNominalGDPRequest)
  return target;
}

size_t SetNominalGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetNominalGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float nominal_gdp = 2 [json_name = "nominalGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_nominal_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetNominalGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetNominalGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetNominalGDPRequest::GetClassData() const { return &_class_data_; }


void SetNominalGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetNominalGDPRequest*>(&to_msg);
  auto& from = static_cast<const SetNominalGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetNominalGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nominal_gdp_.MergeFrom(from._impl_.nominal_gdp_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetNominalGDPRequest::CopyFrom(const SetNominalGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetNominalGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNominalGDPRequest::IsInitialized() const {
  return true;
}

void SetNominalGDPRequest::InternalSwap(SetNominalGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nominal_gdp_.InternalSwap(&other->_impl_.nominal_gdp_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetNominalGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[10]);
}

// ===================================================================

class SetNominalGDPResponse::_Internal {
 public:
};

SetNominalGDPResponse::SetNominalGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetNominalGDPResponse)
}
SetNominalGDPResponse::SetNominalGDPResponse(const SetNominalGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetNominalGDPResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetNominalGDPResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetNominalGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetNominalGDPResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetNominalGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[11]);
}

// ===================================================================

class GetRealGDPRequest::_Internal {
 public:
};

GetRealGDPRequest::GetRealGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetRealGDPRequest)
}
GetRealGDPRequest::GetRealGDPRequest(const GetRealGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRealGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetRealGDPRequest)
}

inline void GetRealGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRealGDPRequest::~GetRealGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetRealGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRealGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRealGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRealGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetRealGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRealGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRealGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetRealGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetRealGDPRequest)
  return target;
}

size_t GetRealGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetRealGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRealGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRealGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRealGDPRequest::GetClassData() const { return &_class_data_; }


void GetRealGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRealGDPRequest*>(&to_msg);
  auto& from = static_cast<const GetRealGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetRealGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRealGDPRequest::CopyFrom(const GetRealGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetRealGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRealGDPRequest::IsInitialized() const {
  return true;
}

void GetRealGDPRequest::InternalSwap(GetRealGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRealGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[12]);
}

// ===================================================================

class GetRealGDPResponse::_Internal {
 public:
};

GetRealGDPResponse::GetRealGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetRealGDPResponse)
}
GetRealGDPResponse::GetRealGDPResponse(const GetRealGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRealGDPResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){from._impl_.real_gdp_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetRealGDPResponse)
}

inline void GetRealGDPResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRealGDPResponse::~GetRealGDPResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetRealGDPResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRealGDPResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.real_gdp_.~RepeatedField();
}

void GetRealGDPResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRealGDPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetRealGDPResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_gdp_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRealGDPResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float real_gdp = 1 [json_name = "realGdp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_real_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_real_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRealGDPResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetRealGDPResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float real_gdp = 1 [json_name = "realGdp"];
  if (this->_internal_real_gdp_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_real_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetRealGDPResponse)
  return target;
}

size_t GetRealGDPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetRealGDPResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float real_gdp = 1 [json_name = "realGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_real_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRealGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRealGDPResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRealGDPResponse::GetClassData() const { return &_class_data_; }


void GetRealGDPResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRealGDPResponse*>(&to_msg);
  auto& from = static_cast<const GetRealGDPResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetRealGDPResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.real_gdp_.MergeFrom(from._impl_.real_gdp_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRealGDPResponse::CopyFrom(const GetRealGDPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetRealGDPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRealGDPResponse::IsInitialized() const {
  return true;
}

void GetRealGDPResponse::InternalSwap(GetRealGDPResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.real_gdp_.InternalSwap(&other->_impl_.real_gdp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRealGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[13]);
}

// ===================================================================

class SetRealGDPRequest::_Internal {
 public:
};

SetRealGDPRequest::SetRealGDPRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetRealGDPRequest)
}
SetRealGDPRequest::SetRealGDPRequest(const SetRealGDPRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetRealGDPRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){from._impl_.real_gdp_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetRealGDPRequest)
}

inline void SetRealGDPRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.real_gdp_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetRealGDPRequest::~SetRealGDPRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetRealGDPRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetRealGDPRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.real_gdp_.~RepeatedField();
}

void SetRealGDPRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetRealGDPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetRealGDPRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_gdp_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetRealGDPRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float real_gdp = 2 [json_name = "realGdp"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_real_gdp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_real_gdp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetRealGDPRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetRealGDPRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float real_gdp = 2 [json_name = "realGdp"];
  if (this->_internal_real_gdp_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_real_gdp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetRealGDPRequest)
  return target;
}

size_t SetRealGDPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetRealGDPRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float real_gdp = 2 [json_name = "realGdp"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_real_gdp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRealGDPRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetRealGDPRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRealGDPRequest::GetClassData() const { return &_class_data_; }


void SetRealGDPRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetRealGDPRequest*>(&to_msg);
  auto& from = static_cast<const SetRealGDPRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetRealGDPRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.real_gdp_.MergeFrom(from._impl_.real_gdp_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetRealGDPRequest::CopyFrom(const SetRealGDPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetRealGDPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRealGDPRequest::IsInitialized() const {
  return true;
}

void SetRealGDPRequest::InternalSwap(SetRealGDPRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.real_gdp_.InternalSwap(&other->_impl_.real_gdp_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetRealGDPRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[14]);
}

// ===================================================================

class SetRealGDPResponse::_Internal {
 public:
};

SetRealGDPResponse::SetRealGDPResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetRealGDPResponse)
}
SetRealGDPResponse::SetRealGDPResponse(const SetRealGDPResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetRealGDPResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetRealGDPResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRealGDPResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRealGDPResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetRealGDPResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[15]);
}

// ===================================================================

class GetUnemploymentRequest::_Internal {
 public:
};

GetUnemploymentRequest::GetUnemploymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetUnemploymentRequest)
}
GetUnemploymentRequest::GetUnemploymentRequest(const GetUnemploymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUnemploymentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetUnemploymentRequest)
}

inline void GetUnemploymentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUnemploymentRequest::~GetUnemploymentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetUnemploymentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUnemploymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetUnemploymentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUnemploymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetUnemploymentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUnemploymentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUnemploymentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetUnemploymentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetUnemploymentRequest)
  return target;
}

size_t GetUnemploymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetUnemploymentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUnemploymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUnemploymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUnemploymentRequest::GetClassData() const { return &_class_data_; }


void GetUnemploymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUnemploymentRequest*>(&to_msg);
  auto& from = static_cast<const GetUnemploymentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetUnemploymentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUnemploymentRequest::CopyFrom(const GetUnemploymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetUnemploymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUnemploymentRequest::IsInitialized() const {
  return true;
}

void GetUnemploymentRequest::InternalSwap(GetUnemploymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUnemploymentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[16]);
}

// ===================================================================

class GetUnemploymentResponse::_Internal {
 public:
};

GetUnemploymentResponse::GetUnemploymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetUnemploymentResponse)
}
GetUnemploymentResponse::GetUnemploymentResponse(const GetUnemploymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUnemploymentResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unemployment_){from._impl_.unemployment_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetUnemploymentResponse)
}

inline void GetUnemploymentResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unemployment_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUnemploymentResponse::~GetUnemploymentResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetUnemploymentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUnemploymentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unemployment_.~RepeatedField();
}

void GetUnemploymentResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUnemploymentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetUnemploymentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unemployment_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUnemploymentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float unemployment = 1 [json_name = "unemployment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_unemployment(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_unemployment(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUnemploymentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetUnemploymentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float unemployment = 1 [json_name = "unemployment"];
  if (this->_internal_unemployment_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_unemployment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetUnemploymentResponse)
  return target;
}

size_t GetUnemploymentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetUnemploymentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float unemployment = 1 [json_name = "unemployment"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_unemployment_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUnemploymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUnemploymentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUnemploymentResponse::GetClassData() const { return &_class_data_; }


void GetUnemploymentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUnemploymentResponse*>(&to_msg);
  auto& from = static_cast<const GetUnemploymentResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetUnemploymentResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unemployment_.MergeFrom(from._impl_.unemployment_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUnemploymentResponse::CopyFrom(const GetUnemploymentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetUnemploymentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUnemploymentResponse::IsInitialized() const {
  return true;
}

void GetUnemploymentResponse::InternalSwap(GetUnemploymentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unemployment_.InternalSwap(&other->_impl_.unemployment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUnemploymentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[17]);
}

// ===================================================================

class SetUnemploymentRequest::_Internal {
 public:
};

SetUnemploymentRequest::SetUnemploymentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetUnemploymentRequest)
}
SetUnemploymentRequest::SetUnemploymentRequest(const SetUnemploymentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetUnemploymentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unemployment_){from._impl_.unemployment_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetUnemploymentRequest)
}

inline void SetUnemploymentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unemployment_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetUnemploymentRequest::~SetUnemploymentRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetUnemploymentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetUnemploymentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unemployment_.~RepeatedField();
}

void SetUnemploymentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetUnemploymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetUnemploymentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unemployment_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUnemploymentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float unemployment = 2 [json_name = "unemployment"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_unemployment(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_unemployment(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetUnemploymentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetUnemploymentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float unemployment = 2 [json_name = "unemployment"];
  if (this->_internal_unemployment_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_unemployment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetUnemploymentRequest)
  return target;
}

size_t SetUnemploymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetUnemploymentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float unemployment = 2 [json_name = "unemployment"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_unemployment_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUnemploymentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetUnemploymentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUnemploymentRequest::GetClassData() const { return &_class_data_; }


void SetUnemploymentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetUnemploymentRequest*>(&to_msg);
  auto& from = static_cast<const SetUnemploymentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetUnemploymentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unemployment_.MergeFrom(from._impl_.unemployment_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetUnemploymentRequest::CopyFrom(const SetUnemploymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetUnemploymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUnemploymentRequest::IsInitialized() const {
  return true;
}

void SetUnemploymentRequest::InternalSwap(SetUnemploymentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unemployment_.InternalSwap(&other->_impl_.unemployment_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUnemploymentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[18]);
}

// ===================================================================

class SetUnemploymentResponse::_Internal {
 public:
};

SetUnemploymentResponse::SetUnemploymentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetUnemploymentResponse)
}
SetUnemploymentResponse::SetUnemploymentResponse(const SetUnemploymentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetUnemploymentResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetUnemploymentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUnemploymentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUnemploymentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetUnemploymentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[19]);
}

// ===================================================================

class GetWagesRequest::_Internal {
 public:
};

GetWagesRequest::GetWagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetWagesRequest)
}
GetWagesRequest::GetWagesRequest(const GetWagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetWagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetWagesRequest)
}

inline void GetWagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetWagesRequest::~GetWagesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetWagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetWagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetWagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetWagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetWagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetWagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetWagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetWagesRequest)
  return target;
}

size_t GetWagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetWagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetWagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetWagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetWagesRequest::GetClassData() const { return &_class_data_; }


void GetWagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetWagesRequest*>(&to_msg);
  auto& from = static_cast<const GetWagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetWagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetWagesRequest::CopyFrom(const GetWagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetWagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWagesRequest::IsInitialized() const {
  return true;
}

void GetWagesRequest::InternalSwap(GetWagesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[20]);
}

// ===================================================================

class GetWagesResponse::_Internal {
 public:
};

GetWagesResponse::GetWagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetWagesResponse)
}
GetWagesResponse::GetWagesResponse(const GetWagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetWagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.wages_){from._impl_.wages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetWagesResponse)
}

inline void GetWagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.wages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetWagesResponse::~GetWagesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetWagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetWagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.wages_.~RepeatedField();
}

void GetWagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetWagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetWagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.wages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetWagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float wages = 1 [json_name = "wages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_wages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_wages(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetWagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetWagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float wages = 1 [json_name = "wages"];
  if (this->_internal_wages_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_wages(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetWagesResponse)
  return target;
}

size_t GetWagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetWagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float wages = 1 [json_name = "wages"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_wages_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetWagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetWagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetWagesResponse::GetClassData() const { return &_class_data_; }


void GetWagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetWagesResponse*>(&to_msg);
  auto& from = static_cast<const GetWagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetWagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.wages_.MergeFrom(from._impl_.wages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetWagesResponse::CopyFrom(const GetWagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetWagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWagesResponse::IsInitialized() const {
  return true;
}

void GetWagesResponse::InternalSwap(GetWagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.wages_.InternalSwap(&other->_impl_.wages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetWagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[21]);
}

// ===================================================================

class SetWagesRequest::_Internal {
 public:
};

SetWagesRequest::SetWagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetWagesRequest)
}
SetWagesRequest::SetWagesRequest(const SetWagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetWagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.wages_){from._impl_.wages_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetWagesRequest)
}

inline void SetWagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.wages_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetWagesRequest::~SetWagesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetWagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetWagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.wages_.~RepeatedField();
}

void SetWagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetWagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetWagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.wages_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetWagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float wages = 2 [json_name = "wages"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_wages(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_wages(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetWagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetWagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float wages = 2 [json_name = "wages"];
  if (this->_internal_wages_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_wages(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetWagesRequest)
  return target;
}

size_t SetWagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetWagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float wages = 2 [json_name = "wages"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_wages_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetWagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetWagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetWagesRequest::GetClassData() const { return &_class_data_; }


void SetWagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetWagesRequest*>(&to_msg);
  auto& from = static_cast<const SetWagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetWagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.wages_.MergeFrom(from._impl_.wages_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetWagesRequest::CopyFrom(const SetWagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetWagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetWagesRequest::IsInitialized() const {
  return true;
}

void SetWagesRequest::InternalSwap(SetWagesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.wages_.InternalSwap(&other->_impl_.wages_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetWagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[22]);
}

// ===================================================================

class SetWagesResponse::_Internal {
 public:
};

SetWagesResponse::SetWagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetWagesResponse)
}
SetWagesResponse::SetWagesResponse(const SetWagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetWagesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetWagesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetWagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetWagesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetWagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[23]);
}

// ===================================================================

class GetPricesRequest::_Internal {
 public:
};

GetPricesRequest::GetPricesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetPricesRequest)
}
GetPricesRequest::GetPricesRequest(const GetPricesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPricesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetPricesRequest)
}

inline void GetPricesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPricesRequest::~GetPricesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetPricesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPricesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPricesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPricesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetPricesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPricesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPricesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetPricesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetPricesRequest)
  return target;
}

size_t GetPricesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetPricesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPricesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPricesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPricesRequest::GetClassData() const { return &_class_data_; }


void GetPricesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPricesRequest*>(&to_msg);
  auto& from = static_cast<const GetPricesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetPricesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPricesRequest::CopyFrom(const GetPricesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetPricesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPricesRequest::IsInitialized() const {
  return true;
}

void GetPricesRequest::InternalSwap(GetPricesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPricesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[24]);
}

// ===================================================================

class GetPricesResponse::_Internal {
 public:
};

GetPricesResponse::GetPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetPricesResponse)
}
GetPricesResponse::GetPricesResponse(const GetPricesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPricesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.prices_){from._impl_.prices_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetPricesResponse)
}

inline void GetPricesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.prices_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPricesResponse::~GetPricesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetPricesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPricesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.prices_.~RepeatedField();
}

void GetPricesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPricesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetPricesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPricesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float prices = 1 [json_name = "prices"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_prices(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_prices(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPricesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetPricesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float prices = 1 [json_name = "prices"];
  if (this->_internal_prices_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_prices(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetPricesResponse)
  return target;
}

size_t GetPricesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetPricesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float prices = 1 [json_name = "prices"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_prices_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPricesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPricesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPricesResponse::GetClassData() const { return &_class_data_; }


void GetPricesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPricesResponse*>(&to_msg);
  auto& from = static_cast<const GetPricesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetPricesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.prices_.MergeFrom(from._impl_.prices_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPricesResponse::CopyFrom(const GetPricesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetPricesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPricesResponse::IsInitialized() const {
  return true;
}

void GetPricesResponse::InternalSwap(GetPricesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.prices_.InternalSwap(&other->_impl_.prices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPricesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[25]);
}

// ===================================================================

class SetPricesRequest::_Internal {
 public:
};

SetPricesRequest::SetPricesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetPricesRequest)
}
SetPricesRequest::SetPricesRequest(const SetPricesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetPricesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.prices_){from._impl_.prices_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetPricesRequest)
}

inline void SetPricesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.prices_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetPricesRequest::~SetPricesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetPricesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPricesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.prices_.~RepeatedField();
}

void SetPricesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetPricesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetPricesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prices_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPricesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float prices = 2 [json_name = "prices"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_prices(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_prices(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPricesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetPricesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float prices = 2 [json_name = "prices"];
  if (this->_internal_prices_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_prices(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetPricesRequest)
  return target;
}

size_t SetPricesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetPricesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float prices = 2 [json_name = "prices"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_prices_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPricesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetPricesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPricesRequest::GetClassData() const { return &_class_data_; }


void SetPricesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetPricesRequest*>(&to_msg);
  auto& from = static_cast<const SetPricesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetPricesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.prices_.MergeFrom(from._impl_.prices_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPricesRequest::CopyFrom(const SetPricesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetPricesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPricesRequest::IsInitialized() const {
  return true;
}

void SetPricesRequest::InternalSwap(SetPricesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.prices_.InternalSwap(&other->_impl_.prices_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPricesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[26]);
}

// ===================================================================

class SetPricesResponse::_Internal {
 public:
};

SetPricesResponse::SetPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetPricesResponse)
}
SetPricesResponse::SetPricesResponse(const SetPricesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetPricesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetPricesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPricesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPricesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPricesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[27]);
}

// ===================================================================

class GetInventoryRequest::_Internal {
 public:
};

GetInventoryRequest::GetInventoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetInventoryRequest)
}
GetInventoryRequest::GetInventoryRequest(const GetInventoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetInventoryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetInventoryRequest)
}

inline void GetInventoryRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetInventoryRequest::~GetInventoryRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetInventoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInventoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInventoryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetInventoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInventoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInventoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetInventoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetInventoryRequest)
  return target;
}

size_t GetInventoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetInventoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInventoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetInventoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInventoryRequest::GetClassData() const { return &_class_data_; }


void GetInventoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetInventoryRequest*>(&to_msg);
  auto& from = static_cast<const GetInventoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetInventoryRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInventoryRequest::CopyFrom(const GetInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInventoryRequest::IsInitialized() const {
  return true;
}

void GetInventoryRequest::InternalSwap(GetInventoryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInventoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[28]);
}

// ===================================================================

class GetInventoryResponse::_Internal {
 public:
};

GetInventoryResponse::GetInventoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetInventoryResponse)
}
GetInventoryResponse::GetInventoryResponse(const GetInventoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetInventoryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inventory_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.inventory_ = from._impl_.inventory_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetInventoryResponse)
}

inline void GetInventoryResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.inventory_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetInventoryResponse::~GetInventoryResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetInventoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInventoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInventoryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetInventoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetInventoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventory_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInventoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 inventory = 1 [json_name = "inventory"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.inventory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInventoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetInventoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 inventory = 1 [json_name = "inventory"];
  if (this->_internal_inventory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_inventory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetInventoryResponse)
  return target;
}

size_t GetInventoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetInventoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 inventory = 1 [json_name = "inventory"];
  if (this->_internal_inventory() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_inventory());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInventoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetInventoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInventoryResponse::GetClassData() const { return &_class_data_; }


void GetInventoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetInventoryResponse*>(&to_msg);
  auto& from = static_cast<const GetInventoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetInventoryResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_inventory() != 0) {
    _this->_internal_set_inventory(from._internal_inventory());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInventoryResponse::CopyFrom(const GetInventoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetInventoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInventoryResponse::IsInitialized() const {
  return true;
}

void GetInventoryResponse::InternalSwap(GetInventoryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.inventory_, other->_impl_.inventory_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInventoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[29]);
}

// ===================================================================

class SetInventoryRequest::_Internal {
 public:
};

SetInventoryRequest::SetInventoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetInventoryRequest)
}
SetInventoryRequest::SetInventoryRequest(const SetInventoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInventoryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.inventory_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.org_id_, &from._impl_.org_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.inventory_) -
    reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.inventory_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetInventoryRequest)
}

inline void SetInventoryRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , decltype(_impl_.inventory_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInventoryRequest::~SetInventoryRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetInventoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInventoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetInventoryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetInventoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.org_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.inventory_) -
      reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.inventory_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInventoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 inventory = 2 [json_name = "inventory"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.inventory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInventoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetInventoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // int32 inventory = 2 [json_name = "inventory"];
  if (this->_internal_inventory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_inventory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetInventoryRequest)
  return target;
}

size_t SetInventoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetInventoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  // int32 inventory = 2 [json_name = "inventory"];
  if (this->_internal_inventory() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_inventory());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInventoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInventoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInventoryRequest::GetClassData() const { return &_class_data_; }


void SetInventoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInventoryRequest*>(&to_msg);
  auto& from = static_cast<const SetInventoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetInventoryRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (from._internal_inventory() != 0) {
    _this->_internal_set_inventory(from._internal_inventory());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInventoryRequest::CopyFrom(const SetInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInventoryRequest::IsInitialized() const {
  return true;
}

void SetInventoryRequest::InternalSwap(SetInventoryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetInventoryRequest, _impl_.inventory_)
      + sizeof(SetInventoryRequest::_impl_.inventory_)
      - PROTOBUF_FIELD_OFFSET(SetInventoryRequest, _impl_.org_id_)>(
          reinterpret_cast<char*>(&_impl_.org_id_),
          reinterpret_cast<char*>(&other->_impl_.org_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInventoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[30]);
}

// ===================================================================

class SetInventoryResponse::_Internal {
 public:
};

SetInventoryResponse::SetInventoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetInventoryResponse)
}
SetInventoryResponse::SetInventoryResponse(const SetInventoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetInventoryResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetInventoryResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInventoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInventoryResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetInventoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[31]);
}

// ===================================================================

class GetPriceRequest::_Internal {
 public:
};

GetPriceRequest::GetPriceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetPriceRequest)
}
GetPriceRequest::GetPriceRequest(const GetPriceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPriceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetPriceRequest)
}

inline void GetPriceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPriceRequest::~GetPriceRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetPriceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPriceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPriceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetPriceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPriceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPriceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetPriceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetPriceRequest)
  return target;
}

size_t GetPriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetPriceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPriceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPriceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPriceRequest::GetClassData() const { return &_class_data_; }


void GetPriceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPriceRequest*>(&to_msg);
  auto& from = static_cast<const GetPriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetPriceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPriceRequest::CopyFrom(const GetPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPriceRequest::IsInitialized() const {
  return true;
}

void GetPriceRequest::InternalSwap(GetPriceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPriceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[32]);
}

// ===================================================================

class GetPriceResponse::_Internal {
 public:
};

GetPriceResponse::GetPriceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetPriceResponse)
}
GetPriceResponse::GetPriceResponse(const GetPriceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPriceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.price_ = from._impl_.price_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetPriceResponse)
}

inline void GetPriceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPriceResponse::~GetPriceResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetPriceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPriceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPriceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetPriceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPriceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float price = 1 [json_name = "price"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPriceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetPriceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float price = 1 [json_name = "price"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = this->_internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetPriceResponse)
  return target;
}

size_t GetPriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetPriceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float price = 1 [json_name = "price"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = this->_internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPriceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPriceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPriceResponse::GetClassData() const { return &_class_data_; }


void GetPriceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPriceResponse*>(&to_msg);
  auto& from = static_cast<const GetPriceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetPriceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = from._internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPriceResponse::CopyFrom(const GetPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPriceResponse::IsInitialized() const {
  return true;
}

void GetPriceResponse::InternalSwap(GetPriceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.price_, other->_impl_.price_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPriceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[33]);
}

// ===================================================================

class SetPriceRequest::_Internal {
 public:
};

SetPriceRequest::SetPriceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetPriceRequest)
}
SetPriceRequest::SetPriceRequest(const SetPriceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetPriceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.price_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.org_id_, &from._impl_.org_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.price_) -
    reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.price_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetPriceRequest)
}

inline void SetPriceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , decltype(_impl_.price_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetPriceRequest::~SetPriceRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetPriceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPriceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetPriceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetPriceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.org_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.price_) -
      reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.price_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPriceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float price = 2 [json_name = "price"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPriceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetPriceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // float price = 2 [json_name = "price"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = this->_internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetPriceRequest)
  return target;
}

size_t SetPriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetPriceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  // float price = 2 [json_name = "price"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = this->_internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPriceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetPriceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPriceRequest::GetClassData() const { return &_class_data_; }


void SetPriceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetPriceRequest*>(&to_msg);
  auto& from = static_cast<const SetPriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetPriceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_price = from._internal_price();
  uint32_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPriceRequest::CopyFrom(const SetPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPriceRequest::IsInitialized() const {
  return true;
}

void SetPriceRequest::InternalSwap(SetPriceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPriceRequest, _impl_.price_)
      + sizeof(SetPriceRequest::_impl_.price_)
      - PROTOBUF_FIELD_OFFSET(SetPriceRequest, _impl_.org_id_)>(
          reinterpret_cast<char*>(&_impl_.org_id_),
          reinterpret_cast<char*>(&other->_impl_.org_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPriceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[34]);
}

// ===================================================================

class SetPriceResponse::_Internal {
 public:
};

SetPriceResponse::SetPriceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetPriceResponse)
}
SetPriceResponse::SetPriceResponse(const SetPriceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetPriceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetPriceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPriceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPriceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPriceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[35]);
}

// ===================================================================

class GetCurrencyRequest::_Internal {
 public:
};

GetCurrencyRequest::GetCurrencyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetCurrencyRequest)
}
GetCurrencyRequest::GetCurrencyRequest(const GetCurrencyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCurrencyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetCurrencyRequest)
}

inline void GetCurrencyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetCurrencyRequest::~GetCurrencyRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetCurrencyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCurrencyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCurrencyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCurrencyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetCurrencyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrencyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCurrencyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetCurrencyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetCurrencyRequest)
  return target;
}

size_t GetCurrencyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetCurrencyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrencyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCurrencyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrencyRequest::GetClassData() const { return &_class_data_; }


void GetCurrencyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCurrencyRequest*>(&to_msg);
  auto& from = static_cast<const GetCurrencyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetCurrencyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrencyRequest::CopyFrom(const GetCurrencyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetCurrencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrencyRequest::IsInitialized() const {
  return true;
}

void GetCurrencyRequest::InternalSwap(GetCurrencyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrencyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[36]);
}

// ===================================================================

class GetCurrencyResponse::_Internal {
 public:
};

GetCurrencyResponse::GetCurrencyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetCurrencyResponse)
}
GetCurrencyResponse::GetCurrencyResponse(const GetCurrencyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCurrencyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.currency_ = from._impl_.currency_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetCurrencyResponse)
}

inline void GetCurrencyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.currency_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetCurrencyResponse::~GetCurrencyResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetCurrencyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCurrencyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCurrencyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCurrencyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetCurrencyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrencyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float currency = 1 [json_name = "currency"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCurrencyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetCurrencyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float currency = 1 [json_name = "currency"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = this->_internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetCurrencyResponse)
  return target;
}

size_t GetCurrencyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetCurrencyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float currency = 1 [json_name = "currency"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = this->_internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrencyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCurrencyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrencyResponse::GetClassData() const { return &_class_data_; }


void GetCurrencyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCurrencyResponse*>(&to_msg);
  auto& from = static_cast<const GetCurrencyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetCurrencyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = from._internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrencyResponse::CopyFrom(const GetCurrencyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetCurrencyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrencyResponse::IsInitialized() const {
  return true;
}

void GetCurrencyResponse::InternalSwap(GetCurrencyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.currency_, other->_impl_.currency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrencyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[37]);
}

// ===================================================================

class SetCurrencyRequest::_Internal {
 public:
};

SetCurrencyRequest::SetCurrencyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetCurrencyRequest)
}
SetCurrencyRequest::SetCurrencyRequest(const SetCurrencyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetCurrencyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.currency_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.org_id_, &from._impl_.org_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.currency_) -
    reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.currency_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetCurrencyRequest)
}

inline void SetCurrencyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , decltype(_impl_.currency_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetCurrencyRequest::~SetCurrencyRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetCurrencyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetCurrencyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetCurrencyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetCurrencyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetCurrencyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.org_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.currency_) -
      reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.currency_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrencyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float currency = 2 [json_name = "currency"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.currency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetCurrencyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetCurrencyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // float currency = 2 [json_name = "currency"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = this->_internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetCurrencyRequest)
  return target;
}

size_t SetCurrencyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetCurrencyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  // float currency = 2 [json_name = "currency"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = this->_internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetCurrencyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetCurrencyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetCurrencyRequest::GetClassData() const { return &_class_data_; }


void SetCurrencyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetCurrencyRequest*>(&to_msg);
  auto& from = static_cast<const SetCurrencyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetCurrencyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_currency = from._internal_currency();
  uint32_t raw_currency;
  memcpy(&raw_currency, &tmp_currency, sizeof(tmp_currency));
  if (raw_currency != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetCurrencyRequest::CopyFrom(const SetCurrencyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetCurrencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrencyRequest::IsInitialized() const {
  return true;
}

void SetCurrencyRequest::InternalSwap(SetCurrencyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetCurrencyRequest, _impl_.currency_)
      + sizeof(SetCurrencyRequest::_impl_.currency_)
      - PROTOBUF_FIELD_OFFSET(SetCurrencyRequest, _impl_.org_id_)>(
          reinterpret_cast<char*>(&_impl_.org_id_),
          reinterpret_cast<char*>(&other->_impl_.org_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrencyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[38]);
}

// ===================================================================

class SetCurrencyResponse::_Internal {
 public:
};

SetCurrencyResponse::SetCurrencyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetCurrencyResponse)
}
SetCurrencyResponse::SetCurrencyResponse(const SetCurrencyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetCurrencyResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetCurrencyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetCurrencyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetCurrencyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetCurrencyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[39]);
}

// ===================================================================

class GetInterestRateRequest::_Internal {
 public:
};

GetInterestRateRequest::GetInterestRateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetInterestRateRequest)
}
GetInterestRateRequest::GetInterestRateRequest(const GetInterestRateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetInterestRateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetInterestRateRequest)
}

inline void GetInterestRateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetInterestRateRequest::~GetInterestRateRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetInterestRateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInterestRateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInterestRateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetInterestRateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetInterestRateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInterestRateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInterestRateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetInterestRateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetInterestRateRequest)
  return target;
}

size_t GetInterestRateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetInterestRateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInterestRateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetInterestRateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInterestRateRequest::GetClassData() const { return &_class_data_; }


void GetInterestRateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetInterestRateRequest*>(&to_msg);
  auto& from = static_cast<const GetInterestRateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetInterestRateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInterestRateRequest::CopyFrom(const GetInterestRateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetInterestRateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInterestRateRequest::IsInitialized() const {
  return true;
}

void GetInterestRateRequest::InternalSwap(GetInterestRateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInterestRateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[40]);
}

// ===================================================================

class GetInterestRateResponse::_Internal {
 public:
};

GetInterestRateResponse::GetInterestRateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetInterestRateResponse)
}
GetInterestRateResponse::GetInterestRateResponse(const GetInterestRateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetInterestRateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.interest_rate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.interest_rate_ = from._impl_.interest_rate_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetInterestRateResponse)
}

inline void GetInterestRateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.interest_rate_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetInterestRateResponse::~GetInterestRateResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetInterestRateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInterestRateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInterestRateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetInterestRateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetInterestRateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interest_rate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInterestRateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float interest_rate = 1 [json_name = "interestRate"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.interest_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInterestRateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetInterestRateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float interest_rate = 1 [json_name = "interestRate"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = this->_internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_interest_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetInterestRateResponse)
  return target;
}

size_t GetInterestRateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetInterestRateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float interest_rate = 1 [json_name = "interestRate"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = this->_internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInterestRateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetInterestRateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInterestRateResponse::GetClassData() const { return &_class_data_; }


void GetInterestRateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetInterestRateResponse*>(&to_msg);
  auto& from = static_cast<const GetInterestRateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetInterestRateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = from._internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    _this->_internal_set_interest_rate(from._internal_interest_rate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInterestRateResponse::CopyFrom(const GetInterestRateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetInterestRateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInterestRateResponse::IsInitialized() const {
  return true;
}

void GetInterestRateResponse::InternalSwap(GetInterestRateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.interest_rate_, other->_impl_.interest_rate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInterestRateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[41]);
}

// ===================================================================

class SetInterestRateRequest::_Internal {
 public:
};

SetInterestRateRequest::SetInterestRateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetInterestRateRequest)
}
SetInterestRateRequest::SetInterestRateRequest(const SetInterestRateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetInterestRateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.interest_rate_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.org_id_, &from._impl_.org_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.interest_rate_) -
    reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.interest_rate_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetInterestRateRequest)
}

inline void SetInterestRateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , decltype(_impl_.interest_rate_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetInterestRateRequest::~SetInterestRateRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetInterestRateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetInterestRateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetInterestRateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetInterestRateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetInterestRateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.org_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.interest_rate_) -
      reinterpret_cast<char*>(&_impl_.org_id_)) + sizeof(_impl_.interest_rate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetInterestRateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float interest_rate = 2 [json_name = "interestRate"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.interest_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetInterestRateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetInterestRateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // float interest_rate = 2 [json_name = "interestRate"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = this->_internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_interest_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetInterestRateRequest)
  return target;
}

size_t SetInterestRateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetInterestRateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  // float interest_rate = 2 [json_name = "interestRate"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = this->_internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInterestRateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetInterestRateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInterestRateRequest::GetClassData() const { return &_class_data_; }


void SetInterestRateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetInterestRateRequest*>(&to_msg);
  auto& from = static_cast<const SetInterestRateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetInterestRateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_interest_rate = from._internal_interest_rate();
  uint32_t raw_interest_rate;
  memcpy(&raw_interest_rate, &tmp_interest_rate, sizeof(tmp_interest_rate));
  if (raw_interest_rate != 0) {
    _this->_internal_set_interest_rate(from._internal_interest_rate());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetInterestRateRequest::CopyFrom(const SetInterestRateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetInterestRateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetInterestRateRequest::IsInitialized() const {
  return true;
}

void SetInterestRateRequest::InternalSwap(SetInterestRateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetInterestRateRequest, _impl_.interest_rate_)
      + sizeof(SetInterestRateRequest::_impl_.interest_rate_)
      - PROTOBUF_FIELD_OFFSET(SetInterestRateRequest, _impl_.org_id_)>(
          reinterpret_cast<char*>(&_impl_.org_id_),
          reinterpret_cast<char*>(&other->_impl_.org_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetInterestRateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[42]);
}

// ===================================================================

class SetInterestRateResponse::_Internal {
 public:
};

SetInterestRateResponse::SetInterestRateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetInterestRateResponse)
}
SetInterestRateResponse::SetInterestRateResponse(const SetInterestRateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetInterestRateResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetInterestRateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetInterestRateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetInterestRateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetInterestRateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[43]);
}

// ===================================================================

class GetBracketCutoffsRequest::_Internal {
 public:
};

GetBracketCutoffsRequest::GetBracketCutoffsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBracketCutoffsRequest)
}
GetBracketCutoffsRequest::GetBracketCutoffsRequest(const GetBracketCutoffsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBracketCutoffsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBracketCutoffsRequest)
}

inline void GetBracketCutoffsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBracketCutoffsRequest::~GetBracketCutoffsRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBracketCutoffsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBracketCutoffsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBracketCutoffsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBracketCutoffsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBracketCutoffsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBracketCutoffsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBracketCutoffsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBracketCutoffsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBracketCutoffsRequest)
  return target;
}

size_t GetBracketCutoffsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBracketCutoffsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBracketCutoffsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBracketCutoffsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBracketCutoffsRequest::GetClassData() const { return &_class_data_; }


void GetBracketCutoffsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBracketCutoffsRequest*>(&to_msg);
  auto& from = static_cast<const GetBracketCutoffsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBracketCutoffsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBracketCutoffsRequest::CopyFrom(const GetBracketCutoffsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBracketCutoffsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBracketCutoffsRequest::IsInitialized() const {
  return true;
}

void GetBracketCutoffsRequest::InternalSwap(GetBracketCutoffsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBracketCutoffsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[44]);
}

// ===================================================================

class GetBracketCutoffsResponse::_Internal {
 public:
};

GetBracketCutoffsResponse::GetBracketCutoffsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBracketCutoffsResponse)
}
GetBracketCutoffsResponse::GetBracketCutoffsResponse(const GetBracketCutoffsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBracketCutoffsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_cutoffs_){from._impl_.bracket_cutoffs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBracketCutoffsResponse)
}

inline void GetBracketCutoffsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_cutoffs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBracketCutoffsResponse::~GetBracketCutoffsResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBracketCutoffsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBracketCutoffsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bracket_cutoffs_.~RepeatedField();
}

void GetBracketCutoffsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBracketCutoffsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBracketCutoffsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bracket_cutoffs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBracketCutoffsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float bracket_cutoffs = 1 [json_name = "bracketCutoffs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_bracket_cutoffs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_bracket_cutoffs(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBracketCutoffsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBracketCutoffsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float bracket_cutoffs = 1 [json_name = "bracketCutoffs"];
  if (this->_internal_bracket_cutoffs_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bracket_cutoffs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBracketCutoffsResponse)
  return target;
}

size_t GetBracketCutoffsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBracketCutoffsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float bracket_cutoffs = 1 [json_name = "bracketCutoffs"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bracket_cutoffs_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBracketCutoffsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBracketCutoffsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBracketCutoffsResponse::GetClassData() const { return &_class_data_; }


void GetBracketCutoffsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBracketCutoffsResponse*>(&to_msg);
  auto& from = static_cast<const GetBracketCutoffsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBracketCutoffsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bracket_cutoffs_.MergeFrom(from._impl_.bracket_cutoffs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBracketCutoffsResponse::CopyFrom(const GetBracketCutoffsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBracketCutoffsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBracketCutoffsResponse::IsInitialized() const {
  return true;
}

void GetBracketCutoffsResponse::InternalSwap(GetBracketCutoffsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bracket_cutoffs_.InternalSwap(&other->_impl_.bracket_cutoffs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBracketCutoffsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[45]);
}

// ===================================================================

class SetBracketCutoffsRequest::_Internal {
 public:
};

SetBracketCutoffsRequest::SetBracketCutoffsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetBracketCutoffsRequest)
}
SetBracketCutoffsRequest::SetBracketCutoffsRequest(const SetBracketCutoffsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetBracketCutoffsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_cutoffs_){from._impl_.bracket_cutoffs_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetBracketCutoffsRequest)
}

inline void SetBracketCutoffsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_cutoffs_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetBracketCutoffsRequest::~SetBracketCutoffsRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetBracketCutoffsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetBracketCutoffsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bracket_cutoffs_.~RepeatedField();
}

void SetBracketCutoffsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetBracketCutoffsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetBracketCutoffsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bracket_cutoffs_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBracketCutoffsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float bracket_cutoffs = 2 [json_name = "bracketCutoffs"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_bracket_cutoffs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_bracket_cutoffs(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetBracketCutoffsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetBracketCutoffsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float bracket_cutoffs = 2 [json_name = "bracketCutoffs"];
  if (this->_internal_bracket_cutoffs_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_bracket_cutoffs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetBracketCutoffsRequest)
  return target;
}

size_t SetBracketCutoffsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetBracketCutoffsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float bracket_cutoffs = 2 [json_name = "bracketCutoffs"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bracket_cutoffs_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetBracketCutoffsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetBracketCutoffsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetBracketCutoffsRequest::GetClassData() const { return &_class_data_; }


void SetBracketCutoffsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetBracketCutoffsRequest*>(&to_msg);
  auto& from = static_cast<const SetBracketCutoffsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetBracketCutoffsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bracket_cutoffs_.MergeFrom(from._impl_.bracket_cutoffs_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetBracketCutoffsRequest::CopyFrom(const SetBracketCutoffsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetBracketCutoffsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBracketCutoffsRequest::IsInitialized() const {
  return true;
}

void SetBracketCutoffsRequest::InternalSwap(SetBracketCutoffsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bracket_cutoffs_.InternalSwap(&other->_impl_.bracket_cutoffs_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBracketCutoffsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[46]);
}

// ===================================================================

class SetBracketCutoffsResponse::_Internal {
 public:
};

SetBracketCutoffsResponse::SetBracketCutoffsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetBracketCutoffsResponse)
}
SetBracketCutoffsResponse::SetBracketCutoffsResponse(const SetBracketCutoffsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetBracketCutoffsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetBracketCutoffsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetBracketCutoffsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetBracketCutoffsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetBracketCutoffsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[47]);
}

// ===================================================================

class GetBracketRatesRequest::_Internal {
 public:
};

GetBracketRatesRequest::GetBracketRatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBracketRatesRequest)
}
GetBracketRatesRequest::GetBracketRatesRequest(const GetBracketRatesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBracketRatesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBracketRatesRequest)
}

inline void GetBracketRatesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBracketRatesRequest::~GetBracketRatesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBracketRatesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBracketRatesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBracketRatesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBracketRatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBracketRatesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBracketRatesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBracketRatesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBracketRatesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBracketRatesRequest)
  return target;
}

size_t GetBracketRatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBracketRatesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBracketRatesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBracketRatesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBracketRatesRequest::GetClassData() const { return &_class_data_; }


void GetBracketRatesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBracketRatesRequest*>(&to_msg);
  auto& from = static_cast<const GetBracketRatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBracketRatesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBracketRatesRequest::CopyFrom(const GetBracketRatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBracketRatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBracketRatesRequest::IsInitialized() const {
  return true;
}

void GetBracketRatesRequest::InternalSwap(GetBracketRatesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBracketRatesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[48]);
}

// ===================================================================

class GetBracketRatesResponse::_Internal {
 public:
};

GetBracketRatesResponse::GetBracketRatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.GetBracketRatesResponse)
}
GetBracketRatesResponse::GetBracketRatesResponse(const GetBracketRatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBracketRatesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_rates_){from._impl_.bracket_rates_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.GetBracketRatesResponse)
}

inline void GetBracketRatesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_rates_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBracketRatesResponse::~GetBracketRatesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.GetBracketRatesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBracketRatesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bracket_rates_.~RepeatedField();
}

void GetBracketRatesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBracketRatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.GetBracketRatesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bracket_rates_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBracketRatesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float bracket_rates = 1 [json_name = "bracketRates"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_bracket_rates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_bracket_rates(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBracketRatesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.GetBracketRatesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float bracket_rates = 1 [json_name = "bracketRates"];
  if (this->_internal_bracket_rates_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bracket_rates(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.GetBracketRatesResponse)
  return target;
}

size_t GetBracketRatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.GetBracketRatesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float bracket_rates = 1 [json_name = "bracketRates"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bracket_rates_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBracketRatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBracketRatesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBracketRatesResponse::GetClassData() const { return &_class_data_; }


void GetBracketRatesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBracketRatesResponse*>(&to_msg);
  auto& from = static_cast<const GetBracketRatesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.GetBracketRatesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bracket_rates_.MergeFrom(from._impl_.bracket_rates_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBracketRatesResponse::CopyFrom(const GetBracketRatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.GetBracketRatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBracketRatesResponse::IsInitialized() const {
  return true;
}

void GetBracketRatesResponse::InternalSwap(GetBracketRatesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bracket_rates_.InternalSwap(&other->_impl_.bracket_rates_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBracketRatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[49]);
}

// ===================================================================

class SetBracketRatesRequest::_Internal {
 public:
};

SetBracketRatesRequest::SetBracketRatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetBracketRatesRequest)
}
SetBracketRatesRequest::SetBracketRatesRequest(const SetBracketRatesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetBracketRatesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_rates_){from._impl_.bracket_rates_}
    , decltype(_impl_.org_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.org_id_ = from._impl_.org_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetBracketRatesRequest)
}

inline void SetBracketRatesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bracket_rates_){arena}
    , decltype(_impl_.org_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetBracketRatesRequest::~SetBracketRatesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SetBracketRatesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetBracketRatesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bracket_rates_.~RepeatedField();
}

void SetBracketRatesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetBracketRatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SetBracketRatesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bracket_rates_.Clear();
  _impl_.org_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetBracketRatesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.org_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float bracket_rates = 2 [json_name = "bracketRates"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_bracket_rates(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_bracket_rates(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetBracketRatesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SetBracketRatesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_org_id(), target);
  }

  // repeated float bracket_rates = 2 [json_name = "bracketRates"];
  if (this->_internal_bracket_rates_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_bracket_rates(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SetBracketRatesRequest)
  return target;
}

size_t SetBracketRatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SetBracketRatesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float bracket_rates = 2 [json_name = "bracketRates"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_bracket_rates_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 org_id = 1 [json_name = "orgId"];
  if (this->_internal_org_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetBracketRatesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetBracketRatesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetBracketRatesRequest::GetClassData() const { return &_class_data_; }


void SetBracketRatesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetBracketRatesRequest*>(&to_msg);
  auto& from = static_cast<const SetBracketRatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SetBracketRatesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bracket_rates_.MergeFrom(from._impl_.bracket_rates_);
  if (from._internal_org_id() != 0) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetBracketRatesRequest::CopyFrom(const SetBracketRatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SetBracketRatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBracketRatesRequest::IsInitialized() const {
  return true;
}

void SetBracketRatesRequest::InternalSwap(SetBracketRatesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bracket_rates_.InternalSwap(&other->_impl_.bracket_rates_);
  swap(_impl_.org_id_, other->_impl_.org_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetBracketRatesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[50]);
}

// ===================================================================

class SetBracketRatesResponse::_Internal {
 public:
};

SetBracketRatesResponse::SetBracketRatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SetBracketRatesResponse)
}
SetBracketRatesResponse::SetBracketRatesResponse(const SetBracketRatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetBracketRatesResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SetBracketRatesResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetBracketRatesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetBracketRatesResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetBracketRatesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[51]);
}

// ===================================================================

class CalculateTaxesDueRequest::_Internal {
 public:
};

CalculateTaxesDueRequest::CalculateTaxesDueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueRequest)
}
CalculateTaxesDueRequest::CalculateTaxesDueRequest(const CalculateTaxesDueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){from._impl_.incomes_}
    , decltype(_impl_.government_id_){}
    , decltype(_impl_.enable_redistribution_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.government_id_, &from._impl_.government_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
    reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueRequest)
}

inline void CalculateTaxesDueRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.incomes_){arena}
    , decltype(_impl_.government_id_){0}
    , decltype(_impl_.enable_redistribution_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueRequest::~CalculateTaxesDueRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.incomes_.~RepeatedField();
}

void CalculateTaxesDueRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.incomes_.Clear();
  ::memset(&_impl_.government_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.enable_redistribution_) -
      reinterpret_cast<char*>(&_impl_.government_id_)) + sizeof(_impl_.enable_redistribution_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 government_id = 1 [json_name = "governmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.government_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float incomes = 3 [json_name = "incomes"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 29) {
          _internal_add_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.enable_redistribution_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_government_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  if (this->_internal_incomes_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_incomes(), target);
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_enable_redistribution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueRequest)
  return target;
}

size_t CalculateTaxesDueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float incomes = 3 [json_name = "incomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 government_id = 1 [json_name = "governmentId"];
  if (this->_internal_government_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_government_id());
  }

  // bool enable_redistribution = 4 [json_name = "enableRedistribution"];
  if (this->_internal_enable_redistribution() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueRequest::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueRequest*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.incomes_.MergeFrom(from._impl_.incomes_);
  if (from._internal_government_id() != 0) {
    _this->_internal_set_government_id(from._internal_government_id());
  }
  if (from._internal_enable_redistribution() != 0) {
    _this->_internal_set_enable_redistribution(from._internal_enable_redistribution());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueRequest::CopyFrom(const CalculateTaxesDueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueRequest::IsInitialized() const {
  return true;
}

void CalculateTaxesDueRequest::InternalSwap(CalculateTaxesDueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.incomes_.InternalSwap(&other->_impl_.incomes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.enable_redistribution_)
      + sizeof(CalculateTaxesDueRequest::_impl_.enable_redistribution_)
      - PROTOBUF_FIELD_OFFSET(CalculateTaxesDueRequest, _impl_.government_id_)>(
          reinterpret_cast<char*>(&_impl_.government_id_),
          reinterpret_cast<char*>(&other->_impl_.government_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[52]);
}

// ===================================================================

class CalculateTaxesDueResponse::_Internal {
 public:
};

CalculateTaxesDueResponse::CalculateTaxesDueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateTaxesDueResponse)
}
CalculateTaxesDueResponse::CalculateTaxesDueResponse(const CalculateTaxesDueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateTaxesDueResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){from._impl_.updated_incomes_}
    , decltype(_impl_.taxes_due_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.taxes_due_ = from._impl_.taxes_due_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateTaxesDueResponse)
}

inline void CalculateTaxesDueResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_incomes_){arena}
    , decltype(_impl_.taxes_due_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateTaxesDueResponse::~CalculateTaxesDueResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateTaxesDueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateTaxesDueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_incomes_.~RepeatedField();
}

void CalculateTaxesDueResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateTaxesDueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_incomes_.Clear();
  _impl_.taxes_due_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateTaxesDueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float taxes_due = 1 [json_name = "taxesDue"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.taxes_due_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_incomes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_incomes(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateTaxesDueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateTaxesDueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_taxes_due(), target);
  }

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  if (this->_internal_updated_incomes_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_incomes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateTaxesDueResponse)
  return target;
}

size_t CalculateTaxesDueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateTaxesDueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_incomes = 2 [json_name = "updatedIncomes"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_incomes_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float taxes_due = 1 [json_name = "taxesDue"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = this->_internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateTaxesDueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateTaxesDueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateTaxesDueResponse::GetClassData() const { return &_class_data_; }


void CalculateTaxesDueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateTaxesDueResponse*>(&to_msg);
  auto& from = static_cast<const CalculateTaxesDueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateTaxesDueResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_incomes_.MergeFrom(from._impl_.updated_incomes_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_taxes_due = from._internal_taxes_due();
  uint32_t raw_taxes_due;
  memcpy(&raw_taxes_due, &tmp_taxes_due, sizeof(tmp_taxes_due));
  if (raw_taxes_due != 0) {
    _this->_internal_set_taxes_due(from._internal_taxes_due());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateTaxesDueResponse::CopyFrom(const CalculateTaxesDueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateTaxesDueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateTaxesDueResponse::IsInitialized() const {
  return true;
}

void CalculateTaxesDueResponse::InternalSwap(CalculateTaxesDueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_incomes_.InternalSwap(&other->_impl_.updated_incomes_);
  swap(_impl_.taxes_due_, other->_impl_.taxes_due_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateTaxesDueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[53]);
}

// ===================================================================

class CalculateConsumptionRequest::_Internal {
 public:
};

CalculateConsumptionRequest::CalculateConsumptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionRequest)
}
CalculateConsumptionRequest::CalculateConsumptionRequest(const CalculateConsumptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){from._impl_.demands_}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.firm_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.firm_id_ = from._impl_.firm_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionRequest)
}

inline void CalculateConsumptionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.demands_){arena}
    , /*decltype(_impl_._demands_cached_byte_size_)*/{0}
    , decltype(_impl_.firm_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateConsumptionRequest::~CalculateConsumptionRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.demands_.~RepeatedField();
}

void CalculateConsumptionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.demands_.Clear();
  _impl_.firm_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 firm_id = 1 [json_name = "firmId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.firm_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 demands = 3 [json_name = "demands"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_demands(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_demands(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 firm_id = 1 [json_name = "firmId"];
  if (this->_internal_firm_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_firm_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    int byte_size = _impl_._demands_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_demands(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionRequest)
  return target;
}

size_t CalculateConsumptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 demands = 3 [json_name = "demands"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.demands_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._demands_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 firm_id = 1 [json_name = "firmId"];
  if (this->_internal_firm_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_firm_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionRequest::GetClassData() const { return &_class_data_; }


void CalculateConsumptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionRequest*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.demands_.MergeFrom(from._impl_.demands_);
  if (from._internal_firm_id() != 0) {
    _this->_internal_set_firm_id(from._internal_firm_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionRequest::CopyFrom(const CalculateConsumptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionRequest::IsInitialized() const {
  return true;
}

void CalculateConsumptionRequest::InternalSwap(CalculateConsumptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.demands_.InternalSwap(&other->_impl_.demands_);
  swap(_impl_.firm_id_, other->_impl_.firm_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[54]);
}

// ===================================================================

class CalculateConsumptionResponse::_Internal {
 public:
};

CalculateConsumptionResponse::CalculateConsumptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateConsumptionResponse)
}
CalculateConsumptionResponse::CalculateConsumptionResponse(const CalculateConsumptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateConsumptionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){from._impl_.updated_currencies_}
    , decltype(_impl_.remain_inventory_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.remain_inventory_ = from._impl_.remain_inventory_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateConsumptionResponse)
}

inline void CalculateConsumptionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){arena}
    , decltype(_impl_.remain_inventory_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateConsumptionResponse::~CalculateConsumptionResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateConsumptionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateConsumptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_currencies_.~RepeatedField();
}

void CalculateConsumptionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateConsumptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_currencies_.Clear();
  _impl_.remain_inventory_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateConsumptionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 remain_inventory = 1 [json_name = "remainInventory"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remain_inventory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_currencies(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_currencies(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateConsumptionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateConsumptionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 remain_inventory = 1 [json_name = "remainInventory"];
  if (this->_internal_remain_inventory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_remain_inventory(), target);
  }

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  if (this->_internal_updated_currencies_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_currencies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateConsumptionResponse)
  return target;
}

size_t CalculateConsumptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateConsumptionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_currencies_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // int32 remain_inventory = 1 [json_name = "remainInventory"];
  if (this->_internal_remain_inventory() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_remain_inventory());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateConsumptionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateConsumptionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateConsumptionResponse::GetClassData() const { return &_class_data_; }


void CalculateConsumptionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateConsumptionResponse*>(&to_msg);
  auto& from = static_cast<const CalculateConsumptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateConsumptionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_currencies_.MergeFrom(from._impl_.updated_currencies_);
  if (from._internal_remain_inventory() != 0) {
    _this->_internal_set_remain_inventory(from._internal_remain_inventory());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateConsumptionResponse::CopyFrom(const CalculateConsumptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateConsumptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateConsumptionResponse::IsInitialized() const {
  return true;
}

void CalculateConsumptionResponse::InternalSwap(CalculateConsumptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_currencies_.InternalSwap(&other->_impl_.updated_currencies_);
  swap(_impl_.remain_inventory_, other->_impl_.remain_inventory_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateConsumptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[55]);
}

// ===================================================================

class CalculateInterestRequest::_Internal {
 public:
};

CalculateInterestRequest::CalculateInterestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestRequest)
}
CalculateInterestRequest::CalculateInterestRequest(const CalculateInterestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.bank_id_ = from._impl_.bank_id_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestRequest)
}

inline void CalculateInterestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.bank_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestRequest::~CalculateInterestRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
}

void CalculateInterestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.bank_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 bank_id = 1 [json_name = "bankId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bank_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 agent_ids = 2 [json_name = "agentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_bank_id(), target);
  }

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_agent_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestRequest)
  return target;
}

size_t CalculateInterestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 2 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 bank_id = 1 [json_name = "bankId"];
  if (this->_internal_bank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_bank_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestRequest::GetClassData() const { return &_class_data_; }


void CalculateInterestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestRequest*>(&to_msg);
  auto& from = static_cast<const CalculateInterestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  if (from._internal_bank_id() != 0) {
    _this->_internal_set_bank_id(from._internal_bank_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestRequest::CopyFrom(const CalculateInterestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestRequest::IsInitialized() const {
  return true;
}

void CalculateInterestRequest::InternalSwap(CalculateInterestRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  swap(_impl_.bank_id_, other->_impl_.bank_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[56]);
}

// ===================================================================

class CalculateInterestResponse::_Internal {
 public:
};

CalculateInterestResponse::CalculateInterestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.CalculateInterestResponse)
}
CalculateInterestResponse::CalculateInterestResponse(const CalculateInterestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CalculateInterestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){from._impl_.updated_currencies_}
    , decltype(_impl_.total_interest_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.total_interest_ = from._impl_.total_interest_;
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.CalculateInterestResponse)
}

inline void CalculateInterestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.updated_currencies_){arena}
    , decltype(_impl_.total_interest_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CalculateInterestResponse::~CalculateInterestResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.CalculateInterestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CalculateInterestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.updated_currencies_.~RepeatedField();
}

void CalculateInterestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CalculateInterestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updated_currencies_.Clear();
  _impl_.total_interest_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CalculateInterestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float total_interest = 1 [json_name = "totalInterest"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.total_interest_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_updated_currencies(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_updated_currencies(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CalculateInterestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.CalculateInterestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_total_interest(), target);
  }

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  if (this->_internal_updated_currencies_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_updated_currencies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.CalculateInterestResponse)
  return target;
}

size_t CalculateInterestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.CalculateInterestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float updated_currencies = 2 [json_name = "updatedCurrencies"];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_updated_currencies_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // float total_interest = 1 [json_name = "totalInterest"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = this->_internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CalculateInterestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CalculateInterestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CalculateInterestResponse::GetClassData() const { return &_class_data_; }


void CalculateInterestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CalculateInterestResponse*>(&to_msg);
  auto& from = static_cast<const CalculateInterestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.CalculateInterestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.updated_currencies_.MergeFrom(from._impl_.updated_currencies_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_total_interest = from._internal_total_interest();
  uint32_t raw_total_interest;
  memcpy(&raw_total_interest, &tmp_total_interest, sizeof(tmp_total_interest));
  if (raw_total_interest != 0) {
    _this->_internal_set_total_interest(from._internal_total_interest());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateInterestResponse::CopyFrom(const CalculateInterestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.CalculateInterestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalculateInterestResponse::IsInitialized() const {
  return true;
}

void CalculateInterestResponse::InternalSwap(CalculateInterestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updated_currencies_.InternalSwap(&other->_impl_.updated_currencies_);
  swap(_impl_.total_interest_, other->_impl_.total_interest_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CalculateInterestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[57]);
}

// ===================================================================

class SaveEconomyEntitiesRequest::_Internal {
 public:
};

SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}
SaveEconomyEntitiesRequest::SaveEconomyEntitiesRequest(const SaveEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesRequest)
}

inline void SaveEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SaveEconomyEntitiesRequest::~SaveEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void SaveEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.SaveEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.SaveEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesRequest)
  return target;
}

size_t SaveEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesRequest::CopyFrom(const SaveEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesRequest::InternalSwap(SaveEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[58]);
}

// ===================================================================

class SaveEconomyEntitiesResponse::_Internal {
 public:
};

SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}
SaveEconomyEntitiesResponse::SaveEconomyEntitiesResponse(const SaveEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.org_ids_){from._impl_.org_ids_}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.SaveEconomyEntitiesResponse)
}

inline void SaveEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.org_ids_){arena}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveEconomyEntitiesResponse::~SaveEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.SaveEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.org_ids_.~RepeatedField();
}

void SaveEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.org_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 agent_ids = 1 [json_name = "agentIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 org_ids = 2 [json_name = "orgIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_org_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_org_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.SaveEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated int32 org_ids = 2 [json_name = "orgIds"];
  {
    int byte_size = _impl_._org_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_org_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.SaveEconomyEntitiesResponse)
  return target;
}

size_t SaveEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.SaveEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 org_ids = 2 [json_name = "orgIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.org_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._org_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void SaveEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const SaveEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.org_ids_.MergeFrom(from._impl_.org_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveEconomyEntitiesResponse::CopyFrom(const SaveEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.SaveEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void SaveEconomyEntitiesResponse::InternalSwap(SaveEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.org_ids_.InternalSwap(&other->_impl_.org_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[59]);
}

// ===================================================================

class LoadEconomyEntitiesRequest::_Internal {
 public:
};

LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}
LoadEconomyEntitiesRequest::LoadEconomyEntitiesRequest(const LoadEconomyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_file_path().empty()) {
    _this->_impl_.file_path_.Set(from._internal_file_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesRequest)
}

inline void LoadEconomyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.file_path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.file_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.file_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadEconomyEntitiesRequest::~LoadEconomyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.file_path_.Destroy();
}

void LoadEconomyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string file_path = 1 [json_name = "filePath"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_file_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "city.economy.v2.LoadEconomyEntitiesRequest.file_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "city.economy.v2.LoadEconomyEntitiesRequest.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesRequest)
  return target;
}

size_t LoadEconomyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1 [json_name = "filePath"];
  if (!this->_internal_file_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesRequest::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesRequest::CopyFrom(const LoadEconomyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesRequest::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesRequest::InternalSwap(LoadEconomyEntitiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.file_path_, lhs_arena,
      &other->_impl_.file_path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[60]);
}

// ===================================================================

class LoadEconomyEntitiesResponse::_Internal {
 public:
};

LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}
LoadEconomyEntitiesResponse::LoadEconomyEntitiesResponse(const LoadEconomyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadEconomyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){from._impl_.agent_ids_}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.org_ids_){from._impl_.org_ids_}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.economy.v2.LoadEconomyEntitiesResponse)
}

inline void LoadEconomyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_ids_){arena}
    , /*decltype(_impl_._agent_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.org_ids_){arena}
    , /*decltype(_impl_._org_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoadEconomyEntitiesResponse::~LoadEconomyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:city.economy.v2.LoadEconomyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadEconomyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_ids_.~RepeatedField();
  _impl_.org_ids_.~RepeatedField();
}

void LoadEconomyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadEconomyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.org_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadEconomyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 agent_ids = 1 [json_name = "agentIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_agent_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_agent_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 org_ids = 2 [json_name = "orgIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_org_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_org_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadEconomyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.economy.v2.LoadEconomyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    int byte_size = _impl_._agent_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_agent_ids(), byte_size, target);
    }
  }

  // repeated int32 org_ids = 2 [json_name = "orgIds"];
  {
    int byte_size = _impl_._org_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_org_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.economy.v2.LoadEconomyEntitiesResponse)
  return target;
}

size_t LoadEconomyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.economy.v2.LoadEconomyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 agent_ids = 1 [json_name = "agentIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.agent_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._agent_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 org_ids = 2 [json_name = "orgIds"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.org_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._org_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadEconomyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadEconomyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadEconomyEntitiesResponse::GetClassData() const { return &_class_data_; }


void LoadEconomyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadEconomyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const LoadEconomyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_ids_.MergeFrom(from._impl_.agent_ids_);
  _this->_impl_.org_ids_.MergeFrom(from._impl_.org_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadEconomyEntitiesResponse::CopyFrom(const LoadEconomyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.economy.v2.LoadEconomyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadEconomyEntitiesResponse::IsInitialized() const {
  return true;
}

void LoadEconomyEntitiesResponse::InternalSwap(LoadEconomyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.org_ids_.InternalSwap(&other->_impl_.org_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadEconomyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_getter, &descriptor_table_city_2feconomy_2fv2_2forg_5fservice_2eproto_once,
      file_level_metadata_city_2feconomy_2fv2_2forg_5fservice_2eproto[61]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace economy
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveOrgRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveOrgRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveOrgRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveOrgResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveOrgResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveOrgResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::AddAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::AddAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::AddAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::RemoveAgentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::RemoveAgentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::RemoveAgentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetNominalGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetNominalGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetNominalGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetNominalGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetNominalGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetNominalGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetNominalGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetNominalGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetNominalGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetNominalGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetNominalGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetNominalGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetRealGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetRealGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetRealGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetRealGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetRealGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetRealGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetRealGDPRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetRealGDPRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetRealGDPRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetRealGDPResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetRealGDPResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetRealGDPResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetUnemploymentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetUnemploymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetUnemploymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetUnemploymentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetUnemploymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetUnemploymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetUnemploymentRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetUnemploymentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetUnemploymentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetUnemploymentResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetUnemploymentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetUnemploymentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetWagesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetWagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetWagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetWagesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetWagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetWagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetWagesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetWagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetWagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetWagesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetWagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetWagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetPricesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetPricesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetPricesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetPricesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetPricesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetPricesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetPricesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetPricesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetPricesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetPricesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetPricesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetPricesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetInventoryRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetInventoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetInventoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetInventoryResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetInventoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetInventoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetInventoryRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetInventoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetInventoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetInventoryResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetInventoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetInventoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetPriceRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetPriceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetPriceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetPriceResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetPriceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetPriceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetPriceRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetPriceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetPriceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetPriceResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetPriceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetPriceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetCurrencyRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetCurrencyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetCurrencyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetCurrencyResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetCurrencyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetCurrencyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetCurrencyRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetCurrencyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetCurrencyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetCurrencyResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetCurrencyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetCurrencyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetInterestRateRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetInterestRateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetInterestRateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetInterestRateResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetInterestRateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetInterestRateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetInterestRateRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetInterestRateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetInterestRateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetInterestRateResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetInterestRateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetInterestRateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBracketCutoffsRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBracketCutoffsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBracketCutoffsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBracketCutoffsResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBracketCutoffsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBracketCutoffsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetBracketCutoffsRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetBracketCutoffsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetBracketCutoffsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetBracketCutoffsResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetBracketCutoffsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetBracketCutoffsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBracketRatesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBracketRatesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBracketRatesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::GetBracketRatesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::GetBracketRatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::GetBracketRatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetBracketRatesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SetBracketRatesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetBracketRatesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SetBracketRatesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SetBracketRatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SetBracketRatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateTaxesDueResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateTaxesDueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateTaxesDueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateConsumptionResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateConsumptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateConsumptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::CalculateInterestResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::CalculateInterestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::CalculateInterestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::SaveEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::SaveEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::SaveEconomyEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesRequest*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::economy::v2::LoadEconomyEntitiesResponse*
Arena::CreateMaybeMessage< ::city::economy::v2::LoadEconomyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::economy::v2::LoadEconomyEntitiesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

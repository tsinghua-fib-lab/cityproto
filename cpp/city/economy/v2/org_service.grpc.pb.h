// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: city/economy/v2/org_service.proto
#ifndef GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED
#define GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED

#include "city/economy/v2/org_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace city {
namespace economy {
namespace v2 {

// 组织经济情况接口
class OrgService final {
 public:
  static constexpr char const* service_full_name() {
    return "city.economy.v2.OrgService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 添加组织
    virtual ::grpc::Status AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::city::economy::v2::AddOrgResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>> AsyncAddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>>(AsyncAddOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>> PrepareAsyncAddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>>(PrepareAsyncAddOrgRaw(context, request, cq));
    }
    // 移除组织
    virtual ::grpc::Status RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::city::economy::v2::RemoveOrgResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>> AsyncRemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>>(AsyncRemoveOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>> PrepareAsyncRemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>>(PrepareAsyncRemoveOrgRaw(context, request, cq));
    }
    // 添加Agent
    virtual ::grpc::Status AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::city::economy::v2::AddAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>> AsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>>(AsyncAddAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>> PrepareAsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>>(PrepareAsyncAddAgentRaw(context, request, cq));
    }
    // 移除Agent
    virtual ::grpc::Status RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::city::economy::v2::RemoveAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>> AsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>>(AsyncRemoveAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>> PrepareAsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>>(PrepareAsyncRemoveAgentRaw(context, request, cq));
    }
    // Nominal GDP
    virtual ::grpc::Status GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::city::economy::v2::GetNominalGDPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>> AsyncGetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>>(AsyncGetNominalGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>> PrepareAsyncGetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>>(PrepareAsyncGetNominalGDPRaw(context, request, cq));
    }
    virtual ::grpc::Status SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::city::economy::v2::SetNominalGDPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>> AsyncSetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>>(AsyncSetNominalGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>> PrepareAsyncSetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>>(PrepareAsyncSetNominalGDPRaw(context, request, cq));
    }
    // Real GDP
    virtual ::grpc::Status GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::city::economy::v2::GetRealGDPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>> AsyncGetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>>(AsyncGetRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>> PrepareAsyncGetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>>(PrepareAsyncGetRealGDPRaw(context, request, cq));
    }
    virtual ::grpc::Status SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::city::economy::v2::SetRealGDPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>> AsyncSetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>>(AsyncSetRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>> PrepareAsyncSetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>>(PrepareAsyncSetRealGDPRaw(context, request, cq));
    }
    // Unemployment
    virtual ::grpc::Status GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::city::economy::v2::GetUnemploymentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>> AsyncGetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>>(AsyncGetUnemploymentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>> PrepareAsyncGetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>>(PrepareAsyncGetUnemploymentRaw(context, request, cq));
    }
    virtual ::grpc::Status SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::city::economy::v2::SetUnemploymentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>> AsyncSetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>>(AsyncSetUnemploymentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>> PrepareAsyncSetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>>(PrepareAsyncSetUnemploymentRaw(context, request, cq));
    }
    // Wages
    virtual ::grpc::Status GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::city::economy::v2::GetWagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>> AsyncGetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>>(AsyncGetWagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>> PrepareAsyncGetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>>(PrepareAsyncGetWagesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::city::economy::v2::SetWagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>> AsyncSetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>>(AsyncSetWagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>> PrepareAsyncSetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>>(PrepareAsyncSetWagesRaw(context, request, cq));
    }
    // Prices
    virtual ::grpc::Status GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::city::economy::v2::GetPricesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>> AsyncGetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>>(AsyncGetPricesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>> PrepareAsyncGetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>>(PrepareAsyncGetPricesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::city::economy::v2::SetPricesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>> AsyncSetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>>(AsyncSetPricesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>> PrepareAsyncSetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>>(PrepareAsyncSetPricesRaw(context, request, cq));
    }
    // Inventory
    virtual ::grpc::Status GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::city::economy::v2::GetInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>> AsyncGetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>>(AsyncGetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>> PrepareAsyncGetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>>(PrepareAsyncGetInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::city::economy::v2::SetInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>> AsyncSetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>>(AsyncSetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>> PrepareAsyncSetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>>(PrepareAsyncSetInventoryRaw(context, request, cq));
    }
    // Price
    virtual ::grpc::Status GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::city::economy::v2::GetPriceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>> AsyncGetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>>(AsyncGetPriceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>> PrepareAsyncGetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>>(PrepareAsyncGetPriceRaw(context, request, cq));
    }
    virtual ::grpc::Status SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::city::economy::v2::SetPriceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>> AsyncSetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>>(AsyncSetPriceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>> PrepareAsyncSetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>>(PrepareAsyncSetPriceRaw(context, request, cq));
    }
    // Currency
    virtual ::grpc::Status GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::city::economy::v2::GetCurrencyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>> AsyncGetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>>(AsyncGetCurrencyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>> PrepareAsyncGetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>>(PrepareAsyncGetCurrencyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::city::economy::v2::SetCurrencyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>> AsyncSetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>>(AsyncSetCurrencyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>> PrepareAsyncSetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>>(PrepareAsyncSetCurrencyRaw(context, request, cq));
    }
    // Interest Rate
    virtual ::grpc::Status GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::city::economy::v2::GetInterestRateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>> AsyncGetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>>(AsyncGetInterestRateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>> PrepareAsyncGetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>>(PrepareAsyncGetInterestRateRaw(context, request, cq));
    }
    virtual ::grpc::Status SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::city::economy::v2::SetInterestRateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>> AsyncSetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>>(AsyncSetInterestRateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>> PrepareAsyncSetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>>(PrepareAsyncSetInterestRateRaw(context, request, cq));
    }
    // Bracket Cutoffs
    virtual ::grpc::Status GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::city::economy::v2::GetBracketCutoffsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>> AsyncGetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>>(AsyncGetBracketCutoffsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>> PrepareAsyncGetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>>(PrepareAsyncGetBracketCutoffsRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::city::economy::v2::SetBracketCutoffsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>> AsyncSetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>>(AsyncSetBracketCutoffsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>> PrepareAsyncSetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>>(PrepareAsyncSetBracketCutoffsRaw(context, request, cq));
    }
    // Bracket Rates
    virtual ::grpc::Status GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::city::economy::v2::GetBracketRatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>> AsyncGetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>>(AsyncGetBracketRatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>> PrepareAsyncGetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>>(PrepareAsyncGetBracketRatesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::city::economy::v2::SetBracketRatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>> AsyncSetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>>(AsyncSetBracketRatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>> PrepareAsyncSetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>>(PrepareAsyncSetBracketRatesRaw(context, request, cq));
    }
    // Taxes Due
    virtual ::grpc::Status CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::city::economy::v2::CalculateTaxesDueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>> AsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>>(AsyncCalculateTaxesDueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>> PrepareAsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>>(PrepareAsyncCalculateTaxesDueRaw(context, request, cq));
    }
    // Consumption
    virtual ::grpc::Status CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::city::economy::v2::CalculateConsumptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>> AsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>>(AsyncCalculateConsumptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>> PrepareAsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>>(PrepareAsyncCalculateConsumptionRaw(context, request, cq));
    }
    // Consumption
    virtual ::grpc::Status CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::city::economy::v2::CalculateInterestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>> AsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>>(AsyncCalculateInterestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>> PrepareAsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>>(PrepareAsyncCalculateInterestRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // 添加组织
      virtual void AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 移除组织
      virtual void RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 添加Agent
      virtual void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 移除Agent
      virtual void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Nominal GDP
      virtual void GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Real GDP
      virtual void GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Unemployment
      virtual void GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Wages
      virtual void GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Prices
      virtual void GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Inventory
      virtual void GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Price
      virtual void GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Currency
      virtual void GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Interest Rate
      virtual void GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Bracket Cutoffs
      virtual void GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Bracket Rates
      virtual void GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Taxes Due
      virtual void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Consumption
      virtual void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Consumption
      virtual void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>* AsyncAddOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddOrgResponse>* PrepareAsyncAddOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>* AsyncRemoveOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveOrgResponse>* PrepareAsyncRemoveOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>* AsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>* PrepareAsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>* AsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>* PrepareAsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>* AsyncGetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNominalGDPResponse>* PrepareAsyncGetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>* AsyncSetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetNominalGDPResponse>* PrepareAsyncSetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>* AsyncGetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetRealGDPResponse>* PrepareAsyncGetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>* AsyncSetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetRealGDPResponse>* PrepareAsyncSetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>* AsyncGetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetUnemploymentResponse>* PrepareAsyncGetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>* AsyncSetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetUnemploymentResponse>* PrepareAsyncSetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>* AsyncGetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetWagesResponse>* PrepareAsyncGetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>* AsyncSetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetWagesResponse>* PrepareAsyncSetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>* AsyncGetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPricesResponse>* PrepareAsyncGetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>* AsyncSetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPricesResponse>* PrepareAsyncSetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>* AsyncGetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInventoryResponse>* PrepareAsyncGetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>* AsyncSetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInventoryResponse>* PrepareAsyncSetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>* AsyncGetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetPriceResponse>* PrepareAsyncGetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>* AsyncSetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetPriceResponse>* PrepareAsyncSetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>* AsyncGetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetCurrencyResponse>* PrepareAsyncGetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>* AsyncSetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetCurrencyResponse>* PrepareAsyncSetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>* AsyncGetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetInterestRateResponse>* PrepareAsyncGetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>* AsyncSetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetInterestRateResponse>* PrepareAsyncSetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>* AsyncGetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketCutoffsResponse>* PrepareAsyncGetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>* AsyncSetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketCutoffsResponse>* PrepareAsyncSetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>* AsyncGetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBracketRatesResponse>* PrepareAsyncGetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>* AsyncSetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SetBracketRatesResponse>* PrepareAsyncSetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>* AsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>* PrepareAsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>* AsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>* PrepareAsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>* AsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>* PrepareAsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::city::economy::v2::AddOrgResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>> AsyncAddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>>(AsyncAddOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>> PrepareAsyncAddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>>(PrepareAsyncAddOrgRaw(context, request, cq));
    }
    ::grpc::Status RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::city::economy::v2::RemoveOrgResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>> AsyncRemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>>(AsyncRemoveOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>> PrepareAsyncRemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>>(PrepareAsyncRemoveOrgRaw(context, request, cq));
    }
    ::grpc::Status AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::city::economy::v2::AddAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>> AsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>>(AsyncAddAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>> PrepareAsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>>(PrepareAsyncAddAgentRaw(context, request, cq));
    }
    ::grpc::Status RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::city::economy::v2::RemoveAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>> AsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>>(AsyncRemoveAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>> PrepareAsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>>(PrepareAsyncRemoveAgentRaw(context, request, cq));
    }
    ::grpc::Status GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::city::economy::v2::GetNominalGDPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>> AsyncGetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>>(AsyncGetNominalGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>> PrepareAsyncGetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>>(PrepareAsyncGetNominalGDPRaw(context, request, cq));
    }
    ::grpc::Status SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::city::economy::v2::SetNominalGDPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>> AsyncSetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>>(AsyncSetNominalGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>> PrepareAsyncSetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>>(PrepareAsyncSetNominalGDPRaw(context, request, cq));
    }
    ::grpc::Status GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::city::economy::v2::GetRealGDPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>> AsyncGetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>>(AsyncGetRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>> PrepareAsyncGetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>>(PrepareAsyncGetRealGDPRaw(context, request, cq));
    }
    ::grpc::Status SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::city::economy::v2::SetRealGDPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>> AsyncSetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>>(AsyncSetRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>> PrepareAsyncSetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>>(PrepareAsyncSetRealGDPRaw(context, request, cq));
    }
    ::grpc::Status GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::city::economy::v2::GetUnemploymentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>> AsyncGetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>>(AsyncGetUnemploymentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>> PrepareAsyncGetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>>(PrepareAsyncGetUnemploymentRaw(context, request, cq));
    }
    ::grpc::Status SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::city::economy::v2::SetUnemploymentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>> AsyncSetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>>(AsyncSetUnemploymentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>> PrepareAsyncSetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>>(PrepareAsyncSetUnemploymentRaw(context, request, cq));
    }
    ::grpc::Status GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::city::economy::v2::GetWagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>> AsyncGetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>>(AsyncGetWagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>> PrepareAsyncGetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>>(PrepareAsyncGetWagesRaw(context, request, cq));
    }
    ::grpc::Status SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::city::economy::v2::SetWagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>> AsyncSetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>>(AsyncSetWagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>> PrepareAsyncSetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>>(PrepareAsyncSetWagesRaw(context, request, cq));
    }
    ::grpc::Status GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::city::economy::v2::GetPricesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>> AsyncGetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>>(AsyncGetPricesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>> PrepareAsyncGetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>>(PrepareAsyncGetPricesRaw(context, request, cq));
    }
    ::grpc::Status SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::city::economy::v2::SetPricesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>> AsyncSetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>>(AsyncSetPricesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>> PrepareAsyncSetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>>(PrepareAsyncSetPricesRaw(context, request, cq));
    }
    ::grpc::Status GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::city::economy::v2::GetInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>> AsyncGetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>>(AsyncGetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>> PrepareAsyncGetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>>(PrepareAsyncGetInventoryRaw(context, request, cq));
    }
    ::grpc::Status SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::city::economy::v2::SetInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>> AsyncSetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>>(AsyncSetInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>> PrepareAsyncSetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>>(PrepareAsyncSetInventoryRaw(context, request, cq));
    }
    ::grpc::Status GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::city::economy::v2::GetPriceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>> AsyncGetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>>(AsyncGetPriceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>> PrepareAsyncGetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>>(PrepareAsyncGetPriceRaw(context, request, cq));
    }
    ::grpc::Status SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::city::economy::v2::SetPriceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>> AsyncSetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>>(AsyncSetPriceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>> PrepareAsyncSetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>>(PrepareAsyncSetPriceRaw(context, request, cq));
    }
    ::grpc::Status GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::city::economy::v2::GetCurrencyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>> AsyncGetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>>(AsyncGetCurrencyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>> PrepareAsyncGetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>>(PrepareAsyncGetCurrencyRaw(context, request, cq));
    }
    ::grpc::Status SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::city::economy::v2::SetCurrencyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>> AsyncSetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>>(AsyncSetCurrencyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>> PrepareAsyncSetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>>(PrepareAsyncSetCurrencyRaw(context, request, cq));
    }
    ::grpc::Status GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::city::economy::v2::GetInterestRateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>> AsyncGetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>>(AsyncGetInterestRateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>> PrepareAsyncGetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>>(PrepareAsyncGetInterestRateRaw(context, request, cq));
    }
    ::grpc::Status SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::city::economy::v2::SetInterestRateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>> AsyncSetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>>(AsyncSetInterestRateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>> PrepareAsyncSetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>>(PrepareAsyncSetInterestRateRaw(context, request, cq));
    }
    ::grpc::Status GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::city::economy::v2::GetBracketCutoffsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>> AsyncGetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>>(AsyncGetBracketCutoffsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>> PrepareAsyncGetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>>(PrepareAsyncGetBracketCutoffsRaw(context, request, cq));
    }
    ::grpc::Status SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::city::economy::v2::SetBracketCutoffsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>> AsyncSetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>>(AsyncSetBracketCutoffsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>> PrepareAsyncSetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>>(PrepareAsyncSetBracketCutoffsRaw(context, request, cq));
    }
    ::grpc::Status GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::city::economy::v2::GetBracketRatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>> AsyncGetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>>(AsyncGetBracketRatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>> PrepareAsyncGetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>>(PrepareAsyncGetBracketRatesRaw(context, request, cq));
    }
    ::grpc::Status SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::city::economy::v2::SetBracketRatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>> AsyncSetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>>(AsyncSetBracketRatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>> PrepareAsyncSetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>>(PrepareAsyncSetBracketRatesRaw(context, request, cq));
    }
    ::grpc::Status CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::city::economy::v2::CalculateTaxesDueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>> AsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>>(AsyncCalculateTaxesDueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>> PrepareAsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>>(PrepareAsyncCalculateTaxesDueRaw(context, request, cq));
    }
    ::grpc::Status CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::city::economy::v2::CalculateConsumptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>> AsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>>(AsyncCalculateConsumptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>> PrepareAsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>>(PrepareAsyncCalculateConsumptionRaw(context, request, cq));
    }
    ::grpc::Status CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::city::economy::v2::CalculateInterestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>> AsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>>(AsyncCalculateInterestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>> PrepareAsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>>(PrepareAsyncCalculateInterestRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response, std::function<void(::grpc::Status)>) override;
      void AddOrg(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveOrg(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response, std::function<void(::grpc::Status)>) override;
      void SetNominalGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response, std::function<void(::grpc::Status)>) override;
      void SetRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response, std::function<void(::grpc::Status)>) override;
      void SetUnemployment(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetWages(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response, std::function<void(::grpc::Status)>) override;
      void SetWages(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPrices(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response, std::function<void(::grpc::Status)>) override;
      void SetPrices(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInventory(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void SetInventory(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPrice(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response, std::function<void(::grpc::Status)>) override;
      void SetPrice(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response, std::function<void(::grpc::Status)>) override;
      void SetCurrency(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response, std::function<void(::grpc::Status)>) override;
      void SetInterestRate(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetBracketCutoffs(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response, std::function<void(::grpc::Status)>) override;
      void SetBracketRates(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>* AsyncAddOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddOrgResponse>* PrepareAsyncAddOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>* AsyncRemoveOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveOrgResponse>* PrepareAsyncRemoveOrgRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>* AsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>* PrepareAsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>* AsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>* PrepareAsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>* AsyncGetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNominalGDPResponse>* PrepareAsyncGetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>* AsyncSetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetNominalGDPResponse>* PrepareAsyncSetNominalGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetNominalGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>* AsyncGetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetRealGDPResponse>* PrepareAsyncGetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>* AsyncSetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetRealGDPResponse>* PrepareAsyncSetRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>* AsyncGetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetUnemploymentResponse>* PrepareAsyncGetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>* AsyncSetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetUnemploymentResponse>* PrepareAsyncSetUnemploymentRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetUnemploymentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>* AsyncGetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetWagesResponse>* PrepareAsyncGetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetWagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>* AsyncSetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetWagesResponse>* PrepareAsyncSetWagesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetWagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>* AsyncGetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPricesResponse>* PrepareAsyncGetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPricesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>* AsyncSetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPricesResponse>* PrepareAsyncSetPricesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPricesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>* AsyncGetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInventoryResponse>* PrepareAsyncGetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>* AsyncSetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInventoryResponse>* PrepareAsyncSetInventoryRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>* AsyncGetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetPriceResponse>* PrepareAsyncGetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetPriceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>* AsyncSetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetPriceResponse>* PrepareAsyncSetPriceRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetPriceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>* AsyncGetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetCurrencyResponse>* PrepareAsyncGetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetCurrencyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>* AsyncSetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetCurrencyResponse>* PrepareAsyncSetCurrencyRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetCurrencyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>* AsyncGetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetInterestRateResponse>* PrepareAsyncGetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetInterestRateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>* AsyncSetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetInterestRateResponse>* PrepareAsyncSetInterestRateRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetInterestRateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>* AsyncGetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketCutoffsResponse>* PrepareAsyncGetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>* AsyncSetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketCutoffsResponse>* PrepareAsyncSetBracketCutoffsRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketCutoffsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>* AsyncGetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBracketRatesResponse>* PrepareAsyncGetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>* AsyncSetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SetBracketRatesResponse>* PrepareAsyncSetBracketRatesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SetBracketRatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>* AsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>* PrepareAsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>* AsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>* PrepareAsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>* AsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>* PrepareAsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_AddAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNominalGDP_;
    const ::grpc::internal::RpcMethod rpcmethod_SetNominalGDP_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRealGDP_;
    const ::grpc::internal::RpcMethod rpcmethod_SetRealGDP_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUnemployment_;
    const ::grpc::internal::RpcMethod rpcmethod_SetUnemployment_;
    const ::grpc::internal::RpcMethod rpcmethod_GetWages_;
    const ::grpc::internal::RpcMethod rpcmethod_SetWages_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPrices_;
    const ::grpc::internal::RpcMethod rpcmethod_SetPrices_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_SetInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPrice_;
    const ::grpc::internal::RpcMethod rpcmethod_SetPrice_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCurrency_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCurrency_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInterestRate_;
    const ::grpc::internal::RpcMethod rpcmethod_SetInterestRate_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBracketCutoffs_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBracketCutoffs_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBracketRates_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBracketRates_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateTaxesDue_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateConsumption_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateInterest_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 添加组织
    virtual ::grpc::Status AddOrg(::grpc::ServerContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response);
    // 移除组织
    virtual ::grpc::Status RemoveOrg(::grpc::ServerContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response);
    // 添加Agent
    virtual ::grpc::Status AddAgent(::grpc::ServerContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response);
    // 移除Agent
    virtual ::grpc::Status RemoveAgent(::grpc::ServerContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response);
    // Nominal GDP
    virtual ::grpc::Status GetNominalGDP(::grpc::ServerContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response);
    virtual ::grpc::Status SetNominalGDP(::grpc::ServerContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response);
    // Real GDP
    virtual ::grpc::Status GetRealGDP(::grpc::ServerContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response);
    virtual ::grpc::Status SetRealGDP(::grpc::ServerContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response);
    // Unemployment
    virtual ::grpc::Status GetUnemployment(::grpc::ServerContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response);
    virtual ::grpc::Status SetUnemployment(::grpc::ServerContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response);
    // Wages
    virtual ::grpc::Status GetWages(::grpc::ServerContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response);
    virtual ::grpc::Status SetWages(::grpc::ServerContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response);
    // Prices
    virtual ::grpc::Status GetPrices(::grpc::ServerContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response);
    virtual ::grpc::Status SetPrices(::grpc::ServerContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response);
    // Inventory
    virtual ::grpc::Status GetInventory(::grpc::ServerContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response);
    virtual ::grpc::Status SetInventory(::grpc::ServerContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response);
    // Price
    virtual ::grpc::Status GetPrice(::grpc::ServerContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response);
    virtual ::grpc::Status SetPrice(::grpc::ServerContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response);
    // Currency
    virtual ::grpc::Status GetCurrency(::grpc::ServerContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response);
    virtual ::grpc::Status SetCurrency(::grpc::ServerContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response);
    // Interest Rate
    virtual ::grpc::Status GetInterestRate(::grpc::ServerContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response);
    virtual ::grpc::Status SetInterestRate(::grpc::ServerContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response);
    // Bracket Cutoffs
    virtual ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response);
    virtual ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response);
    // Bracket Rates
    virtual ::grpc::Status GetBracketRates(::grpc::ServerContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response);
    virtual ::grpc::Status SetBracketRates(::grpc::ServerContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response);
    // Taxes Due
    virtual ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response);
    // Consumption
    virtual ::grpc::Status CalculateConsumption(::grpc::ServerContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response);
    // Consumption
    virtual ::grpc::Status CalculateInterest(::grpc::ServerContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddOrg() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddOrg(::grpc::ServerContext* context, ::city::economy::v2::AddOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddOrgResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveOrg(::grpc::ServerContext* context, ::city::economy::v2::RemoveOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveOrgResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddAgent() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAgent(::grpc::ServerContext* context, ::city::economy::v2::AddAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAgent(::grpc::ServerContext* context, ::city::economy::v2::RemoveAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNominalGDP(::grpc::ServerContext* context, ::city::economy::v2::GetNominalGDPRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetNominalGDPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNominalGDP(::grpc::ServerContext* context, ::city::economy::v2::SetNominalGDPRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetNominalGDPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealGDP(::grpc::ServerContext* context, ::city::economy::v2::GetRealGDPRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetRealGDPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetRealGDP(::grpc::ServerContext* context, ::city::economy::v2::SetRealGDPRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetRealGDPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUnemployment(::grpc::ServerContext* context, ::city::economy::v2::GetUnemploymentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetUnemploymentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUnemployment(::grpc::ServerContext* context, ::city::economy::v2::SetUnemploymentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetUnemploymentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetWages() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWages(::grpc::ServerContext* context, ::city::economy::v2::GetWagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetWagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetWages() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetWages(::grpc::ServerContext* context, ::city::economy::v2::SetWagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetWagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPrices() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPrices(::grpc::ServerContext* context, ::city::economy::v2::GetPricesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetPricesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetPrices() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPrices(::grpc::ServerContext* context, ::city::economy::v2::SetPricesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetPricesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInventory() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInventory(::grpc::ServerContext* context, ::city::economy::v2::GetInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetInventory() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInventory(::grpc::ServerContext* context, ::city::economy::v2::SetInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPrice() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPrice(::grpc::ServerContext* context, ::city::economy::v2::GetPriceRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetPriceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetPrice() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPrice(::grpc::ServerContext* context, ::city::economy::v2::SetPriceRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetPriceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCurrency() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCurrency(::grpc::ServerContext* context, ::city::economy::v2::GetCurrencyRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetCurrencyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetCurrency() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCurrency(::grpc::ServerContext* context, ::city::economy::v2::SetCurrencyRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetCurrencyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterestRate(::grpc::ServerContext* context, ::city::economy::v2::GetInterestRateRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetInterestRateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInterestRate(::grpc::ServerContext* context, ::city::economy::v2::SetInterestRateRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetInterestRateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBracketCutoffs(::grpc::ServerContext* context, ::city::economy::v2::GetBracketCutoffsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetBracketCutoffsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBracketCutoffs(::grpc::ServerContext* context, ::city::economy::v2::SetBracketCutoffsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetBracketCutoffsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBracketRates(::grpc::ServerContext* context, ::city::economy::v2::GetBracketRatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetBracketRatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBracketRates(::grpc::ServerContext* context, ::city::economy::v2::SetBracketRatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SetBracketRatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateTaxesDue(::grpc::ServerContext* context, ::city::economy::v2::CalculateTaxesDueRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateTaxesDueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateConsumption(::grpc::ServerContext* context, ::city::economy::v2::CalculateConsumptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateConsumptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateInterest(::grpc::ServerContext* context, ::city::economy::v2::CalculateInterestRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateInterestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddOrg<WithAsyncMethod_RemoveOrg<WithAsyncMethod_AddAgent<WithAsyncMethod_RemoveAgent<WithAsyncMethod_GetNominalGDP<WithAsyncMethod_SetNominalGDP<WithAsyncMethod_GetRealGDP<WithAsyncMethod_SetRealGDP<WithAsyncMethod_GetUnemployment<WithAsyncMethod_SetUnemployment<WithAsyncMethod_GetWages<WithAsyncMethod_SetWages<WithAsyncMethod_GetPrices<WithAsyncMethod_SetPrices<WithAsyncMethod_GetInventory<WithAsyncMethod_SetInventory<WithAsyncMethod_GetPrice<WithAsyncMethod_SetPrice<WithAsyncMethod_GetCurrency<WithAsyncMethod_SetCurrency<WithAsyncMethod_GetInterestRate<WithAsyncMethod_SetInterestRate<WithAsyncMethod_GetBracketCutoffs<WithAsyncMethod_SetBracketCutoffs<WithAsyncMethod_GetBracketRates<WithAsyncMethod_SetBracketRates<WithAsyncMethod_CalculateTaxesDue<WithAsyncMethod_CalculateConsumption<WithAsyncMethod_CalculateInterest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddOrg() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddOrgRequest, ::city::economy::v2::AddOrgResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddOrgRequest* request, ::city::economy::v2::AddOrgResponse* response) { return this->AddOrg(context, request, response); }));}
    void SetMessageAllocatorFor_AddOrg(
        ::grpc::MessageAllocator< ::city::economy::v2::AddOrgRequest, ::city::economy::v2::AddOrgResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddOrgRequest, ::city::economy::v2::AddOrgResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveOrgRequest, ::city::economy::v2::RemoveOrgResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveOrgRequest* request, ::city::economy::v2::RemoveOrgResponse* response) { return this->RemoveOrg(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveOrg(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveOrgRequest, ::city::economy::v2::RemoveOrgResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveOrgRequest, ::city::economy::v2::RemoveOrgResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddAgent() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response) { return this->AddAgent(context, request, response); }));}
    void SetMessageAllocatorFor_AddAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response) { return this->RemoveAgent(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetNominalGDPRequest, ::city::economy::v2::GetNominalGDPResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetNominalGDPRequest* request, ::city::economy::v2::GetNominalGDPResponse* response) { return this->GetNominalGDP(context, request, response); }));}
    void SetMessageAllocatorFor_GetNominalGDP(
        ::grpc::MessageAllocator< ::city::economy::v2::GetNominalGDPRequest, ::city::economy::v2::GetNominalGDPResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetNominalGDPRequest, ::city::economy::v2::GetNominalGDPResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNominalGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetNominalGDPRequest, ::city::economy::v2::SetNominalGDPResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetNominalGDPRequest* request, ::city::economy::v2::SetNominalGDPResponse* response) { return this->SetNominalGDP(context, request, response); }));}
    void SetMessageAllocatorFor_SetNominalGDP(
        ::grpc::MessageAllocator< ::city::economy::v2::SetNominalGDPRequest, ::city::economy::v2::SetNominalGDPResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetNominalGDPRequest, ::city::economy::v2::SetNominalGDPResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNominalGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetRealGDPRequest, ::city::economy::v2::GetRealGDPResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetRealGDPRequest* request, ::city::economy::v2::GetRealGDPResponse* response) { return this->GetRealGDP(context, request, response); }));}
    void SetMessageAllocatorFor_GetRealGDP(
        ::grpc::MessageAllocator< ::city::economy::v2::GetRealGDPRequest, ::city::economy::v2::GetRealGDPResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetRealGDPRequest, ::city::economy::v2::GetRealGDPResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetRealGDPRequest, ::city::economy::v2::SetRealGDPResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetRealGDPRequest* request, ::city::economy::v2::SetRealGDPResponse* response) { return this->SetRealGDP(context, request, response); }));}
    void SetMessageAllocatorFor_SetRealGDP(
        ::grpc::MessageAllocator< ::city::economy::v2::SetRealGDPRequest, ::city::economy::v2::SetRealGDPResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetRealGDPRequest, ::city::economy::v2::SetRealGDPResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetUnemploymentRequest, ::city::economy::v2::GetUnemploymentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetUnemploymentRequest* request, ::city::economy::v2::GetUnemploymentResponse* response) { return this->GetUnemployment(context, request, response); }));}
    void SetMessageAllocatorFor_GetUnemployment(
        ::grpc::MessageAllocator< ::city::economy::v2::GetUnemploymentRequest, ::city::economy::v2::GetUnemploymentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetUnemploymentRequest, ::city::economy::v2::GetUnemploymentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUnemployment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetUnemploymentRequest, ::city::economy::v2::SetUnemploymentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetUnemploymentRequest* request, ::city::economy::v2::SetUnemploymentResponse* response) { return this->SetUnemployment(context, request, response); }));}
    void SetMessageAllocatorFor_SetUnemployment(
        ::grpc::MessageAllocator< ::city::economy::v2::SetUnemploymentRequest, ::city::economy::v2::SetUnemploymentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetUnemploymentRequest, ::city::economy::v2::SetUnemploymentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUnemployment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetWages() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetWagesRequest, ::city::economy::v2::GetWagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetWagesRequest* request, ::city::economy::v2::GetWagesResponse* response) { return this->GetWages(context, request, response); }));}
    void SetMessageAllocatorFor_GetWages(
        ::grpc::MessageAllocator< ::city::economy::v2::GetWagesRequest, ::city::economy::v2::GetWagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetWagesRequest, ::city::economy::v2::GetWagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWages(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetWages() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetWagesRequest, ::city::economy::v2::SetWagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetWagesRequest* request, ::city::economy::v2::SetWagesResponse* response) { return this->SetWages(context, request, response); }));}
    void SetMessageAllocatorFor_SetWages(
        ::grpc::MessageAllocator< ::city::economy::v2::SetWagesRequest, ::city::economy::v2::SetWagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetWagesRequest, ::city::economy::v2::SetWagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetWages(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPrices() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetPricesRequest, ::city::economy::v2::GetPricesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetPricesRequest* request, ::city::economy::v2::GetPricesResponse* response) { return this->GetPrices(context, request, response); }));}
    void SetMessageAllocatorFor_GetPrices(
        ::grpc::MessageAllocator< ::city::economy::v2::GetPricesRequest, ::city::economy::v2::GetPricesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetPricesRequest, ::city::economy::v2::GetPricesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPrices(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetPrices() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetPricesRequest, ::city::economy::v2::SetPricesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetPricesRequest* request, ::city::economy::v2::SetPricesResponse* response) { return this->SetPrices(context, request, response); }));}
    void SetMessageAllocatorFor_SetPrices(
        ::grpc::MessageAllocator< ::city::economy::v2::SetPricesRequest, ::city::economy::v2::SetPricesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetPricesRequest, ::city::economy::v2::SetPricesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPrices(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInventory() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetInventoryRequest, ::city::economy::v2::GetInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetInventoryRequest* request, ::city::economy::v2::GetInventoryResponse* response) { return this->GetInventory(context, request, response); }));}
    void SetMessageAllocatorFor_GetInventory(
        ::grpc::MessageAllocator< ::city::economy::v2::GetInventoryRequest, ::city::economy::v2::GetInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetInventoryRequest, ::city::economy::v2::GetInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetInventory() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetInventoryRequest, ::city::economy::v2::SetInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetInventoryRequest* request, ::city::economy::v2::SetInventoryResponse* response) { return this->SetInventory(context, request, response); }));}
    void SetMessageAllocatorFor_SetInventory(
        ::grpc::MessageAllocator< ::city::economy::v2::SetInventoryRequest, ::city::economy::v2::SetInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetInventoryRequest, ::city::economy::v2::SetInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPrice() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetPriceRequest, ::city::economy::v2::GetPriceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetPriceRequest* request, ::city::economy::v2::GetPriceResponse* response) { return this->GetPrice(context, request, response); }));}
    void SetMessageAllocatorFor_GetPrice(
        ::grpc::MessageAllocator< ::city::economy::v2::GetPriceRequest, ::city::economy::v2::GetPriceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetPriceRequest, ::city::economy::v2::GetPriceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPrice(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetPrice() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetPriceRequest, ::city::economy::v2::SetPriceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetPriceRequest* request, ::city::economy::v2::SetPriceResponse* response) { return this->SetPrice(context, request, response); }));}
    void SetMessageAllocatorFor_SetPrice(
        ::grpc::MessageAllocator< ::city::economy::v2::SetPriceRequest, ::city::economy::v2::SetPriceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetPriceRequest, ::city::economy::v2::SetPriceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPrice(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCurrency() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetCurrencyRequest, ::city::economy::v2::GetCurrencyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetCurrencyRequest* request, ::city::economy::v2::GetCurrencyResponse* response) { return this->GetCurrency(context, request, response); }));}
    void SetMessageAllocatorFor_GetCurrency(
        ::grpc::MessageAllocator< ::city::economy::v2::GetCurrencyRequest, ::city::economy::v2::GetCurrencyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetCurrencyRequest, ::city::economy::v2::GetCurrencyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCurrency(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetCurrency() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetCurrencyRequest, ::city::economy::v2::SetCurrencyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetCurrencyRequest* request, ::city::economy::v2::SetCurrencyResponse* response) { return this->SetCurrency(context, request, response); }));}
    void SetMessageAllocatorFor_SetCurrency(
        ::grpc::MessageAllocator< ::city::economy::v2::SetCurrencyRequest, ::city::economy::v2::SetCurrencyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetCurrencyRequest, ::city::economy::v2::SetCurrencyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCurrency(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetInterestRateRequest, ::city::economy::v2::GetInterestRateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetInterestRateRequest* request, ::city::economy::v2::GetInterestRateResponse* response) { return this->GetInterestRate(context, request, response); }));}
    void SetMessageAllocatorFor_GetInterestRate(
        ::grpc::MessageAllocator< ::city::economy::v2::GetInterestRateRequest, ::city::economy::v2::GetInterestRateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetInterestRateRequest, ::city::economy::v2::GetInterestRateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterestRate(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetInterestRateRequest, ::city::economy::v2::SetInterestRateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetInterestRateRequest* request, ::city::economy::v2::SetInterestRateResponse* response) { return this->SetInterestRate(context, request, response); }));}
    void SetMessageAllocatorFor_SetInterestRate(
        ::grpc::MessageAllocator< ::city::economy::v2::SetInterestRateRequest, ::city::economy::v2::SetInterestRateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetInterestRateRequest, ::city::economy::v2::SetInterestRateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInterestRate(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBracketCutoffsRequest, ::city::economy::v2::GetBracketCutoffsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetBracketCutoffsRequest* request, ::city::economy::v2::GetBracketCutoffsResponse* response) { return this->GetBracketCutoffs(context, request, response); }));}
    void SetMessageAllocatorFor_GetBracketCutoffs(
        ::grpc::MessageAllocator< ::city::economy::v2::GetBracketCutoffsRequest, ::city::economy::v2::GetBracketCutoffsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBracketCutoffsRequest, ::city::economy::v2::GetBracketCutoffsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBracketCutoffs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetBracketCutoffsRequest, ::city::economy::v2::SetBracketCutoffsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetBracketCutoffsRequest* request, ::city::economy::v2::SetBracketCutoffsResponse* response) { return this->SetBracketCutoffs(context, request, response); }));}
    void SetMessageAllocatorFor_SetBracketCutoffs(
        ::grpc::MessageAllocator< ::city::economy::v2::SetBracketCutoffsRequest, ::city::economy::v2::SetBracketCutoffsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetBracketCutoffsRequest, ::city::economy::v2::SetBracketCutoffsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBracketCutoffs(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBracketRatesRequest, ::city::economy::v2::GetBracketRatesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetBracketRatesRequest* request, ::city::economy::v2::GetBracketRatesResponse* response) { return this->GetBracketRates(context, request, response); }));}
    void SetMessageAllocatorFor_GetBracketRates(
        ::grpc::MessageAllocator< ::city::economy::v2::GetBracketRatesRequest, ::city::economy::v2::GetBracketRatesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBracketRatesRequest, ::city::economy::v2::GetBracketRatesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBracketRates(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetBracketRatesRequest, ::city::economy::v2::SetBracketRatesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SetBracketRatesRequest* request, ::city::economy::v2::SetBracketRatesResponse* response) { return this->SetBracketRates(context, request, response); }));}
    void SetMessageAllocatorFor_SetBracketRates(
        ::grpc::MessageAllocator< ::city::economy::v2::SetBracketRatesRequest, ::city::economy::v2::SetBracketRatesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SetBracketRatesRequest, ::city::economy::v2::SetBracketRatesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBracketRates(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response) { return this->CalculateTaxesDue(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateTaxesDue(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateTaxesDue(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response) { return this->CalculateConsumption(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateConsumption(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateConsumption(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response) { return this->CalculateInterest(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateInterest(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateInterest(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddOrg<WithCallbackMethod_RemoveOrg<WithCallbackMethod_AddAgent<WithCallbackMethod_RemoveAgent<WithCallbackMethod_GetNominalGDP<WithCallbackMethod_SetNominalGDP<WithCallbackMethod_GetRealGDP<WithCallbackMethod_SetRealGDP<WithCallbackMethod_GetUnemployment<WithCallbackMethod_SetUnemployment<WithCallbackMethod_GetWages<WithCallbackMethod_SetWages<WithCallbackMethod_GetPrices<WithCallbackMethod_SetPrices<WithCallbackMethod_GetInventory<WithCallbackMethod_SetInventory<WithCallbackMethod_GetPrice<WithCallbackMethod_SetPrice<WithCallbackMethod_GetCurrency<WithCallbackMethod_SetCurrency<WithCallbackMethod_GetInterestRate<WithCallbackMethod_SetInterestRate<WithCallbackMethod_GetBracketCutoffs<WithCallbackMethod_SetBracketCutoffs<WithCallbackMethod_GetBracketRates<WithCallbackMethod_SetBracketRates<WithCallbackMethod_CalculateTaxesDue<WithCallbackMethod_CalculateConsumption<WithCallbackMethod_CalculateInterest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddOrg() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddAgent() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetWages() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetWages() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPrices() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetPrices() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInventory() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetInventory() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPrice() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetPrice() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCurrency() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetCurrency() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddOrg() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddAgent() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNominalGDP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNominalGDP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealGDP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetRealGDP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUnemployment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUnemployment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetWages() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetWages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetWages() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetWages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPrices() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPrices(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetPrices() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPrices(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInventory() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetInventory() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPrice() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPrice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetPrice() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetPrice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCurrency() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCurrency(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetCurrency() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCurrency(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterestRate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetInterestRate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBracketCutoffs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBracketCutoffs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBracketRates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBracketRates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateTaxesDue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateConsumption(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateInterest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddOrg() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddAgent() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNominalGDP(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNominalGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetNominalGDP(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNominalGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRealGDP(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetRealGDP(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUnemployment(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUnemployment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetUnemployment(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUnemployment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetWages() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetWages(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetWages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetWages() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetWages(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetWages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPrices() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPrices(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPrices(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetPrices() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetPrices(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPrices(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInventory() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetInventory() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPrice() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPrice(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPrice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetPrice() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetPrice(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetPrice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCurrency() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCurrency(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCurrency(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetCurrency() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetCurrency(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetCurrency(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInterestRate(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterestRate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetInterestRate(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetInterestRate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBracketCutoffs(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBracketCutoffs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBracketCutoffs(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBracketCutoffs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBracketRates(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBracketRates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBracketRates(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBracketRates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateTaxesDue(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateTaxesDue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateConsumption(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateConsumption(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateInterest(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateInterest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddOrg() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddOrgRequest, ::city::economy::v2::AddOrgResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddOrgRequest, ::city::economy::v2::AddOrgResponse>* streamer) {
                       return this->StreamedAddOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddOrgRequest* /*request*/, ::city::economy::v2::AddOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddOrgRequest,::city::economy::v2::AddOrgResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveOrg() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveOrgRequest, ::city::economy::v2::RemoveOrgResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveOrgRequest, ::city::economy::v2::RemoveOrgResponse>* streamer) {
                       return this->StreamedRemoveOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveOrg(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveOrgRequest* /*request*/, ::city::economy::v2::RemoveOrgResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveOrgRequest,::city::economy::v2::RemoveOrgResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddAgent() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>* streamer) {
                       return this->StreamedAddAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddAgentRequest,::city::economy::v2::AddAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>* streamer) {
                       return this->StreamedRemoveAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveAgentRequest,::city::economy::v2::RemoveAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNominalGDP() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetNominalGDPRequest, ::city::economy::v2::GetNominalGDPResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetNominalGDPRequest, ::city::economy::v2::GetNominalGDPResponse>* streamer) {
                       return this->StreamedGetNominalGDP(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNominalGDPRequest* /*request*/, ::city::economy::v2::GetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNominalGDP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetNominalGDPRequest,::city::economy::v2::GetNominalGDPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetNominalGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetNominalGDP() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetNominalGDPRequest, ::city::economy::v2::SetNominalGDPResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetNominalGDPRequest, ::city::economy::v2::SetNominalGDPResponse>* streamer) {
                       return this->StreamedSetNominalGDP(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetNominalGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetNominalGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetNominalGDPRequest* /*request*/, ::city::economy::v2::SetNominalGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetNominalGDP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetNominalGDPRequest,::city::economy::v2::SetNominalGDPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRealGDP() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetRealGDPRequest, ::city::economy::v2::GetRealGDPResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetRealGDPRequest, ::city::economy::v2::GetRealGDPResponse>* streamer) {
                       return this->StreamedGetRealGDP(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetRealGDPRequest* /*request*/, ::city::economy::v2::GetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRealGDP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetRealGDPRequest,::city::economy::v2::GetRealGDPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetRealGDP() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetRealGDPRequest, ::city::economy::v2::SetRealGDPResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetRealGDPRequest, ::city::economy::v2::SetRealGDPResponse>* streamer) {
                       return this->StreamedSetRealGDP(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetRealGDPRequest* /*request*/, ::city::economy::v2::SetRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetRealGDP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetRealGDPRequest,::city::economy::v2::SetRealGDPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUnemployment() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetUnemploymentRequest, ::city::economy::v2::GetUnemploymentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetUnemploymentRequest, ::city::economy::v2::GetUnemploymentResponse>* streamer) {
                       return this->StreamedGetUnemployment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetUnemploymentRequest* /*request*/, ::city::economy::v2::GetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUnemployment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetUnemploymentRequest,::city::economy::v2::GetUnemploymentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetUnemployment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetUnemployment() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetUnemploymentRequest, ::city::economy::v2::SetUnemploymentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetUnemploymentRequest, ::city::economy::v2::SetUnemploymentResponse>* streamer) {
                       return this->StreamedSetUnemployment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetUnemployment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetUnemployment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetUnemploymentRequest* /*request*/, ::city::economy::v2::SetUnemploymentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetUnemployment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetUnemploymentRequest,::city::economy::v2::SetUnemploymentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetWages() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetWagesRequest, ::city::economy::v2::GetWagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetWagesRequest, ::city::economy::v2::GetWagesResponse>* streamer) {
                       return this->StreamedGetWages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetWagesRequest* /*request*/, ::city::economy::v2::GetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetWages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetWagesRequest,::city::economy::v2::GetWagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetWages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetWages() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetWagesRequest, ::city::economy::v2::SetWagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetWagesRequest, ::city::economy::v2::SetWagesResponse>* streamer) {
                       return this->StreamedSetWages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetWages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetWages(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetWagesRequest* /*request*/, ::city::economy::v2::SetWagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetWages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetWagesRequest,::city::economy::v2::SetWagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPrices() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetPricesRequest, ::city::economy::v2::GetPricesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetPricesRequest, ::city::economy::v2::GetPricesResponse>* streamer) {
                       return this->StreamedGetPrices(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPricesRequest* /*request*/, ::city::economy::v2::GetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPrices(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetPricesRequest,::city::economy::v2::GetPricesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetPrices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetPrices() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetPricesRequest, ::city::economy::v2::SetPricesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetPricesRequest, ::city::economy::v2::SetPricesResponse>* streamer) {
                       return this->StreamedSetPrices(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetPrices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetPrices(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPricesRequest* /*request*/, ::city::economy::v2::SetPricesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetPrices(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetPricesRequest,::city::economy::v2::SetPricesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInventory() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetInventoryRequest, ::city::economy::v2::GetInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetInventoryRequest, ::city::economy::v2::GetInventoryResponse>* streamer) {
                       return this->StreamedGetInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInventoryRequest* /*request*/, ::city::economy::v2::GetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetInventoryRequest,::city::economy::v2::GetInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetInventory() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetInventoryRequest, ::city::economy::v2::SetInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetInventoryRequest, ::city::economy::v2::SetInventoryResponse>* streamer) {
                       return this->StreamedSetInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetInventory(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInventoryRequest* /*request*/, ::city::economy::v2::SetInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetInventoryRequest,::city::economy::v2::SetInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPrice() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetPriceRequest, ::city::economy::v2::GetPriceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetPriceRequest, ::city::economy::v2::GetPriceResponse>* streamer) {
                       return this->StreamedGetPrice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetPriceRequest* /*request*/, ::city::economy::v2::GetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPrice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetPriceRequest,::city::economy::v2::GetPriceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetPrice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetPrice() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetPriceRequest, ::city::economy::v2::SetPriceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetPriceRequest, ::city::economy::v2::SetPriceResponse>* streamer) {
                       return this->StreamedSetPrice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetPrice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetPrice(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetPriceRequest* /*request*/, ::city::economy::v2::SetPriceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetPrice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetPriceRequest,::city::economy::v2::SetPriceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCurrency() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetCurrencyRequest, ::city::economy::v2::GetCurrencyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetCurrencyRequest, ::city::economy::v2::GetCurrencyResponse>* streamer) {
                       return this->StreamedGetCurrency(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetCurrencyRequest* /*request*/, ::city::economy::v2::GetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCurrency(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetCurrencyRequest,::city::economy::v2::GetCurrencyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCurrency : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetCurrency() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetCurrencyRequest, ::city::economy::v2::SetCurrencyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetCurrencyRequest, ::city::economy::v2::SetCurrencyResponse>* streamer) {
                       return this->StreamedSetCurrency(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetCurrency() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCurrency(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetCurrencyRequest* /*request*/, ::city::economy::v2::SetCurrencyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCurrency(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetCurrencyRequest,::city::economy::v2::SetCurrencyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInterestRate() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetInterestRateRequest, ::city::economy::v2::GetInterestRateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetInterestRateRequest, ::city::economy::v2::GetInterestRateResponse>* streamer) {
                       return this->StreamedGetInterestRate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetInterestRateRequest* /*request*/, ::city::economy::v2::GetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInterestRate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetInterestRateRequest,::city::economy::v2::GetInterestRateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetInterestRate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetInterestRate() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetInterestRateRequest, ::city::economy::v2::SetInterestRateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetInterestRateRequest, ::city::economy::v2::SetInterestRateResponse>* streamer) {
                       return this->StreamedSetInterestRate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetInterestRate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetInterestRate(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetInterestRateRequest* /*request*/, ::city::economy::v2::SetInterestRateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetInterestRate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetInterestRateRequest,::city::economy::v2::SetInterestRateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBracketCutoffs() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetBracketCutoffsRequest, ::city::economy::v2::GetBracketCutoffsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetBracketCutoffsRequest, ::city::economy::v2::GetBracketCutoffsResponse>* streamer) {
                       return this->StreamedGetBracketCutoffs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketCutoffsRequest* /*request*/, ::city::economy::v2::GetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBracketCutoffs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetBracketCutoffsRequest,::city::economy::v2::GetBracketCutoffsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBracketCutoffs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBracketCutoffs() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetBracketCutoffsRequest, ::city::economy::v2::SetBracketCutoffsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetBracketCutoffsRequest, ::city::economy::v2::SetBracketCutoffsResponse>* streamer) {
                       return this->StreamedSetBracketCutoffs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBracketCutoffs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBracketCutoffs(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketCutoffsRequest* /*request*/, ::city::economy::v2::SetBracketCutoffsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBracketCutoffs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetBracketCutoffsRequest,::city::economy::v2::SetBracketCutoffsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBracketRates() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetBracketRatesRequest, ::city::economy::v2::GetBracketRatesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetBracketRatesRequest, ::city::economy::v2::GetBracketRatesResponse>* streamer) {
                       return this->StreamedGetBracketRates(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBracketRatesRequest* /*request*/, ::city::economy::v2::GetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBracketRates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetBracketRatesRequest,::city::economy::v2::GetBracketRatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBracketRates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBracketRates() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SetBracketRatesRequest, ::city::economy::v2::SetBracketRatesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SetBracketRatesRequest, ::city::economy::v2::SetBracketRatesResponse>* streamer) {
                       return this->StreamedSetBracketRates(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBracketRates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBracketRates(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SetBracketRatesRequest* /*request*/, ::city::economy::v2::SetBracketRatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBracketRates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SetBracketRatesRequest,::city::economy::v2::SetBracketRatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>* streamer) {
                       return this->StreamedCalculateTaxesDue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateTaxesDue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateTaxesDueRequest,::city::economy::v2::CalculateTaxesDueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>* streamer) {
                       return this->StreamedCalculateConsumption(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateConsumption(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateConsumptionRequest,::city::economy::v2::CalculateConsumptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>* streamer) {
                       return this->StreamedCalculateInterest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateInterest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateInterestRequest,::city::economy::v2::CalculateInterestResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddOrg<WithStreamedUnaryMethod_RemoveOrg<WithStreamedUnaryMethod_AddAgent<WithStreamedUnaryMethod_RemoveAgent<WithStreamedUnaryMethod_GetNominalGDP<WithStreamedUnaryMethod_SetNominalGDP<WithStreamedUnaryMethod_GetRealGDP<WithStreamedUnaryMethod_SetRealGDP<WithStreamedUnaryMethod_GetUnemployment<WithStreamedUnaryMethod_SetUnemployment<WithStreamedUnaryMethod_GetWages<WithStreamedUnaryMethod_SetWages<WithStreamedUnaryMethod_GetPrices<WithStreamedUnaryMethod_SetPrices<WithStreamedUnaryMethod_GetInventory<WithStreamedUnaryMethod_SetInventory<WithStreamedUnaryMethod_GetPrice<WithStreamedUnaryMethod_SetPrice<WithStreamedUnaryMethod_GetCurrency<WithStreamedUnaryMethod_SetCurrency<WithStreamedUnaryMethod_GetInterestRate<WithStreamedUnaryMethod_SetInterestRate<WithStreamedUnaryMethod_GetBracketCutoffs<WithStreamedUnaryMethod_SetBracketCutoffs<WithStreamedUnaryMethod_GetBracketRates<WithStreamedUnaryMethod_SetBracketRates<WithStreamedUnaryMethod_CalculateTaxesDue<WithStreamedUnaryMethod_CalculateConsumption<WithStreamedUnaryMethod_CalculateInterest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddOrg<WithStreamedUnaryMethod_RemoveOrg<WithStreamedUnaryMethod_AddAgent<WithStreamedUnaryMethod_RemoveAgent<WithStreamedUnaryMethod_GetNominalGDP<WithStreamedUnaryMethod_SetNominalGDP<WithStreamedUnaryMethod_GetRealGDP<WithStreamedUnaryMethod_SetRealGDP<WithStreamedUnaryMethod_GetUnemployment<WithStreamedUnaryMethod_SetUnemployment<WithStreamedUnaryMethod_GetWages<WithStreamedUnaryMethod_SetWages<WithStreamedUnaryMethod_GetPrices<WithStreamedUnaryMethod_SetPrices<WithStreamedUnaryMethod_GetInventory<WithStreamedUnaryMethod_SetInventory<WithStreamedUnaryMethod_GetPrice<WithStreamedUnaryMethod_SetPrice<WithStreamedUnaryMethod_GetCurrency<WithStreamedUnaryMethod_SetCurrency<WithStreamedUnaryMethod_GetInterestRate<WithStreamedUnaryMethod_SetInterestRate<WithStreamedUnaryMethod_GetBracketCutoffs<WithStreamedUnaryMethod_SetBracketCutoffs<WithStreamedUnaryMethod_GetBracketRates<WithStreamedUnaryMethod_SetBracketRates<WithStreamedUnaryMethod_CalculateTaxesDue<WithStreamedUnaryMethod_CalculateConsumption<WithStreamedUnaryMethod_CalculateInterest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace economy
}  // namespace city


#endif  // GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: city/economy/v2/org_service.proto
#ifndef GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED
#define GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED

#include "city/economy/v2/org_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace city {
namespace economy {
namespace v2 {

// OrgService provides management interfaces for organizations and agents in the economic system
// All basic operations support batch processing by default
//
// OrgService 提供了经济系统中组织和代理的管理接口
// 所有基础操作默认支持批量处理
class OrgService final {
 public:
  static constexpr char const* service_full_name() {
    return "city.economy.v2.OrgService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates one or more firm entities
    // Returns the list of created firm IDs
    //
    // 创建一个或多个企业实体
    // 返回创建的企业ID列表
    virtual ::grpc::Status AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::city::economy::v2::AddFirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>> AsyncAddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>>(AsyncAddFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>> PrepareAsyncAddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>>(PrepareAsyncAddFirmRaw(context, request, cq));
    }
    // Deletes one or more firms by their IDs
    // Also cleans up related employee associations
    //
    // 根据ID删除一个或多个企业实体
    // 同时清理相关的员工关联关系
    virtual ::grpc::Status RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::city::economy::v2::RemoveFirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>> AsyncRemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>>(AsyncRemoveFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>> PrepareAsyncRemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>>(PrepareAsyncRemoveFirmRaw(context, request, cq));
    }
    // Retrieves detailed information for one or more firms
    // Returns a list of firm entities
    //
    // 获取一个或多个企业的详细信息
    // 返回企业实体信息列表
    virtual ::grpc::Status GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::city::economy::v2::GetFirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>> AsyncGetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>>(AsyncGetFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>> PrepareAsyncGetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>>(PrepareAsyncGetFirmRaw(context, request, cq));
    }
    // Updates complete information for one or more firms
    //
    // 更新一个或多个企业的完整信息
    virtual ::grpc::Status UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::city::economy::v2::UpdateFirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>> AsyncUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>>(AsyncUpdateFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>> PrepareAsyncUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>>(PrepareAsyncUpdateFirmRaw(context, request, cq));
    }
    // Lists all firms in the system
    //
    // 获取系统中所有企业的列表
    virtual ::grpc::Status ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::city::economy::v2::ListFirmsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>> AsyncListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>>(AsyncListFirmsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>> PrepareAsyncListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>>(PrepareAsyncListFirmsRaw(context, request, cq));
    }
    // Performs incremental updates on one or more firms
    // Allows updating specific fields like price, inventory, demand etc.
    //
    // 对一个或多个企业进行增量更新
    // 可以更新价格、库存、需求等具体字段
    virtual ::grpc::Status DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::city::economy::v2::DeltaUpdateFirmResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>> AsyncDeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>>(AsyncDeltaUpdateFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>> PrepareAsyncDeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>>(PrepareAsyncDeltaUpdateFirmRaw(context, request, cq));
    }
    // @section NBS Operations
    // @section 国家统计局相关操作
    //
    // Creates a new NBS entity
    //
    // 创建新的国家统计局实体
    virtual ::grpc::Status AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::city::economy::v2::AddNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>> AsyncAddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>>(AsyncAddNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>> PrepareAsyncAddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>>(PrepareAsyncAddNBSRaw(context, request, cq));
    }
    // Deletes an NBS entity by ID
    //
    // 根据ID删除国家统计局实体
    virtual ::grpc::Status RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::city::economy::v2::RemoveNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>> AsyncRemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>>(AsyncRemoveNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>> PrepareAsyncRemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>>(PrepareAsyncRemoveNBSRaw(context, request, cq));
    }
    // Retrieves detailed information for an NBS entity
    //
    // 获取国家统计局的详细信息
    virtual ::grpc::Status GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::city::economy::v2::GetNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>> AsyncGetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>>(AsyncGetNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>> PrepareAsyncGetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>>(PrepareAsyncGetNBSRaw(context, request, cq));
    }
    // Updates complete information for an NBS entity
    //
    // 更新国家统计局的完整信息
    virtual ::grpc::Status UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::city::economy::v2::UpdateNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>> AsyncUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>>(AsyncUpdateNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>> PrepareAsyncUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>>(PrepareAsyncUpdateNBSRaw(context, request, cq));
    }
    // Lists all NBS entities in the system
    //
    // 获取系统中所有国家统计局的列表
    virtual ::grpc::Status ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::city::economy::v2::ListNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>> AsyncListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>>(AsyncListNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>> PrepareAsyncListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>>(PrepareAsyncListNBSRaw(context, request, cq));
    }
    // Performs incremental updates on an NBS entity
    // Allows updating specific statistics and citizen relationships
    //
    // 对国家统计局进行增量更新
    // 可以更新具体统计数据和公民关系
    virtual ::grpc::Status DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::city::economy::v2::DeltaUpdateNBSResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>> AsyncDeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>>(AsyncDeltaUpdateNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>> PrepareAsyncDeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>>(PrepareAsyncDeltaUpdateNBSRaw(context, request, cq));
    }
    // @section Government Operations
    // @section 政府相关操作
    //
    // Creates a new government entity
    //
    // 创建新的政府实体
    virtual ::grpc::Status AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::city::economy::v2::AddGovernmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>> AsyncAddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>>(AsyncAddGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>> PrepareAsyncAddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>>(PrepareAsyncAddGovernmentRaw(context, request, cq));
    }
    // Deletes a government entity by ID
    //
    // 根据ID删除政府实体
    virtual ::grpc::Status RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::city::economy::v2::RemoveGovernmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>> AsyncRemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>>(AsyncRemoveGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>> PrepareAsyncRemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>>(PrepareAsyncRemoveGovernmentRaw(context, request, cq));
    }
    // Retrieves detailed information for a government entity
    //
    // 获取政府实体的详细信息
    virtual ::grpc::Status GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::city::economy::v2::GetGovernmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>> AsyncGetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>>(AsyncGetGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>> PrepareAsyncGetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>>(PrepareAsyncGetGovernmentRaw(context, request, cq));
    }
    // Updates complete information for a government entity
    //
    // 更新政府实体的完整信息
    virtual ::grpc::Status UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::city::economy::v2::UpdateGovernmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>> AsyncUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>>(AsyncUpdateGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>> PrepareAsyncUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>>(PrepareAsyncUpdateGovernmentRaw(context, request, cq));
    }
    // Lists all government entities in the system
    //
    // 获取系统中所有政府实体的列表
    virtual ::grpc::Status ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::city::economy::v2::ListGovernmentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>> AsyncListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>>(AsyncListGovernmentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>> PrepareAsyncListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>>(PrepareAsyncListGovernmentsRaw(context, request, cq));
    }
    // Performs incremental updates on a government entity
    // Allows updating tax brackets and citizen relationships
    //
    // 对政府实体进行增量更新
    // 可以更新税收档位和公民关系
    virtual ::grpc::Status DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>> AsyncDeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>>(AsyncDeltaUpdateGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>> PrepareAsyncDeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>>(PrepareAsyncDeltaUpdateGovernmentRaw(context, request, cq));
    }
    // @section Bank Operations
    // @section 银行相关操作
    //
    // Creates a new bank entity
    //
    // 创建新的银行实体
    virtual ::grpc::Status AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::city::economy::v2::AddBankResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>> AsyncAddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>>(AsyncAddBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>> PrepareAsyncAddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>>(PrepareAsyncAddBankRaw(context, request, cq));
    }
    // Deletes a bank entity by ID
    //
    // 根据ID删除银行实体
    virtual ::grpc::Status RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::city::economy::v2::RemoveBankResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>> AsyncRemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>>(AsyncRemoveBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>> PrepareAsyncRemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>>(PrepareAsyncRemoveBankRaw(context, request, cq));
    }
    // Retrieves detailed information for a bank entity
    //
    // 获取银行实体的详细信息
    virtual ::grpc::Status GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::city::economy::v2::GetBankResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>> AsyncGetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>>(AsyncGetBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>> PrepareAsyncGetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>>(PrepareAsyncGetBankRaw(context, request, cq));
    }
    // Updates complete information for a bank entity
    //
    // 更新银行实体的完整信息
    virtual ::grpc::Status UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::city::economy::v2::UpdateBankResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>> AsyncUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>>(AsyncUpdateBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>> PrepareAsyncUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>>(PrepareAsyncUpdateBankRaw(context, request, cq));
    }
    // Lists all bank entities in the system
    //
    // 获取系统中所有银行实体的列表
    virtual ::grpc::Status ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::city::economy::v2::ListBanksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>> AsyncListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>>(AsyncListBanksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>> PrepareAsyncListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>>(PrepareAsyncListBanksRaw(context, request, cq));
    }
    // Performs incremental updates on a bank entity
    // Allows updating interest rates and customer relationships
    //
    // 对银行实体进行增量更新
    // 可以更新利率和客户关系
    virtual ::grpc::Status DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::city::economy::v2::DeltaUpdateBankResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>> AsyncDeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>>(AsyncDeltaUpdateBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>> PrepareAsyncDeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>>(PrepareAsyncDeltaUpdateBankRaw(context, request, cq));
    }
    // @section Agent Operations
    // @section 经济主体相关操作
    //
    // Creates one or more agent entities
    // Returns the list of created agent IDs
    //
    // 创建一个或多个经济主体
    // 返回创建的经济主体ID列表
    virtual ::grpc::Status AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::city::economy::v2::AddAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>> AsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>>(AsyncAddAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>> PrepareAsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>>(PrepareAsyncAddAgentRaw(context, request, cq));
    }
    // Deletes one or more agents by their IDs
    //
    // 根据ID删除一个或多个经济主体
    virtual ::grpc::Status RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::city::economy::v2::RemoveAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>> AsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>>(AsyncRemoveAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>> PrepareAsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>>(PrepareAsyncRemoveAgentRaw(context, request, cq));
    }
    // Retrieves detailed information for one or more agents
    //
    // 获取一个或多个经济主体的详细信息
    virtual ::grpc::Status GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::city::economy::v2::GetAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>> AsyncGetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>>(AsyncGetAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>> PrepareAsyncGetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>>(PrepareAsyncGetAgentRaw(context, request, cq));
    }
    // Updates complete information for one or more agents
    //
    // 更新一个或多个经济主体的完整信息
    virtual ::grpc::Status UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::city::economy::v2::UpdateAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>> AsyncUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>>(AsyncUpdateAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>> PrepareAsyncUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>>(PrepareAsyncUpdateAgentRaw(context, request, cq));
    }
    // Lists all agent entities in the system
    //
    // 获取系统中所有经济主体的列表
    virtual ::grpc::Status ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::city::economy::v2::ListAgentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>> AsyncListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>>(AsyncListAgentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>> PrepareAsyncListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>>(PrepareAsyncListAgentsRaw(context, request, cq));
    }
    // Performs incremental updates on one or more agents
    // Allows updating specific attributes like currency, skills etc.
    //
    // 对一个或多个经济主体进行增量更新
    // 可以更新货币、技能等具体属性
    virtual ::grpc::Status DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::city::economy::v2::DeltaUpdateAgentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>> AsyncDeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>>(AsyncDeltaUpdateAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>> PrepareAsyncDeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>>(PrepareAsyncDeltaUpdateAgentRaw(context, request, cq));
    }
    // @section Economic Calculations
    // @section 经济计算相关操作
    //
    // Calculates taxes due for specified agents
    // Supports income redistribution if enabled
    //
    // 计算指定经济主体的应缴税额
    // 支持开启收入再分配功能
    virtual ::grpc::Status CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::city::economy::v2::CalculateTaxesDueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>> AsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>>(AsyncCalculateTaxesDueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>> PrepareAsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>>(PrepareAsyncCalculateTaxesDueRaw(context, request, cq));
    }
    // Calculates actual consumption based on supply and demand
    //
    // 基于供给和需求计算实际消费量
    virtual ::grpc::Status CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::city::economy::v2::CalculateConsumptionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>> AsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>>(AsyncCalculateConsumptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>> PrepareAsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>>(PrepareAsyncCalculateConsumptionRaw(context, request, cq));
    }
    // Calculates interest for specified agents
    //
    // 计算指定经济主体的利息
    virtual ::grpc::Status CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::city::economy::v2::CalculateInterestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>> AsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>>(AsyncCalculateInterestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>> PrepareAsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>>(PrepareAsyncCalculateInterestRaw(context, request, cq));
    }
    // Calculates real GDP adjusted for inflation
    //
    // 计算经通货膨胀调整后的实际GDP
    virtual ::grpc::Status CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::city::economy::v2::CalculateRealGDPResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>> AsyncCalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>>(AsyncCalculateRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>> PrepareAsyncCalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>>(PrepareAsyncCalculateRealGDPRaw(context, request, cq));
    }
    // @section System State Operations
    // @section 系统状态相关操作
    //
    // Saves the current state of all economic entities to a file
    //
    // 将当前所有经济实体的状态保存到文件
    virtual ::grpc::Status SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::city::economy::v2::SaveEconomyEntitiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>> AsyncSaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>>(AsyncSaveEconomyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>> PrepareAsyncSaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>>(PrepareAsyncSaveEconomyEntitiesRaw(context, request, cq));
    }
    // Loads economic entities state from a file
    //
    // 从文件中加载经济实体的状态
    virtual ::grpc::Status LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::city::economy::v2::LoadEconomyEntitiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>> AsyncLoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>>(AsyncLoadEconomyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>> PrepareAsyncLoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>>(PrepareAsyncLoadEconomyEntitiesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Creates one or more firm entities
      // Returns the list of created firm IDs
      //
      // 创建一个或多个企业实体
      // 返回创建的企业ID列表
      virtual void AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes one or more firms by their IDs
      // Also cleans up related employee associations
      //
      // 根据ID删除一个或多个企业实体
      // 同时清理相关的员工关联关系
      virtual void RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieves detailed information for one or more firms
      // Returns a list of firm entities
      //
      // 获取一个或多个企业的详细信息
      // 返回企业实体信息列表
      virtual void GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates complete information for one or more firms
      //
      // 更新一个或多个企业的完整信息
      virtual void UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all firms in the system
      //
      // 获取系统中所有企业的列表
      virtual void ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs incremental updates on one or more firms
      // Allows updating specific fields like price, inventory, demand etc.
      //
      // 对一个或多个企业进行增量更新
      // 可以更新价格、库存、需求等具体字段
      virtual void DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section NBS Operations
      // @section 国家统计局相关操作
      //
      // Creates a new NBS entity
      //
      // 创建新的国家统计局实体
      virtual void AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes an NBS entity by ID
      //
      // 根据ID删除国家统计局实体
      virtual void RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieves detailed information for an NBS entity
      //
      // 获取国家统计局的详细信息
      virtual void GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates complete information for an NBS entity
      //
      // 更新国家统计局的完整信息
      virtual void UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all NBS entities in the system
      //
      // 获取系统中所有国家统计局的列表
      virtual void ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs incremental updates on an NBS entity
      // Allows updating specific statistics and citizen relationships
      //
      // 对国家统计局进行增量更新
      // 可以更新具体统计数据和公民关系
      virtual void DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section Government Operations
      // @section 政府相关操作
      //
      // Creates a new government entity
      //
      // 创建新的政府实体
      virtual void AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a government entity by ID
      //
      // 根据ID删除政府实体
      virtual void RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieves detailed information for a government entity
      //
      // 获取政府实体的详细信息
      virtual void GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates complete information for a government entity
      //
      // 更新政府实体的完整信息
      virtual void UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all government entities in the system
      //
      // 获取系统中所有政府实体的列表
      virtual void ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs incremental updates on a government entity
      // Allows updating tax brackets and citizen relationships
      //
      // 对政府实体进行增量更新
      // 可以更新税收档位和公民关系
      virtual void DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section Bank Operations
      // @section 银行相关操作
      //
      // Creates a new bank entity
      //
      // 创建新的银行实体
      virtual void AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes a bank entity by ID
      //
      // 根据ID删除银行实体
      virtual void RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieves detailed information for a bank entity
      //
      // 获取银行实体的详细信息
      virtual void GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates complete information for a bank entity
      //
      // 更新银行实体的完整信息
      virtual void UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all bank entities in the system
      //
      // 获取系统中所有银行实体的列表
      virtual void ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs incremental updates on a bank entity
      // Allows updating interest rates and customer relationships
      //
      // 对银行实体进行增量更新
      // 可以更新利率和客户关系
      virtual void DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section Agent Operations
      // @section 经济主体相关操作
      //
      // Creates one or more agent entities
      // Returns the list of created agent IDs
      //
      // 创建一个或多个经济主体
      // 返回创建的经济主体ID列表
      virtual void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Deletes one or more agents by their IDs
      //
      // 根据ID删除一个或多个经济主体
      virtual void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Retrieves detailed information for one or more agents
      //
      // 获取一个或多个经济主体的详细信息
      virtual void GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Updates complete information for one or more agents
      //
      // 更新一个或多个经济主体的完整信息
      virtual void UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Lists all agent entities in the system
      //
      // 获取系统中所有经济主体的列表
      virtual void ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Performs incremental updates on one or more agents
      // Allows updating specific attributes like currency, skills etc.
      //
      // 对一个或多个经济主体进行增量更新
      // 可以更新货币、技能等具体属性
      virtual void DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section Economic Calculations
      // @section 经济计算相关操作
      //
      // Calculates taxes due for specified agents
      // Supports income redistribution if enabled
      //
      // 计算指定经济主体的应缴税额
      // 支持开启收入再分配功能
      virtual void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Calculates actual consumption based on supply and demand
      //
      // 基于供给和需求计算实际消费量
      virtual void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Calculates interest for specified agents
      //
      // 计算指定经济主体的利息
      virtual void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Calculates real GDP adjusted for inflation
      //
      // 计算经通货膨胀调整后的实际GDP
      virtual void CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // @section System State Operations
      // @section 系统状态相关操作
      //
      // Saves the current state of all economic entities to a file
      //
      // 将当前所有经济实体的状态保存到文件
      virtual void SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Loads economic entities state from a file
      //
      // 从文件中加载经济实体的状态
      virtual void LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>* AsyncAddFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddFirmResponse>* PrepareAsyncAddFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>* AsyncRemoveFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveFirmResponse>* PrepareAsyncRemoveFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>* AsyncGetFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetFirmResponse>* PrepareAsyncGetFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>* AsyncUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateFirmResponse>* PrepareAsyncUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>* AsyncListFirmsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListFirmsResponse>* PrepareAsyncListFirmsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>* AsyncDeltaUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateFirmResponse>* PrepareAsyncDeltaUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>* AsyncAddNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddNBSResponse>* PrepareAsyncAddNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>* AsyncRemoveNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveNBSResponse>* PrepareAsyncRemoveNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>* AsyncGetNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetNBSResponse>* PrepareAsyncGetNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>* AsyncUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateNBSResponse>* PrepareAsyncUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>* AsyncListNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListNBSResponse>* PrepareAsyncListNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>* AsyncDeltaUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateNBSResponse>* PrepareAsyncDeltaUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>* AsyncAddGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddGovernmentResponse>* PrepareAsyncAddGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>* AsyncRemoveGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveGovernmentResponse>* PrepareAsyncRemoveGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>* AsyncGetGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetGovernmentResponse>* PrepareAsyncGetGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>* AsyncUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateGovernmentResponse>* PrepareAsyncUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>* AsyncListGovernmentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListGovernmentsResponse>* PrepareAsyncListGovernmentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>* AsyncDeltaUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateGovernmentResponse>* PrepareAsyncDeltaUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>* AsyncAddBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddBankResponse>* PrepareAsyncAddBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>* AsyncRemoveBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveBankResponse>* PrepareAsyncRemoveBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>* AsyncGetBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetBankResponse>* PrepareAsyncGetBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>* AsyncUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateBankResponse>* PrepareAsyncUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>* AsyncListBanksRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListBanksResponse>* PrepareAsyncListBanksRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>* AsyncDeltaUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateBankResponse>* PrepareAsyncDeltaUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>* AsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::AddAgentResponse>* PrepareAsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>* AsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::RemoveAgentResponse>* PrepareAsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>* AsyncGetAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::GetAgentResponse>* PrepareAsyncGetAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>* AsyncUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::UpdateAgentResponse>* PrepareAsyncUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>* AsyncListAgentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::ListAgentsResponse>* PrepareAsyncListAgentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>* AsyncDeltaUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::DeltaUpdateAgentResponse>* PrepareAsyncDeltaUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>* AsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateTaxesDueResponse>* PrepareAsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>* AsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateConsumptionResponse>* PrepareAsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>* AsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateInterestResponse>* PrepareAsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>* AsyncCalculateRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::CalculateRealGDPResponse>* PrepareAsyncCalculateRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>* AsyncSaveEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::SaveEconomyEntitiesResponse>* PrepareAsyncSaveEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>* AsyncLoadEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::city::economy::v2::LoadEconomyEntitiesResponse>* PrepareAsyncLoadEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::city::economy::v2::AddFirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>> AsyncAddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>>(AsyncAddFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>> PrepareAsyncAddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>>(PrepareAsyncAddFirmRaw(context, request, cq));
    }
    ::grpc::Status RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::city::economy::v2::RemoveFirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>> AsyncRemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>>(AsyncRemoveFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>> PrepareAsyncRemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>>(PrepareAsyncRemoveFirmRaw(context, request, cq));
    }
    ::grpc::Status GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::city::economy::v2::GetFirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>> AsyncGetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>>(AsyncGetFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>> PrepareAsyncGetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>>(PrepareAsyncGetFirmRaw(context, request, cq));
    }
    ::grpc::Status UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::city::economy::v2::UpdateFirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>> AsyncUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>>(AsyncUpdateFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>> PrepareAsyncUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>>(PrepareAsyncUpdateFirmRaw(context, request, cq));
    }
    ::grpc::Status ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::city::economy::v2::ListFirmsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>> AsyncListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>>(AsyncListFirmsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>> PrepareAsyncListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>>(PrepareAsyncListFirmsRaw(context, request, cq));
    }
    ::grpc::Status DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::city::economy::v2::DeltaUpdateFirmResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>> AsyncDeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>>(AsyncDeltaUpdateFirmRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>> PrepareAsyncDeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>>(PrepareAsyncDeltaUpdateFirmRaw(context, request, cq));
    }
    ::grpc::Status AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::city::economy::v2::AddNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>> AsyncAddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>>(AsyncAddNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>> PrepareAsyncAddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>>(PrepareAsyncAddNBSRaw(context, request, cq));
    }
    ::grpc::Status RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::city::economy::v2::RemoveNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>> AsyncRemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>>(AsyncRemoveNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>> PrepareAsyncRemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>>(PrepareAsyncRemoveNBSRaw(context, request, cq));
    }
    ::grpc::Status GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::city::economy::v2::GetNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>> AsyncGetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>>(AsyncGetNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>> PrepareAsyncGetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>>(PrepareAsyncGetNBSRaw(context, request, cq));
    }
    ::grpc::Status UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::city::economy::v2::UpdateNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>> AsyncUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>>(AsyncUpdateNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>> PrepareAsyncUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>>(PrepareAsyncUpdateNBSRaw(context, request, cq));
    }
    ::grpc::Status ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::city::economy::v2::ListNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>> AsyncListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>>(AsyncListNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>> PrepareAsyncListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>>(PrepareAsyncListNBSRaw(context, request, cq));
    }
    ::grpc::Status DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::city::economy::v2::DeltaUpdateNBSResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>> AsyncDeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>>(AsyncDeltaUpdateNBSRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>> PrepareAsyncDeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>>(PrepareAsyncDeltaUpdateNBSRaw(context, request, cq));
    }
    ::grpc::Status AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::city::economy::v2::AddGovernmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>> AsyncAddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>>(AsyncAddGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>> PrepareAsyncAddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>>(PrepareAsyncAddGovernmentRaw(context, request, cq));
    }
    ::grpc::Status RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::city::economy::v2::RemoveGovernmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>> AsyncRemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>>(AsyncRemoveGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>> PrepareAsyncRemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>>(PrepareAsyncRemoveGovernmentRaw(context, request, cq));
    }
    ::grpc::Status GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::city::economy::v2::GetGovernmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>> AsyncGetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>>(AsyncGetGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>> PrepareAsyncGetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>>(PrepareAsyncGetGovernmentRaw(context, request, cq));
    }
    ::grpc::Status UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::city::economy::v2::UpdateGovernmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>> AsyncUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>>(AsyncUpdateGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>> PrepareAsyncUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>>(PrepareAsyncUpdateGovernmentRaw(context, request, cq));
    }
    ::grpc::Status ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::city::economy::v2::ListGovernmentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>> AsyncListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>>(AsyncListGovernmentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>> PrepareAsyncListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>>(PrepareAsyncListGovernmentsRaw(context, request, cq));
    }
    ::grpc::Status DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>> AsyncDeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>>(AsyncDeltaUpdateGovernmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>> PrepareAsyncDeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>>(PrepareAsyncDeltaUpdateGovernmentRaw(context, request, cq));
    }
    ::grpc::Status AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::city::economy::v2::AddBankResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>> AsyncAddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>>(AsyncAddBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>> PrepareAsyncAddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>>(PrepareAsyncAddBankRaw(context, request, cq));
    }
    ::grpc::Status RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::city::economy::v2::RemoveBankResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>> AsyncRemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>>(AsyncRemoveBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>> PrepareAsyncRemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>>(PrepareAsyncRemoveBankRaw(context, request, cq));
    }
    ::grpc::Status GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::city::economy::v2::GetBankResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>> AsyncGetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>>(AsyncGetBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>> PrepareAsyncGetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>>(PrepareAsyncGetBankRaw(context, request, cq));
    }
    ::grpc::Status UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::city::economy::v2::UpdateBankResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>> AsyncUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>>(AsyncUpdateBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>> PrepareAsyncUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>>(PrepareAsyncUpdateBankRaw(context, request, cq));
    }
    ::grpc::Status ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::city::economy::v2::ListBanksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>> AsyncListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>>(AsyncListBanksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>> PrepareAsyncListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>>(PrepareAsyncListBanksRaw(context, request, cq));
    }
    ::grpc::Status DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::city::economy::v2::DeltaUpdateBankResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>> AsyncDeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>>(AsyncDeltaUpdateBankRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>> PrepareAsyncDeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>>(PrepareAsyncDeltaUpdateBankRaw(context, request, cq));
    }
    ::grpc::Status AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::city::economy::v2::AddAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>> AsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>>(AsyncAddAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>> PrepareAsyncAddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>>(PrepareAsyncAddAgentRaw(context, request, cq));
    }
    ::grpc::Status RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::city::economy::v2::RemoveAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>> AsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>>(AsyncRemoveAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>> PrepareAsyncRemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>>(PrepareAsyncRemoveAgentRaw(context, request, cq));
    }
    ::grpc::Status GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::city::economy::v2::GetAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>> AsyncGetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>>(AsyncGetAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>> PrepareAsyncGetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>>(PrepareAsyncGetAgentRaw(context, request, cq));
    }
    ::grpc::Status UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::city::economy::v2::UpdateAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>> AsyncUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>>(AsyncUpdateAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>> PrepareAsyncUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>>(PrepareAsyncUpdateAgentRaw(context, request, cq));
    }
    ::grpc::Status ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::city::economy::v2::ListAgentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>> AsyncListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>>(AsyncListAgentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>> PrepareAsyncListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>>(PrepareAsyncListAgentsRaw(context, request, cq));
    }
    ::grpc::Status DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::city::economy::v2::DeltaUpdateAgentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>> AsyncDeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>>(AsyncDeltaUpdateAgentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>> PrepareAsyncDeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>>(PrepareAsyncDeltaUpdateAgentRaw(context, request, cq));
    }
    ::grpc::Status CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::city::economy::v2::CalculateTaxesDueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>> AsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>>(AsyncCalculateTaxesDueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>> PrepareAsyncCalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>>(PrepareAsyncCalculateTaxesDueRaw(context, request, cq));
    }
    ::grpc::Status CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::city::economy::v2::CalculateConsumptionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>> AsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>>(AsyncCalculateConsumptionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>> PrepareAsyncCalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>>(PrepareAsyncCalculateConsumptionRaw(context, request, cq));
    }
    ::grpc::Status CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::city::economy::v2::CalculateInterestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>> AsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>>(AsyncCalculateInterestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>> PrepareAsyncCalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>>(PrepareAsyncCalculateInterestRaw(context, request, cq));
    }
    ::grpc::Status CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::city::economy::v2::CalculateRealGDPResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>> AsyncCalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>>(AsyncCalculateRealGDPRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>> PrepareAsyncCalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>>(PrepareAsyncCalculateRealGDPRaw(context, request, cq));
    }
    ::grpc::Status SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::city::economy::v2::SaveEconomyEntitiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>> AsyncSaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>>(AsyncSaveEconomyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>> PrepareAsyncSaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>>(PrepareAsyncSaveEconomyEntitiesRaw(context, request, cq));
    }
    ::grpc::Status LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::city::economy::v2::LoadEconomyEntitiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>> AsyncLoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>>(AsyncLoadEconomyEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>> PrepareAsyncLoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>>(PrepareAsyncLoadEconomyEntitiesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response, std::function<void(::grpc::Status)>) override;
      void AddFirm(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveFirm(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFirm(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListFirms(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response, std::function<void(::grpc::Status)>) override;
      void DeltaUpdateFirm(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void AddNBS(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveNBS(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNBS(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void ListNBS(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response, std::function<void(::grpc::Status)>) override;
      void DeltaUpdateNBS(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response, std::function<void(::grpc::Status)>) override;
      void AddGovernment(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveGovernment(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response, std::function<void(::grpc::Status)>) override;
      void GetGovernment(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListGovernments(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response, std::function<void(::grpc::Status)>) override;
      void DeltaUpdateGovernment(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response, std::function<void(::grpc::Status)>) override;
      void AddBank(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveBank(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBank(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response, std::function<void(::grpc::Status)>) override;
      void ListBanks(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response, std::function<void(::grpc::Status)>) override;
      void DeltaUpdateBank(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void AddAgent(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveAgent(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAgent(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListAgents(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response, std::function<void(::grpc::Status)>) override;
      void DeltaUpdateAgent(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateTaxesDue(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateConsumption(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateInterest(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateRealGDP(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response, std::function<void(::grpc::Status)>) override;
      void SaveEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response, std::function<void(::grpc::Status)>) override;
      void LoadEconomyEntities(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>* AsyncAddFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddFirmResponse>* PrepareAsyncAddFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>* AsyncRemoveFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveFirmResponse>* PrepareAsyncRemoveFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>* AsyncGetFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetFirmResponse>* PrepareAsyncGetFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>* AsyncUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateFirmResponse>* PrepareAsyncUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>* AsyncListFirmsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListFirmsResponse>* PrepareAsyncListFirmsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListFirmsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>* AsyncDeltaUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateFirmResponse>* PrepareAsyncDeltaUpdateFirmRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>* AsyncAddNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddNBSResponse>* PrepareAsyncAddNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>* AsyncRemoveNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveNBSResponse>* PrepareAsyncRemoveNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>* AsyncGetNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetNBSResponse>* PrepareAsyncGetNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>* AsyncUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateNBSResponse>* PrepareAsyncUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>* AsyncListNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListNBSResponse>* PrepareAsyncListNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>* AsyncDeltaUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateNBSResponse>* PrepareAsyncDeltaUpdateNBSRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>* AsyncAddGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddGovernmentResponse>* PrepareAsyncAddGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>* AsyncRemoveGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveGovernmentResponse>* PrepareAsyncRemoveGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>* AsyncGetGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetGovernmentResponse>* PrepareAsyncGetGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>* AsyncUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateGovernmentResponse>* PrepareAsyncUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>* AsyncListGovernmentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListGovernmentsResponse>* PrepareAsyncListGovernmentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListGovernmentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>* AsyncDeltaUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateGovernmentResponse>* PrepareAsyncDeltaUpdateGovernmentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>* AsyncAddBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddBankResponse>* PrepareAsyncAddBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>* AsyncRemoveBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveBankResponse>* PrepareAsyncRemoveBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>* AsyncGetBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetBankResponse>* PrepareAsyncGetBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>* AsyncUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateBankResponse>* PrepareAsyncUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>* AsyncListBanksRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListBanksResponse>* PrepareAsyncListBanksRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListBanksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>* AsyncDeltaUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateBankResponse>* PrepareAsyncDeltaUpdateBankRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateBankRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>* AsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::AddAgentResponse>* PrepareAsyncAddAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::AddAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>* AsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::RemoveAgentResponse>* PrepareAsyncRemoveAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::RemoveAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>* AsyncGetAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::GetAgentResponse>* PrepareAsyncGetAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::GetAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>* AsyncUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::UpdateAgentResponse>* PrepareAsyncUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::UpdateAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>* AsyncListAgentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::ListAgentsResponse>* PrepareAsyncListAgentsRaw(::grpc::ClientContext* context, const ::city::economy::v2::ListAgentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>* AsyncDeltaUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::DeltaUpdateAgentResponse>* PrepareAsyncDeltaUpdateAgentRaw(::grpc::ClientContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>* AsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateTaxesDueResponse>* PrepareAsyncCalculateTaxesDueRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateTaxesDueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>* AsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateConsumptionResponse>* PrepareAsyncCalculateConsumptionRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateConsumptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>* AsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateInterestResponse>* PrepareAsyncCalculateInterestRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateInterestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>* AsyncCalculateRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::CalculateRealGDPResponse>* PrepareAsyncCalculateRealGDPRaw(::grpc::ClientContext* context, const ::city::economy::v2::CalculateRealGDPRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>* AsyncSaveEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::SaveEconomyEntitiesResponse>* PrepareAsyncSaveEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>* AsyncLoadEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::city::economy::v2::LoadEconomyEntitiesResponse>* PrepareAsyncLoadEconomyEntitiesRaw(::grpc::ClientContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddFirm_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveFirm_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFirm_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateFirm_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFirms_;
    const ::grpc::internal::RpcMethod rpcmethod_DeltaUpdateFirm_;
    const ::grpc::internal::RpcMethod rpcmethod_AddNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_ListNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_DeltaUpdateNBS_;
    const ::grpc::internal::RpcMethod rpcmethod_AddGovernment_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveGovernment_;
    const ::grpc::internal::RpcMethod rpcmethod_GetGovernment_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateGovernment_;
    const ::grpc::internal::RpcMethod rpcmethod_ListGovernments_;
    const ::grpc::internal::RpcMethod rpcmethod_DeltaUpdateGovernment_;
    const ::grpc::internal::RpcMethod rpcmethod_AddBank_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveBank_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBank_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBank_;
    const ::grpc::internal::RpcMethod rpcmethod_ListBanks_;
    const ::grpc::internal::RpcMethod rpcmethod_DeltaUpdateBank_;
    const ::grpc::internal::RpcMethod rpcmethod_AddAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_ListAgents_;
    const ::grpc::internal::RpcMethod rpcmethod_DeltaUpdateAgent_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateTaxesDue_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateConsumption_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateInterest_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateRealGDP_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveEconomyEntities_;
    const ::grpc::internal::RpcMethod rpcmethod_LoadEconomyEntities_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates one or more firm entities
    // Returns the list of created firm IDs
    //
    // 创建一个或多个企业实体
    // 返回创建的企业ID列表
    virtual ::grpc::Status AddFirm(::grpc::ServerContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response);
    // Deletes one or more firms by their IDs
    // Also cleans up related employee associations
    //
    // 根据ID删除一个或多个企业实体
    // 同时清理相关的员工关联关系
    virtual ::grpc::Status RemoveFirm(::grpc::ServerContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response);
    // Retrieves detailed information for one or more firms
    // Returns a list of firm entities
    //
    // 获取一个或多个企业的详细信息
    // 返回企业实体信息列表
    virtual ::grpc::Status GetFirm(::grpc::ServerContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response);
    // Updates complete information for one or more firms
    //
    // 更新一个或多个企业的完整信息
    virtual ::grpc::Status UpdateFirm(::grpc::ServerContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response);
    // Lists all firms in the system
    //
    // 获取系统中所有企业的列表
    virtual ::grpc::Status ListFirms(::grpc::ServerContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response);
    // Performs incremental updates on one or more firms
    // Allows updating specific fields like price, inventory, demand etc.
    //
    // 对一个或多个企业进行增量更新
    // 可以更新价格、库存、需求等具体字段
    virtual ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response);
    // @section NBS Operations
    // @section 国家统计局相关操作
    //
    // Creates a new NBS entity
    //
    // 创建新的国家统计局实体
    virtual ::grpc::Status AddNBS(::grpc::ServerContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response);
    // Deletes an NBS entity by ID
    //
    // 根据ID删除国家统计局实体
    virtual ::grpc::Status RemoveNBS(::grpc::ServerContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response);
    // Retrieves detailed information for an NBS entity
    //
    // 获取国家统计局的详细信息
    virtual ::grpc::Status GetNBS(::grpc::ServerContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response);
    // Updates complete information for an NBS entity
    //
    // 更新国家统计局的完整信息
    virtual ::grpc::Status UpdateNBS(::grpc::ServerContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response);
    // Lists all NBS entities in the system
    //
    // 获取系统中所有国家统计局的列表
    virtual ::grpc::Status ListNBS(::grpc::ServerContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response);
    // Performs incremental updates on an NBS entity
    // Allows updating specific statistics and citizen relationships
    //
    // 对国家统计局进行增量更新
    // 可以更新具体统计数据和公民关系
    virtual ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response);
    // @section Government Operations
    // @section 政府相关操作
    //
    // Creates a new government entity
    //
    // 创建新的政府实体
    virtual ::grpc::Status AddGovernment(::grpc::ServerContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response);
    // Deletes a government entity by ID
    //
    // 根据ID删除政府实体
    virtual ::grpc::Status RemoveGovernment(::grpc::ServerContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response);
    // Retrieves detailed information for a government entity
    //
    // 获取政府实体的详细信息
    virtual ::grpc::Status GetGovernment(::grpc::ServerContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response);
    // Updates complete information for a government entity
    //
    // 更新政府实体的完整信息
    virtual ::grpc::Status UpdateGovernment(::grpc::ServerContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response);
    // Lists all government entities in the system
    //
    // 获取系统中所有政府实体的列表
    virtual ::grpc::Status ListGovernments(::grpc::ServerContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response);
    // Performs incremental updates on a government entity
    // Allows updating tax brackets and citizen relationships
    //
    // 对政府实体进行增量更新
    // 可以更新税收档位和公民关系
    virtual ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response);
    // @section Bank Operations
    // @section 银行相关操作
    //
    // Creates a new bank entity
    //
    // 创建新的银行实体
    virtual ::grpc::Status AddBank(::grpc::ServerContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response);
    // Deletes a bank entity by ID
    //
    // 根据ID删除银行实体
    virtual ::grpc::Status RemoveBank(::grpc::ServerContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response);
    // Retrieves detailed information for a bank entity
    //
    // 获取银行实体的详细信息
    virtual ::grpc::Status GetBank(::grpc::ServerContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response);
    // Updates complete information for a bank entity
    //
    // 更新银行实体的完整信息
    virtual ::grpc::Status UpdateBank(::grpc::ServerContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response);
    // Lists all bank entities in the system
    //
    // 获取系统中所有银行实体的列表
    virtual ::grpc::Status ListBanks(::grpc::ServerContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response);
    // Performs incremental updates on a bank entity
    // Allows updating interest rates and customer relationships
    //
    // 对银行实体进行增量更新
    // 可以更新利率和客户关系
    virtual ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response);
    // @section Agent Operations
    // @section 经济主体相关操作
    //
    // Creates one or more agent entities
    // Returns the list of created agent IDs
    //
    // 创建一个或多个经济主体
    // 返回创建的经济主体ID列表
    virtual ::grpc::Status AddAgent(::grpc::ServerContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response);
    // Deletes one or more agents by their IDs
    //
    // 根据ID删除一个或多个经济主体
    virtual ::grpc::Status RemoveAgent(::grpc::ServerContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response);
    // Retrieves detailed information for one or more agents
    //
    // 获取一个或多个经济主体的详细信息
    virtual ::grpc::Status GetAgent(::grpc::ServerContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response);
    // Updates complete information for one or more agents
    //
    // 更新一个或多个经济主体的完整信息
    virtual ::grpc::Status UpdateAgent(::grpc::ServerContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response);
    // Lists all agent entities in the system
    //
    // 获取系统中所有经济主体的列表
    virtual ::grpc::Status ListAgents(::grpc::ServerContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response);
    // Performs incremental updates on one or more agents
    // Allows updating specific attributes like currency, skills etc.
    //
    // 对一个或多个经济主体进行增量更新
    // 可以更新货币、技能等具体属性
    virtual ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response);
    // @section Economic Calculations
    // @section 经济计算相关操作
    //
    // Calculates taxes due for specified agents
    // Supports income redistribution if enabled
    //
    // 计算指定经济主体的应缴税额
    // 支持开启收入再分配功能
    virtual ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response);
    // Calculates actual consumption based on supply and demand
    //
    // 基于供给和需求计算实际消费量
    virtual ::grpc::Status CalculateConsumption(::grpc::ServerContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response);
    // Calculates interest for specified agents
    //
    // 计算指定经济主体的利息
    virtual ::grpc::Status CalculateInterest(::grpc::ServerContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response);
    // Calculates real GDP adjusted for inflation
    //
    // 计算经通货膨胀调整后的实际GDP
    virtual ::grpc::Status CalculateRealGDP(::grpc::ServerContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response);
    // @section System State Operations
    // @section 系统状态相关操作
    //
    // Saves the current state of all economic entities to a file
    //
    // 将当前所有经济实体的状态保存到文件
    virtual ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response);
    // Loads economic entities state from a file
    //
    // 从文件中加载经济实体的状态
    virtual ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddFirm() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddFirm(::grpc::ServerContext* context, ::city::economy::v2::AddFirmRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddFirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveFirm(::grpc::ServerContext* context, ::city::economy::v2::RemoveFirmRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveFirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFirm() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFirm(::grpc::ServerContext* context, ::city::economy::v2::GetFirmRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetFirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFirm(::grpc::ServerContext* context, ::city::economy::v2::UpdateFirmRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::UpdateFirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListFirms() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFirms(::grpc::ServerContext* context, ::city::economy::v2::ListFirmsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::ListFirmsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateFirm(::grpc::ServerContext* context, ::city::economy::v2::DeltaUpdateFirmRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::DeltaUpdateFirmResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddNBS() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddNBS(::grpc::ServerContext* context, ::city::economy::v2::AddNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveNBS(::grpc::ServerContext* context, ::city::economy::v2::RemoveNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNBS() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNBS(::grpc::ServerContext* context, ::city::economy::v2::GetNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNBS(::grpc::ServerContext* context, ::city::economy::v2::UpdateNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::UpdateNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListNBS() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNBS(::grpc::ServerContext* context, ::city::economy::v2::ListNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::ListNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateNBS(::grpc::ServerContext* context, ::city::economy::v2::DeltaUpdateNBSRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::DeltaUpdateNBSResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddGovernment() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddGovernment(::grpc::ServerContext* context, ::city::economy::v2::AddGovernmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddGovernmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveGovernment(::grpc::ServerContext* context, ::city::economy::v2::RemoveGovernmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveGovernmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetGovernment() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGovernment(::grpc::ServerContext* context, ::city::economy::v2::GetGovernmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetGovernmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGovernment(::grpc::ServerContext* context, ::city::economy::v2::UpdateGovernmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::UpdateGovernmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListGovernments() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListGovernments(::grpc::ServerContext* context, ::city::economy::v2::ListGovernmentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::ListGovernmentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateGovernment(::grpc::ServerContext* context, ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::DeltaUpdateGovernmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddBank() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBank(::grpc::ServerContext* context, ::city::economy::v2::AddBankRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddBankResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveBank() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBank(::grpc::ServerContext* context, ::city::economy::v2::RemoveBankRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveBankResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBank() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBank(::grpc::ServerContext* context, ::city::economy::v2::GetBankRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetBankResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBank() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBank(::grpc::ServerContext* context, ::city::economy::v2::UpdateBankRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::UpdateBankResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBanks() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBanks(::grpc::ServerContext* context, ::city::economy::v2::ListBanksRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::ListBanksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateBank(::grpc::ServerContext* context, ::city::economy::v2::DeltaUpdateBankRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::DeltaUpdateBankResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddAgent() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAgent(::grpc::ServerContext* context, ::city::economy::v2::AddAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::AddAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAgent(::grpc::ServerContext* context, ::city::economy::v2::RemoveAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::RemoveAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAgent() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAgent(::grpc::ServerContext* context, ::city::economy::v2::GetAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::GetAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAgent(::grpc::ServerContext* context, ::city::economy::v2::UpdateAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::UpdateAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListAgents() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAgents(::grpc::ServerContext* context, ::city::economy::v2::ListAgentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::ListAgentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateAgent(::grpc::ServerContext* context, ::city::economy::v2::DeltaUpdateAgentRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::DeltaUpdateAgentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateTaxesDue(::grpc::ServerContext* context, ::city::economy::v2::CalculateTaxesDueRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateTaxesDueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateConsumption(::grpc::ServerContext* context, ::city::economy::v2::CalculateConsumptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateConsumptionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateInterest(::grpc::ServerContext* context, ::city::economy::v2::CalculateInterestRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateInterestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateRealGDP(::grpc::ServerContext* context, ::city::economy::v2::CalculateRealGDPRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::CalculateRealGDPResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveEconomyEntities(::grpc::ServerContext* context, ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::SaveEconomyEntitiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadEconomyEntities(::grpc::ServerContext* context, ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::city::economy::v2::LoadEconomyEntitiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddFirm<WithAsyncMethod_RemoveFirm<WithAsyncMethod_GetFirm<WithAsyncMethod_UpdateFirm<WithAsyncMethod_ListFirms<WithAsyncMethod_DeltaUpdateFirm<WithAsyncMethod_AddNBS<WithAsyncMethod_RemoveNBS<WithAsyncMethod_GetNBS<WithAsyncMethod_UpdateNBS<WithAsyncMethod_ListNBS<WithAsyncMethod_DeltaUpdateNBS<WithAsyncMethod_AddGovernment<WithAsyncMethod_RemoveGovernment<WithAsyncMethod_GetGovernment<WithAsyncMethod_UpdateGovernment<WithAsyncMethod_ListGovernments<WithAsyncMethod_DeltaUpdateGovernment<WithAsyncMethod_AddBank<WithAsyncMethod_RemoveBank<WithAsyncMethod_GetBank<WithAsyncMethod_UpdateBank<WithAsyncMethod_ListBanks<WithAsyncMethod_DeltaUpdateBank<WithAsyncMethod_AddAgent<WithAsyncMethod_RemoveAgent<WithAsyncMethod_GetAgent<WithAsyncMethod_UpdateAgent<WithAsyncMethod_ListAgents<WithAsyncMethod_DeltaUpdateAgent<WithAsyncMethod_CalculateTaxesDue<WithAsyncMethod_CalculateConsumption<WithAsyncMethod_CalculateInterest<WithAsyncMethod_CalculateRealGDP<WithAsyncMethod_SaveEconomyEntities<WithAsyncMethod_LoadEconomyEntities<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddFirm() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddFirmRequest, ::city::economy::v2::AddFirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddFirmRequest* request, ::city::economy::v2::AddFirmResponse* response) { return this->AddFirm(context, request, response); }));}
    void SetMessageAllocatorFor_AddFirm(
        ::grpc::MessageAllocator< ::city::economy::v2::AddFirmRequest, ::city::economy::v2::AddFirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddFirmRequest, ::city::economy::v2::AddFirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveFirmRequest, ::city::economy::v2::RemoveFirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveFirmRequest* request, ::city::economy::v2::RemoveFirmResponse* response) { return this->RemoveFirm(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveFirm(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveFirmRequest, ::city::economy::v2::RemoveFirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveFirmRequest, ::city::economy::v2::RemoveFirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFirm() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetFirmRequest, ::city::economy::v2::GetFirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetFirmRequest* request, ::city::economy::v2::GetFirmResponse* response) { return this->GetFirm(context, request, response); }));}
    void SetMessageAllocatorFor_GetFirm(
        ::grpc::MessageAllocator< ::city::economy::v2::GetFirmRequest, ::city::economy::v2::GetFirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetFirmRequest, ::city::economy::v2::GetFirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateFirmRequest, ::city::economy::v2::UpdateFirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::UpdateFirmRequest* request, ::city::economy::v2::UpdateFirmResponse* response) { return this->UpdateFirm(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateFirm(
        ::grpc::MessageAllocator< ::city::economy::v2::UpdateFirmRequest, ::city::economy::v2::UpdateFirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateFirmRequest, ::city::economy::v2::UpdateFirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListFirms() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListFirmsRequest, ::city::economy::v2::ListFirmsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::ListFirmsRequest* request, ::city::economy::v2::ListFirmsResponse* response) { return this->ListFirms(context, request, response); }));}
    void SetMessageAllocatorFor_ListFirms(
        ::grpc::MessageAllocator< ::city::economy::v2::ListFirmsRequest, ::city::economy::v2::ListFirmsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListFirmsRequest, ::city::economy::v2::ListFirmsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFirms(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateFirmRequest, ::city::economy::v2::DeltaUpdateFirmResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::DeltaUpdateFirmRequest* request, ::city::economy::v2::DeltaUpdateFirmResponse* response) { return this->DeltaUpdateFirm(context, request, response); }));}
    void SetMessageAllocatorFor_DeltaUpdateFirm(
        ::grpc::MessageAllocator< ::city::economy::v2::DeltaUpdateFirmRequest, ::city::economy::v2::DeltaUpdateFirmResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateFirmRequest, ::city::economy::v2::DeltaUpdateFirmResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddNBS() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddNBSRequest, ::city::economy::v2::AddNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddNBSRequest* request, ::city::economy::v2::AddNBSResponse* response) { return this->AddNBS(context, request, response); }));}
    void SetMessageAllocatorFor_AddNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::AddNBSRequest, ::city::economy::v2::AddNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddNBSRequest, ::city::economy::v2::AddNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveNBSRequest, ::city::economy::v2::RemoveNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveNBSRequest* request, ::city::economy::v2::RemoveNBSResponse* response) { return this->RemoveNBS(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveNBSRequest, ::city::economy::v2::RemoveNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveNBSRequest, ::city::economy::v2::RemoveNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNBS() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetNBSRequest, ::city::economy::v2::GetNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetNBSRequest* request, ::city::economy::v2::GetNBSResponse* response) { return this->GetNBS(context, request, response); }));}
    void SetMessageAllocatorFor_GetNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::GetNBSRequest, ::city::economy::v2::GetNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetNBSRequest, ::city::economy::v2::GetNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateNBSRequest, ::city::economy::v2::UpdateNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::UpdateNBSRequest* request, ::city::economy::v2::UpdateNBSResponse* response) { return this->UpdateNBS(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::UpdateNBSRequest, ::city::economy::v2::UpdateNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateNBSRequest, ::city::economy::v2::UpdateNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListNBS() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListNBSRequest, ::city::economy::v2::ListNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::ListNBSRequest* request, ::city::economy::v2::ListNBSResponse* response) { return this->ListNBS(context, request, response); }));}
    void SetMessageAllocatorFor_ListNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::ListNBSRequest, ::city::economy::v2::ListNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListNBSRequest, ::city::economy::v2::ListNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateNBSRequest, ::city::economy::v2::DeltaUpdateNBSResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::DeltaUpdateNBSRequest* request, ::city::economy::v2::DeltaUpdateNBSResponse* response) { return this->DeltaUpdateNBS(context, request, response); }));}
    void SetMessageAllocatorFor_DeltaUpdateNBS(
        ::grpc::MessageAllocator< ::city::economy::v2::DeltaUpdateNBSRequest, ::city::economy::v2::DeltaUpdateNBSResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateNBSRequest, ::city::economy::v2::DeltaUpdateNBSResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddGovernment() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddGovernmentRequest, ::city::economy::v2::AddGovernmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddGovernmentRequest* request, ::city::economy::v2::AddGovernmentResponse* response) { return this->AddGovernment(context, request, response); }));}
    void SetMessageAllocatorFor_AddGovernment(
        ::grpc::MessageAllocator< ::city::economy::v2::AddGovernmentRequest, ::city::economy::v2::AddGovernmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddGovernmentRequest, ::city::economy::v2::AddGovernmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveGovernmentRequest, ::city::economy::v2::RemoveGovernmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveGovernmentRequest* request, ::city::economy::v2::RemoveGovernmentResponse* response) { return this->RemoveGovernment(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveGovernment(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveGovernmentRequest, ::city::economy::v2::RemoveGovernmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveGovernmentRequest, ::city::economy::v2::RemoveGovernmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetGovernment() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetGovernmentRequest, ::city::economy::v2::GetGovernmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetGovernmentRequest* request, ::city::economy::v2::GetGovernmentResponse* response) { return this->GetGovernment(context, request, response); }));}
    void SetMessageAllocatorFor_GetGovernment(
        ::grpc::MessageAllocator< ::city::economy::v2::GetGovernmentRequest, ::city::economy::v2::GetGovernmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetGovernmentRequest, ::city::economy::v2::GetGovernmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateGovernmentRequest, ::city::economy::v2::UpdateGovernmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::UpdateGovernmentRequest* request, ::city::economy::v2::UpdateGovernmentResponse* response) { return this->UpdateGovernment(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateGovernment(
        ::grpc::MessageAllocator< ::city::economy::v2::UpdateGovernmentRequest, ::city::economy::v2::UpdateGovernmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateGovernmentRequest, ::city::economy::v2::UpdateGovernmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListGovernments() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListGovernmentsRequest, ::city::economy::v2::ListGovernmentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::ListGovernmentsRequest* request, ::city::economy::v2::ListGovernmentsResponse* response) { return this->ListGovernments(context, request, response); }));}
    void SetMessageAllocatorFor_ListGovernments(
        ::grpc::MessageAllocator< ::city::economy::v2::ListGovernmentsRequest, ::city::economy::v2::ListGovernmentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListGovernmentsRequest, ::city::economy::v2::ListGovernmentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListGovernments(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateGovernmentRequest, ::city::economy::v2::DeltaUpdateGovernmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::DeltaUpdateGovernmentRequest* request, ::city::economy::v2::DeltaUpdateGovernmentResponse* response) { return this->DeltaUpdateGovernment(context, request, response); }));}
    void SetMessageAllocatorFor_DeltaUpdateGovernment(
        ::grpc::MessageAllocator< ::city::economy::v2::DeltaUpdateGovernmentRequest, ::city::economy::v2::DeltaUpdateGovernmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateGovernmentRequest, ::city::economy::v2::DeltaUpdateGovernmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddBank() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddBankRequest, ::city::economy::v2::AddBankResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddBankRequest* request, ::city::economy::v2::AddBankResponse* response) { return this->AddBank(context, request, response); }));}
    void SetMessageAllocatorFor_AddBank(
        ::grpc::MessageAllocator< ::city::economy::v2::AddBankRequest, ::city::economy::v2::AddBankResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddBankRequest, ::city::economy::v2::AddBankResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBank(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveBank() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveBankRequest, ::city::economy::v2::RemoveBankResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveBankRequest* request, ::city::economy::v2::RemoveBankResponse* response) { return this->RemoveBank(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveBank(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveBankRequest, ::city::economy::v2::RemoveBankResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveBankRequest, ::city::economy::v2::RemoveBankResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBank(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBank() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBankRequest, ::city::economy::v2::GetBankResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetBankRequest* request, ::city::economy::v2::GetBankResponse* response) { return this->GetBank(context, request, response); }));}
    void SetMessageAllocatorFor_GetBank(
        ::grpc::MessageAllocator< ::city::economy::v2::GetBankRequest, ::city::economy::v2::GetBankResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetBankRequest, ::city::economy::v2::GetBankResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBank(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateBank() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateBankRequest, ::city::economy::v2::UpdateBankResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::UpdateBankRequest* request, ::city::economy::v2::UpdateBankResponse* response) { return this->UpdateBank(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBank(
        ::grpc::MessageAllocator< ::city::economy::v2::UpdateBankRequest, ::city::economy::v2::UpdateBankResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateBankRequest, ::city::economy::v2::UpdateBankResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBank(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListBanks() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListBanksRequest, ::city::economy::v2::ListBanksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::ListBanksRequest* request, ::city::economy::v2::ListBanksResponse* response) { return this->ListBanks(context, request, response); }));}
    void SetMessageAllocatorFor_ListBanks(
        ::grpc::MessageAllocator< ::city::economy::v2::ListBanksRequest, ::city::economy::v2::ListBanksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListBanksRequest, ::city::economy::v2::ListBanksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBanks(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateBankRequest, ::city::economy::v2::DeltaUpdateBankResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::DeltaUpdateBankRequest* request, ::city::economy::v2::DeltaUpdateBankResponse* response) { return this->DeltaUpdateBank(context, request, response); }));}
    void SetMessageAllocatorFor_DeltaUpdateBank(
        ::grpc::MessageAllocator< ::city::economy::v2::DeltaUpdateBankRequest, ::city::economy::v2::DeltaUpdateBankResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateBankRequest, ::city::economy::v2::DeltaUpdateBankResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateBank(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddAgent() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::AddAgentRequest* request, ::city::economy::v2::AddAgentResponse* response) { return this->AddAgent(context, request, response); }));}
    void SetMessageAllocatorFor_AddAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::RemoveAgentRequest* request, ::city::economy::v2::RemoveAgentResponse* response) { return this->RemoveAgent(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAgent() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetAgentRequest, ::city::economy::v2::GetAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::GetAgentRequest* request, ::city::economy::v2::GetAgentResponse* response) { return this->GetAgent(context, request, response); }));}
    void SetMessageAllocatorFor_GetAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::GetAgentRequest, ::city::economy::v2::GetAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::GetAgentRequest, ::city::economy::v2::GetAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateAgentRequest, ::city::economy::v2::UpdateAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::UpdateAgentRequest* request, ::city::economy::v2::UpdateAgentResponse* response) { return this->UpdateAgent(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::UpdateAgentRequest, ::city::economy::v2::UpdateAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::UpdateAgentRequest, ::city::economy::v2::UpdateAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListAgents() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListAgentsRequest, ::city::economy::v2::ListAgentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::ListAgentsRequest* request, ::city::economy::v2::ListAgentsResponse* response) { return this->ListAgents(context, request, response); }));}
    void SetMessageAllocatorFor_ListAgents(
        ::grpc::MessageAllocator< ::city::economy::v2::ListAgentsRequest, ::city::economy::v2::ListAgentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::ListAgentsRequest, ::city::economy::v2::ListAgentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAgents(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateAgentRequest, ::city::economy::v2::DeltaUpdateAgentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::DeltaUpdateAgentRequest* request, ::city::economy::v2::DeltaUpdateAgentResponse* response) { return this->DeltaUpdateAgent(context, request, response); }));}
    void SetMessageAllocatorFor_DeltaUpdateAgent(
        ::grpc::MessageAllocator< ::city::economy::v2::DeltaUpdateAgentRequest, ::city::economy::v2::DeltaUpdateAgentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::DeltaUpdateAgentRequest, ::city::economy::v2::DeltaUpdateAgentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateTaxesDueRequest* request, ::city::economy::v2::CalculateTaxesDueResponse* response) { return this->CalculateTaxesDue(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateTaxesDue(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateTaxesDue(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateConsumptionRequest* request, ::city::economy::v2::CalculateConsumptionResponse* response) { return this->CalculateConsumption(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateConsumption(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateConsumption(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateInterestRequest* request, ::city::economy::v2::CalculateInterestResponse* response) { return this->CalculateInterest(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateInterest(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateInterest(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateRealGDPRequest, ::city::economy::v2::CalculateRealGDPResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::CalculateRealGDPRequest* request, ::city::economy::v2::CalculateRealGDPResponse* response) { return this->CalculateRealGDP(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateRealGDP(
        ::grpc::MessageAllocator< ::city::economy::v2::CalculateRealGDPRequest, ::city::economy::v2::CalculateRealGDPResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::CalculateRealGDPRequest, ::city::economy::v2::CalculateRealGDPResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SaveEconomyEntitiesRequest, ::city::economy::v2::SaveEconomyEntitiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::SaveEconomyEntitiesRequest* request, ::city::economy::v2::SaveEconomyEntitiesResponse* response) { return this->SaveEconomyEntities(context, request, response); }));}
    void SetMessageAllocatorFor_SaveEconomyEntities(
        ::grpc::MessageAllocator< ::city::economy::v2::SaveEconomyEntitiesRequest, ::city::economy::v2::SaveEconomyEntitiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::SaveEconomyEntitiesRequest, ::city::economy::v2::SaveEconomyEntitiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveEconomyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::LoadEconomyEntitiesRequest, ::city::economy::v2::LoadEconomyEntitiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::city::economy::v2::LoadEconomyEntitiesRequest* request, ::city::economy::v2::LoadEconomyEntitiesResponse* response) { return this->LoadEconomyEntities(context, request, response); }));}
    void SetMessageAllocatorFor_LoadEconomyEntities(
        ::grpc::MessageAllocator< ::city::economy::v2::LoadEconomyEntitiesRequest, ::city::economy::v2::LoadEconomyEntitiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::city::economy::v2::LoadEconomyEntitiesRequest, ::city::economy::v2::LoadEconomyEntitiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoadEconomyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddFirm<WithCallbackMethod_RemoveFirm<WithCallbackMethod_GetFirm<WithCallbackMethod_UpdateFirm<WithCallbackMethod_ListFirms<WithCallbackMethod_DeltaUpdateFirm<WithCallbackMethod_AddNBS<WithCallbackMethod_RemoveNBS<WithCallbackMethod_GetNBS<WithCallbackMethod_UpdateNBS<WithCallbackMethod_ListNBS<WithCallbackMethod_DeltaUpdateNBS<WithCallbackMethod_AddGovernment<WithCallbackMethod_RemoveGovernment<WithCallbackMethod_GetGovernment<WithCallbackMethod_UpdateGovernment<WithCallbackMethod_ListGovernments<WithCallbackMethod_DeltaUpdateGovernment<WithCallbackMethod_AddBank<WithCallbackMethod_RemoveBank<WithCallbackMethod_GetBank<WithCallbackMethod_UpdateBank<WithCallbackMethod_ListBanks<WithCallbackMethod_DeltaUpdateBank<WithCallbackMethod_AddAgent<WithCallbackMethod_RemoveAgent<WithCallbackMethod_GetAgent<WithCallbackMethod_UpdateAgent<WithCallbackMethod_ListAgents<WithCallbackMethod_DeltaUpdateAgent<WithCallbackMethod_CalculateTaxesDue<WithCallbackMethod_CalculateConsumption<WithCallbackMethod_CalculateInterest<WithCallbackMethod_CalculateRealGDP<WithCallbackMethod_SaveEconomyEntities<WithCallbackMethod_LoadEconomyEntities<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddFirm() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFirm() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListFirms() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddNBS() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNBS() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListNBS() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddGovernment() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetGovernment() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListGovernments() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddBank() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveBank() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBank() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBank() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBanks() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddAgent() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAgent() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListAgents() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddFirm() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddFirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveFirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFirm() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateFirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListFirms() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFirms(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateFirm(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddNBS() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNBS() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListNBS() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateNBS(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddGovernment() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddGovernment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveGovernment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetGovernment() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetGovernment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateGovernment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListGovernments() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListGovernments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateGovernment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddBank() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBank(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveBank() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveBank(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBank() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBank(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBank() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBank(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBanks() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBanks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateBank(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddAgent() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAgent() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListAgents() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListAgents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeltaUpdateAgent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateTaxesDue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateConsumption(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateInterest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateRealGDP(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveEconomyEntities(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadEconomyEntities(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddFirm() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddFirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveFirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFirm() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateFirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListFirms() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListFirms(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFirms(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeltaUpdateFirm(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateFirm(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddNBS() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNBS() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListNBS() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeltaUpdateNBS(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateNBS(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddGovernment() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddGovernment(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveGovernment(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetGovernment() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetGovernment(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateGovernment(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListGovernments() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListGovernments(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListGovernments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeltaUpdateGovernment(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateGovernment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddBank() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddBank(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddBank(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveBank() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveBank(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveBank(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBank() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBank(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBank(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateBank() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBank(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBank(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListBanks() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBanks(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBanks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeltaUpdateBank(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateBank(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddAgent() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAgent() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListAgents() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListAgents(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListAgents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeltaUpdateAgent(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeltaUpdateAgent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateTaxesDue(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateTaxesDue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateConsumption(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateConsumption(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateInterest(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateInterest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateRealGDP(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateRealGDP(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveEconomyEntities(context, request, response); }));
    }
    ~WithRawCallbackMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveEconomyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LoadEconomyEntities(context, request, response); }));
    }
    ~WithRawCallbackMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoadEconomyEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddFirm() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddFirmRequest, ::city::economy::v2::AddFirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddFirmRequest, ::city::economy::v2::AddFirmResponse>* streamer) {
                       return this->StreamedAddFirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddFirmRequest* /*request*/, ::city::economy::v2::AddFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddFirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddFirmRequest,::city::economy::v2::AddFirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveFirm() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveFirmRequest, ::city::economy::v2::RemoveFirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveFirmRequest, ::city::economy::v2::RemoveFirmResponse>* streamer) {
                       return this->StreamedRemoveFirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveFirmRequest* /*request*/, ::city::economy::v2::RemoveFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveFirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveFirmRequest,::city::economy::v2::RemoveFirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFirm() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetFirmRequest, ::city::economy::v2::GetFirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetFirmRequest, ::city::economy::v2::GetFirmResponse>* streamer) {
                       return this->StreamedGetFirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetFirmRequest* /*request*/, ::city::economy::v2::GetFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetFirmRequest,::city::economy::v2::GetFirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateFirm() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::UpdateFirmRequest, ::city::economy::v2::UpdateFirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::UpdateFirmRequest, ::city::economy::v2::UpdateFirmResponse>* streamer) {
                       return this->StreamedUpdateFirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateFirmRequest* /*request*/, ::city::economy::v2::UpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateFirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::UpdateFirmRequest,::city::economy::v2::UpdateFirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFirms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListFirms() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::ListFirmsRequest, ::city::economy::v2::ListFirmsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::ListFirmsRequest, ::city::economy::v2::ListFirmsResponse>* streamer) {
                       return this->StreamedListFirms(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListFirms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFirms(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListFirmsRequest* /*request*/, ::city::economy::v2::ListFirmsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFirms(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::ListFirmsRequest,::city::economy::v2::ListFirmsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeltaUpdateFirm : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeltaUpdateFirm() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::DeltaUpdateFirmRequest, ::city::economy::v2::DeltaUpdateFirmResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::DeltaUpdateFirmRequest, ::city::economy::v2::DeltaUpdateFirmResponse>* streamer) {
                       return this->StreamedDeltaUpdateFirm(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeltaUpdateFirm() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeltaUpdateFirm(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateFirmRequest* /*request*/, ::city::economy::v2::DeltaUpdateFirmResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeltaUpdateFirm(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::DeltaUpdateFirmRequest,::city::economy::v2::DeltaUpdateFirmResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddNBS() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddNBSRequest, ::city::economy::v2::AddNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddNBSRequest, ::city::economy::v2::AddNBSResponse>* streamer) {
                       return this->StreamedAddNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddNBSRequest* /*request*/, ::city::economy::v2::AddNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddNBSRequest,::city::economy::v2::AddNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveNBS() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveNBSRequest, ::city::economy::v2::RemoveNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveNBSRequest, ::city::economy::v2::RemoveNBSResponse>* streamer) {
                       return this->StreamedRemoveNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveNBSRequest* /*request*/, ::city::economy::v2::RemoveNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveNBSRequest,::city::economy::v2::RemoveNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNBS() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetNBSRequest, ::city::economy::v2::GetNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetNBSRequest, ::city::economy::v2::GetNBSResponse>* streamer) {
                       return this->StreamedGetNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetNBSRequest* /*request*/, ::city::economy::v2::GetNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetNBSRequest,::city::economy::v2::GetNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateNBS() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::UpdateNBSRequest, ::city::economy::v2::UpdateNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::UpdateNBSRequest, ::city::economy::v2::UpdateNBSResponse>* streamer) {
                       return this->StreamedUpdateNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateNBSRequest* /*request*/, ::city::economy::v2::UpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::UpdateNBSRequest,::city::economy::v2::UpdateNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListNBS() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::ListNBSRequest, ::city::economy::v2::ListNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::ListNBSRequest, ::city::economy::v2::ListNBSResponse>* streamer) {
                       return this->StreamedListNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListNBSRequest* /*request*/, ::city::economy::v2::ListNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::ListNBSRequest,::city::economy::v2::ListNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeltaUpdateNBS : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeltaUpdateNBS() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::DeltaUpdateNBSRequest, ::city::economy::v2::DeltaUpdateNBSResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::DeltaUpdateNBSRequest, ::city::economy::v2::DeltaUpdateNBSResponse>* streamer) {
                       return this->StreamedDeltaUpdateNBS(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeltaUpdateNBS() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeltaUpdateNBS(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateNBSRequest* /*request*/, ::city::economy::v2::DeltaUpdateNBSResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeltaUpdateNBS(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::DeltaUpdateNBSRequest,::city::economy::v2::DeltaUpdateNBSResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddGovernment() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddGovernmentRequest, ::city::economy::v2::AddGovernmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddGovernmentRequest, ::city::economy::v2::AddGovernmentResponse>* streamer) {
                       return this->StreamedAddGovernment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddGovernmentRequest* /*request*/, ::city::economy::v2::AddGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddGovernment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddGovernmentRequest,::city::economy::v2::AddGovernmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveGovernment() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveGovernmentRequest, ::city::economy::v2::RemoveGovernmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveGovernmentRequest, ::city::economy::v2::RemoveGovernmentResponse>* streamer) {
                       return this->StreamedRemoveGovernment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveGovernmentRequest* /*request*/, ::city::economy::v2::RemoveGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveGovernment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveGovernmentRequest,::city::economy::v2::RemoveGovernmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetGovernment() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetGovernmentRequest, ::city::economy::v2::GetGovernmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetGovernmentRequest, ::city::economy::v2::GetGovernmentResponse>* streamer) {
                       return this->StreamedGetGovernment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetGovernmentRequest* /*request*/, ::city::economy::v2::GetGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetGovernment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetGovernmentRequest,::city::economy::v2::GetGovernmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateGovernment() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::UpdateGovernmentRequest, ::city::economy::v2::UpdateGovernmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::UpdateGovernmentRequest, ::city::economy::v2::UpdateGovernmentResponse>* streamer) {
                       return this->StreamedUpdateGovernment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateGovernmentRequest* /*request*/, ::city::economy::v2::UpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateGovernment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::UpdateGovernmentRequest,::city::economy::v2::UpdateGovernmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListGovernments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListGovernments() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::ListGovernmentsRequest, ::city::economy::v2::ListGovernmentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::ListGovernmentsRequest, ::city::economy::v2::ListGovernmentsResponse>* streamer) {
                       return this->StreamedListGovernments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListGovernments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListGovernments(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListGovernmentsRequest* /*request*/, ::city::economy::v2::ListGovernmentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListGovernments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::ListGovernmentsRequest,::city::economy::v2::ListGovernmentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeltaUpdateGovernment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeltaUpdateGovernment() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::DeltaUpdateGovernmentRequest, ::city::economy::v2::DeltaUpdateGovernmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::DeltaUpdateGovernmentRequest, ::city::economy::v2::DeltaUpdateGovernmentResponse>* streamer) {
                       return this->StreamedDeltaUpdateGovernment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeltaUpdateGovernment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeltaUpdateGovernment(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateGovernmentRequest* /*request*/, ::city::economy::v2::DeltaUpdateGovernmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeltaUpdateGovernment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::DeltaUpdateGovernmentRequest,::city::economy::v2::DeltaUpdateGovernmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddBank() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddBankRequest, ::city::economy::v2::AddBankResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddBankRequest, ::city::economy::v2::AddBankResponse>* streamer) {
                       return this->StreamedAddBank(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddBankRequest* /*request*/, ::city::economy::v2::AddBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddBank(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddBankRequest,::city::economy::v2::AddBankResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveBank() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveBankRequest, ::city::economy::v2::RemoveBankResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveBankRequest, ::city::economy::v2::RemoveBankResponse>* streamer) {
                       return this->StreamedRemoveBank(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveBankRequest* /*request*/, ::city::economy::v2::RemoveBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveBank(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveBankRequest,::city::economy::v2::RemoveBankResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBank() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetBankRequest, ::city::economy::v2::GetBankResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetBankRequest, ::city::economy::v2::GetBankResponse>* streamer) {
                       return this->StreamedGetBank(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetBankRequest* /*request*/, ::city::economy::v2::GetBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBank(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetBankRequest,::city::economy::v2::GetBankResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBank() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::UpdateBankRequest, ::city::economy::v2::UpdateBankResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::UpdateBankRequest, ::city::economy::v2::UpdateBankResponse>* streamer) {
                       return this->StreamedUpdateBank(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateBankRequest* /*request*/, ::city::economy::v2::UpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBank(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::UpdateBankRequest,::city::economy::v2::UpdateBankResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBanks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBanks() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::ListBanksRequest, ::city::economy::v2::ListBanksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::ListBanksRequest, ::city::economy::v2::ListBanksResponse>* streamer) {
                       return this->StreamedListBanks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBanks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBanks(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListBanksRequest* /*request*/, ::city::economy::v2::ListBanksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBanks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::ListBanksRequest,::city::economy::v2::ListBanksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeltaUpdateBank : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeltaUpdateBank() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::DeltaUpdateBankRequest, ::city::economy::v2::DeltaUpdateBankResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::DeltaUpdateBankRequest, ::city::economy::v2::DeltaUpdateBankResponse>* streamer) {
                       return this->StreamedDeltaUpdateBank(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeltaUpdateBank() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeltaUpdateBank(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateBankRequest* /*request*/, ::city::economy::v2::DeltaUpdateBankResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeltaUpdateBank(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::DeltaUpdateBankRequest,::city::economy::v2::DeltaUpdateBankResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddAgent() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::AddAgentRequest, ::city::economy::v2::AddAgentResponse>* streamer) {
                       return this->StreamedAddAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::AddAgentRequest* /*request*/, ::city::economy::v2::AddAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::AddAgentRequest,::city::economy::v2::AddAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveAgent() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::RemoveAgentRequest, ::city::economy::v2::RemoveAgentResponse>* streamer) {
                       return this->StreamedRemoveAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::RemoveAgentRequest* /*request*/, ::city::economy::v2::RemoveAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::RemoveAgentRequest,::city::economy::v2::RemoveAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAgent() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::GetAgentRequest, ::city::economy::v2::GetAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::GetAgentRequest, ::city::economy::v2::GetAgentResponse>* streamer) {
                       return this->StreamedGetAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::GetAgentRequest* /*request*/, ::city::economy::v2::GetAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::GetAgentRequest,::city::economy::v2::GetAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAgent() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::UpdateAgentRequest, ::city::economy::v2::UpdateAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::UpdateAgentRequest, ::city::economy::v2::UpdateAgentResponse>* streamer) {
                       return this->StreamedUpdateAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::UpdateAgentRequest* /*request*/, ::city::economy::v2::UpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::UpdateAgentRequest,::city::economy::v2::UpdateAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListAgents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListAgents() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::ListAgentsRequest, ::city::economy::v2::ListAgentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::ListAgentsRequest, ::city::economy::v2::ListAgentsResponse>* streamer) {
                       return this->StreamedListAgents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListAgents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListAgents(::grpc::ServerContext* /*context*/, const ::city::economy::v2::ListAgentsRequest* /*request*/, ::city::economy::v2::ListAgentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListAgents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::ListAgentsRequest,::city::economy::v2::ListAgentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeltaUpdateAgent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeltaUpdateAgent() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::DeltaUpdateAgentRequest, ::city::economy::v2::DeltaUpdateAgentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::DeltaUpdateAgentRequest, ::city::economy::v2::DeltaUpdateAgentResponse>* streamer) {
                       return this->StreamedDeltaUpdateAgent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeltaUpdateAgent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeltaUpdateAgent(::grpc::ServerContext* /*context*/, const ::city::economy::v2::DeltaUpdateAgentRequest* /*request*/, ::city::economy::v2::DeltaUpdateAgentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeltaUpdateAgent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::DeltaUpdateAgentRequest,::city::economy::v2::DeltaUpdateAgentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateTaxesDue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateTaxesDue() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateTaxesDueRequest, ::city::economy::v2::CalculateTaxesDueResponse>* streamer) {
                       return this->StreamedCalculateTaxesDue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateTaxesDue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateTaxesDue(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateTaxesDueRequest* /*request*/, ::city::economy::v2::CalculateTaxesDueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateTaxesDue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateTaxesDueRequest,::city::economy::v2::CalculateTaxesDueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateConsumption : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateConsumption() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateConsumptionRequest, ::city::economy::v2::CalculateConsumptionResponse>* streamer) {
                       return this->StreamedCalculateConsumption(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateConsumption() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateConsumption(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateConsumptionRequest* /*request*/, ::city::economy::v2::CalculateConsumptionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateConsumption(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateConsumptionRequest,::city::economy::v2::CalculateConsumptionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateInterest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateInterest() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateInterestRequest, ::city::economy::v2::CalculateInterestResponse>* streamer) {
                       return this->StreamedCalculateInterest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateInterest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateInterest(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateInterestRequest* /*request*/, ::city::economy::v2::CalculateInterestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateInterest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateInterestRequest,::city::economy::v2::CalculateInterestResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateRealGDP : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateRealGDP() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::CalculateRealGDPRequest, ::city::economy::v2::CalculateRealGDPResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::CalculateRealGDPRequest, ::city::economy::v2::CalculateRealGDPResponse>* streamer) {
                       return this->StreamedCalculateRealGDP(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateRealGDP() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateRealGDP(::grpc::ServerContext* /*context*/, const ::city::economy::v2::CalculateRealGDPRequest* /*request*/, ::city::economy::v2::CalculateRealGDPResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateRealGDP(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::CalculateRealGDPRequest,::city::economy::v2::CalculateRealGDPResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveEconomyEntities() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::SaveEconomyEntitiesRequest, ::city::economy::v2::SaveEconomyEntitiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::SaveEconomyEntitiesRequest, ::city::economy::v2::SaveEconomyEntitiesResponse>* streamer) {
                       return this->StreamedSaveEconomyEntities(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::SaveEconomyEntitiesRequest* /*request*/, ::city::economy::v2::SaveEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveEconomyEntities(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::SaveEconomyEntitiesRequest,::city::economy::v2::SaveEconomyEntitiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoadEconomyEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoadEconomyEntities() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::city::economy::v2::LoadEconomyEntitiesRequest, ::city::economy::v2::LoadEconomyEntitiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::city::economy::v2::LoadEconomyEntitiesRequest, ::city::economy::v2::LoadEconomyEntitiesResponse>* streamer) {
                       return this->StreamedLoadEconomyEntities(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LoadEconomyEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoadEconomyEntities(::grpc::ServerContext* /*context*/, const ::city::economy::v2::LoadEconomyEntitiesRequest* /*request*/, ::city::economy::v2::LoadEconomyEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoadEconomyEntities(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::city::economy::v2::LoadEconomyEntitiesRequest,::city::economy::v2::LoadEconomyEntitiesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddFirm<WithStreamedUnaryMethod_RemoveFirm<WithStreamedUnaryMethod_GetFirm<WithStreamedUnaryMethod_UpdateFirm<WithStreamedUnaryMethod_ListFirms<WithStreamedUnaryMethod_DeltaUpdateFirm<WithStreamedUnaryMethod_AddNBS<WithStreamedUnaryMethod_RemoveNBS<WithStreamedUnaryMethod_GetNBS<WithStreamedUnaryMethod_UpdateNBS<WithStreamedUnaryMethod_ListNBS<WithStreamedUnaryMethod_DeltaUpdateNBS<WithStreamedUnaryMethod_AddGovernment<WithStreamedUnaryMethod_RemoveGovernment<WithStreamedUnaryMethod_GetGovernment<WithStreamedUnaryMethod_UpdateGovernment<WithStreamedUnaryMethod_ListGovernments<WithStreamedUnaryMethod_DeltaUpdateGovernment<WithStreamedUnaryMethod_AddBank<WithStreamedUnaryMethod_RemoveBank<WithStreamedUnaryMethod_GetBank<WithStreamedUnaryMethod_UpdateBank<WithStreamedUnaryMethod_ListBanks<WithStreamedUnaryMethod_DeltaUpdateBank<WithStreamedUnaryMethod_AddAgent<WithStreamedUnaryMethod_RemoveAgent<WithStreamedUnaryMethod_GetAgent<WithStreamedUnaryMethod_UpdateAgent<WithStreamedUnaryMethod_ListAgents<WithStreamedUnaryMethod_DeltaUpdateAgent<WithStreamedUnaryMethod_CalculateTaxesDue<WithStreamedUnaryMethod_CalculateConsumption<WithStreamedUnaryMethod_CalculateInterest<WithStreamedUnaryMethod_CalculateRealGDP<WithStreamedUnaryMethod_SaveEconomyEntities<WithStreamedUnaryMethod_LoadEconomyEntities<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddFirm<WithStreamedUnaryMethod_RemoveFirm<WithStreamedUnaryMethod_GetFirm<WithStreamedUnaryMethod_UpdateFirm<WithStreamedUnaryMethod_ListFirms<WithStreamedUnaryMethod_DeltaUpdateFirm<WithStreamedUnaryMethod_AddNBS<WithStreamedUnaryMethod_RemoveNBS<WithStreamedUnaryMethod_GetNBS<WithStreamedUnaryMethod_UpdateNBS<WithStreamedUnaryMethod_ListNBS<WithStreamedUnaryMethod_DeltaUpdateNBS<WithStreamedUnaryMethod_AddGovernment<WithStreamedUnaryMethod_RemoveGovernment<WithStreamedUnaryMethod_GetGovernment<WithStreamedUnaryMethod_UpdateGovernment<WithStreamedUnaryMethod_ListGovernments<WithStreamedUnaryMethod_DeltaUpdateGovernment<WithStreamedUnaryMethod_AddBank<WithStreamedUnaryMethod_RemoveBank<WithStreamedUnaryMethod_GetBank<WithStreamedUnaryMethod_UpdateBank<WithStreamedUnaryMethod_ListBanks<WithStreamedUnaryMethod_DeltaUpdateBank<WithStreamedUnaryMethod_AddAgent<WithStreamedUnaryMethod_RemoveAgent<WithStreamedUnaryMethod_GetAgent<WithStreamedUnaryMethod_UpdateAgent<WithStreamedUnaryMethod_ListAgents<WithStreamedUnaryMethod_DeltaUpdateAgent<WithStreamedUnaryMethod_CalculateTaxesDue<WithStreamedUnaryMethod_CalculateConsumption<WithStreamedUnaryMethod_CalculateInterest<WithStreamedUnaryMethod_CalculateRealGDP<WithStreamedUnaryMethod_SaveEconomyEntities<WithStreamedUnaryMethod_LoadEconomyEntities<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};
// @section Firm Operations
// @section 企业相关操作

}  // namespace v2
}  // namespace economy
}  // namespace city


#endif  // GRPC_city_2feconomy_2fv2_2forg_5fservice_2eproto__INCLUDED

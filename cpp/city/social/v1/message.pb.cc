// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/social/v1/message.proto

#include "city/social/v1/message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace city {
namespace social {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.message_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.from_)*/ 0,
      /*decltype(_impl_.to_)*/ 0,
      /*decltype(_impl_.t_)*/ 0,
    } {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace v1
}  // namespace social
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fsocial_2fv1_2fmessage_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_city_2fsocial_2fv1_2fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_city_2fsocial_2fv1_2fmessage_2eproto = nullptr;
const ::uint32_t TableStruct_city_2fsocial_2fv1_2fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _impl_.to_),
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::city::social::v1::Message, _impl_.t_),
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::city::social::v1::Message)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::city::social::v1::_Message_default_instance_._instance,
};
const char descriptor_table_protodef_city_2fsocial_2fv1_2fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034city/social/v1/message.proto\022\016city.soc"
    "ial.v1\"`\n\007Message\022\022\n\004from\030\001 \001(\005R\004from\022\016\n"
    "\002to\030\002 \001(\005R\002to\022\030\n\007message\030\003 \001(\tR\007message\022"
    "\021\n\001t\030\004 \001(\001H\000R\001t\210\001\001B\004\n\002_tB\262\001\n\022com.city.so"
    "cial.v1B\014MessageProtoP\001Z4git.fiblab.net/"
    "sim/protos/go/city/social/v1;socialv1\242\002\003"
    "CSX\252\002\016City.Social.V1\312\002\016City\\Social\\V1\342\002\032"
    "City\\Social\\V1\\GPBMetadata\352\002\020City::Socia"
    "l::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto = {
    false,
    false,
    333,
    descriptor_table_protodef_city_2fsocial_2fv1_2fmessage_2eproto,
    "city/social/v1/message.proto",
    &descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_city_2fsocial_2fv1_2fmessage_2eproto::offsets,
    file_level_metadata_city_2fsocial_2fv1_2fmessage_2eproto,
    file_level_enum_descriptors_city_2fsocial_2fv1_2fmessage_2eproto,
    file_level_service_descriptors_city_2fsocial_2fv1_2fmessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto_getter() {
  return &descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fsocial_2fv1_2fmessage_2eproto(&descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto);
namespace city {
namespace social {
namespace v1 {
// ===================================================================

class Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_);
  static void set_has_t(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:city.social.v1.Message)
}
Message::Message(const Message& from) : ::google::protobuf::Message() {
  Message* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_){},
      decltype(_impl_.from_){},
      decltype(_impl_.to_){},
      decltype(_impl_.t_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.from_, &from._impl_.from_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.t_) -
    reinterpret_cast<char*>(&_impl_.from_)) + sizeof(_impl_.t_));

  // @@protoc_insertion_point(copy_constructor:city.social.v1.Message)
}
inline void Message::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.message_){},
      decltype(_impl_.from_){0},
      decltype(_impl_.to_){0},
      decltype(_impl_.t_){0},
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.message_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:city.social.v1.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}
void Message::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:city.social.v1.Message)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.from_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.to_) -
      reinterpret_cast<char*>(&_impl_.from_)) + sizeof(_impl_.to_));
  _impl_.t_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional double t = 4 [json_name = "t"];
    {::_pbi::TcParser::FastF64S1,
     {33, 0, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.t_)}},
    // int32 from = 1 [json_name = "from"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.from_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.from_)}},
    // int32 to = 2 [json_name = "to"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.to_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.to_)}},
    // string message = 3 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 from = 1 [json_name = "from"];
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.from_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 to = 2 [json_name = "to"];
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.to_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string message = 3 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional double t = 4 [json_name = "t"];
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.t_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\26\0\0\7\0\0\0\0"
    "city.social.v1.Message"
    "message"
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.social.v1.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 from = 1 [json_name = "from"];
  if (this->_internal_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_from(), target);
  }

  // int32 to = 2 [json_name = "to"];
  if (this->_internal_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_to(), target);
  }

  // string message = 3 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "city.social.v1.Message.message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional double t = 4 [json_name = "t"];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_t(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.social.v1.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.social.v1.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 3 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // int32 from = 1 [json_name = "from"];
  if (this->_internal_from() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_from());
  }

  // int32 to = 2 [json_name = "to"];
  if (this->_internal_to() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_to());
  }

  // optional double t = 4 [json_name = "t"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Message::MergeImpl
};
const ::google::protobuf::Message::ClassData*Message::GetClassData() const { return &_class_data_; }


void Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.social.v1.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_from() != 0) {
    _this->_internal_set_from(from._internal_from());
  }
  if (from._internal_to() != 0) {
    _this->_internal_set_to(from._internal_to());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_t(from._internal_t());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.social.v1.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, lhs_arena,
                                       &other->_impl_.message_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, _impl_.t_)
      + sizeof(Message::_impl_.t_)
      - PROTOBUF_FIELD_OFFSET(Message, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto_getter, &descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto_once,
      file_level_metadata_city_2fsocial_2fv1_2fmessage_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace social
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/social/v1/social_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "city/social/v1/message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_city_2fsocial_2fv1_2fsocial_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
namespace city {
namespace social {
namespace v1 {
class ReceiveRequest;
struct ReceiveRequestDefaultTypeInternal;
extern ReceiveRequestDefaultTypeInternal _ReceiveRequest_default_instance_;
class ReceiveResponse;
struct ReceiveResponseDefaultTypeInternal;
extern ReceiveResponseDefaultTypeInternal _ReceiveResponse_default_instance_;
class SendRequest;
struct SendRequestDefaultTypeInternal;
extern SendRequestDefaultTypeInternal _SendRequest_default_instance_;
class SendResponse;
struct SendResponseDefaultTypeInternal;
extern SendResponseDefaultTypeInternal _SendResponse_default_instance_;
}  // namespace v1
}  // namespace social
}  // namespace city
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace city {
namespace social {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SendRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.social.v1.SendRequest) */ {
 public:
  inline SendRequest() : SendRequest(nullptr) {}
  ~SendRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendRequest(::google::protobuf::internal::ConstantInitialized);

  SendRequest(const SendRequest& from);
  SendRequest(SendRequest&& from) noexcept
    : SendRequest() {
    *this = ::std::move(from);
  }

  inline SendRequest& operator=(const SendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendRequest& operator=(SendRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendRequest* internal_default_instance() {
    return reinterpret_cast<const SendRequest*>(
               &_SendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SendRequest& a, SendRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendRequest& from) {
    SendRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.social.v1.SendRequest";
  }
  protected:
  explicit SendRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::city::social::v1::Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >*
      mutable_messages();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>* _internal_mutable_messages();
  public:
  const ::city::social::v1::Message& messages(int index) const;
  ::city::social::v1::Message* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >&
      messages() const;
  // @@protoc_insertion_point(class_scope:city.social.v1.SendRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message > messages_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
};// -------------------------------------------------------------------

class SendResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:city.social.v1.SendResponse) */ {
 public:
  inline SendResponse() : SendResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendResponse(::google::protobuf::internal::ConstantInitialized);

  SendResponse(const SendResponse& from);
  SendResponse(SendResponse&& from) noexcept
    : SendResponse() {
    *this = ::std::move(from);
  }

  inline SendResponse& operator=(const SendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendResponse& operator=(SendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendResponse* internal_default_instance() {
    return reinterpret_cast<const SendResponse*>(
               &_SendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SendResponse& a, SendResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SendResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.social.v1.SendResponse";
  }
  protected:
  explicit SendResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:city.social.v1.SendResponse)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
};// -------------------------------------------------------------------

class ReceiveRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.social.v1.ReceiveRequest) */ {
 public:
  inline ReceiveRequest() : ReceiveRequest(nullptr) {}
  ~ReceiveRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveRequest(::google::protobuf::internal::ConstantInitialized);

  ReceiveRequest(const ReceiveRequest& from);
  ReceiveRequest(ReceiveRequest&& from) noexcept
    : ReceiveRequest() {
    *this = ::std::move(from);
  }

  inline ReceiveRequest& operator=(const ReceiveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveRequest& operator=(ReceiveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveRequest* internal_default_instance() {
    return reinterpret_cast<const ReceiveRequest*>(
               &_ReceiveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReceiveRequest& a, ReceiveRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReceiveRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReceiveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReceiveRequest& from) {
    ReceiveRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReceiveRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.social.v1.ReceiveRequest";
  }
  protected:
  explicit ReceiveRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:city.social.v1.ReceiveRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
};// -------------------------------------------------------------------

class ReceiveResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:city.social.v1.ReceiveResponse) */ {
 public:
  inline ReceiveResponse() : ReceiveResponse(nullptr) {}
  ~ReceiveResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReceiveResponse(::google::protobuf::internal::ConstantInitialized);

  ReceiveResponse(const ReceiveResponse& from);
  ReceiveResponse(ReceiveResponse&& from) noexcept
    : ReceiveResponse() {
    *this = ::std::move(from);
  }

  inline ReceiveResponse& operator=(const ReceiveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReceiveResponse& operator=(ReceiveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReceiveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReceiveResponse* internal_default_instance() {
    return reinterpret_cast<const ReceiveResponse*>(
               &_ReceiveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReceiveResponse& a, ReceiveResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReceiveResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReceiveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReceiveResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReceiveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReceiveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReceiveResponse& from) {
    ReceiveResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReceiveResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "city.social.v1.ReceiveResponse";
  }
  protected:
  explicit ReceiveResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::city::social::v1::Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >*
      mutable_messages();
  private:
  const ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>* _internal_mutable_messages();
  public:
  const ::city::social::v1::Message& messages(int index) const;
  ::city::social::v1::Message* add_messages();
  const ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >&
      messages() const;
  // @@protoc_insertion_point(class_scope:city.social.v1.ReceiveResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message > messages_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SendRequest

// repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
inline int SendRequest::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int SendRequest::messages_size() const {
  return _internal_messages_size();
}
inline ::city::social::v1::Message* SendRequest::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:city.social.v1.SendRequest.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >*
SendRequest::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:city.social.v1.SendRequest.messages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_messages();
}
inline const ::city::social::v1::Message& SendRequest::messages(int index) const {
  // @@protoc_insertion_point(field_get:city.social.v1.SendRequest.messages)
    return _internal_messages().Get(index);
}
inline ::city::social::v1::Message* SendRequest::add_messages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::social::v1::Message* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:city.social.v1.SendRequest.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >&
SendRequest::messages() const {
  // @@protoc_insertion_point(field_list:city.social.v1.SendRequest.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>&
SendRequest::_internal_messages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>*
SendRequest::_internal_mutable_messages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.messages_;
}

// -------------------------------------------------------------------

// SendResponse

// -------------------------------------------------------------------

// ReceiveRequest

// int32 id = 1 [json_name = "id"];
inline void ReceiveRequest::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t ReceiveRequest::id() const {
  // @@protoc_insertion_point(field_get:city.social.v1.ReceiveRequest.id)
  return _internal_id();
}
inline void ReceiveRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:city.social.v1.ReceiveRequest.id)
}
inline ::int32_t ReceiveRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ReceiveRequest::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// ReceiveResponse

// repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
inline int ReceiveResponse::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int ReceiveResponse::messages_size() const {
  return _internal_messages_size();
}
inline ::city::social::v1::Message* ReceiveResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:city.social.v1.ReceiveResponse.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >*
ReceiveResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:city.social.v1.ReceiveResponse.messages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_messages();
}
inline const ::city::social::v1::Message& ReceiveResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:city.social.v1.ReceiveResponse.messages)
    return _internal_messages().Get(index);
}
inline ::city::social::v1::Message* ReceiveResponse::add_messages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::city::social::v1::Message* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:city.social.v1.ReceiveResponse.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::city::social::v1::Message >&
ReceiveResponse::messages() const {
  // @@protoc_insertion_point(field_list:city.social.v1.ReceiveResponse.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>&
ReceiveResponse::_internal_messages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::city::social::v1::Message>*
ReceiveResponse::_internal_mutable_messages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.messages_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace social
}  // namespace city


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_2epb_2eh

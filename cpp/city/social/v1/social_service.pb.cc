// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: city/social/v1/social_service.proto

#include "city/social/v1/social_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace city {
namespace social {
namespace v1 {
PROTOBUF_CONSTEXPR SendRequest::SendRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendRequestDefaultTypeInternal() {}
  union {
    SendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendRequestDefaultTypeInternal _SendRequest_default_instance_;
PROTOBUF_CONSTEXPR SendResponse::SendResponse(
    ::_pbi::ConstantInitialized) {}
struct SendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendResponseDefaultTypeInternal() {}
  union {
    SendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendResponseDefaultTypeInternal _SendResponse_default_instance_;
PROTOBUF_CONSTEXPR ReceiveRequest::ReceiveRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveRequestDefaultTypeInternal() {}
  union {
    ReceiveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveRequestDefaultTypeInternal _ReceiveRequest_default_instance_;
PROTOBUF_CONSTEXPR ReceiveResponse::ReceiveResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveResponseDefaultTypeInternal() {}
  union {
    ReceiveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveResponseDefaultTypeInternal _ReceiveResponse_default_instance_;
}  // namespace v1
}  // namespace social
}  // namespace city
static ::_pb::Metadata file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_city_2fsocial_2fv1_2fsocial_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_city_2fsocial_2fv1_2fsocial_5fservice_2eproto = nullptr;

const uint32_t TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::SendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::SendRequest, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::SendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::ReceiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::ReceiveRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::ReceiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::city::social::v1::ReceiveResponse, _impl_.messages_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::city::social::v1::SendRequest)},
  { 7, -1, -1, sizeof(::city::social::v1::SendResponse)},
  { 13, -1, -1, sizeof(::city::social::v1::ReceiveRequest)},
  { 20, -1, -1, sizeof(::city::social::v1::ReceiveResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::city::social::v1::_SendRequest_default_instance_._instance,
  &::city::social::v1::_SendResponse_default_instance_._instance,
  &::city::social::v1::_ReceiveRequest_default_instance_._instance,
  &::city::social::v1::_ReceiveResponse_default_instance_._instance,
};

const char descriptor_table_protodef_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#city/social/v1/social_service.proto\022\016c"
  "ity.social.v1\032\034city/social/v1/message.pr"
  "oto\"B\n\013SendRequest\0223\n\010messages\030\001 \003(\0132\027.c"
  "ity.social.v1.MessageR\010messages\"\016\n\014SendR"
  "esponse\" \n\016ReceiveRequest\022\016\n\002id\030\001 \001(\005R\002i"
  "d\"F\n\017ReceiveResponse\0223\n\010messages\030\001 \003(\0132\027"
  ".city.social.v1.MessageR\010messages2\236\001\n\rSo"
  "cialService\022A\n\004Send\022\033.city.social.v1.Sen"
  "dRequest\032\034.city.social.v1.SendResponse\022J"
  "\n\007Receive\022\036.city.social.v1.ReceiveReques"
  "t\032\037.city.social.v1.ReceiveResponseB\273\001\n\022c"
  "om.city.social.v1B\022SocialServiceProtoP\001Z"
  "7git.fiblab.net/sim/protos/go/v2/city/so"
  "cial/v1;socialv1\242\002\003CSX\252\002\016City.Social.V1\312"
  "\002\016City\\Social\\V1\342\002\032City\\Social\\V1\\GPBMet"
  "adata\352\002\020City::Social::V1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_deps[1] = {
  &::descriptor_table_city_2fsocial_2fv1_2fmessage_2eproto,
};
static ::_pbi::once_flag descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto = {
    false, false, 632, descriptor_table_protodef_city_2fsocial_2fv1_2fsocial_5fservice_2eproto,
    "city/social/v1/social_service.proto",
    &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once, descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_city_2fsocial_2fv1_2fsocial_5fservice_2eproto::offsets,
    file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto, file_level_enum_descriptors_city_2fsocial_2fv1_2fsocial_5fservice_2eproto,
    file_level_service_descriptors_city_2fsocial_2fv1_2fsocial_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_getter() {
  return &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_city_2fsocial_2fv1_2fsocial_5fservice_2eproto(&descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto);
namespace city {
namespace social {
namespace v1 {

// ===================================================================

class SendRequest::_Internal {
 public:
};

void SendRequest::clear_messages() {
  _impl_.messages_.Clear();
}
SendRequest::SendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.social.v1.SendRequest)
}
SendRequest::SendRequest(const SendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.social.v1.SendRequest)
}

inline void SendRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendRequest::~SendRequest() {
  // @@protoc_insertion_point(destructor:city.social.v1.SendRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void SendRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.social.v1.SendRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.social.v1.SendRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.social.v1.SendRequest)
  return target;
}

size_t SendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.social.v1.SendRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendRequest::GetClassData() const { return &_class_data_; }


void SendRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendRequest*>(&to_msg);
  auto& from = static_cast<const SendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.social.v1.SendRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendRequest::CopyFrom(const SendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.social.v1.SendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRequest::IsInitialized() const {
  return true;
}

void SendRequest::InternalSwap(SendRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_getter, &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once,
      file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[0]);
}

// ===================================================================

class SendResponse::_Internal {
 public:
};

SendResponse::SendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:city.social.v1.SendResponse)
}
SendResponse::SendResponse(const SendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SendResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.social.v1.SendResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SendResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_getter, &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once,
      file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[1]);
}

// ===================================================================

class ReceiveRequest::_Internal {
 public:
};

ReceiveRequest::ReceiveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.social.v1.ReceiveRequest)
}
ReceiveRequest::ReceiveRequest(const ReceiveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:city.social.v1.ReceiveRequest)
}

inline void ReceiveRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveRequest::~ReceiveRequest() {
  // @@protoc_insertion_point(destructor:city.social.v1.ReceiveRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:city.social.v1.ReceiveRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.social.v1.ReceiveRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.social.v1.ReceiveRequest)
  return target;
}

size_t ReceiveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.social.v1.ReceiveRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveRequest::GetClassData() const { return &_class_data_; }


void ReceiveRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveRequest*>(&to_msg);
  auto& from = static_cast<const ReceiveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.social.v1.ReceiveRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveRequest::CopyFrom(const ReceiveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.social.v1.ReceiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveRequest::IsInitialized() const {
  return true;
}

void ReceiveRequest::InternalSwap(ReceiveRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_getter, &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once,
      file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[2]);
}

// ===================================================================

class ReceiveResponse::_Internal {
 public:
};

void ReceiveResponse::clear_messages() {
  _impl_.messages_.Clear();
}
ReceiveResponse::ReceiveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:city.social.v1.ReceiveResponse)
}
ReceiveResponse::ReceiveResponse(const ReceiveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:city.social.v1.ReceiveResponse)
}

inline void ReceiveResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveResponse::~ReceiveResponse() {
  // @@protoc_insertion_point(destructor:city.social.v1.ReceiveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
}

void ReceiveResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:city.social.v1.ReceiveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:city.social.v1.ReceiveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_messages_size()); i < n; i++) {
    const auto& repfield = this->_internal_messages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:city.social.v1.ReceiveResponse)
  return target;
}

size_t ReceiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:city.social.v1.ReceiveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .city.social.v1.Message messages = 1 [json_name = "messages"];
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->_impl_.messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveResponse::GetClassData() const { return &_class_data_; }


void ReceiveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveResponse*>(&to_msg);
  auto& from = static_cast<const ReceiveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:city.social.v1.ReceiveResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveResponse::CopyFrom(const ReceiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:city.social.v1.ReceiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveResponse::IsInitialized() const {
  return true;
}

void ReceiveResponse::InternalSwap(ReceiveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_getter, &descriptor_table_city_2fsocial_2fv1_2fsocial_5fservice_2eproto_once,
      file_level_metadata_city_2fsocial_2fv1_2fsocial_5fservice_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace social
}  // namespace city
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::city::social::v1::SendRequest*
Arena::CreateMaybeMessage< ::city::social::v1::SendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::social::v1::SendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::social::v1::SendResponse*
Arena::CreateMaybeMessage< ::city::social::v1::SendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::social::v1::SendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::city::social::v1::ReceiveRequest*
Arena::CreateMaybeMessage< ::city::social::v1::ReceiveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::social::v1::ReceiveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::city::social::v1::ReceiveResponse*
Arena::CreateMaybeMessage< ::city::social::v1::ReceiveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::city::social::v1::ReceiveResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
